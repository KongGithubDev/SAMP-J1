#pragma warning disable 219, 215, 213, 234

#include 	<a_samp>

#undef	  	MAX_PLAYERS

#define	 	MAX_PLAYERS			200
#define     MAX_INJURED             (10)
#define     MAX_FASHION_SLOTS 10

#define 	YSI_NO_OPTIMISATION_MESSAGE
#define 	YSI_NO_CACHE_MESSAGE
#define 	YSI_NO_MODE_CACHE
#define 	YSI_NO_HEAP_MALLOC
#define 	YSI_NO_VERSION_CHECK

#include	<sscanf2>
#include 	<a_mysql>
#include	<streamer>
#define 	cec_auto
#include	<CEC>
#include	<Pawn.CMD>
//#include    <nex-ac>
#include 	<Pawn.RakNet>
#include 	<io>
#include	<progress2>
#include 	<weapon-config> //ดาเมจทำใหม่
#define     PlayerEngine
#define     RemovePlayerWeapon

#include 	<YSI_Data\y_iterate>
#include 	<YSI_Coding\y_timers>
#include	<YSI_Coding\y_hooks>

#include	<easyDialog>
#include 	<OPVD>

#include	<discord-connector>

//#include 	<samp-player-gangzones>
//#include 	<GPS>

#define		MYSQL_HOST 				"localhost"
#define		MYSQL_USER 				"root"
#define		MYSQL_PASSWORD 			""
#define		MYSQL_DATABASE 			"urcity"

#define BitFlag_On(%0,%1)             ((%0) |= (%1))
#define BitFlag_Off(%0,%1)            ((%0) &= ~(%1))
#define BitFlag_Get(%0,%1)            ((%0) & (%1))

#if !defined IsValidVehicle
    native IsValidVehicle(vehicleid);
#endif

#define		SECONDS_TO_LOGIN 		60

#define		SERVER_NAME				"URCITY"
#define		SERVER_VERSION		  	"1.0"
#define		SERVER_MODE		     	"Community Rp"
#define     SERVER_LANGUAGE     	"TH"
#define     SERVER_WEBSITE      	"-"

#define		COLOR_BLACK				0x000000FF
#define     COLOR_WHITE  			0xFFFFFFFF
#define     COLOR_TG                0x76C3FFFF
#define 	COLOR_GREY				0xAFAFAFFF
#define		COLOR_GREY1    			0xE6E6E6FF
#define 	COLOR_GREY2 			0xC8C8C8FF
#define 	COLOR_GREY3 			0xAAAAAAFF
#define 	COLOR_GREY4 			0x8C8C8CFF
#define 	COLOR_GREY5 			0x6E6E6EFF
#define     COLOR_RED           	0xFF0000FF
#define     COLOR_ORANGE        	0xFFA84DFF
#define     COLOR_YELLOW        	0xFFFF00FF
#define     COLOR_GREEN         	0x00FF00FF
#define 	COLOR_SERVER      		0xFFFF90FF
#define 	COLOR_FACTION     		0xBDF38BFF
#define 	COLOR_LIGHTRED    		0xFF6347FF
#define 	COLOR_LIGHTBLUE   		0x33CCFFAA
#define 	COLOR_DARKBLUE    		0x1394BFFF
#define 	DEFAULT_COLOR     		0xFFFFFFFF
#define     COLOR_ADMIN         	0xFF0080FF
#define 	COLOR_PURPLE      		0xD0AEEBFF
#define 	COLOR_DEPARTMENT  		0xF0CC00FF
#define 	COLOR_HOSPITAL    		0xFF8282FF
#define 	COLOR_RADIO       		0x8D8DFFFF
#define     COLOR_PINK              0xFF00FFFF
#define 	COLOR_CYAN        		0x33CCFFFF
#define     COLOR_VIP1      		0x00FF00FF
#define     COLOR_VIP2      		0xFFFF00FF
#define     COLOR_VIP3      		0xFF00FFFF
#define     COLOR_VIP4      		0xFF00FFFF
#define     COLOR_BLUE      		0x0000FFFF

#define 	MAX_FACTIONS 			(50)
#define 	MAX_ARREST 				(50)
#define 	MAX_SHOPS				(50)
#define 	MAX_ENTRANCES 			(100)
#define 	MAX_CARS 				(1500)
#define 	MAX_OWNABLE_CARS 		(5)
#define 	MAX_PUMPS 				(50)
#define     MAX_INVENTORY       	(500)
#define 	MAX_CONTACTS 			(20)
#define 	MAX_ATM_MACHINES 		(50)
#define 	MAX_GARAGES 			(20)
#define     MAX_GPS                 (5000)
#define 	MAX_GATES				(5000)
#define		MAX_QUEST				(10)
#define 	MAX_SPAWNED_VEHICLES    (1)

#define     THREAD_LOGIN            (0)
#define		THREAD_LIST_VEHICLES 	(1)

#define 	FACTION_POLICE 			(1)
#define 	FACTION_NEWS 			(2)
#define 	FACTION_MEDIC 			(3)
#define 	FACTION_GOV 			(4)
#define 	FACTION_GANG 			(5)
#define 	FACTION_MEC 			(6)
#define MAX_BOT_CONNECTIONS 2
#define percent(%0,%1)  floatround((float((%0)) / 100) * (%1))
enum PlayerFlags:(<<= 1) {
	// It's important that you don't forget to put "= 1" on the first flag. If you don't, all flags will be 0.

	PLAYER_IS_LOGGED_IN = 1,   // 0b00000000000000000000000000000001
	PLAYER_HAS_KILLED,           // 0b00000000000000000000000000000010
	PLAYER_DRIVING_TEST, // 0b00000000000000000000000000000100
	PLAYER_DUTY_TAXI,           // 0b00000000000000000000000000001000
	PLAYER_MINING,           // 0b00000000000000000000000000010000
	PLAYER_CRAFTING,           // 0b00000000000000000000000000100000
	PLAYER_ONDUTY,           // 0b00000000000000000000000001000000
	PLAYER_HOUSE_LIGHTS,           // 0b00000000000000000000000010000000
	PLAYER_ENTRANCE_LIGHTS,
	PLAYER_HARVESTING,           // 0b00000000000000000000000100000000
	PLAYER_PICKUPING,
	PLAYER_COOKMEAT,
	PLAYER_PHONE_OFF,           // 0b00000000000000000000001000000000
	PLAYER_TAZER,           // 0b00000000000000000000010000000000
	PLAYER_BEANBAG,           // 0b00000000000000000000100000000000
    PLAYER_CHAINSAW,
	PLAYER_CUFFED,          // 0b00000000000000000001000000000000
	PLAYER_DRAGGED,          // 0b00000000000000000010000000000000
	PLAYER_PICKING,          // 0b00000000000000000100000000000000
	PLAYER_CAN_TELEPORT,
	PLAYER_DISABLE_OOC,
    PLAYER_DISABLE_TWITTER,
    PLAYER_DISABLE_FACEBOOK,
	PLAYER_DISABLE_NEWBIE,
	PLAYER_DISABLE_PM,
	PLAYER_DISABLE_FACTION,
	PLAYER_DISABLE_TESTER,
	PLAYER_DISABLE_BC,
	PLAYER_FPS

};
// คนเจ็บ
enum INJURED_DATA {
	injuredID,
	injuredExists,
	injuredTarget
}
native WP_Hash(buffer[], len, const str[]);
new isFixCar[MAX_PLAYERS];

// new SkinF1Use[MAX_PLAYERS] =0;

new oldSKin[MAX_PLAYERS];
new skinUse[MAX_PLAYERS] = 0;

new FashionUsed[MAX_PLAYERS][MAX_FASHION_SLOTS];
new FashionName[MAX_PLAYERS][MAX_FASHION_SLOTS][32];

//nametag
//new Text3D:cNametag[MAX_PLAYERS];
//#define NT_DISTANCE 35.0

//ถังน้ำมัน
new Tungon[MAX_PLAYERS];

//เช็คงานบัค
new BABYCheck[MAX_PLAYERS];

new pet_type[MAX_PLAYERS]; // สำหรับใช้แบบ pet_type[playerid]

//ดาบไฟ
new KatanaUse[MAX_PLAYERS] = 0;

//ดาบฟ้า
new DabOn[MAX_PLAYERS] = 0;

//ดาบซามูไรเขียว
new KatanaGreen[MAX_PLAYERS] =0;

//ดาบซามูไรแดง
new KatanaRed[MAX_PLAYERS] =0;

new isgabog[MAX_PLAYERS] =0;

//ซ่อมรถ
new isRepairVehicle[MAX_PLAYERS];    // 0 = ไม่ซ่อม, 1 = กำลังซ่อม, 3 = ระหว่าง progress (ตัวอย่างของคุณ)
new repairPoints[MAX_PLAYERS];       // เก็บ progress % การซ่อม

//เกี่ยวกับเช่าเรือ
new testveh[MAX_PLAYERS];

new HUDToggle[MAX_PLAYERS];

new injuredData[MAX_INJURED][INJURED_DATA];
new MySQL: g_SQL;
//new redzone;
new tmpobjid;
new bool:gPlayerWeaponData[MAX_PLAYERS][47];
new globalWeather = 2;
new bool:OOC = true;
new g_TaxVault;


new NewbieCar[15];
new PVPZone;
new adminVehicle[MAX_VEHICLES];
new Float:vehicleFuel[MAX_VEHICLES];
new vehicleSiren[MAX_VEHICLES] = {INVALID_OBJECT_ID, ...};
new vehicleStream[MAX_VEHICLES][128];
new vehicleColors[MAX_VEHICLES][2];

new isBaseFire[MAX_PLAYERS];

//wp
//new WEAPON_BRASSKNUCKLE[MAX_PLAYERS];

new isPlayerCallCar[MAX_PLAYERS], isPlayerListitem[MAX_PLAYERS];

new useitemdamas[MAX_PLAYERS];

//ขุดแร่ปลอม
new miningCD[MAX_PLAYERS];

//ซื้อของระบุจำนวน
new shopBuyType[MAX_PLAYERS];

new IsFPS[MAX_PLAYERS];
new CameraFirstPerson[MAX_PLAYERS];

new GovCD[MAX_PLAYERS] = 0;

new sira[MAX_PLAYERS];
new bananapook[MAX_PLAYERS];
new Nongkai[MAX_PLAYERS];
new Makira[MAX_PLAYERS];
new BottleOn[MAX_PLAYERS];
new ArmourOn[MAX_PLAYERS];


//new CallVehicleGang[MAX_PLAYERS] = -1;
//new vehicleCall[MAX_VEHICLES] = 0;
//ระบบวิทยู
new bool:PlayerInRadio[MAX_PLAYERS];

new bool:isBandaging[MAX_PLAYERS];

new bool:isBandagingBig[MAX_PLAYERS];

new bool:useTazer[MAX_PLAYERS];
// ปูน
new isPoonStart[MAX_PLAYERS];

//แต่งงาน
new MarryOn[MAX_PLAYERS];

new inLabel[MAX_PLAYERS];

//new FashionOn[MAX_PLAYERS];

new targetonname[MAX_PLAYERS];
new targeton[MAX_PLAYERS];

new MudFireOn[MAX_PLAYERS];
new WeaponType[MAX_PLAYERS];

new DubFah[MAX_PLAYERS];
new KnifeFire[MAX_PLAYERS];
new MudShockOn[MAX_PLAYERS];
new DubOn[MAX_PLAYERS];
new GreenOn[MAX_PLAYERS];

//ลาซาด้า 11.11
new lazadaCD[MAX_PLAYERS];

//กันดาเมจบัค
new DamageCount[MAX_PLAYERS];

// ใบสั่ง
new fineID[MAX_PLAYERS] = -1;
new finePrice[MAX_PLAYERS] = 0;
new fineText[MAX_PLAYERS][64];

new
    Menu:TuningMenu,
    Menu:TuningMenu1,
    Menu:Paintjobs,
    Menu:Colors,
    Menu:Colors1,
    Menu:Exhausts,
    Menu:Frontbumper,
    Menu:Rearbumper,
    Menu:Roof,
    Menu:Spoilers,
    Menu:Sideskirts,
    Menu:Bullbars,
    Menu:Wheels,
    Menu:Wheels1,
    Menu:Carstereo,
    Menu:Hydraulics,
    Menu:Nitro,
    pmodelid[MAX_PLAYERS],
    pvehicleid[MAX_PLAYERS];

new robCount;

new ProgressLimit[MAX_PLAYERS],
	ProgressCount[MAX_PLAYERS],
	Timer:ProgressTimer[MAX_PLAYERS],
	ProgressState[MAX_PLAYERS],
	ProgressObject[MAX_PLAYERS];

/* Event */
new	Float:EventX, Float:EventY, Float:EventZ,
	EventInterior = 0,
	EventWorld = 0,
	EventOn = 0;

// PlayerText : PlayerBar
new PlayerText:PlayerDeathTD[MAX_PLAYERS];



enum gateData {
	gateID,
	gateExists,
	gateOpened,
	gateModel,
	Float:gateSpeed,
	Float:gateRadius,
	gateTime,
	Float:gatePos[6],
	gateInterior,
	gateWorld,
	Float:gateMove[6],
	gateLinkID,
	gateFaction,
	gatePass[32],
	gateTimer,
	gateObject
};
new GateData[MAX_GATES][gateData];
// --> ระบบ Boombox
enum boomboxData {
	boomboxPlaced,
	Float:boomboxPos[3],
	boomboxInterior,
	boomboxWorld,
	boomboxObject,
	boomboxURL[128 char],
	Text3D:boomboxText3D
};
new BoomboxData[MAX_PLAYERS][boomboxData];

/* Earn Exp */
new PlayerText:PlayerExpEarnBoxTD1[MAX_PLAYERS];
new PlayerText:PlayerExpEarnBoxTD2[MAX_PLAYERS];
new PlayerText:PlayerEarnExpAmountTD[MAX_PLAYERS];

new const WeaponTradeNames[][] = {
	"สนับมือ",
	"ไม้สนุ๊ก",
	"ไม้กอล์ฟ",
	"ไม้เบสบอล",
	"ไอติม"
};

enum PLAYER_DATA
{
	pSpeedGoon,
	pEditType,
 	pEditGate,
    pCheckpoint,
    pPoint,
    pRadioID,
	pID,
	pTargetFrisk,
	pRegisterDate[90],
	pLatsPlay[90],
	pGender,
	pBirthday[24],
	pAdmin,
	pKills,
	pDeaths,
	pMoney,
	pBankMoney,
	pRedMoney,
	pLevel,
	pExp,
	pMinutes,
	pHours,
	pCameraFPS,
	Float: pPos_X,
	Float: pPos_Y,
	Float: pPos_Z,
	Float: pPos_A,
	pSkin,
	pInterior,
	pDragStart,
	pDragID,
	pWorld,
	pTutorial,
	pSpawnPoint,

	Float: pThirsty,
	Float: pHungry,
	Float: pHealth,
	Float: pSleep,
	Float: pShower,

	pInjured,
	pInjuredTime,

	pHospital,

	pFactionOffer,
	pFactionOffered,
	pFaction,
	pFactionID,
	pFactionRank,
	pFactionEdit,
	pSelectedSlot,

	pDisableFaction,
	bool: pOnDuty,
	bool: pArmorOn,
	pCuffed,
	pDragged,
	pDraggedBy,
	pDragTimer,

	pPrisoned,
	pPrisonOut,
	pJailTime,

	pEntrance,

	pCarSeller,
	pCarOffered,
	pCarValue,

	pSpeedoTimer,

	pMaxItem,
	pItemAmount,
	pItemSelect,
	pItemOfferID,

	pMecOfferID,
	pMecOfferPrice,

	pMedicOfferID,
    pMedicOfferPrice,

    pRoadblock,

	pPhone,
	pPhoneOff,
	pContact,
	pEditingItem[32],
	pIncomingCall,
	pCallLine,
	pEmergency,
//	pPlaceAd,

	pMarker,

	pWanted,
	pWantedTime,

	pTransfer,

	pColor1,
	pColor2,

	pPaintjob,

	pDrivingTest,
	pTestStage,
	pTestCar,
	pTestWarns,

	Float: pEventBackX,
	Float: pEventBackY,
	Float: pEventBackZ,
	pEventBackInterior,
	pEventBackWorld,
	pEventGo,

	pOOCSpam,

	pVip,

	pCarVehI,

	pExpShow,
	pExpTimer,

	pQuest,
	pQuestProgress,

	pBan,
	pBanReason[128],

	pVehicleKeys,
	pPVP,
	pPVPFreeze,

	pTazer,
	pStunned,

	bool: IsLoggedIn,
	LoginAttempts,
	LoginTimer,

	pHouse,
	pWhitelist,

	pWorkOn,

	bool: pHelmetOn,

	pCoin,
	pGiftBox,
    pITEMCODE1,
	pAnims1,
	pBoombox,

	pAnimation,
	pMarryOn,
	pDragTime

};
new playerData[MAX_PLAYERS][PLAYER_DATA];

//new MapIconsShown[MAX_PLAYERS];

// --> ระบบ SafeZone
#define MAX_SZ 1000 //
enum szInfo
{
     Exits,
	 Float:szPosX,
	 Float:szPosY,
	 Float:szPosZ,
	 szSize,
	 szPickupID,
	 Text3D: szTextID,
};
new SafeZoneInfo[MAX_SZ][szInfo];

/*new Float:garagePoints[][] = {
    { 2609.9038,2258.5513,10.8203 }, //
    { 539.9163,-1276.1754,17.2422 }
};*/

enum FACTION_DATA {
	factionID,
	factionExists,
	factionName[32],
	factionColor,
	factionType,
	factionRanks,
	Float:factionLockerPosX,
	Float:factionLockerPosY,
	Float:factionLockerPosZ,
	factionLockerInt,
	factionLockerWorld,
	factionSkins[8],
	factionWeapons[10],
	factionAmmo[10],
	Text3D:factionText3D,
	factionPickup,
	Float:SpawnX,
	Float:SpawnY,
	Float:SpawnZ,
	SpawnInterior,
	SpawnVW,
	factionEntrance,

	factionMoney
};
new factionData[MAX_FACTIONS][FACTION_DATA];
new FactionRanks[MAX_FACTIONS][15][32];

enum ARREST_DATA {
	arrestID,
	arrestExists,
	Float:arrestPosX,
	Float:arrestPosY,
	Float:arrestPosZ,
	arrestInterior,
	arrestWorld,
	Text3D:arrestText3D,
	arrestPickup
};
new arrestData[MAX_ARREST][ARREST_DATA];

enum GPS_DATA {
	gpsID,
	gpsExists,
	gpsName[32],
	Float:gpsPosX,
	Float:gpsPosY,
	Float:gpsPosZ,
	gpsType
};
new gpsData[MAX_GPS][GPS_DATA];

#define     MAX_CARSHOP             (40)
enum CARSHOP_DATA {
	carshopID,
	carshopExists,
	carshopModel,
	carshopPrice,
	carshopType
};
new carshopData[MAX_CARSHOP][CARSHOP_DATA];

enum CAR_DATA
{
	carEngine,
	carID,
	carOwnerID,
	carOwner[MAX_PLAYER_NAME],
	carModel,
	carPrice,
	carTickets,
	carLocked,
	carPlate[32],
	Float:carHealth,
	Float:carPosX,
	Float:carPosY,
	Float:carPosZ,
	Float:carPosA,
	carColor1,
	carColor2,
	carPaintjob,
	carInterior,
	carWorld,
	carNeon,
	carNeonEnabled,
	carTrunk,
	carMods[14],
	carCash,
	carFaction,
	carObjects[2],
	carTimer,
	carWeapons[5],
	carAmmo[5]
};
new carData[MAX_VEHICLES][CAR_DATA];

enum SHOP_DATA {
	shopID,
	shopExists,
	Float:shopPosX,
	Float:shopPosY,
	Float:shopPosZ,
	shopInterior,
	shopWorld,
	shopType,
	Text3D:shopText3D,
	shopPickup
};
new shopData[MAX_SHOPS][SHOP_DATA];

enum PUMP_DATA {
	pumpID,
	pumpExists,
	Float:pumpPosX,
	Float:pumpPosY,
	Float:pumpPosZ,
	Text3D:pumpText3D,
	pumpPickup
};
new pumpData[MAX_PUMPS][PUMP_DATA];

enum GARAGE_DATA {
	garageID,
	garageExists,
	Float:garagePosX,
	Float:garagePosY,
	Float:garagePosZ,
	Text3D:garageText3D,
	garagePickup
};
new garageData[MAX_GARAGES][GARAGE_DATA];

enum ATM_DATA {
	atmID,
	atmExists,
	Float:atmPosX,
	Float:atmPosY,
	Float:atmPosZ,
	Float:atmPosA,
	atmInterior,
	atmWorld,
	atmObject,
	Text3D:atmText3D
};
new atmData[MAX_ATM_MACHINES][ATM_DATA];

enum CONTACT_DATA {
	contactID,
	contactExists,
	contactName[32],
	contactNumber
};
new contactData[MAX_PLAYERS][MAX_CONTACTS][CONTACT_DATA];
new ListedContacts[MAX_PLAYERS][MAX_CONTACTS];

enum INV_DATA {
	invExists,
	invID,
	invItem[32],
	invQuantity,
	invWeapon,
	Float:invBroke

};
new invData[MAX_PLAYERS][MAX_INVENTORY][INV_DATA];

enum ITEM_NAME_DATA
{
    itemName[32],
    itemPng[32], 
    itemQuantity, 
	itemModel
};

new const itemData[][ITEM_NAME_DATA] =
{
	{ "ไม่พบข้อมูล", "ms_uiinv:item_0", 0},
    { "ปูน", "ms_uiinv:item_1", 100},
    { "สายไฟ", "ms_uiinv:item_2", 100},
	{ "รังผึ่ง", "ms_uiinv:item_3", 100},
    { "ส้ม", "ms_uiinv:item_4", 40},
    { "ข้าว", "ms_uiinv:item_5", 40},
    { "ปลาหมึก", "ms_uiinv:item_6", 40},
    { "แร่เหลือง", "ms_uiinv:item_7", 40},
	{ "แร่เขียว", "ms_uiinv:item_8", 100},
	{ "แร่ฟ้า", "ms_uiinv:item_9", 100},
	{ "แร่แดง", "ms_uiinv:item_10", 100},
	{ "แร่", "ms_uiinv:item_11", 100},
	{ "สนับมือ", "ms_uiinv:item_12", 1 },
	{ "ไม้สนุ๊ก", "ms_uiinv:item_13", 1 },
	{ "ไม้เบสบอล", "ms_uiinv:item_14", 1 },
	{ "ไม้กอล์ฟ", "ms_uiinv:item_15", 1 },
	{ "ไอติม", "ms_uiinv:item_16", 1 },
	{ "มือถือ", "ms_uiinv:item_17", 100 },
	{ "พิซซ่า", "ms_uiinv:item_18", 100 },
	{ "น้ำเปล่า", "ms_uiinv:item_19", 100 },
	{"กาชาปอง", "ms_uiinv:item_20", 100},

	{"เบ็ดตกปลา", "ms_uiinv:item_21", 100},
	{"เหยื่อ", "ms_uiinv:item_22", 100},
	{"ปลาทู", "ms_uiinv:item_23", 100},
	{"ปลาแซลม่อน", "ms_uiinv:item_24", 100},
	{"ปลานิล", "ms_uiinv:item_25", 100},
	{"ปู", "ms_uiinv:item_26", 100},
	{"กุ้ง", "ms_uiinv:item_27", 100},

	{"คาร์บอน", "ms_uiinv:item_63", 50},
	{"เศษไม้", "ms_uiinv:item_64", 50},
	{"เศษเหล็ก", "ms_uiinv:item_65", 50},
	{"แท่งไม้", "ms_uiinv:item_66", 50},
	{"แท่งเหล็ก", "ms_uiinv:item_67", 50},

	{"กล้วย", "ms_uiinv:item_28", 40},
	{"กระบองเพชร", "ms_uiinv:item_29", 40},
	{"ทุเรียน", "ms_uiinv:item_30", 40},
	{"ผักกาด", "ms_uiinv:item_31", 40},
	{"กุ้งล็อบสเตอร์", "ms_uiinv:item_32", 40},
	{"เครื่องมือซ่อมรถ", "ms_uiinv:item_33", 100},
	{"เหรียญAFK", "ms_uiinv:item_34", 1000},
    {"กล่องตีอาวุธv1", "ms_uiinv:item_35", 100},
	{"ปอมปอมปูริน", "ms_uiinv:item_36", 100},
	{"เป๋าปอมปอม", "ms_uiinv:item_37", 100},	
	{"โปเชโกะ", "ms_uiinv:item_39", 100},
	{"ปอมจะนั่ง", "ms_uiinv:item_40", 100},
	{"ไออ้วง", "ms_uiinv:item_41", 100},
	{"ผ้าพันแผล", "ms_uiinv:item_45", 100},
	{"ผ้าพันแผลใหญ่", "ms_uiinv:item_78", 100},
	{"pet", "ms_uiinv:item_46", 100},

	{"หมวกชินนาม่อน", "ms_uiinv:item_72", 100},
	{"เป๋าชินนาม่อน", "ms_uiinv:item_70", 100},
	{"ถือชินนาม่อน", "ms_uiinv:item_71", 100},


	{"กุญแจตู้เซฟ", "ms_uiinv:item_42", 100},
	{"บลูปริ้นกุญแจตู้", "ms_uiinv:item_43", 100},

    {"หมัดสายฟ้า", "ms_uiinv:item_47", 10},
	{"หมัดไฟ", "ms_uiinv:item_49", 10},
	{"ห่วงยางหมา", "ms_uiinv:item_51", 10},
    {"หมาเกาะหัว", "ms_uiinv:item_52", 10},
	{"เจ้าหมุน", "ms_uiinv:item_53", 10},
	{"รองเท้าหมา", "ms_uiinv:item_55", 10},
	{"แฟชั่นผู้เล่นใหม่", "ms_uiinv:item_56", 10},
	{"บัตรฟามคูณสอง", "ms_uiinv:item_57", 100},
	{"เหรียญดวงซวย", "ms_uiinv:item_58", 100},
	{"หญ้า", "ms_uiinv:item_59", 1000},
	{"แหวนดอกหญ้า", "ms_uiinv:item_61", 10},



	{"เงินแดง", "ms_uiinv:item_50", 1000000},

    //---->สกินส่วนตัว
	{"กล่องสกิน193", "ms_uiinv:tae1", 10},
	{ "กล่องสกิน76", "ms_uiinv:tae3", 10 },   //สกินหญิงโดเนท
	{ "กล่องสกิน202", "ms_uiinv:tae4", 10 },  //สกินชายชุดนอน
	{ "กล่องสกิน216", "ms_uiinv:tae5", 10 },  //สกินหญิงชุดนอน
	{ "กล่องสกิน214", "ms_uiinv:tae6", 10 },  //สกินหญิงเสื้อบอล
	{ "กล่องสกิน238", "ms_uiinv:tae7", 10 },  //สกินหญิงแคร์แบร์
	{ "กล่องสกิน64", "ms_uiinv:tae8", 10 },    //สกินหญิงชินนาม่อน
	{ "กล่องสกิน20", "ms_uiinv:item_0", 10 },  //สกินหญิงแคร์แบร์
	{ "กล่องสกิน23", "ms_uiinv:item_0", 10 },    //สกินหญิงชินนาม่อน
	
	{"บัตรเทรดอาวุธ", "ms_uiinv:item_77", 10},
	{"โคเคน", "ms_uiinv:item_76", 100},

	{ "GACHAPON-MONEY", "ms_uiinv:item_73", 500 },
	{ "GACHAPON-BLACK", "ms_uiinv:item_74", 500 },
	{ "GACHAPON-FASHION", "ms_uiinv:item_24", 500 },

	{ "บัตรฟามX2-3วัน", "ms_uiinv:item_20", 1 },
    { "บัตรฟามX2-7วัน", "ms_uiinv:item_21", 1 }
	
	
};

enum ENTRANCE_DATA {
	entranceID,
	entranceExists,
	entranceName[32],
	entrancePass,
	entranceIcon,
	entranceLocked,
	Float:entrancePosX,
	Float:entrancePosY,
	Float:entrancePosZ,
	Float:entrancePosA,
	Float:entranceIntX,
	Float:entranceIntY,
	Float:entranceIntZ,
	Float:entranceIntA,
	entranceInterior,
	entranceExterior,
	entranceExteriorVW,
	entranceType,
	entranceCustom,
	entranceWorld,
	entranceFaction,
	entrancePickup,
	entranceMapIcon,
	Text3D:entranceText3D,
	entranceExPickup,
	Text3D:entranceExText3D
};
new entranceData[MAX_ENTRANCES][ENTRANCE_DATA];

enum
{
	VEHICLE_ENGINE,
	VEHICLE_LIGHTS,
	VEHICLE_ALARM,
	VEHICLE_DOORS,
	VEHICLE_BONNET,
	VEHICLE_BOOT,
	VEHICLE_OBJECTIVE
};

enum
{
	STASH_CAPACITY_CASH
};
new Sawon[MAX_PLAYERS] = 0;
enum
{
	LIMIT_VEHICLES
};

// ระบบแต่งตัว
#define MAX_CLOTHES 15
#define BUYZIP 1
#define BUYSPORTS 2

#define EMBED_BLACK                     "{000000}"
#define EMBED_RED						"{FF0000}"
#define EMBED_WHITE						"{FFFFFF}"
#define EMBED_YELLOW				    "{FFFF00}"
#define EMBED_GREEN						"{33AA33}"
#define EMBED_BLUE						"{0000FF}"
#define EMBED_LIGHTBLUE				    "{8080FF}"
#define EMBED_ORANGE				    "{FF8000}"
#define EMBED_GREY						"{AFAFAF}"
#define EMBED_CYAN						"{00FFFF}"
#define EMBED_GRAD						"{CBCCCE}"
#define EMBED_GRAD1						"{b4b5b7}"
#define EMBED_PURPLE				    "{C68DFF}"
#define EMBED_PINK						"{FF8282}"
#define EMBED_LIGHTBLUE2			    "{8D8DFF}"
#define EMBED_LIGHTRED				    "{FF6347}"
#define EMBED_DIALOG				    "{A8C3E3}"
#define EMBED_LIGHTGREEN			    "{AEFFBC}"
#define EMBED_GREENMONEY			    "{33AA33}"
#define EMBED_LIMEGREEN                 "{E5FF00}"

enum e_cloths {
	cl_sid,
	cl_object,
	Float:cl_x,
	Float:cl_y,
	Float:cl_z,
	Float:cl_rx,
	Float:cl_ry,
	Float:cl_rz,
	Float:cl_scalex,
	Float:cl_scaley,
	Float:cl_scalez,
	cl_bone,
	cl_slot,
	cl_equip,
	cl_mc1,
	cl_mc2,
	cl_name[32]
};

enum e_cldata {
	e_model,
	e_price,
	e_bone,
	e_name[32],
	Float:e_x,
	Float:e_y,
	Float:e_z,
	Float:e_rx,
	Float:e_ry,
	Float:e_rz,
	Float:e_sx,
	Float:e_sy,
	Float:e_sz
};

new const cl_SportsData[][e_cldata] = { // 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0
	{953, 200, 1, "หอย", 0.000000, -0.299999, -0.038000, 49.799999, 1.599999, 0.000000, 1.000000, 1.000000, 1.000000},
	{3092, 200, 1, "ศพตำรวจ", 0.098999, -0.127000, 0.000000, 1.399999, 83.900024, 4.400000, 1.000000, 1.000000, 1.000000},
	{1371, 200, 1, "มังกร", 0.187999, 0.000000, 0.000000, -3.299999, 90.499984, 175.600006, 1.000000, 1.000000, 1.000000},
	{19833, 200, 1, "วัว", -0.106999, 0.190000, -0.001000, 85.000007, 41.900024, 96.799957, 0.935999, 0.722000, 0.772000},

	{19557, 200, 2, "หน้ากาก Sexy", 0.154999, 0.045999, 0.007999, 2.399999, -6.399999, -6.899999, 1.289999, 1.018999, 1.123999},
	{1276,  200, 1,  "มังกรเขียว", 0.120999, -0.209000, 0.000000, -2.100000, 86.900001, 91.400001, 1.000000, 1.000000, 1.000000},
	{8492, 200, 1, "ดอกบัว", -0.141999, -0.120000, -0.007000, 53.200004, -87.699966, 53.599979, 0.150000, 0.000000, 0.188000},
	{1238, 200, 2, "จราจร", 0.409999, 0.000000, 0.021000, 13.899998, 81.899917, 10.399999, 1.000000, 1.000000, 1.000000},

	{2102, 200, 1, "ลำโพง", -0.081999, -0.120999, -0.123999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000},
	{1212, 200, 1, "เงิน", 0.011999, -0.033999, -0.019000, 94.399986, 0.000000, 0.000000, 2.890999, 3.981999, 2.572999},
	{2880, 200, 2, "เบอร์เกอร์", 0.155999, 0.166999, 0.044000, -173.700042, 17.500003, 27.900005, 1.004000, 1.900999, 1.245999},
	{11712, 200, 1, "ไม้กางเขน", 0.039000, -0.099000, 0.000000, -87.199996, 94.699981, -0.499999, 2.768999, 2.805000, 2.735000},
	{18920, 200, 2, "ผ้าปิดปาก", -0.095000, 0.064000, -0.011999, -95.400009, 8.800000, 82.200019, 1.000000, 1.000000, 1.000000},

	{19578, 200, 1, "แฟชั่นกล้วย", 0.061999, -0.133000, 0.000000, 0.000000, -49.699996, 0.000000, 2.746999, 1.909999, 2.751000},
	{1254, 200, 2, "หัวกะโหลก", 0.099000, 0.029000, 0.018000, -12.200000, 83.299942, 0.900000, 1.284999, 1.000000, 1.382000},
	{19488, 200, 2, "หมวก", 0.153000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000},
	{1241, 200, 1, "ยา", 0.094999, -0.111999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 },
	{19138, 200, 2, "แว่นตา", 0.098000, 0.033000, 0.000000, 89.300010, 85.500015, 0.000000, 0.969000, 1.150000, 1.355000 }
};

new const cl_ZipData[][e_cldata] = { // 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0
	{19066, 100, 2, "หมวกซานต้า", 0.1229, 0.0350, 0.0000, 90.7, 119.2999, -2.4, 1.0, 1.0, 1.0},
	{18970, 100, 2, "หมวกแมงดาเสือ", 0.1089, 0.0360, 0.0000, 0.0000, 93.5999, 87.7999, 1.0, 1.0, 1.0},
	{18971, 100, 2, "หมวกดิสโก้แมงดา", 0.1089, 0.0360, 0.0000, 0.0000, 93.5999, 87.7999, 1.0, 1.0, 1.0},
	{18972, 100, 2, "หมวกลาวาแมงดา", 0.1089, 0.0360, 0.0000, 0.0000, 93.5999, 87.7999, 1.0, 1.0, 1.0},
	{18973, 100, 2, "Camo Pimp Hat", 0.1089, 0.0360, 0.0000, 0.0000, 93.5999, 87.7999, 1.0, 1.0, 1.0},
	{18921, 100, 2, "หมวกเบเร่ต์", 0.1430, 0.0210, -0.0029, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18922, 100, 2, "หมวกเบเร่ต์สีแดง", 0.1430, 0.0210, -0.0029, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18923, 100, 2, "บลูเบเร่ต์", 0.1430, 0.0210, -0.0029, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18924, 100, 2, "Camo Beret", 0.1430, 0.0210, -0.0029, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19067, 100, 2, "หมวกฮูดสีแดง", 0.1239, 0.0290, -0.0009, 85.5999, 118.7000, 1.0000, 1.0, 1.0, 1.0},
	{19068, 100, 2, "หมวกม้าลาย", 0.1239, 0.0290, -0.0009, 85.5999, 118.7000, 1.0000, 1.0, 1.0, 1.0},
	{19069, 100, 2, "หมวกฮู้ดดำ", 0.1239, 0.0290, -0.0009, 85.5999, 118.7000, 1.0000, 1.0, 1.0, 1.0},
	{18926, 100, 2, "หมวกลายพราง", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18927, 100, 2, "หมวกเปลวไฟสีน้ำเงิน", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18928, 100, 2, "หมวกฮิปปี้", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18929, 100, 2, "หมวกลวงตา", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18930, 100, 2, "หมวกไฟ", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18931, 100, 2, "หมวกเพลิงทมิฬ", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18932, 100, 2, "หมวกลาวา", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18933, 100, 2, "โพก้าดอทแฮท", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18934, 100, 2, "หมวกแดง", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18935, 100, 2, "หมวกสีเหลือง", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18941, 100, 2, "หมวกดำ", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18942, 100, 2, "หมวกสีน้ำเงินเข้ม", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18943, 100, 2, "หมวกสีเขียว", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18961, 100, 2, "หมวกรถบรรทุก", 0.1370, 0.0320, 0.0030, 103.0000, 94.0000, -14.9000, 1.0, 1.0, 1.0},
	{18960, 100, 2, "ขอบขึ้น", 0.1370, 0.0320, 0.0030, 103.00000, 94.0000, -14.9000, 1.0, 1.0, 1.0},
	{18936, 100, 2, "หมวกกันน็อคสีเทา", 0.0980, 0.0369, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18937, 100, 2, "หมวกแดง", 0.0980, 0.0369, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18938, 100, 2, "หมวกกันน็อคสีม่วง", 0.0980, 0.0369, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19101, 100, 2, "หมวกทหาร(สายรัด)", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19102, 100, 2, "หมวกทหารเรือ(สายรัด)", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19103, 100, 2, "หมวกทะเลทราย(สายรัด)", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19104, 100, 2, "หมวกกันน็อค Day Camo (สายรัด)", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19105, 100, 2, "หมวกนิรภัย Night Camo (สายรัด)", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19106, 100, 2, "หมวกทหาร", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19107, 100, 2, "หมวกทหารเรือ", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19108, 100, 2, "หมวกทะเลทราย", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19109, 100, 2, "หมวกกันน็อค Day Camo", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19110, 100, 2, "หมวกนิรภัย Night Camo", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19111, 100, 2, "หมวกกันน็อคลายพรางทราย", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19112, 100, 2, "หมวกกันน็อคลายพรางสีชมพู", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18911, 100, 2, "ผ้าพันคอหัวกะโหลก", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
 	{18912, 100, 2, "ผ้าพันคอสีดำ", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
 	{18913, 100, 2, "ผ้าพันคอสีเขียว", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
 	{18914, 100, 2, "ผ้าพันคอลายพราง", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
 	{18915, 100, 2, "ผ้าพันคอขี้ขลาด", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
 	{18916, 100, 2, "ผ้าโพกหัวสามเหลี่ยม", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
 	{18917, 100, 2, "ผ้าพันคอสีน้ำเงินเข้ม", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {18918, 100, 2, "ผ้าพันคอขาวดำ", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},

	{18919, 100, 2, "จุดผ้าพันคอ", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {18920, 100, 2, "สามเหลี่ยมและจุดผ้าพันคอ", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {19469, 100, 1, "ผ้าพันคอ", 0.3000, 0.0550, -0.0369, -5.8999, 0.0000, 26.2000, 1.0000, 1.5519, 1.3889},
	{18944, 100, 2, "นักพายเรือลาวา", 0.1330, 0.0180, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18945, 100, 2, "นักพายเรือหมวกสีเทา", 0.1330, 0.0180, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18946, 100, 2, "หมวกลำลอง", 0.1330, 0.0180, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18947, 100, 2, "Black Hat Bowler", 0.1390, 0.0180, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {18948, 100, 2, "นักเล่นโบว์ลิ่งหมวกสีน้ำเงิน", 0.1390, 0.0180, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {18949, 100, 2, "นักโบว์ลิ่งกรีนแฮท", 0.1390, 0.0180, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {18950, 100, 2, "นักเลงหมวกแดง", 0.1390, 0.0180, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {18951, 100, 2, "นักเล่นโบว์ลิ่งหมวกเหลือง", 0.1390, 0.0180, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18953, 100, 2, "หมวกถักสีดำ", 0.1110, 0.0340, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18954, 100, 2, "ถักหมวกสีเทา", 0.1110, 0.0340, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18955, 100, 2, "ลาวาแคปอาย", 0.1030, 0.0440, 0.0009, -95.6000, 92.2001, -161.9002, 1.0, 1.0, 1.0},
	{18956, 100, 2, "Dark Flame Cap Eye", 0.1030, 0.0440, 0.0009, -95.6000, 92.2001, -161.9002, 1.0, 1.0, 1.0},
	{18957, 100, 2, "บลูแคปอาย", 0.1030, 0.0440, 0.0009, -95.6000, 92.2001, -161.9002, 1.0, 1.0, 1.0},
	{18958, 100, 2, "เสือชีตาห์แคปอาย", 0.1030, 0.0440, 0.0009, -95.6000, 92.2001, -161.9002, 1.0, 1.0, 1.0},
	{18959, 100, 2, "Camo Cap Eye", 0.1030, 0.0440, 0.0009, -95.6000, 92.2001, -161.9002, 1.0, 1.0, 1.0},
	{18964, 100, 2, "หมวกหัวกระโหลกดำ", 0.1210, 0.0310, 0.0000, 95.3000, 107.1999, 0.0000, 1.0, 1.0, 1.0},
	{18965, 100, 2, "หมวกหัวกะโหลก", 0.1210, 0.0310, 0.0000, 95.3000, 107.1999, 0.0000, 1.0, 1.0, 1.0},
	{18966, 100, 2, "หมวก Funky Skully", 0.1210, 0.0310, 0.0000, 95.3000, 107.1999, 0.0000, 1.0, 1.0, 1.0},
	{18967, 100, 2, "หมวกดำ", 0.1030, 0.0260, 0.0000, 95.7000, 87.3999, -0.3999, 1.0, 1.0, 1.0},
	{18968, 100, 2, "ชาวหาด", 0.1030, 0.0260, 0.0000, 95.7000, 87.3999, -0.3999, 1.0, 1.0, 1.0},
	{18969, 100, 2, "หมวกลาวา", 0.1030, 0.0260, 0.0000, 95.7000, 87.3999, -0.3999, 1.0, 1.0, 1.0},
	{19006, 100, 2, "แว่นแดง", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19007, 100, 2, "แก้วสีส้ม", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19008, 100, 2, "แว่นเขียว", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19009, 100, 2, "แว่นฟ้า", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19010, 100, 2, "แว่นสีชมพู", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19011, 100, 2, "แว่นขาวดำ", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19012, 100, 2, "แว่นดำ", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19013, 100, 2, "แว่นตาจุด", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19014, 100, 2, "แว่นเหลี่ยม", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19015, 100, 2, "แว่นตาเรืองแสง", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19016, 100, 2, "แว่นตาเอ็กซ์เรย์", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19017, 100, 2, "แว่นเหลืองล้วน", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19018, 100, 2, "แว่นสีส้มล้วน", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19019, 100, 2, "แว่นแดงธรรมดา", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19020, 100, 2, "แว่นสีน้ำเงินล้วน", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19021, 100, 2, "แว่นเขียวธรรมดา", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19022, 100, 2, "นักบินอวกาศ", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19023, 100, 2, "นักบินสีน้ำเงิน", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19024, 100, 2, "นักบินสีม่วง", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19025, 100, 2, "นักบินสีชมพู", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19026, 100, 2, "นักบินสีแดง", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19027, 100, 2, "นักบินสีส้ม", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19028, 100, 2, "นักบินสีเหลือง", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},

	{19029, 100, 2, "นักบินสีเขียว", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19030, 100, 2, "หนาทึบ", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19031, 100, 2, "สีเหลืองหนา", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19032, 100, 2, "หนาแดง", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19033, 100, 2, "แว่นดำล้วน", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
    {19024, 100, 2, "แว่นตาสี่เหลี่ยม", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
    {19025, 100, 2, "แว่นตาสีน้ำเงินเข้ม", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19349, 100, 2, "โมโนเคิล", 0.0769, 0.105, 0.0340, 120.9999, 2.6999, -96.3998, 1.0, 1.0, 1.0},
	{18891, 100, 2, "ผ้าพันคอสีน้ำเงิน", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18892, 100, 2, "ผ้าพันคอสีแดง", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18893, 100, 2, "ผ้าพันคอสีขาวและสีแดง", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18894, 100, 2, "บ็อบ มาร์เลย์ ผ้าพันคอ", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18895, 100, 2, "ผ้าพันคอหัวกะโหลก", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18896, 100, 2, "ผ้าโพกหัวขาวดำ", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18897, 100, 2, "ผ้าพันคอสีน้ำเงินและสีขาว", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18898, 100, 2, "ผ้าพันคอสีเขียวและสีขาว", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18899, 100, 2, "ผ้าพันคอสีม่วงและสีขาว", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18900, 100, 2, "ผ้าพันคอประสาทหลอน", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18901, 100, 2, "Fall Camo Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18902, 100, 2, "ผ้าพันคอสีเหลือง", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18903, 100, 2, "ผ้าพันคอสีฟ้าอ่อน", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18904, 100, 2, "ผ้าพันคอสีน้ำเงินเข้ม", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
    {18905, 100, 2, "ผ้าพันคอฟาง", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
    {18906, 100, 2, "ผ้าพันคอสีแดงและสีเหลือง", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18907, 100, 2, "ผ้าพันคอประสาทหลอน", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18908, 100, 2, "คลื่นผ้าพันคอ", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18909, 100, 2, "ผ้าพันคอสีฟ้า", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18910, 100, 2, "ผ้าพันคอลาวา", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18962, 100, 2, "หมวกคาวบอยสีดำ", 0.1630, 0.0270, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19095, 100, 2, "หมวกคาวบอยสีน้ำตาลอ่อน", 0.1630, 0.0270, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19096, 100, 2, "หมวกคาวบอยสีน้ำเงินเข้ม", 0.1630, 0.0270, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19097, 100, 2, "หมวกคาวบอยสีแดง", 0.1630, 0.0270, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {19098, 100, 2, "หมวกคาวบอยสีน้ำตาล", 0.1630, 0.0270, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {19352, 100, 2, "หมวกทรงสูง", 0.1039, 0.0210, 0.0060, 93.7000, 74.3000, 0.0000, 1.0, 1.0, 1.0}
};
new ClothingData[MAX_PLAYERS][MAX_CLOTHES][e_cloths];
new cl_buying[MAX_PLAYERS];
new cl_dataslot[MAX_PLAYERS][MAX_CLOTHES];

// --> ระบบบ้าน Dynamic
#define MAX_HOUSES 100
#define MAX_OWNABLE_HOUSES 1
enum houseData {
	houseID,
	houseExists,
	houseOwner,
	housePrice,
	houseAddress[32],
	Float:housePos[4],
	Float:houseInt[4],
	houseInterior,
	houseExterior,
	houseExteriorVW,
	houseLocked,
	houseMoney,
	houseMapIcon,
	Text3D:houseText3D,
	housePickup,
	houseLights,
	houseWeapons[10],
	houseAmmo[10]
};
new HouseData[MAX_HOUSES][houseData];

enum houseInteriors {
	eHouseInterior,
	Float:eHouseX,
	Float:eHouseY,
	Float:eHouseZ,
	Float:eHouseAngle
};

new const Float:arrHouseInteriors[20][houseInteriors] = {
	{10, 2269.8772, -1210.3240, 1047.5625, 90.0000},
    {2, 2468.2576, -1698.2361, 1013.5078, 90.0000},
	{3, 2495.8711, -1693.0996, 1014.7422, 180.0000},
	{5, 2233.7888, -1114.2689, 1050.8828, 0.0000},
	{9, 2317.8015, -1026.2113, 1050.2178, 0.0000},
	{3, 235.2923, 1187.3684, 1080.2578, 0.0000},
	{2, 226.2912, 1240.0554, 1082.1406, 90.0000},
	{1, 223.1618, 1287.5175, 1082.1406, 0.0000},
	{5, 226.9281, 1114.2813, 1080.9962, 270.0000},
	{15, 295.1485, 1473.1080, 1080.2578, 0.0000},
	{10, 23.9584, 1340.6075, 1084.3750, 0.0000},
	{4, 222.0425, 1140.7565, 1082.6094, 0.0000},
	{12, 2324.4209, -1148.9365, 1050.7101, 0.0000},
	{4, -261.1430, 1456.6396, 1084.3672, 90.0000},
	{5, 22.9676, 1403.8368, 1084.4297, 0.0000},
	{5, 140.3088, 1366.8196, 1083.8594, 0.0000},
	{6, 234.3149, 1064.2772, 1084.2114, 0.0000},
	{7, 225.7000, 1022.0012, 1084.0161, 0.0000},
	{5, 1298.9750, -796.4567, 1084.0078, 0.0000},
	{15, -283.8687, 1471.1174, 1084.3750, 90.0000}
};

// --> ระบบแต่งรถ
#define                 C_ADMIN             0x4169E1FF
#define                 C_AVISO             0xB22222FF

new Text:wTuning1[23];
new Text:wTuning2[9];
new Text:wTuning3[6];
new Text:wTuning4[3];
new Text:wTuning5[3];

enum carEnum
{
	carCategory[16],
	carModel,
	carPrice
};
new const vehicleArray[][carEnum] =
{
	{"จักรยานยนต์",       	462, 15000},
	{"จักรยานยนต์",       	468, 75000},
	/*{"จักรยานยนต์",       	586, 90000},*/
	{"จักรยานยนต์",       	463, 115000},
	{"จักรยานยนต์",       	461, 150000},
	/*{"จักรยานยนต์",       	521, 200000},*/
	{"รถเก๋ง",     			542, 45000},
	/*{"รถเก๋ง",     			517, 50000},
	{"รถเก๋ง",     			549, 50000},
	{"รถเก๋ง",     			546, 57000},*/
	{"รถเก๋ง",     			419, 65000},
	/*{"รถเก๋ง",     			466, 65000},
	{"รถเก๋ง",     			467, 67500},
	{"รถเก๋ง",     			492, 70000},*/
	{"รถเก๋ง",     			475, 80000},
	/*{"รถเก๋ง",     			445, 85000},*/
	{"รถเก๋ง",     			551, 90000},
	/*{"รถเก๋ง",     			426, 95000},*/
	{"รถเก๋ง",     			580, 100000},
	{"ออฟโรด",    		  500, 125000},
	{"ออฟโรด",    		  400, 135000},
	{"ออฟโรด",    		  489, 150000},
	{"ออฟโรด",    		  579, 155000},
	{"รถตู้",  	 			418, 50000},
	{"รถตู้",  	 			404, 55000},
	/*{"รถตู้",  	 			479, 60000},*/
	{"รถตู้",  	 			458, 65000},
	{"รถตู้",  	 			561, 65000},
	{"รถอุตสาหกรรม",       478, 35000},
	{"รถอุตสาหกรรม",       543, 50000},
	{"รถอุตสาหกรรม",       600, 75000},
	/*{"รถอุตสาหกรรม",       422, 75000},*/
	{"รถอุตสาหกรรม",       440, 80000},
	/*{"รถอุตสาหกรรม",       413, 85000},*/
	{"รถอุตสาหกรรม",       482, 90000},
	/*{"รถอุตสาหกรรม",       554, 100000},*/
	{"รถสปอร์ต",     	   496, 150000},
	/*{"รถสปอร์ต",     	   402, 120000},
	{"รถสปอร์ต ",     	   565, 135000},*/
	{"รถสปอร์ต ",     	   559, 350000},
	/*{"รถสปอร์ต",     	   603, 170000},
	{"รถสปอร์ต",     	   587, 250000},
	{"รถสปอร์ต",     	   477, 300000},
	{"รถสปอร์ต ",     	   562, 400000},
	{"รถสปอร์ต ",     	   560, 500000},*/
	{"รถสปอร์ต",     	   429, 550000}
	/*{"รถสปอร์ต",     	   415, 750000},
	{"รถสปอร์ต",     	   541, 1000000},
	{"รถสปอร์ต",     	   411, 2000000},
	{"รถสปอร์ต",     	   451, 3000000}*/
};

enum e_InteriorData {
	e_InteriorName[32],
	e_InteriorID,
	Float:e_InteriorX,
	Float:e_InteriorY,
	Float:e_InteriorZ
};
new const g_arrInteriorData[][e_InteriorData] = {
	{"24/7 1", 17, -25.884498, -185.868988, 1003.546875},
    {"24/7 2", 10, 6.091179, -29.271898, 1003.549438},
    {"24/7 3", 18, -30.946699, -89.609596, 1003.546875},
    {"24/7 4", 16, -25.132598, -139.066986, 1003.546875},
    {"24/7 5", 4, -27.312299, -29.277599, 1003.557250},
    {"24/7 6", 6, -26.691598, -55.714897, 1003.546875},
    {"Airport Ticket", 14, -1827.147338, 7.207417, 1061.143554},
    {"Airport Baggage", 14, -1861.936889, 54.908092, 1061.143554},
    {"Shamal", 1, 1.808619, 32.384357, 1199.593750},
    {"Andromada", 9, 315.745086, 984.969299, 1958.919067},
    {"Ammunation 1", 1, 286.148986, -40.644397, 1001.515625},
    {"Ammunation 2", 4, 286.800994, -82.547599, 1001.515625},
    {"Ammunation 3", 6, 296.919982, -108.071998, 1001.515625},
    {"Ammunation 4", 7, 314.820983, -141.431991, 999.601562},
    {"Ammunation 5", 6, 316.524993, -167.706985, 999.593750},
    {"Ammunation Booths", 7, 302.292877, -143.139099, 1004.062500},
    {"Ammunation Range", 7, 298.507934, -141.647048, 1004.054748},
    {"Blastin Fools Hallway", 3, 1038.531372, 0.111030, 1001.284484},
    {"Budget Inn Motel Room", 12, 444.646911, 508.239044, 1001.419494},
    {"Jefferson Motel", 15, 2215.454833, -1147.475585, 1025.796875},
    {"Off Track Betting Shop", 3, 833.269775, 10.588416, 1004.179687},
    {"Sex Shop", 3, -103.559165, -24.225606, 1000.718750},
    {"Meat Factory", 1, 963.418762, 2108.292480, 1011.030273},
    {"Zero's RC shop", 6, -2240.468505, 137.060440, 1035.414062},
    {"Dillimore Gas", 0, 663.836242, -575.605407, 16.343263},
    {"Catigula's Basement", 1, 2169.461181, 1618.798339, 999.976562},
    {"FC Janitor Room", 10, 1889.953369, 1017.438293, 31.882812},
    {"Woozie's Office", 1, -2159.122802, 641.517517, 1052.381713},
    {"Binco", 15, 207.737991, -109.019996, 1005.132812},
    {"Didier Sachs", 14, 204.332992, -166.694992, 1000.523437},
    {"Prolaps", 3, 207.054992, -138.804992, 1003.507812},
    {"Suburban", 1, 203.777999, -48.492397, 1001.804687},
    {"Victim", 5, 226.293991, -7.431529, 1002.210937},
    {"Zip", 18, 161.391006, -93.159156, 1001.804687},
    {"Club", 17, 493.390991, -22.722799, 1000.679687},
    {"Bar", 11, 501.980987, -69.150199, 998.757812},
    {"Lil' Probe Inn", 18, -227.027999, 1401.229980, 27.765625},
    {"Jay's Diner", 4, 457.304748, -88.428497, 999.554687},
    {"Gant Bridge Diner", 5, 454.973937, -110.104995, 1000.077209},
    {"Secret Valley Diner", 6, 435.271331, -80.958938, 999.554687},
    {"World of Coq", 1, 452.489990, -18.179698, 1001.132812},
    {"Welcome Pump", 1, 681.557861, -455.680053, -25.609874},
    {"Burger Shot", 10, 375.962463, -65.816848, 1001.507812},
    {"Cluckin' Bell", 9, 369.579528, -4.487294, 1001.858886},
    {"Well Stacked Pizza", 5, 373.825653, -117.270904, 1001.499511},
    {"Rusty Browns Donuts", 17, 381.169189, -188.803024, 1000.632812},
    {"Denise's Room", 1, 244.411987, 305.032989, 999.148437},
    {"Katie's Room", 2, 271.884979, 306.631988, 999.148437},
    {"Helena's Room", 3, 291.282989, 310.031982, 999.148437},
    {"Michelle's Room", 4, 302.180999, 300.722991, 999.148437},
    {"Barbara's Room", 5, 322.197998, 302.497985, 999.148437},
    {"Millie's Room", 6, 346.870025, 309.259033, 999.155700},
    {"Sherman Dam", 17, -959.564392, 1848.576782, 9.000000},
    {"Planning Dept", 3, 384.808624, 173.804992, 1008.382812},
    {"Area 51", 0, 223.431976, 1872.400268, 13.734375},
    {"LS Gym", 5, 772.111999, -3.898649, 1000.728820},
    {"SF Gym", 6, 774.213989, -48.924297, 1000.585937},
    {"LV Gym", 7, 773.579956, -77.096694, 1000.655029},
    {"B-Dup's House", 3, 1527.229980, -11.574499, 1002.097106},
    {"B-Dup's Crack Pad", 2, 1523.509887, -47.821197, 1002.130981},
    {"CJ's House", 3, 2496.049804, -1695.238159, 1014.742187},
    {"Madd Doggs Mansion", 5, 1267.663208, -781.323242, 1091.906250},
    {"OG Loc's House", 3, 513.882507, -11.269994, 1001.565307},
    {"Ryders House", 2, 2454.717041, -1700.871582, 1013.515197},
    {"Sweet's House", 1, 2527.654052, -1679.388305, 1015.498596},
    {"Crack Factory", 2, 2543.462646, -1308.379882, 1026.728393},
    {"Big Spread Ranch", 3, 1212.019897, -28.663099, 1000.953125},
    {"Fanny batters", 6, 761.412963, 1440.191650, 1102.703125},
    {"Strip Club", 2, 1204.809936, -11.586799, 1000.921875},
    {"Strip Club (Private Room)", 2, 1204.809936, 13.897239, 1000.921875},
    {"Unnamed Brothel", 3, 942.171997, -16.542755, 1000.929687},
    {"Tiger Skin Brothel", 3, 964.106994, -53.205497, 1001.124572},
    {"Pleasure Domes", 3, -2640.762939, 1406.682006, 906.460937},
    {"Liberty City Outside", 1, -729.276000, 503.086944, 1371.971801},
    {"Liberty City Inside", 1, -794.806396, 497.738037, 1376.195312},
    {"Gang House", 5, 2350.339843, -1181.649902, 1027.976562},
    {"Colonel Furhberger's", 8, 2807.619873, -1171.899902, 1025.570312},
    {"Crack Den", 5, 318.564971, 1118.209960, 1083.882812},
    {"Warehouse 1", 1, 1412.639892, -1.787510, 1000.924377},
    {"Warehouse 2", 18, 1302.519897, -1.787510, 1001.028259},
    {"Sweet's Garage", 0, 2522.000000, -1673.383911, 14.866223},
    {"Lil' Probe Inn Toilet", 18, -221.059051, 1408.984008, 27.773437},
    {"Unused Safe House", 12, 2324.419921, -1145.568359, 1050.710083},
    {"RC Battlefield", 10, -975.975708, 1060.983032, 1345.671875},
    {"Barber 1", 2, 411.625976, -21.433298, 1001.804687},
    {"Barber 2", 3, 418.652984, -82.639793, 1001.804687},
    {"Barber 3", 12, 412.021972, -52.649898, 1001.898437},
    {"Tatoo Parlor 1", 16, -204.439987, -26.453998, 1002.273437},
    {"Tatoo Parlor 2", 17, -204.439987, -8.469599, 1002.273437},
    {"Tatoo Parlor 3", 3, -204.439987, -43.652496, 1002.273437},
    {"LS Police HQ", 6, 246.783996, 63.900199, 1003.640625},
    {"SF Police HQ", 10, 246.375991, 109.245994, 1003.218750},
    {"LV Police HQ", 3, 288.745971, 169.350997, 1007.171875},
    {"Driving School", 3, -2029.798339, -106.675910, 1035.171875},
    {"8-Track", 7, -1398.065307, -217.028900, 1051.115844},
    {"Bloodbowl", 15, -1398.103515, 937.631164, 1036.479125},
    {"Dirt Track", 4, -1444.645507, -664.526000, 1053.572998},
    {"Kickstart", 14, -1465.268676, 1557.868286, 1052.531250},
    {"Vice Stadium", 1, -1401.829956, 107.051300, 1032.273437},
    {"SF Garage", 0, -1790.378295, 1436.949829, 7.187500},
    {"LS Garage", 0, 1643.839843, -1514.819580, 13.566620},
    {"SF Bomb Shop", 0, -1685.636474, 1035.476196, 45.210937},
    {"Blueberry Warehouse", 0, 76.632553, -301.156829, 1.578125},
    {"LV Warehouse 1", 0, 1059.895996, 2081.685791, 10.820312},
    {"LV Warehouse 2 (hidden part)", 0, 1059.180175, 2148.938720, 10.820312},
    {"Caligula's Hidden Room", 1, 2131.507812, 1600.818481, 1008.359375},
    {"Bank", 0, 2315.952880, -1.618174, 26.742187},
    {"Bank (Behind Desk)", 0, 2319.714843, -14.838361, 26.749565},
    {"LS Atrium", 18, 1710.433715, -1669.379272, 20.225049},
    {"Sheriff", 18, -702.1630, 2607.7188, 1006.1084}

};

new g_arrVehicleNames[][] = {
    "Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel", "Dumper", "Firetruck", "Trashmaster",
    "Stretch", "Manana", "Infernus", "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
    "Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection", "Hunter", "Premier", "Enforcer",
    "Securicar", "Banshee", "Predator", "Bus", "Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach",
    "Cabbie", "Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral", "Squalo", "Seasparrow",
    "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder", "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair",
    "Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale", "Oceanic",
    "Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy", "Hermes", "Sabre", "Rustler", "ZR-350", "Walton",
    "Regina", "Comet", "BMX", "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper", "Rancher",
    "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking", "Blista Compact", "Police Maverick",
    "Boxville", "Benson", "Mesa", "RC Goblin", "Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher",
    "Super GT", "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt", "Tanker", "Roadtrain",
    "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra", "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck",
    "Fortune", "Cadrona", "SWAT Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer", "Remington", "Slamvan",
    "Blade", "Streak", "Freight", "Vortex", "Vincent", "Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder",
    "Primo", "Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite", "Windsor", "Monster", "Monster",
    "Uranus", "Jester", "Sultan", "Stratum", "Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
    "Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper", "Broadway", "Tornado", "AT-400", "DFT-30",
    "Huntley", "Stafford", "BF-400", "News Van", "Tug", "Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
    "Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "LSPD Car", "SFPD Car", "LVPD Car",
    "Police Rancher", "Picador", "S.W.A.T", "Alpha", "Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs",
    "Boxville", "Tiller", "Utility Trailer"
};

Float:GetPlayerDistanceFromPlayer(playerid, targetid)
{
	new
	    Float:x,
	    Float:y,
	    Float:z;

	GetPlayerPos(targetid, x, y, z);
	return GetPlayerDistanceFromPoint(playerid, x, y, z);
}

enum VEHICLE_DATA
{
	Float:vFuel,
	Float:vSpeed
};
new vehicleData[][VEHICLE_DATA] =
{
//////น้ำมัน//////ความเร็ว//////
	{ 80.0, 159.00 },
	{ 45.0, 148.00 },
	{ 50.0, 188.00 },
	{ 150.0, 110.00 },
	{ 50.0, 134.00 },
	{ 45.0, 165.00 },
	{ 20.0, 111.00 },
	{ 120.0, 149.00 },
	{ 80.0, 101.00 },
	{ 80.0, 159.00 },
	{ 40.0, 131.00 },
	{ 80.0, 223.00 },
	{ 45.0, 170.00 },
	{ 60.0, 111.00 },
	{ 60.0, 106.00 },
	{ 65.0, 194.00 },
	{ 120.0, 155.00 },
	{ 50.0, 1.00 },
	{ 60.0, 116.00 },
	{ 40.0, 150.00 },
	{ 60.0, 146.00 },
	{ 50.0, 155.00 },
	{ 70.0, 141.00 },
	{ 60.0, 99.00 },
	{ 30.0, 136.00 },
	{ 50.0, 1.00 },
	{ 70.0, 175.00 },
	{ 120.0, 167.00 },
	{ 80.0, 158.00 },
	{ 65.0, 203.00 },
	{ 50.0, 1.00 },
	{ 180.0, 131.00 },
	{ 200.0, 95.00 },
	{ 150.0, 111.00 },
	{ 50.0, 168.00 },
	{ 50.0, 1.00 },
	{ 40.0, 150.00 },
	{ 150.0, 159.00 },
	{ 80.0, 144.00 },
	{ 60.0, 170.00 },
	{ 60.0, 137.00 },
	{ 50.0, 1.00 },
	{ 60.0, 140.00 },
	{ 150.0, 127.00 },
	{ 80.0, 111.00 },
	{ 65.0, 165.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 20.0, 116.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 80.0, 195.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 120.0, 159.00 },
	{ 50.0, 107.00 },
	{ 10.0, 96.00 },
	{ 80.0, 158.00 },
	{ 60.0, 137.00 },
	{ 50.0, 1.00 },
	{ 45.0, 167.00 },
	{ 20.0, 107.00 },
	{ 60.0, 142.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 148.00 },
	{ 50.0, 141.00 },
	{ 40.0, 143.00 },
	{ 50.0, 1.00 },
	{ 120.0, 158.00 },
	{ 25.0, 111.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 80.0, 150.00 },
	{ 45.0, 174.00 },
	{ 50.0, 1.00 },
	{ 60.0, 188.00 },
	{ 50.0, 118.00 },
	{ 80.0, 141.00 },
	{ 45.0, 186.00 },
	{ 50.0, 1.00 },
	{ 60.0, 158.00 },
	{ 50.0, 124.00 },
	{ 50.0, 1.00 },
	{ 20.0, 100.00 },
	{ 25.0, 65.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 90.0, 140.00 },
	{ 90.0, 158.00 },
	{ 45.0, 150.00 },
	{ 45.0, 141.00 },
	{ 50.0, 1.00 },
	{ 80.0, 216.00 },
	{ 60.0, 178.00 },
	{ 60.0, 164.00 },
	{ 50.0, 1.00 },
	{ 60.0, 109.00 },
	{ 70.0, 124.00 },
	{ 60.0, 141.00 },
	{ 50.0, 1.00 },
	{ 80.0, 216.00 },
	{ 80.0, 216.00 },
	{ 40.0, 174.00 },
	{ 80.0, 140.00 },
	{ 60.0, 180.00 },
	{ 65.0, 167.00 },
	{ 90.0, 108.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 130.0, 121.00 },
	{ 150.0, 143.00 },
	{ 60.0, 158.00 },
	{ 45.0, 158.00 },
	{ 50.0, 165.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 169.00 },
	{ 40.0, 190.00 },
	{ 60.0, 168.00 },
	{ 30.0, 131.00 },
	{ 60.0, 162.00 },
	{ 40.0, 159.00 },
	{ 45.0, 150.00 },
	{ 80.0, 178.00 },
	{ 55.0, 150.00 },
	{ 50.0, 61.00 },
	{ 30.0, 71.00 },
	{ 50.0, 111.00 },
	{ 50.0, 168.00 },
	{ 60.0, 170.00 },
	{ 60.0, 159.00 },
	{ 62.0, 174.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 20.0, 100.00 },
	{ 40.0, 150.00 },
	{ 60.0, 204.00 },
	{ 45.0, 165.00 },
	{ 60.0, 152.00 },
	{ 120.0, 149.00 },
	{ 80.0, 148.00 },
	{ 60.0, 150.00 },
	{ 55.0, 144.00 },
	{ 50.0, 1.00 },
	{ 60.0, 154.00 },
	{ 60.0, 146.00 },
	{ 55.0, 158.00 },
	{ 60.0, 122.00 },
	{ 50.0, 1.00 },
	{ 60.0, 145.00 },
	{ 45.0, 159.00 },
	{ 45.0, 111.00 },
	{ 60.0, 111.00 },
	{ 80.0, 157.00 },
	{ 60.0, 179.00 },
	{ 60.0, 170.00 },
	{ 60.0, 155.00 },
	{ 60.0, 179.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 60.0, 166.00 },
	{ 40.0, 161.00 },
	{ 50.0, 174.00 },
	{ 30.0, 147.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 10.0, 94.00 },
	{ 50.0, 61.00 },
	{ 80.0, 111.00 },
	{ 20.0, 61.00 },
	{ 45.0, 159.00 },
	{ 40.0, 159.00 },
	{ 50.0, 1.00 },
	{ 80.0, 131.00 },
	{ 80.0, 159.00 },
	{ 60.0, 154.00 },
	{ 35.0, 168.00 },
	{ 60.0, 137.00 },
	{ 15.0, 86.00 },
	{ 50.0, 1.00 },
	{ 60.0, 154.00 },
	{ 50.0, 158.00 },
	{ 50.0, 166.00 },
	{ 60.0, 109.00 },
	{ 65.0, 164.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 60.0, 177.00 },
	{ 60.0, 177.00 },
	{ 60.0, 177.00 },
	{ 90.0, 159.00 },
	{ 40.0, 152.00 },
	{ 30.0, 111.00 },
	{ 60.0, 170.00 },
	{ 60.0, 172.00 },
	{ 30.0, 148.00 },
	{ 40.0, 152.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 90.0, 108.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 }
};

new const Float:g_arrDrivingCheckpoints[][] = {
    {-2064.9561, -67.7125, 34.8247},
    {-2110.5261, -67.8857, 34.8247},
    {-2154.2473, -67.6854, 34.8231},
    {-2169.3850, -82.5202, 34.8302},
    {-2169.8767, -114.5743, 34.8188},
    {-2170.6482, -162.7804, 34.8249},
    {-2215.5796, -187.5162, 34.8745},
    {-2244.0376, -187.6771, 34.8235},
    {-2259.1860, -202.9163, 34.9007},
    {-2259.7864, -253.0544, 39.7875},
    {-2260.3638, -300.5378, 48.1640},
    {-2259.5361, -339.2552, 50.5190},
    {-2258.4385, -371.1333, 50.5193},
    {-2236.2454, -416.2657, 50.5155},
    {-2195.2356, -459.0606, 49.3517},
    {-2155.1711, -497.7458, 41.1217},
    {-2117.1301, -536.1792, 34.2394},
    {-2059.1565, -577.5410, 29.0998},
    {-1984.6453, -582.2720, 25.5633},
    {-1925.5862, -583.2345, 24.0926},
    {-1885.5591, -583.6432, 24.0940},
    {-1821.1207, -583.9514, 15.9855},
    {-1816.3672, -559.6774, 15.8619},
    {-1821.3180, -527.9517, 14.6263},
    {-1819.6934, -462.3056, 14.6151},
    {-1809.8923, -396.5690, 16.1884},
    {-1798.9331, -317.3351, 24.3122},
    {-1796.9186, -239.6917, 17.8804},
    {-1797.0546, -168.9667, 9.4126},
    {-1797.6467, -125.6053, 5.1712},
    {-1811.8171, -114.1203, 5.1504},
    {-1841.5179, -114.4944, 5.1483},
    {-1882.5660, -106.9792, 14.5634},
    {-1911.3077, -79.0253, 24.6949},
    {-1938.0209, -62.3110, 25.2069},
    {-1975.7996, -64.1764, 27.7167},
    {-2014.0769, -67.5033, 34.8182},
    {-2040.5736, -67.4500, 34.8250},
    {-2046.2883, -84.8129, 34.8103},
    {-2068.5259, -84.6942, 34.8201}
};

#define ErrorMsg(%0,%1) \
	SendClientMessageEx(%0, 0xFF0000FF, "[ SYSTEM ] {FFFFFF} "%1)

#define SyntaxMsg(%0,%1) \
	SendClientMessageEx(%0, COLOR_YELLOW, "[ SYSTEM ] {FFFFFF} "%1)

//inv
#include "inventory/inventory.inc"
#include "inventory/weapon.pwn"
//===================================//

//ระบบเดิมของสคริป
#include "system/s_fsettings.pwn"
#include "system/flag_war.pwn"
#include "system/SAMP-Market_Gachapon.pwn"
#include "system/antiweapon.pwn"
#include "system/boxing.pwn"
#include "system/callcar.pwn"
#include "system/pickcar.pwn"
#include "system/cargang.pwn"
#include "system/antifakekill.pwn"
#include "system/powncar.pwn"
//#include "system/shop.pwn"
#include "system/cocaine.pwn"
#include "system/scoreboard.pwn"
//#include "system/police_menu.pwn"
#include "system/header.inc"
#include "system/impl.inc"
#include "system/BANK.pwn"
#include "system/busk.pwn"
#include "system/dearship_nexter.pwn"
#include "system/UR_Market.pwn" 
//#include "system/MainGaragegaragecallcarv.pwn"
#include "system/s_cf.pwn"
//#include "system/playername.pwn"
//===================================//

//Faction
#include "Faction/case_police.pwn" 
#include "Faction/case_medic.pwn" 
#include "Faction/case_mechanic.pwn"  

//---->Mshop blackJob
#include "Newjob/blackJob/j_wire.pwn"
#include "Newjob/blackJob/j_poon.pwn"
//===================================//

//ms_system
#include "ms_system/ms_Cplayeronline.inc"
#include "ms_system/UR_LOCKER.pwn"
#include "ms_system/ms_speedo.inc"
#include "ms_system/ms_recar.inc"
#include "ms_system/ms_loadding.inc"
#include "ms_system/ms_notify.inc"
#include "ms_system/ms_menuHelp.inc"
//#include "ms_system/ms_airzone.inc"
#include "ms_system/ms_airdrop.inc" 
#include "ms_system/ms_marketprice.inc" 
#include "ms_system/ms_Mobileiphone.inc"
#include "ms_system/ms_crafting.inc" 
#include "ms_system/AFKHUD.inc" 
#include "ms_system/Sleep_Hp.inc" 
#include "ms_system/ny_bacarat.inc" 
#include "ms_system/prakad.pwn"
#include "ms_system/UR_HUDSTATUS.inc"
#include "ms_system/ms_market.inc"

#include "ms_system/ms_shopDonate_UR.inc"
#include "ms_system/UR_SkinShop.inc"
//#include "ms_system/s_mapicon.pwn"



#include "weapon-config/weapon-config.pwn"
//#include "weapon-config/tazerx.pwn"
//===================================//

//---->Mshop Job
/*#include "Newjob/j_honeybee.pwn"
#include "Newjob/j_orange.pwn"
#include "Newjob/j_rice.pwn"
#include "Newjob/j_squid.pwn"*/
#include "Newjob/j_mineral.pwn"
#include "Newjob/build.pwn"
#include "Newjob/pizza.pwn" 

/*#include "Newjob/new/j_banana.pwn"
#include "Newjob/new/j_lobster.pwn"
#include "Newjob/new/j_durian.pwn"
#include "Newjob/new/j_cactus.pwn"
#include "Newjob/new/j_lettuce.pwn"*/
#include "Newjob/new/j_fishing.pwn"
#include "Newjob/new/coal.pwn"
#include "Newjob/new/wood.pwn"
#include "Newjob/new/iron.pwn"

//---->Auto Job
#include "Newjob/autojob/KP_AUTOFARM.inc" 
#include "Newjob/autojob/auto_squid.pwn" 
#include "Newjob/autojob/auto_honeybee.pwn"
#include "Newjob/autojob/auto_orange.pwn"   
#include "Newjob/autojob/auto_rice.pwn"  
#include "Newjob/autojob/auto_durian.pwn"  
#include "Newjob/autojob/auto_lobster.pwn"  
#include "Newjob/autojob/auto_lettuce.pwn"  
#include "Newjob/autojob/auto_banana.pwn" 
#include "Newjob/autojob/auto_cactus.pwn"
//===================================//

//---->Discord_Log
#include "Discord_Log/Log_Server.pwn" 
#include "ms_system/s_tazer.inc"


//---->Gachapon
#include "gachapon/UR_GACHAPON_MONEY.inc"
#include "gachapon/UR_GACHAPON_BLACK.inc"
#include "gachapon/UR_GACHAPON_FASHION.inc"

main()
{
}
public OnGameModeInit()
{
	mysql_log(ERROR | WARNING);
	new MySQLOpt: option_id = mysql_init_options();

	mysql_set_option(option_id, AUTO_RECONNECT, true);

	g_SQL = mysql_connect(MYSQL_HOST, MYSQL_USER, MYSQL_PASSWORD, MYSQL_DATABASE, option_id);
	if (g_SQL == MYSQL_INVALID_HANDLE || mysql_errno(g_SQL) != 0)
	{
		print("[MySQL]: Connection failed. Server is shutting down.");
		SendRconCommand("exit");
		return 1;
	}

	print("[MySQL]: Connection is successful.");

	mysql_set_charset("tis620");


    Server_Load();
	mysql_tquery(g_SQL, "SELECT * FROM `factions`", "Faction_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `arrestpoints`", "Arrest_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `gps`", "GPS_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `atm`", "ATM_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `shops`", "Shop_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `pumps`", "Pump_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `garages`", "Garage_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `entrances`", "Entrance_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `vehicles` WHERE carOwnerID = 0", "Vehicle_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `houses`", "House_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `carshop`", "CARSHOP_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `safezonedata`", "LoadSafeZones");
    mysql_tquery(g_SQL, "SELECT * FROM `vehiclegang`", "Load_VehicleGang");
    mysql_tquery(g_SQL, "SELECT * FROM `callcar`", "Callcar_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `pickcar`", "Pickcar_Load", ""); 
	mysql_tquery(g_SQL, "SELECT * FROM `powncar`", "Powncar_Load", "");

	//map2
	CreateDynamicObject(3749, 75.01000, -1527.68994, 9.33000,   0.00000, 0.00000, -95.88000);
	CreateDynamicObject(3749, 73.49000, -1542.13000, 9.33000,   0.00000, 0.00000, -95.88000);
	CreateDynamicObject(3749, 34.69000, -1522.19995, 9.33000,   0.00000, 0.00000, -95.88000);
	CreateDynamicObject(3749, 33.31000, -1535.37000, 9.33000,   0.00000, 0.00000, -95.88000);
	CreateDynamicObject(3660, 63.50000, -1531.35999, 6.40000,   0.00000, 0.00000, -9.60000);
	CreateDynamicObject(3660, 63.16000, -1533.31995, 6.40000,   0.00000, 0.00000, -9.60000);
	CreateDynamicObject(3660, 62.95000, -1534.59998, 6.40000,   0.00000, 0.00000, -7.86000);
	CreateDynamicObject(3660, 44.23000, -1528.56995, 6.40000,   0.00000, 0.00000, -189.89999);
	CreateDynamicObject(3660, 43.78000, -1530.45996, 6.40000,   0.00000, 0.00000, -189.89999);
	CreateDynamicObject(3660, 43.43000, -1532.50000, 6.40000,   0.00000, 0.00000, -187.62000);
	CreateDynamicObject(3660, 43.58000, -1531.48999, 6.38000,   0.00000, 0.00000, -187.62000);
	CreateDynamicObject(3660, 44.02000, -1529.53003, 6.38000,   0.00000, 0.00000, -189.89999);
	CreateDynamicObject(3660, 63.45000, -1532.23999, 6.38000,   0.00000, 0.00000, -9.60000);
	CreateDynamicObject(3472, 69.12000, -1535.06006, 3.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 59.48000, -1532.80005, 3.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 50.56000, -1531.33997, 3.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 41.22000, -1530.03003, 3.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 76.60000, -1532.91003, 3.82000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 76.20000, -1537.44995, 3.82000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 74.97000, -1547.96997, 3.82000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 77.32000, -1522.32996, 3.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 68.91000, -1534.06006, 4.14000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 59.45000, -1532.87000, 4.14000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 50.54000, -1531.31995, 4.14000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 40.87000, -1529.72998, 4.14000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 72.72000, -1521.34998, 4.66000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 69.16000, -1521.05005, 4.66000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 67.57000, -1520.92004, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 64.59000, -1520.56006, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 63.61000, -1520.44995, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 60.45000, -1520.14001, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 58.45000, -1519.78003, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 55.25000, -1519.34998, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 54.40000, -1519.23999, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 51.25000, -1518.96997, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 49.05000, -1518.68005, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 46.03000, -1518.28003, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 45.04000, -1518.19995, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 41.96000, -1517.81995, 4.94000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 40.50000, -1517.34998, 4.68000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 36.46000, -1516.85999, 4.68000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 38.18000, -1543.04004, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 41.10000, -1543.55005, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 42.25000, -1543.64001, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 45.21000, -1543.98999, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 47.44000, -1544.21997, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 50.43000, -1544.68005, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 51.43000, -1544.75000, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 54.56000, -1545.15002, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 56.63000, -1545.34998, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 59.72000, -1545.79004, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 60.68000, -1545.91003, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 63.82000, -1546.19995, 4.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 65.31000, -1546.59998, 4.69000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 69.28000, -1546.85999, 4.69000,   0.00000, 0.00000, 0.00000);

	//อู่
	CreateDynamicObject(15225, 1044.29443, -898.16132, 41.74000,   0.00000, 1.00000, -176.00000);
	CreateDynamicObject(15226, 1046.43811, -894.41931, 54.88000,   90.00000, 7.00000, -2.00000);

	//แอดรอป
	CreateDynamicObject(15228, 1759.33337, -2543.38794, 10.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(15228, -1329.0131, -33.5408,    12.00000,   0.00000, 0.00000, 0.00000);

    //รพ
    CreateObject(15997, 1270.08142, -1337.81702, 20.00000,   0.00000, 0.00000, 0.00000);
    CreateObject(18981, 1173.35803, -1347.83606, 12.24900,   360.00000, 90.00000, 360.00000);
    CreateObject(18981, 1175.50415, -1372.03088, 12.24900,   360.00000, 90.00000, 360.00000);

	
	//warzone
	CreateObject(15107, 474.2189,-2094.6321,624.1250,   0.00000, 0.00000, 0.00000);



	new NPC06;
	NPC06 = CreateActor(5, 1653.2191,-1349.3755,17.4297,0.0908); //
    ApplyActorAnimation(NPC06, "ON_LOOKERS","wave_loop", 4.1, 1, 0, 0, 0, 0); ApplyActorAnimation(NPC06, "ON_LOOKERS","wave_loop", 4.1, 1, 0, 0, 0, 0);
    CreateDynamic3DTextLabel("{FF00FF}[ของขวัญเด็กใหม่]\n{FFFFFF}กด N เพื่อรับของขวัญ", COLOR_RED, 1653.2191,-1349.3755,17.4297+1.3, 50.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1, -1, 20.0);

	CreateDynamicPickup(2061, 23,2799.3206,-2456.4724,13.6308);
	CreateDynamic3DTextLabel("คราฟอาวุธ\n{FFFFFF} กด N", COLOR_PINK,2799.3206,-2456.4724,13.6308, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicPickup(1581, 23, 595.6122,-1250.7350,18.2970);
	CreateDynamic3DTextLabel("กรมขนส่ง:{FFFFFF} /drivingtest\nในการสอบใบขับขี่", COLOR_GREEN, 595.6122,-1250.7350,18.2970, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	//แต่งงาน
	CreateDynamicPickup(1314, 23, 1543.6841,-1352.9375,329.4747);
	CreateDynamic3DTextLabel("{FF00FF}[แต่งงาน]\n{FFFFFF}พิมพ์ '/แต่งงาน' เพื่อแต่งงาน", COLOR_GREEN, 1543.6841,-1352.9375,329.4747, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	PVPZone = CreateDynamicRectangle(1862.2203, -1450.5480, 1976.4160, -1350.7289, -1, -1, -1);

	SendRconCommand("hostname "SERVER_NAME" v"SERVER_VERSION"");
	SendRconCommand("gamemodetext "SERVER_MODE"");
	SendRconCommand("language "SERVER_LANGUAGE"");
	SendRconCommand("weburl "SERVER_WEBSITE"");

    SetWeather(globalWeather);
    UpdateTime();
    ManualVehicleEngineAndLights();
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);

	SetTimer("LuckyTimerLast2", 600, 1);
	SetTimer("LuckyTimerLast", 600, 1);

 
	//ตู้ปลา
	CreateDynamicObject(896, -598.58881, 163.69920, 19.99930,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(896, -606.26569, 157.04359, 21.03930,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(896, -600.59436, 161.05229, 26.75980,   0.00000, 0.00000, 69.00000);
	CreateDynamicObject(896, -600.02588, 178.69180, 19.99930,   0.00000, 0.00000, 149.00000);
	CreateDynamicObject(896, -603.38544, 188.40710, 24.78330,   0.00000, 0.00000, 149.00000);
	CreateDynamicObject(896, -596.68060, 173.51884, 24.78330,   0.00000, 0.00000, 149.00000);
	CreateDynamicObject(896, -624.38751, 164.76100, 25.30330,   0.00000, 0.00000, 149.00000);
	CreateDynamicObject(896, -615.16742, 156.92740, 26.65530,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(896, -629.84406, 176.89613, 25.30330,   0.00000, 0.00000, 149.00000);
	CreateDynamicObject(896, -641.71198, 186.60268, 25.30330,   0.00000, 0.00000, 149.00000);
	CreateDynamicObject(896, -651.28741, 192.34427, 25.30330,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(896, -610.53168, 201.66290, 27.07130,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(896, -618.99854, 210.61797, 27.07130,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(896, -628.83563, 221.07747, 27.07130,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(896, -638.98132, 229.40150, 26.34330,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(896, -650.94061, 230.38940, 23.22330,   0.00000, 0.00000, 258.00000);
	CreateDynamicObject(896, -660.24677, 194.04459, 25.30330,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(896, -669.90509, 197.74110, 24.67930,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(896, -664.08313, 225.49359, 23.84730,   0.00000, 0.00000, 258.00000);
	CreateDynamicObject(896, -673.05579, 215.53400, 23.84730,   0.00000, 0.00000, 258.00000);
	CreateDynamicObject(896, -677.97803, 204.37971, 23.84730,   0.00000, 0.00000, 185.00000);
	CreateDynamicObject(791, -593.84320, 201.56660, 7.81250,   3.14159, 0.00000, 1.32395);
	CreateDynamicObject(791, -584.61365, 177.85783, 7.81250,   3.14159, 0.00000, 1.32395);
	CreateDynamicObject(791, -590.74231, 149.45195, 7.81250,   3.00000, 0.00000, 156.00000);
	CreateDynamicObject(791, -624.08392, 142.39195, 7.81250,   3.00000, 0.00000, 156.00000);
	CreateDynamicObject(791, -643.78436, 159.93738, 7.81250,   3.00000, 0.00000, 156.00000);
	CreateDynamicObject(5706, -609.42865, 174.48816, 16.28770,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(13011, -621.79352, 181.76003, 16.83040,   0.00000, 0.00000, -48.00000);
	CreateDynamicObject(669, -613.31982, 190.86261, 17.31637,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, -616.95056, 187.42302, 16.69240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, -624.08673, 183.52109, 16.69240,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(791, -621.42383, 231.78018, 7.81250,   3.14159, 0.00000, 1.32395);
	CreateDynamicObject(791, -673.71973, 176.66158, 7.81250,   3.14159, 0.00000, 1.32395);
	CreateDynamicObject(791, -689.14136, 189.96326, 7.81250,   3.14159, 0.00000, 1.32395);
	CreateDynamicObject(3409, -1032.67188, -1636.39063, 75.33594,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(3285, -619.02753, 192.37007, 17.13940,   -12.00000, 0.00000, 40.00000);
	CreateDynamicObject(3409, -602.76428, 167.11490, 20.09630,   0.00000, 0.00000, -53.00000);
	CreateDynamicObject(3409, -605.85211, 173.28865, 20.10080,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(3409, -605.26367, 180.12199, 20.10140,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(3409, -608.92950, 177.08505, 20.10900,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(3403, -608.84247, 185.64775, 22.91790,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(3409, -611.76880, 174.26866, 20.10900,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(3409, -602.79480, 169.73317, 20.10900,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(3409, -598.68604, 172.44116, 20.10900,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(3409, -601.77356, 182.36414, 20.10900,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(637, 1140.76563, -1400.86267, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1118.22412, -1399.86523, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1118.25586, -1402.19739, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1118.23267, -1398.41028, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1140.77222, -1398.53064, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1140.80042, -1402.27600, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1139.26489, -1397.60022, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1136.80518, -1397.58447, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1134.22107, -1397.54651, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1131.71802, -1397.53027, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1129.21643, -1397.53418, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1126.67017, -1397.51294, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1124.42834, -1397.50818, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1122.02502, -1397.47864, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1119.94067, -1397.44080, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1139.86877, -1403.67944, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1136.56897, -1403.62085, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1134.06714, -1403.66467, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1131.49634, -1403.67285, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1129.07959, -1403.64343, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1126.86646, -1403.60498, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1124.42529, -1403.59058, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1122.18799, -1403.57947, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1119.16418, -1403.54724, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1137.98853, -1403.66113, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1119.69324, -1403.58276, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1597, 1147.29517, -1400.35608, 14.94060,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(1597, 1111.57385, -1400.25867, 14.94060,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(618, 1142.34595, -1400.99268, 12.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(618, 1117.08032, -1401.12061, 12.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3811, 1142.16504, -1400.87964, 12.80080,   -0.18000, -0.08000, -91.00000);
	CreateDynamicObject(3806, 1142.20178, -1400.03662, 12.80080,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(3806, 1117.02197, -1400.45959, 12.80080,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(3806, 1117.02197, -1400.45959, 12.80080,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(3811, 1116.98340, -1401.20605, 12.80080,   -0.18000, -0.08000, -91.00000);
	CreateDynamicObject(17951, 1135.52283, -1400.55469, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1139.09094, -1400.38391, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1132.02075, -1400.50415, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1128.49207, -1400.82922, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1124.99915, -1400.62292, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1121.80164, -1400.49280, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1120.27710, -1400.66467, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(2799, 1120.00085, -1401.93152, 13.03800,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(2799, 1119.81628, -1399.29004, 13.03800,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(1728, 1128.13928, -1402.84351, 12.56990,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1138.63342, -1403.70435, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1129.89771, -1403.64661, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1134.24451, -1403.65808, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1125.54785, -1403.63269, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1121.94556, -1403.69116, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1118.37158, -1399.46033, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(1649, 1138.65674, -1397.62183, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1140.94873, -1399.72620, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(1649, 1120.44287, -1403.66467, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1120.21814, -1397.58398, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1124.63049, -1397.55798, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1128.94263, -1397.65027, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1133.32788, -1397.61023, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1137.64197, -1397.61230, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1118.33557, -1401.46228, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(1649, 1140.80798, -1401.56201, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(17951, 1139.17773, -1400.69885, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1120.04834, -1400.59961, 16.14450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1123.63293, -1400.70142, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1123.63293, -1400.70142, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1127.19653, -1400.69836, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1130.71594, -1400.65247, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1130.71594, -1400.65247, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1133.83044, -1400.69519, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1137.32922, -1400.65039, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(1231, 1129.94482, -1403.06042, 12.67510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1140.76563, -1400.86267, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1118.22412, -1399.86523, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1118.25586, -1402.19739, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1118.23267, -1398.41028, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1140.77222, -1398.53064, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1140.80042, -1402.27600, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1139.26489, -1397.60022, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1136.80518, -1397.58447, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1134.22107, -1397.54651, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1131.71802, -1397.53027, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1129.21643, -1397.53418, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1126.67017, -1397.51294, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1124.42834, -1397.50818, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1122.02502, -1397.47864, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1119.94067, -1397.44080, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1139.86877, -1403.67944, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1136.56897, -1403.62085, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1134.06714, -1403.66467, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1131.49634, -1403.67285, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1129.07959, -1403.64343, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1126.86646, -1403.60498, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1124.42529, -1403.59058, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1122.18799, -1403.57947, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1119.16418, -1403.54724, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1137.98853, -1403.66113, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1119.69324, -1403.58276, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1597, 1147.29517, -1400.35608, 14.94060,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(1597, 1111.57385, -1400.25867, 14.94060,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(618, 1142.34595, -1400.99268, 12.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(618, 1117.08032, -1401.12061, 12.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3811, 1142.16504, -1400.87964, 12.80080,   -0.18000, -0.08000, -91.00000);
	CreateDynamicObject(3806, 1142.20178, -1400.03662, 12.80080,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(3806, 1117.02197, -1400.45959, 12.80080,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(3806, 1117.02197, -1400.45959, 12.80080,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(3811, 1116.98340, -1401.20605, 12.80080,   -0.18000, -0.08000, -91.00000);
	CreateDynamicObject(17951, 1135.52283, -1400.55469, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1139.09094, -1400.38391, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1132.02075, -1400.50415, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1128.49207, -1400.82922, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1124.99915, -1400.62292, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1121.80164, -1400.49280, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1120.27710, -1400.66467, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(2799, 1120.00085, -1401.93152, 13.03800,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(2799, 1119.81628, -1399.29004, 13.03800,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(1728, 1128.13928, -1402.84351, 12.56990,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1138.63342, -1403.70435, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1129.89771, -1403.64661, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1134.24451, -1403.65808, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1125.54785, -1403.63269, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1121.94556, -1403.69116, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1118.37158, -1399.46033, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(1649, 1138.65674, -1397.62183, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1140.94873, -1399.72620, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(1649, 1120.44287, -1403.66467, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1120.21814, -1397.58398, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1124.63049, -1397.55798, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1128.94263, -1397.65027, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1133.32788, -1397.61023, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1137.64197, -1397.61230, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1118.33557, -1401.46228, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(1649, 1140.80798, -1401.56201, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(17951, 1139.17773, -1400.69885, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1120.04834, -1400.59961, 16.14450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1123.63293, -1400.70142, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1123.63293, -1400.70142, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1127.19653, -1400.69836, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1130.71594, -1400.65247, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1130.71594, -1400.65247, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1133.83044, -1400.69519, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1137.32922, -1400.65039, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(1231, 1129.94482, -1403.06042, 12.67510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1140.76563, -1400.86267, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1118.22412, -1399.86523, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1118.25586, -1402.19739, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1118.23267, -1398.41028, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1140.77222, -1398.53064, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1140.80042, -1402.27600, 12.78540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(637, 1139.26489, -1397.60022, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1136.80518, -1397.58447, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1134.22107, -1397.54651, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1131.71802, -1397.53027, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1129.21643, -1397.53418, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1126.67017, -1397.51294, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1124.42834, -1397.50818, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1122.02502, -1397.47864, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1119.94067, -1397.44080, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1139.86877, -1403.67944, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1136.56897, -1403.62085, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1134.06714, -1403.66467, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1131.49634, -1403.67285, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1129.07959, -1403.64343, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1126.86646, -1403.60498, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1124.42529, -1403.59058, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1122.18799, -1403.57947, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1119.16418, -1403.54724, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1137.98853, -1403.66113, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(637, 1119.69324, -1403.58276, 12.73020,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1597, 1147.29517, -1400.35608, 14.94060,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(1597, 1111.57385, -1400.25867, 14.94060,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(618, 1142.34595, -1400.99268, 12.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(618, 1117.08032, -1401.12061, 12.63000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3811, 1142.16504, -1400.87964, 12.80080,   -0.18000, -0.08000, -91.00000);
	CreateDynamicObject(3806, 1142.20178, -1400.03662, 12.80080,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(3806, 1117.02197, -1400.45959, 12.80080,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(3806, 1117.02197, -1400.45959, 12.80080,   0.00000, 0.00000, -269.00000);
	CreateDynamicObject(3811, 1116.98340, -1401.20605, 12.80080,   -0.18000, -0.08000, -91.00000);
	CreateDynamicObject(17951, 1135.52283, -1400.55469, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1139.09094, -1400.38391, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1132.02075, -1400.50415, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1128.49207, -1400.82922, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1124.99915, -1400.62292, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1121.80164, -1400.49280, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1120.27710, -1400.66467, 12.51250,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(2799, 1120.00085, -1401.93152, 13.03800,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(2799, 1119.81628, -1399.29004, 13.03800,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(1728, 1128.13928, -1402.84351, 12.56990,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1649, 1138.63342, -1403.70435, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1129.89771, -1403.64661, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1134.22485, -1403.65442, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1125.48389, -1403.58081, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1121.94556, -1403.69116, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1118.37158, -1399.46033, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(1649, 1138.65674, -1397.62183, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1140.94873, -1399.72620, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(1649, 1120.44287, -1403.66467, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1120.21814, -1397.58398, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1124.63049, -1397.55798, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1128.94263, -1397.65027, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1133.32788, -1397.61023, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1137.64197, -1397.61230, 14.56310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1118.33557, -1401.46228, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(1649, 1140.80798, -1401.56201, 14.56310,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(17951, 1139.17773, -1400.69885, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1120.04834, -1400.59961, 16.14450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1123.63293, -1400.70142, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1123.63293, -1400.70142, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1127.19653, -1400.69836, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1130.71594, -1400.65247, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1130.71594, -1400.65247, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1133.83044, -1400.69519, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(17951, 1137.32922, -1400.65039, 16.15450,   0.28000, 90.18000, 0.00000);
	CreateDynamicObject(1231, 1129.94482, -1403.06042, 12.67510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19870, 1140.86780, -1398.90857, 14.48640,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(19870, 1118.13318, -1397.76880, 14.48640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19870, 1122.78699, -1397.87976, 14.48640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19870, 1127.42493, -1397.73901, 14.48640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19870, 1131.60315, -1403.50867, 14.48640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19870, 1136.28918, -1397.77271, 14.48640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19870, 1118.55920, -1397.43835, 14.48640,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(19870, 1132.03052, -1397.75146, 14.48640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19870, 1136.20825, -1403.61499, 14.48640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19870, 1127.01147, -1403.53003, 14.48640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19870, 1118.13049, -1403.59900, 14.48640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19870, 1122.30823, -1403.54883, 14.48640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19870, 1140.80396, -1397.68164, 14.48640,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(19870, 1118.49133, -1398.87305, 14.48640,   0.00000, 0.00000, -91.00000);
	//ฟรีรัน
	CreateDynamicObject(8417, 2793.38989, -1998.03003, 3014.17993,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(981, 2759.57007, -2016.40002, 3014.13989,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(981, 2730.08008, -2016.31006, 3014.13989,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(981, 2706.92993, -2016.31006, 3014.13989,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(981, 2691.37988, -2003.03003, 3014.13989,   0.00000, 0.00000, 280.00000);
	CreateDynamicObject(981, 2686.28003, -1975.75000, 3016.01001,   0.00000, 0.00000, 280.00000);
	CreateDynamicObject(981, 2678.60010, -1949.31995, 3016.01001,   0.00000, 0.00000, 280.00000);
	CreateDynamicObject(981, 2676.63989, -1922.67004, 3016.76001,   0.00000, 0.00000, 280.00000);
	CreateDynamicObject(981, 2661.27002, -1915.07996, 3017.87988,   0.00000, 0.00000, 30.00000);
	CreateDynamicObject(981, 2664.52002, -1913.10999, 3017.87988,   0.00000, 0.00000, 29.99000);
	CreateDynamicObject(981, 2641.31006, -1911.32996, 3017.87988,   0.00000, 0.00000, 309.98999);
	CreateDynamicObject(981, 2639.72998, -1891.59998, 3017.87988,   0.00000, 0.00000, 239.99001);
	CreateDynamicObject(981, 2659.09009, -1878.97998, 3017.87988,   0.00000, 0.00000, 189.99001);
	CreateDynamicObject(981, 2683.25000, -1884.17004, 3017.87988,   0.00000, 0.00000, 149.98000);
	CreateDynamicObject(981, 2708.83008, -1898.98999, 3019.34009,   0.00000, 0.00000, 149.98000);
	CreateDynamicObject(981, 2712.17993, -1900.79004, 3019.34009,   0.00000, 0.00000, 149.98000);
	CreateDynamicObject(981, 2736.03003, -1915.00000, 3020.84009,   0.00000, 0.00000, 137.98000);
	CreateDynamicObject(981, 2750.86011, -1928.70996, 3021.29004,   0.00000, 0.00000, 129.98000);
	CreateDynamicObject(981, 2772.04004, -1932.17004, 3022.59009,   0.00000, 0.00000, 209.97000);
	CreateDynamicObject(981, 2798.63989, -1928.23999, 3024.56006,   0.00000, 0.00000, 167.97000);
	CreateDynamicObject(981, 2812.87012, -1945.60999, 3026.13989,   0.00000, 0.00000, 95.97000);
	CreateDynamicObject(981, 2807.97998, -1971.89001, 3029.38989,   356.85001, 14.27000, 66.76000);
	CreateDynamicObject(17950, 2801.13989, -1988.05005, 3030.12012,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3573, 2768.73999, -2048.54004, 3014.62988,   0.00000, 0.00000, 356.00000);
	CreateDynamicObject(981, 2770.65991, -2030.43994, 3014.13989,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(3575, 2751.41992, -2050.29004, 3015.51001,   0.00000, 0.00000, 172.00000);
	CreateDynamicObject(3621, 2681.88989, -2044.03003, 3015.84009,   0.00000, 0.00000, 172.25000);
	CreateDynamicObject(5269, 2612.85010, -2034.68994, 3019.30005,   0.00000, 0.00000, 352.00000);
	CreateDynamicObject(7040, 2614.46997, -2020.93994, 3024.94995,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(981, 2770.54004, -2034.15002, 3014.13989,   0.00000, 0.00000, 87.99000);
	CreateDynamicObject(7025, 2620.62012, -2002.95996, 3024.88989,   0.00000, 0.00000, 262.00000);
	CreateDynamicObject(8883, 2624.30005, -1970.56995, 3028.33008,   0.00000, 0.00000, 346.00000);
	CreateDynamicObject(1384, 2644.75000, -1950.94995, 3027.09009,   0.00000, 0.00000, 284.00000);
	CreateDynamicObject(1391, 2722.96997, -1946.72998, 3025.04004,   88.00000, 180.00000, 250.00000);
	CreateDynamicObject(5126, 2764.80005, -1953.10999, 3028.12988,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(6928, 2788.95996, -1953.47998, 3002.54004,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11149, 2785.12012, -1986.34998, 3037.93994,   0.00000, 0.00000, 266.00000);
	CreateDynamicObject(16074, 2808.01001, -2014.55005, 3038.67993,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16076, 2819.62988, -2029.31995, 3040.59009,   0.00000, 0.00000, 242.00000);
	CreateDynamicObject(16078, 2840.18994, -2035.96997, 3042.67993,   0.00000, 0.00000, 26.00000);
	CreateDynamicObject(1638, 2855.26001, -2033.43005, 3040.95996,   0.00000, 0.00000, 92.00000);
	CreateDynamicObject(1638, 2855.07007, -2030.71997, 3040.95996,   0.00000, 0.00000, 92.00000);
	CreateDynamicObject(1638, 2853.55005, -2027.54004, 3040.95996,   0.00000, 0.00000, 104.00000);
	CreateDynamicObject(1638, 2851.64990, -2024.15002, 3040.95996,   0.00000, 0.00000, 104.00000);
	CreateDynamicObject(1638, 2848.35010, -2020.09998, 3040.95996,   0.00000, 0.00000, 104.00000);
	CreateDynamicObject(1638, 2844.78003, -2016.92004, 3040.95996,   0.00000, 0.00000, 104.00000);
	CreateDynamicObject(3458, 2831.69995, -2002.89001, 3030.38989,   0.00000, 0.00000, 298.00000);
	CreateDynamicObject(3417, 2814.90991, -1990.09998, 3030.33008,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1236, 2765.56006, -1951.03003, 3030.84009,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1236, 2765.56006, -1953.28003, 3030.84009,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1236, 2765.57007, -1955.56995, 3030.84009,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1236, 2765.57007, -1955.56995, 3031.90991,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1236, 2765.52002, -1951.07996, 3031.90991,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1236, 2765.60010, -1950.45996, 3032.95996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1236, 2765.54004, -1956.21997, 3032.95996,   0.00000, 0.00000, 270.00000);

	CreateMap();
	CreateVehicles();
	LimitPlayerMarkerRadius(20.0);
	StockAddMenuItem();

    SetTimerEx("RespawnAllVehicles", 60000*14, false, "d", 1);

	// --> ระบบแต่งรถ
	wTuning1[0] = TextDrawCreate(560.000000, 102.000000, "_");
	TextDrawBackgroundColor(wTuning1[0], 255);
	TextDrawFont(wTuning1[0], 1);
	TextDrawLetterSize(wTuning1[0], 0.709999, 1.599998);
	TextDrawColor(wTuning1[0], 852308735);
	TextDrawSetOutline(wTuning1[0], 0);
	TextDrawSetProportional(wTuning1[0], 1);
	TextDrawSetShadow(wTuning1[0], 1);
	TextDrawUseBox(wTuning1[0], 1);
	TextDrawBoxColor(wTuning1[0], 793726975);
	TextDrawTextSize(wTuning1[0], 72.000000, 20.000000);
	TextDrawSetSelectable(wTuning1[0], 0);

	wTuning1[1] = TextDrawCreate(560.000000, 120.000000, "_");
	TextDrawBackgroundColor(wTuning1[1], 255);
	TextDrawFont(wTuning1[1], 1);
	TextDrawLetterSize(wTuning1[1], 0.709999, 1.699998);
	TextDrawColor(wTuning1[1], -1);
	TextDrawSetOutline(wTuning1[1], 0);
	TextDrawSetProportional(wTuning1[1], 1);
	TextDrawSetShadow(wTuning1[1], 1);
	TextDrawUseBox(wTuning1[1], 1);
	TextDrawBoxColor(wTuning1[1], 150);
	TextDrawTextSize(wTuning1[1], 72.000000, 20.000000);
	TextDrawSetSelectable(wTuning1[1], 0);

	wTuning1[2] = TextDrawCreate(243.000000, 144.000000, "_");
	TextDrawBackgroundColor(wTuning1[2], 255);
	TextDrawFont(wTuning1[2], 1);
	TextDrawLetterSize(wTuning1[2], 0.709999, 21.299999);
	TextDrawColor(wTuning1[2], -1);
	TextDrawSetOutline(wTuning1[2], 0);
	TextDrawSetProportional(wTuning1[2], 1);
	TextDrawSetShadow(wTuning1[2], 1);
	TextDrawUseBox(wTuning1[2], 1);
	TextDrawBoxColor(wTuning1[2], 150);
	TextDrawTextSize(wTuning1[2], 72.000000, 19.000000);
	TextDrawSetSelectable(wTuning1[2], 0);

	wTuning1[3] = TextDrawCreate(271.000000, 105.000000, "Tuning Car");
	TextDrawBackgroundColor(wTuning1[3], 255);
	TextDrawFont(wTuning1[3], 2);
	TextDrawLetterSize(wTuning1[3], 0.300000, 1.000000);
	TextDrawColor(wTuning1[3], -1);
	TextDrawSetOutline(wTuning1[3], 0);
	TextDrawSetProportional(wTuning1[3], 1);
	TextDrawSetShadow(wTuning1[3], 0);
	TextDrawSetSelectable(wTuning1[3], 0);

	wTuning1[4] = TextDrawCreate(368.000000, 152.000000, "Welcome to Tuning Menu");
	TextDrawBackgroundColor(wTuning1[4], 255);
	TextDrawFont(wTuning1[4], 2);
	TextDrawLetterSize(wTuning1[4], 0.250000, 1.100000);
	TextDrawColor(wTuning1[4], -1);
	TextDrawSetOutline(wTuning1[4], 0);
	TextDrawSetProportional(wTuning1[4], 1);
	TextDrawSetShadow(wTuning1[4], 0);
	TextDrawSetSelectable(wTuning1[4], 0);

	wTuning1[5] = TextDrawCreate(560.000000, 144.000000, "_");
	TextDrawBackgroundColor(wTuning1[5], 255);
	TextDrawFont(wTuning1[5], 1);
	TextDrawLetterSize(wTuning1[5], 0.709999, 2.900000);
	TextDrawColor(wTuning1[5], -1);
	TextDrawSetOutline(wTuning1[5], 0);
	TextDrawSetProportional(wTuning1[5], 1);
	TextDrawSetShadow(wTuning1[5], 1);
	TextDrawUseBox(wTuning1[5], 1);
	TextDrawBoxColor(wTuning1[5], 793726975);
	TextDrawTextSize(wTuning1[5], 247.000000, 19.000000);
	TextDrawSetSelectable(wTuning1[5], 0);

	wTuning1[6] = TextDrawCreate(538.000000, 105.000000, "X");
	TextDrawBackgroundColor(wTuning1[6], 255);
	TextDrawFont(wTuning1[6], 1);
	TextDrawLetterSize(wTuning1[6], 0.500000, 1.000000);
	TextDrawColor(wTuning1[6], 255);
	TextDrawSetOutline(wTuning1[6], 0);
	TextDrawSetProportional(wTuning1[6], 1);
	TextDrawSetShadow(wTuning1[6], 0);
	TextDrawUseBox(wTuning1[6], 1);
	TextDrawBoxColor(wTuning1[6], 0);
	TextDrawTextSize(wTuning1[6], 550.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[6], 1);

	wTuning1[7] = TextDrawCreate(88.000000, 123.000000, "Wheels");
	TextDrawBackgroundColor(wTuning1[7], 255);
	TextDrawFont(wTuning1[7], 2);
	TextDrawLetterSize(wTuning1[7], 0.300000, 1.000000);
	TextDrawColor(wTuning1[7], -1);
	TextDrawSetOutline(wTuning1[7], 0);
	TextDrawSetProportional(wTuning1[7], 1);
	TextDrawSetShadow(wTuning1[7], 0);
	TextDrawUseBox(wTuning1[7], 1);
	TextDrawBoxColor(wTuning1[7], 0);
	TextDrawTextSize(wTuning1[7], 137.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[7], 0);

	wTuning1[8] = TextDrawCreate(150.000000, 123.000000, "Color");
	TextDrawBackgroundColor(wTuning1[8], 255);
	TextDrawFont(wTuning1[8], 2);
	TextDrawLetterSize(wTuning1[8], 0.300000, 1.000000);
	TextDrawColor(wTuning1[8], -1);
	TextDrawSetOutline(wTuning1[8], 0);
	TextDrawSetProportional(wTuning1[8], 1);
	TextDrawSetShadow(wTuning1[8], 0);
	TextDrawUseBox(wTuning1[8], 1);
	TextDrawBoxColor(wTuning1[8], 0);
	TextDrawTextSize(wTuning1[8], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[8], 0);

	wTuning1[9] = TextDrawCreate(204.000000, 123.000000, "paintjobs");
	TextDrawBackgroundColor(wTuning1[9], 255);
	TextDrawFont(wTuning1[9], 2);
	TextDrawLetterSize(wTuning1[9], 0.300000, 1.000000);
	TextDrawColor(wTuning1[9], -1);
	TextDrawSetOutline(wTuning1[9], 0);
	TextDrawSetProportional(wTuning1[9], 1);
	TextDrawSetShadow(wTuning1[9], 0);
	TextDrawUseBox(wTuning1[9], 1);
	TextDrawBoxColor(wTuning1[9], 0);
	TextDrawTextSize(wTuning1[9], 274.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[9], 0);

	wTuning1[10] = TextDrawCreate(284.000000, 123.000000, "nitro");
	TextDrawBackgroundColor(wTuning1[10], 255);
	TextDrawFont(wTuning1[10], 2);
	TextDrawLetterSize(wTuning1[10], 0.300000, 1.000000);
	TextDrawColor(wTuning1[10], -1);
	TextDrawSetOutline(wTuning1[10], 0);
	TextDrawSetProportional(wTuning1[10], 1);
	TextDrawSetShadow(wTuning1[10], 0);
	TextDrawUseBox(wTuning1[10], 1);
	TextDrawBoxColor(wTuning1[10], 0);
	TextDrawTextSize(wTuning1[10], 320.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[10], 0);

	wTuning1[11] = TextDrawCreate(334.000000, 123.000000, "hydraulics");
	TextDrawBackgroundColor(wTuning1[11], 255);
	TextDrawFont(wTuning1[11], 2);
	TextDrawLetterSize(wTuning1[11], 0.300000, 1.000000);
	TextDrawColor(wTuning1[11], -1);
	TextDrawSetOutline(wTuning1[11], 0);
	TextDrawSetProportional(wTuning1[11], 1);
	TextDrawSetShadow(wTuning1[11], 0);
	TextDrawUseBox(wTuning1[11], 1);
	TextDrawBoxColor(wTuning1[11], 0);
	TextDrawTextSize(wTuning1[11], 411.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[11], 0);

	wTuning1[12] = TextDrawCreate(424.000000, 123.000000, "neon");
	TextDrawBackgroundColor(wTuning1[12], 255);
	TextDrawFont(wTuning1[12], 2);
	TextDrawLetterSize(wTuning1[12], 0.300000, 1.000000);
	TextDrawColor(wTuning1[12], -1);
	TextDrawSetOutline(wTuning1[12], 0);
	TextDrawSetProportional(wTuning1[12], 1);
	TextDrawSetShadow(wTuning1[12], 0);
	TextDrawUseBox(wTuning1[12], 1);
	TextDrawBoxColor(wTuning1[12], 0);
	TextDrawTextSize(wTuning1[12], 457.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[12], 0);

	wTuning1[13] = TextDrawCreate(466.000000, 123.000000, "autotuning");
	TextDrawBackgroundColor(wTuning1[13], 255);
	TextDrawFont(wTuning1[13], 2);
	TextDrawLetterSize(wTuning1[13], 0.300000, 1.000000);
	TextDrawColor(wTuning1[13], -1);
	TextDrawSetOutline(wTuning1[13], 0);
	TextDrawSetProportional(wTuning1[13], 1);
	TextDrawSetShadow(wTuning1[13], 0);
	TextDrawUseBox(wTuning1[13], 1);
	TextDrawBoxColor(wTuning1[13], 0);
	TextDrawTextSize(wTuning1[13], 542.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[13], 0);

	wTuning1[14] = TextDrawCreate(88.000000, 149.000000, "Black___________________");
	TextDrawBackgroundColor(wTuning1[14], 255);
	TextDrawFont(wTuning1[14], 2);
	TextDrawLetterSize(wTuning1[14], 0.300000, 1.000000);
	TextDrawColor(wTuning1[14], -1);
	TextDrawSetOutline(wTuning1[14], 0);
	TextDrawSetProportional(wTuning1[14], 1);
	TextDrawSetShadow(wTuning1[14], 0);
	TextDrawUseBox(wTuning1[14], 1);
	TextDrawBoxColor(wTuning1[14], 0);
	TextDrawTextSize(wTuning1[14], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[14], 0);

	wTuning1[15] = TextDrawCreate(88.000000, 168.000000, "White____________________");
	TextDrawBackgroundColor(wTuning1[15], 255);
	TextDrawFont(wTuning1[15], 2);
	TextDrawLetterSize(wTuning1[15], 0.300000, 1.000000);
	TextDrawColor(wTuning1[15], -1);
	TextDrawSetOutline(wTuning1[15], 0);
	TextDrawSetProportional(wTuning1[15], 1);
	TextDrawSetShadow(wTuning1[15], 0);
	TextDrawUseBox(wTuning1[15], 1);
	TextDrawBoxColor(wTuning1[15], 0);
	TextDrawTextSize(wTuning1[15], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[15], 0);

	wTuning1[16] = TextDrawCreate(88.000000, 190.000000, "Green___________________");
	TextDrawBackgroundColor(wTuning1[16], 255);
	TextDrawFont(wTuning1[16], 2);
	TextDrawLetterSize(wTuning1[16], 0.300000, 1.000000);
	TextDrawColor(wTuning1[16], -1);
	TextDrawSetOutline(wTuning1[16], 0);
	TextDrawSetProportional(wTuning1[16], 1);
	TextDrawSetShadow(wTuning1[16], 0);
	TextDrawUseBox(wTuning1[16], 1);
	TextDrawBoxColor(wTuning1[16], 0);
	TextDrawTextSize(wTuning1[16], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[16], 0);

	wTuning1[17] = TextDrawCreate(88.000000, 213.000000, "Cyan_____________________");
	TextDrawBackgroundColor(wTuning1[17], 255);
	TextDrawFont(wTuning1[17], 2);
	TextDrawLetterSize(wTuning1[17], 0.300000, 1.000000);
	TextDrawColor(wTuning1[17], -1);
	TextDrawSetOutline(wTuning1[17], 0);
	TextDrawSetProportional(wTuning1[17], 1);
	TextDrawSetShadow(wTuning1[17], 0);
	TextDrawUseBox(wTuning1[17], 1);
	TextDrawBoxColor(wTuning1[17], 0);
	TextDrawTextSize(wTuning1[17], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[17], 0);

	wTuning1[18] = TextDrawCreate(88.000000, 233.000000, "Blue_____________________");
	TextDrawBackgroundColor(wTuning1[18], 255);
	TextDrawFont(wTuning1[18], 2);
	TextDrawLetterSize(wTuning1[18], 0.300000, 1.000000);
	TextDrawColor(wTuning1[18], -1);
	TextDrawSetOutline(wTuning1[18], 0);
	TextDrawSetProportional(wTuning1[18], 1);
	TextDrawSetShadow(wTuning1[18], 0);
	TextDrawUseBox(wTuning1[18], 1);
	TextDrawBoxColor(wTuning1[18], 0);
	TextDrawTextSize(wTuning1[18], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[18], 0);

	wTuning1[19] = TextDrawCreate(87.000000, 254.000000, "Yellow________________");
	TextDrawBackgroundColor(wTuning1[19], 255);
	TextDrawFont(wTuning1[19], 2);
	TextDrawLetterSize(wTuning1[19], 0.300000, 1.000000);
	TextDrawColor(wTuning1[19], -1);
	TextDrawSetOutline(wTuning1[19], 0);
	TextDrawSetProportional(wTuning1[19], 1);
	TextDrawSetShadow(wTuning1[19], 0);
	TextDrawUseBox(wTuning1[19], 1);
	TextDrawBoxColor(wTuning1[19], 0);
	TextDrawTextSize(wTuning1[19], 180.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[19], 0);

	wTuning1[20] = TextDrawCreate(87.000000, 275.000000, "gray_____________________");
	TextDrawBackgroundColor(wTuning1[20], 255);
	TextDrawFont(wTuning1[20], 2);
	TextDrawLetterSize(wTuning1[20], 0.300000, 1.000000);
	TextDrawColor(wTuning1[20], -1);
	TextDrawSetOutline(wTuning1[20], 0);
	TextDrawSetProportional(wTuning1[20], 1);
	TextDrawSetShadow(wTuning1[20], 0);
	TextDrawUseBox(wTuning1[20], 1);
	TextDrawBoxColor(wTuning1[20], 0);
	TextDrawTextSize(wTuning1[20], 229.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[20], 0);

	wTuning1[21] = TextDrawCreate(87.000000, 293.000000, "Pink_____________________");
	TextDrawBackgroundColor(wTuning1[21], 255);
	TextDrawFont(wTuning1[21], 2);
	TextDrawLetterSize(wTuning1[21], 0.300000, 1.000000);
	TextDrawColor(wTuning1[21], -1);
	TextDrawSetOutline(wTuning1[21], 0);
	TextDrawSetProportional(wTuning1[21], 1);
	TextDrawSetShadow(wTuning1[21], 0);
	TextDrawUseBox(wTuning1[21], 1);
	TextDrawBoxColor(wTuning1[21], 0);
	TextDrawTextSize(wTuning1[21], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[21], 0);

	wTuning1[22] = TextDrawCreate(87.000000, 312.000000, "Orange________________");
	TextDrawBackgroundColor(wTuning1[22], 255);
	TextDrawFont(wTuning1[22], 2);
	TextDrawLetterSize(wTuning1[22], 0.300000, 1.000000);
	TextDrawColor(wTuning1[22], -1);
	TextDrawSetOutline(wTuning1[22], 0);
	TextDrawSetProportional(wTuning1[22], 1);
	TextDrawSetShadow(wTuning1[22], 0);
	TextDrawUseBox(wTuning1[22], 1);
	TextDrawBoxColor(wTuning1[22], 0);
	TextDrawTextSize(wTuning1[22], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[22], 0);

	wTuning2[0] = TextDrawCreate(88.000000, 149.000000, "shadow________________");
	TextDrawBackgroundColor(wTuning2[0], 255);
	TextDrawFont(wTuning2[0], 2);
	TextDrawLetterSize(wTuning2[0], 0.300000, 1.000000);
	TextDrawColor(wTuning2[0], -1);
	TextDrawSetOutline(wTuning2[0], 0);
	TextDrawSetProportional(wTuning2[0], 1);
	TextDrawSetShadow(wTuning2[0], 0);
	TextDrawUseBox(wTuning2[0], 1);
	TextDrawBoxColor(wTuning2[0], 0);
	TextDrawTextSize(wTuning2[0], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[0], 0);

	wTuning2[1] = TextDrawCreate(88.000000, 168.000000, "mega_____________________");
	TextDrawBackgroundColor(wTuning2[1], 255);
	TextDrawFont(wTuning2[1], 2);
	TextDrawLetterSize(wTuning2[1], 0.300000, 1.000000);
	TextDrawColor(wTuning2[1], -1);
	TextDrawSetOutline(wTuning2[1], 0);
	TextDrawSetProportional(wTuning2[1], 1);
	TextDrawSetShadow(wTuning2[1], 0);
	TextDrawUseBox(wTuning2[1], 1);
	TextDrawBoxColor(wTuning2[1], 0);
	TextDrawTextSize(wTuning2[1], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[1], 0);

	wTuning2[2] = TextDrawCreate(88.000000, 190.000000, "rimshine_____________");
	TextDrawBackgroundColor(wTuning2[2], 255);
	TextDrawFont(wTuning2[2], 2);
	TextDrawLetterSize(wTuning2[2], 0.300000, 1.000000);
	TextDrawColor(wTuning2[2], -1);
	TextDrawSetOutline(wTuning2[2], 0);
	TextDrawSetProportional(wTuning2[2], 1);
	TextDrawSetShadow(wTuning2[2], 0);
	TextDrawUseBox(wTuning2[2], 1);
	TextDrawBoxColor(wTuning2[2], 0);
	TextDrawTextSize(wTuning2[2], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[2], 0);

	wTuning2[3] = TextDrawCreate(88.000000, 213.000000, "Wires___________________");
	TextDrawBackgroundColor(wTuning2[3], 255);
	TextDrawFont(wTuning2[3], 2);
	TextDrawLetterSize(wTuning2[3], 0.300000, 1.000000);
	TextDrawColor(wTuning2[3], -1);
	TextDrawSetOutline(wTuning2[3], 0);
	TextDrawSetProportional(wTuning2[3], 1);
	TextDrawSetShadow(wTuning2[3], 0);
	TextDrawUseBox(wTuning2[3], 1);
	TextDrawBoxColor(wTuning2[3], 0);
	TextDrawTextSize(wTuning2[3], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[3], 0);

	wTuning2[4] = TextDrawCreate(88.000000, 233.000000, "classic________________");
	TextDrawBackgroundColor(wTuning2[4], 255);
	TextDrawFont(wTuning2[4], 2);
	TextDrawLetterSize(wTuning2[4], 0.300000, 1.000000);
	TextDrawColor(wTuning2[4], -1);
	TextDrawSetOutline(wTuning2[4], 0);
	TextDrawSetProportional(wTuning2[4], 1);
	TextDrawSetShadow(wTuning2[4], 0);
	TextDrawUseBox(wTuning2[4], 1);
	TextDrawBoxColor(wTuning2[4], 0);
	TextDrawTextSize(wTuning2[4], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[4], 0);

	wTuning2[5] = TextDrawCreate(87.000000, 254.000000, "twist____________________");
	TextDrawBackgroundColor(wTuning2[5], 255);
	TextDrawFont(wTuning2[5], 2);
	TextDrawLetterSize(wTuning2[5], 0.300000, 1.000000);
	TextDrawColor(wTuning2[5], -1);
	TextDrawSetOutline(wTuning2[5], 0);
	TextDrawSetProportional(wTuning2[5], 1);
	TextDrawSetShadow(wTuning2[5], 0);
	TextDrawUseBox(wTuning2[5], 1);
	TextDrawBoxColor(wTuning2[5], 0);
	TextDrawTextSize(wTuning2[5], 180.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[5], 0);

	wTuning2[6] = TextDrawCreate(87.000000, 275.000000, "cutter_________________");
	TextDrawBackgroundColor(wTuning2[6], 255);
	TextDrawFont(wTuning2[6], 2);
	TextDrawLetterSize(wTuning2[6], 0.300000, 1.000000);
	TextDrawColor(wTuning2[6], -1);
	TextDrawSetOutline(wTuning2[6], 0);
	TextDrawSetProportional(wTuning2[6], 1);
	TextDrawSetShadow(wTuning2[6], 0);
	TextDrawUseBox(wTuning2[6], 1);
	TextDrawBoxColor(wTuning2[6], 0);
	TextDrawTextSize(wTuning2[6], 180.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[6], 0);

	wTuning2[7] = TextDrawCreate(87.000000, 293.000000, "Dollar_________________");
	TextDrawBackgroundColor(wTuning2[7], 255);
	TextDrawFont(wTuning2[7], 2);
	TextDrawLetterSize(wTuning2[7], 0.300000, 1.000000);
	TextDrawColor(wTuning2[7], -1);
	TextDrawSetOutline(wTuning2[7], 0);
	TextDrawSetProportional(wTuning2[7], 1);
	TextDrawSetShadow(wTuning2[7], 0);
	TextDrawUseBox(wTuning2[7], 1);
	TextDrawBoxColor(wTuning2[7], 0);
	TextDrawTextSize(wTuning2[7], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[7], 0);

	wTuning2[8] = TextDrawCreate(87.000000, 312.000000, "Atomic__________________");
	TextDrawBackgroundColor(wTuning2[8], 255);
	TextDrawFont(wTuning2[8], 2);
	TextDrawLetterSize(wTuning2[8], 0.300000, 1.000000);
	TextDrawColor(wTuning2[8], -1);
	TextDrawSetOutline(wTuning2[8], 0);
	TextDrawSetProportional(wTuning2[8], 1);
	TextDrawSetShadow(wTuning2[8], 0);
	TextDrawUseBox(wTuning2[8], 1);
	TextDrawBoxColor(wTuning2[8], 0);
	TextDrawTextSize(wTuning2[8], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[8], 0);

	wTuning3[0] = TextDrawCreate(88.000000, 149.000000, "Blue");
	TextDrawBackgroundColor(wTuning3[0], 255);
	TextDrawFont(wTuning3[0], 2);
	TextDrawLetterSize(wTuning3[0], 0.300000, 1.000000);
	TextDrawColor(wTuning3[0], -1);
	TextDrawSetOutline(wTuning3[0], 0);
	TextDrawSetProportional(wTuning3[0], 1);
	TextDrawSetShadow(wTuning3[0], 0);
	TextDrawUseBox(wTuning3[0], 1);
	TextDrawBoxColor(wTuning3[0], 0);
	TextDrawTextSize(wTuning3[0], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[0], 0);

	wTuning3[1] = TextDrawCreate(88.000000, 168.000000, "Yellow");
	TextDrawBackgroundColor(wTuning3[1], 255);
	TextDrawFont(wTuning3[1], 2);
	TextDrawLetterSize(wTuning3[1], 0.300000, 1.000000);
	TextDrawColor(wTuning3[1], -1);
	TextDrawSetOutline(wTuning3[1], 0);
	TextDrawSetProportional(wTuning3[1], 1);
	TextDrawSetShadow(wTuning3[1], 0);
	TextDrawUseBox(wTuning3[1], 1);
	TextDrawBoxColor(wTuning3[1], 0);
	TextDrawTextSize(wTuning3[1], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[1], 0);

	wTuning3[2] = TextDrawCreate(88.000000, 190.000000, "White");
	TextDrawBackgroundColor(wTuning3[2], 255);
	TextDrawFont(wTuning3[2], 2);
	TextDrawLetterSize(wTuning3[2], 0.300000, 1.000000);
	TextDrawColor(wTuning3[2], -1);
	TextDrawSetOutline(wTuning3[2], 0);
	TextDrawSetProportional(wTuning3[2], 1);
	TextDrawSetShadow(wTuning3[2], 0);
	TextDrawUseBox(wTuning3[2], 1);
	TextDrawBoxColor(wTuning3[2], 0);
	TextDrawTextSize(wTuning3[2], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[2], 0);

	wTuning3[3] = TextDrawCreate(88.000000, 213.000000, "Pink");
	TextDrawBackgroundColor(wTuning3[3], 255);
	TextDrawFont(wTuning3[3], 2);
	TextDrawLetterSize(wTuning3[3], 0.300000, 1.000000);
	TextDrawColor(wTuning3[3], -1);
	TextDrawSetOutline(wTuning3[3], 0);
	TextDrawSetProportional(wTuning3[3], 1);
	TextDrawSetShadow(wTuning3[3], 0);
	TextDrawUseBox(wTuning3[3], 1);
	TextDrawBoxColor(wTuning3[3], 0);
	TextDrawTextSize(wTuning3[3], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[3], 0);

	wTuning3[4] = TextDrawCreate(88.000000, 233.000000, "green");
	TextDrawBackgroundColor(wTuning3[4], 255);
	TextDrawFont(wTuning3[4], 2);
	TextDrawLetterSize(wTuning3[4], 0.300000, 1.000000);
	TextDrawColor(wTuning3[4], -1);
	TextDrawSetOutline(wTuning3[4], 0);
	TextDrawSetProportional(wTuning3[4], 1);
	TextDrawSetShadow(wTuning3[4], 0);
	TextDrawUseBox(wTuning3[4], 1);
	TextDrawBoxColor(wTuning3[4], 0);
	TextDrawTextSize(wTuning3[4], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[4], 0);

	wTuning3[5] = TextDrawCreate(88.000000, 252.000000, "remove_neon");
	TextDrawBackgroundColor(wTuning3[5], 255);
	TextDrawFont(wTuning3[5], 2);
	TextDrawLetterSize(wTuning3[5], 0.300000, 1.000000);
	TextDrawColor(wTuning3[5], -1);
	TextDrawSetOutline(wTuning3[5], 0);
	TextDrawSetProportional(wTuning3[5], 1);
	TextDrawSetShadow(wTuning3[5], 0);
	TextDrawUseBox(wTuning3[5], 1);
	TextDrawBoxColor(wTuning3[5], 0);
	TextDrawTextSize(wTuning3[5], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[5], 0);

	wTuning4[0] = TextDrawCreate(88.000000, 149.000000, "PAINTJOB_1");
	TextDrawBackgroundColor(wTuning4[0], 255);
	TextDrawFont(wTuning4[0], 2);
	TextDrawLetterSize(wTuning4[0], 0.300000, 1.000000);
	TextDrawColor(wTuning4[0], -1);
	TextDrawSetOutline(wTuning4[0], 0);
	TextDrawSetProportional(wTuning4[0], 1);
	TextDrawSetShadow(wTuning4[0], 0);
	TextDrawUseBox(wTuning4[0], 1);
	TextDrawBoxColor(wTuning4[0], 0);
	TextDrawTextSize(wTuning4[0], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning4[0], 0);

	wTuning4[1] = TextDrawCreate(88.000000, 168.000000, "PaintJob_2");
	TextDrawBackgroundColor(wTuning4[1], 255);
	TextDrawFont(wTuning4[1], 2);
	TextDrawLetterSize(wTuning4[1], 0.300000, 1.000000);
	TextDrawColor(wTuning4[1], -1);
	TextDrawSetOutline(wTuning4[1], 0);
	TextDrawSetProportional(wTuning4[1], 1);
	TextDrawSetShadow(wTuning4[1], 0);
	TextDrawUseBox(wTuning4[1], 1);
	TextDrawBoxColor(wTuning4[1], 0);
	TextDrawTextSize(wTuning4[1], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning4[1], 0);

	wTuning4[2] = TextDrawCreate(88.000000, 190.000000, "PaintJob_3");
	TextDrawBackgroundColor(wTuning4[2], 255);
	TextDrawFont(wTuning4[2], 2);
	TextDrawLetterSize(wTuning4[2], 0.300000, 1.000000);
	TextDrawColor(wTuning4[2], -1);
	TextDrawSetOutline(wTuning4[2], 0);
	TextDrawSetProportional(wTuning4[2], 1);
	TextDrawSetShadow(wTuning4[2], 0);
	TextDrawUseBox(wTuning4[2], 1);
	TextDrawBoxColor(wTuning4[2], 0);
	TextDrawTextSize(wTuning4[2], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning4[2], 0);

	wTuning5[0] = TextDrawCreate(88.000000, 149.000000, "Nitro 2X");
	TextDrawBackgroundColor(wTuning5[0], 255);
	TextDrawFont(wTuning5[0], 2);
	TextDrawLetterSize(wTuning5[0], 0.300000, 1.000000);
	TextDrawColor(wTuning5[0], -1);
	TextDrawSetOutline(wTuning5[0], 0);
	TextDrawSetProportional(wTuning5[0], 1);
	TextDrawSetShadow(wTuning5[0], 0);
	TextDrawUseBox(wTuning5[0], 1);
	TextDrawBoxColor(wTuning5[0], 0);
	TextDrawTextSize(wTuning5[0], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning5[0], 0);

	wTuning5[1] = TextDrawCreate(88.000000, 169.000000, "NITRo 5x");
	TextDrawBackgroundColor(wTuning5[1], 255);
	TextDrawFont(wTuning5[1], 2);
	TextDrawLetterSize(wTuning5[1], 0.300000, 1.000000);
	TextDrawColor(wTuning5[1], -1);
	TextDrawSetOutline(wTuning5[1], 0);
	TextDrawSetProportional(wTuning5[1], 1);
	TextDrawSetShadow(wTuning5[1], 0);
	TextDrawUseBox(wTuning5[1], 1);
	TextDrawBoxColor(wTuning5[1], 0);
	TextDrawTextSize(wTuning5[1], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning5[1], 0);

	wTuning5[2] = TextDrawCreate(88.000000, 190.000000, "nitro 10x");
	TextDrawBackgroundColor(wTuning5[2], 255);
	TextDrawFont(wTuning5[2], 2);
	TextDrawLetterSize(wTuning5[2], 0.300000, 1.000000);
	TextDrawColor(wTuning5[2], -1);
	TextDrawSetOutline(wTuning5[2], 0);
	TextDrawSetProportional(wTuning5[2], 1);
	TextDrawSetShadow(wTuning5[2], 0);
	TextDrawUseBox(wTuning5[2], 1);
	TextDrawBoxColor(wTuning5[2], 0);
	TextDrawTextSize(wTuning5[2], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning5[2], 0);

	for(new i = 5; i < sizeof(wTuning1); i++) { TextDrawSetSelectable(Text:wTuning1[i], true); }
	for(new i = 0; i < sizeof(wTuning2); i++) { TextDrawSetSelectable(Text:wTuning2[i], true); }
	for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawSetSelectable(Text:wTuning3[i], true); }
	for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawSetSelectable(Text:wTuning4[i], true); }
	for(new i = 0; i < sizeof(wTuning5); i++) { TextDrawSetSelectable(Text:wTuning5[i], true); }

	return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if(areaid == PVPZone)
	{
	    playerData[playerid][pPVP] = 0;
	}
	return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	if(areaid == PVPZone)
	{
        playerData[playerid][pPVP] = 0;
	}
	return 1;
}
public OnGameModeExit()
{
	mysql_close(g_SQL);
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	//gacha
	if(playertextid == Ms_G_MONEY[playerid][1] && GachaponOn[playerid] && !GachaponSpinning[playerid])
    {
        if(Inventory_Count(playerid, "GACHAPON-MONEY") < 1)
            return SendClientMessageEx(playerid, 0xFF0000FF,"กาชาคุณไม่มีแล้ว");
        GachaponSpinning[playerid] = true;
        GachaponSpinCount[playerid] = 0;
        Inventory_Remove(playerid, "GACHAPON-MONEY", 1);
        new desiredItemIndex = GetWeightedRandomMoney();
        new k = random(4);
        new finalIndex = (desiredItemIndex - 3 + 12 * k) % 12;
        GachaponMaxSpin[playerid] = finalIndex + 12 * k;
        if(GachaponMaxSpin[playerid] < 10 || GachaponMaxSpin[playerid] > 30)
        {
            GachaponMaxSpin[playerid] = random(21) + 10;
        }
        PlayerTextDrawHide(playerid, Ms_G_MONEY[playerid][15]);
        GachaponSpinTimer[playerid] = SetTimerEx("GachaponSpin", 250, true, "i", playerid);
        
        UpdateGachaponDisplay(playerid);
    }
    else if(playertextid == Ms_G_MONEY[playerid][2] && GachaponOn[playerid])
    {
        if(GachaponSpinning[playerid])
        {
            SendClientMessage(playerid, 0xFF0000FF, "ไม่สามารถปิดกาชาปองได้ขณะกำลังหมุน!");
            return 1;
        }
        for(new i = 0; i < 16; i++) PlayerTextDrawHide(playerid, Ms_G_MONEY[playerid][i]);
        CancelSelectTextDraw(playerid);
        GachaponOn[playerid] = false;
        if(GachaponSpinning[playerid])
        {
            KillTimer(GachaponSpinTimer[playerid]);
            GachaponSpinning[playerid] = false;
        }
    }

		//gacha  BLACK 
	if(playertextid == Ms_G_BLACK[playerid][1] && GachaponBlackOn[playerid] && !GachaponBlackSpinning[playerid])
    {
        if(Inventory_Count(playerid, "GACHAPON-BLACK") < 1)
            return SendClientMessageEx(playerid, 0xFF0000FF,"กาชาคุณไม่มีแล้ว");
        GachaponBlackSpinning[playerid] = true;
        GachaponBlackSpinCount[playerid] = 0;
        Inventory_Remove(playerid, "GACHAPON-BLACK", 1);
        new desiredItemIndex = GetWeightedRandomGBItem();
        new k = random(4);
        new finalIndex = (desiredItemIndex - 4 + 12 * k) % 12;
        GachaponBlackMaxSpin[playerid] = finalIndex + 12 * k;
        if(GachaponBlackMaxSpin[playerid] < 10 || GachaponBlackMaxSpin[playerid] > 30)
        {
            GachaponBlackMaxSpin[playerid] = random(21) + 10;
        }
        PlayerTextDrawHide(playerid, Ms_G_BLACK[playerid][15]);
        GachaponBlackSpinTimer[playerid] = SetTimerEx("GachaponBlackSpin", 250, true, "i", playerid);
        
        UpdateGachaponBlackDisplay(playerid);
    }
    else if(playertextid == Ms_G_BLACK[playerid][2] && GachaponBlackOn[playerid])
    {
        if(GachaponBlackSpinning[playerid])
        {
            SendClientMessage(playerid, 0xFF0000FF, "ไม่สามารถปิดกาชาปองได้ขณะกำลังหมุน!");
            return 1;
        }
        for(new i = 0; i < 16; i++) PlayerTextDrawHide(playerid, Ms_G_BLACK[playerid][i]);
        CancelSelectTextDraw(playerid);
        GachaponBlackOn[playerid] = false;
        if(GachaponBlackSpinning[playerid])
        {
            KillTimer(GachaponBlackSpinTimer[playerid]);
            GachaponBlackSpinning[playerid] = false;
        }
    }

	//gacha  FASHION
	if(playertextid == Ms_G_FASHION[playerid][1] && GachaponFashOn[playerid] && !GachaponFashSpinning[playerid])
    {
        if(Inventory_Count(playerid, "GACHAPON-FASHION") < 1)
            return SendClientMessageEx(playerid, 0xFF0000FF,"กาชาคุณไม่มีแล้ว");
        GachaponFashSpinning[playerid] = true;
        GachaponFashSpinCount[playerid] = 0;
        Inventory_Remove(playerid, "GACHAPON-FASHION", 1);
        new desiredItemIndex = GetWeightedRandomGFItem();
        new k = random(4);
        new finalIndex = (desiredItemIndex - 4 + 12 * k) % 12;
        GachaponFashMaxSpin[playerid] = finalIndex + 12 * k;
        if(GachaponFashMaxSpin[playerid] < 10 || GachaponFashMaxSpin[playerid] > 30)
        {
            GachaponFashMaxSpin[playerid] = random(21) + 10;
        }
        PlayerTextDrawHide(playerid, Ms_G_FASHION[playerid][15]);
        GachaponFashSpinTimer[playerid] = SetTimerEx("GachaponFashSpin", 250, true, "i", playerid);
        
        UpdateGachaponFashDisplay(playerid);
    }
    else if(playertextid == Ms_G_FASHION[playerid][2] && GachaponFashOn[playerid])
    {
        if(GachaponFashSpinning[playerid])
        {
            SendClientMessage(playerid, 0xFF0000FF, "ไม่สามารถปิดกาชาปองได้ขณะกำลังหมุน!");
            return 1;
        }
        for(new i = 0; i < 16; i++) PlayerTextDrawHide(playerid, Ms_G_FASHION[playerid][i]);
        CancelSelectTextDraw(playerid);
        GachaponFashOn[playerid] = false;
        if(GachaponFashSpinning[playerid])
        {
            KillTimer(GachaponFashSpinTimer[playerid]);
            GachaponFashSpinning[playerid] = false;
        }
    }

    HandleClickLockerTD(playerid, PlayerText:playertextid);
	HandleClickDonateTD(playerid, PlayerText:playertextid);
    return 1;
}


Dialog:GatePass(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new id = Gate_Nearest(playerid);

	    if (id == -1)
	        return 0;

        if (isnull(inputtext))
        	return Dialog_Show(playerid, GatePass, DIALOG_STYLE_INPUT, "Enter Password", "Please enter the password for this gate below:", "Submit", "Cancel");

		if (strcmp(inputtext, GateData[id][gatePass]) != 0)
  			return Dialog_Show(playerid, GatePass, DIALOG_STYLE_INPUT, "Enter Password", "Error: Incorrect password specified.\n\nPlease enter the password for this gate below:", "Submit", "Cancel");

		Gate_Operate(id);
	}
	return 1;
}

Gate_Nearest(playerid)
{
    for (new i = 0; i != MAX_GATES; i ++) if (GateData[i][gateExists] && IsPlayerInRangeOfPoint(playerid, GateData[i][gateRadius], GateData[i][gatePos][0], GateData[i][gatePos][1], GateData[i][gatePos][2]))
	{
		if (GetPlayerInterior(playerid) == GateData[i][gateInterior] && GetPlayerVirtualWorld(playerid) == GateData[i][gateWorld])
			return i;
	}
	return -1;
}

Dialog:DIALOG_RanDomTune(playerid, response, listitem, inputtext[]){
    if(!IsPlayerInAnyVehicle(playerid))
	    return SendClientMessage(playerid, COLOR_RED,"[!]{FFFFFF}คุณต้องอยู่บนรถ");

	if(response){

	    new vehicleid = GetPlayerVehicleID(playerid);

		if(IsVehicleOwner(playerid, vehicleid) || playerData[playerid][pVehicleKeys] == vehicleid || (carData[vehicleid][carFaction] >= 0 && carData[vehicleid][carFaction] == playerData[playerid][pFaction]))
		{
		    if(carData[vehicleid][carEngine] > 280)
		        return SendClientMessage(playerid, COLOR_RED,"[!]{FFFFFF}กำลังรถของคุณมากกว่า 280 แล้วไม่สามารถจูนได้อีก");

			new speeddf = carData[vehicleid][carEngine] + 3;
			new speedmax = carData[vehicleid][carEngine] + 50;
			new speed = randomEx(speeddf, speedmax);
			new query[167];
			SendClientMessageEx(playerid, COLOR_GREEN, "[!]{ffffff} คุณได้จูนรถได้กำลังเพิ่มขึ้น%d",speed);
			SendClientMessage(playerid, COLOR_YELLOW, "[!]{FFFFFF} เมื่อจูนเสร็จกรุณาลงรถและขึ้นใหม่ด้วยนะครับ");
			carData[vehicleid][carEngine] = speed;
			mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carEngine = %d WHERE carID = %d", carData[vehicleid][carEngine], carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
			Inventory_Remove(playerid, "กล่องจูน", 1);
		}
		else{
		    SendClientMessage(playerid, COLOR_RED, "[!]{ffffff}รถคันนี้ไม่ใช่ของคุณ");
		}
	}
	if(!response){
	}
	return 1;
}

Dialog:DIALOG_RADIO_OPEN(playerid,response,listitem,inputtext[])
{
    if(!response)return 1;
    
	if(response)
    {
        if(PlayerInRadio[playerid])
        {
            CallRemoteFunction("OnPlayerDisconnectRadio", "d",playerid);
            PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
            
			for(new i=0;i<MAX_PLAYERS;i++)if(IsPlayerConnected(i) && playerData[i][pRadioID] && playerData[i][pRadioID] == playerData[playerid][pRadioID])
			{
				playerData[i][pRadioID]=0;
				PlayerInRadio[i]=false;
			}	
        }
        else if(!PlayerInRadio[playerid])
        {
            Dialog_Show(playerid,DIALOG_JOIN_RADIO,DIALOG_STYLE_LIST,"วิทยุสื่อสาร","{FFFFFF}เข้าร่วมห้องวิทยุสื่อสาร\n{FFFFFF}สร้างห้องการสื่อสารวิทยุ","ตกลง","ยกเลิก");
        }
    }
    return 1;
}

Dialog:DIALOG_JOIN_RADIO(playerid,response,listitem,inputtext[])
{
    if(!response)
        return 1;
    switch(listitem)
    {
        case 0:{
        Dialog_Show(playerid,DIALOG_JOIN_RADIO_ID,DIALOG_STYLE_INPUT,"เข้าร่วมการสื่อสาร","{FFFFFF}กรุณาใส่ไอดีห้องเพื่อเข้าร่วมวิทยุสื่อสาร","เข้าร่วม","ยกเลิก");
        }
        case 1:{
        Dialog_Show(playerid,DIALOG_CREATE_READIO,DIALOG_STYLE_MSGBOX,"สร้างห้องการสื่อสาร","{FFFFFF}โปรดกด >> ยืนยัน << ในการสร้างห้องวิทยุสื่อสารไกล","ยืนยัน","ยกเลิก");
        }
    }
    return 1;
}

Dialog:DIALOG_JOIN_RADIO_ID(playerid,response,listitem,inputtext[])
{
    if(!response)
        return 1;
    if(!strlen(inputtext))
        return SendClientMessage(playerid,COLOR_RED,"กรุณาใส่ไอดีห้องสื่อสาร");
    if(PlayerInRadio[playerid] == true)
        return SendClientMessage(playerid,COLOR_RED,"กรุณาออกจากห้องสื่อสารก่อน");
    for(new i=0;i<MAX_PLAYERS;i++)if(IsPlayerConnected(i) && PlayerInRadio[i] == true && playerData[i][pRadioID] && playerData[i][pRadioID] == strval(inputtext))
    {
        new joinradio = CallRemoteFunction("OnPlayerJoinRoom", "dd",playerid,i);
        if(joinradio)
        {
            SendClientMessageEx(playerid,COLOR_GREEN,"[#]:{FFFFFF} คุณได้เข้าร่วมวิทยุสื่อสารแล้ว");
            playerData[playerid][pRadioID]= playerData[i][pRadioID];
            PlayerInRadio[playerid]=true;
        }
    }
    return 1;
}

Dialog:DIALOG_CREATE_READIO(playerid,response,listitem,inputtext[])
{
	if(!response)
	  return 1;
    playerData[playerid][pRadioID] = CallRemoteFunction("OnPlayerConnectRoom", "is",playerid,"CallPhone");
    if(playerData[playerid][pRadioID])
    {
	   new string9[256];
	   format(string9,sizeof(string9),"{FFFFFF}วิทยุสื่อสาร\n{FFFFFF}ไอดีห้อง:%d\n{FFFFFF}วิทธีใช่:ให้ผู้เล่นใส่ไอดีห้องสื่อสารเพื่อเข้าร่วมห้อง",playerData[playerid][pRadioID]);
	   Dialog_Show(playerid, ShowOnly, DIALOG_STYLE_MSGBOX,"วิทยุ",string9,"ปิด","");
	   PlayerInRadio[playerid] = true;
	}
	return 1;
}

hook OnGameModeInit()
{
    // ป้ายเช่าเรือ
    CreateDynamic3DTextLabel("{00FF00}[ เช่าเรือ ]\n{FFFFFF}กด N เพื่อเช่าเรือ", 
        COLOR_YELLOW, 
        154.9825,-1964.4180,3.7734, // ตำแหน่ง
        20.0,                       // ระยะมองเห็น
        INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

    return 1;
}

// เรือ
Dialog:DIALOG_BOAT_FREE(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        if (GetPlayerMoneyEx(playerid) < 500)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินไม่เพียงพอ ($500)");

				DestroyVehicle(testveh[playerid]);
				/*new Float:x, Float:y, Float:z, Float:a;
				GetPlayerPos(playerid, x, y, z);
				GetPlayerFacingAngle(playerid, a);*/
				testveh[playerid] = CreateVehicle(473, 154.9292,-1977.0525,-0.5973,3.6544, 1, 1, 600000);
				vehicleFuel[testveh[playerid]] = 500.0;
				carData[testveh[playerid]][carFaction] = -1;
				GivePlayerMoneyEx(playerid, -500);
				SetPlayerCheckpoint(playerid, 289.6868,-2334.9065,-0.1309, 3.0);
				PutPlayerInVehicle(playerid, testveh[playerid], 0);
				SendClientMessage(playerid, COLOR_SERVER, "เบิกรถสำเร็จคุณได้ขี่ เรือประมง");
				SendClientMessage(playerid, COLOR_GREEN, "ให้ขับไปที่จุดสีแดงบนไอค่อนแมพ");
			}
		}
	}
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    new wVeiculo; wVeiculo = GetPlayerVehicleID(playerid);
    if(clickedid == wTuning1[6]) // X CLOSE
    {
            for(new i = 0; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++)       { TextDrawHideForPlayer(playerid, wTuning5[i]); }
            CancelSelectTextDraw(playerid);
    }

    if(clickedid == wTuning1[7]) //WHEELS
    {

            for(new i = 14; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++)       { TextDrawHideForPlayer(playerid, wTuning5[i]); }

            for(new i = 0; i < sizeof(wTuning2); i++) { TextDrawShowForPlayer(playerid, wTuning2[i]); }
    }
    if(clickedid == wTuning1[8]) // COLOR
    {

            for(new i = 14; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++) { TextDrawHideForPlayer(playerid, wTuning5[i]); }

            for(new i = 11; i < sizeof(wTuning1); i++) { TextDrawShowForPlayer(playerid, wTuning1[i]); }
    }
    if(clickedid == wTuning1[9]) // PAINTJOBS
    {

            for(new i = 14; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++) { TextDrawHideForPlayer(playerid, wTuning5[i]); }

            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawShowForPlayer(playerid, wTuning4[i]); }
    }
    if(clickedid == wTuning1[10]) // NITRO
    {

            for(new i = 14; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }

            for(new i = 0; i < sizeof(wTuning5); i++) { TextDrawShowForPlayer(playerid, wTuning5[i]); }
    }
    if(clickedid == wTuning1[11]) // HYDRAULICS
    {
            AddVehicleComponent(wVeiculo,1087);
    }
    if(clickedid == wTuning1[12]) //NEON
    {

            for(new i = 14; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++) { TextDrawHideForPlayer(playerid, wTuning5[i]); }

            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawShowForPlayer(playerid, wTuning3[i]); }
    }
    if(clickedid == wTuning1[13]) //AUTO TUNING
    {
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 483)
            {

                    AddVehicleComponent(wVeiculo,1027);
                    ChangeVehiclePaintjob(wVeiculo, 0);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
            {
                    AddVehicleComponent(wVeiculo,1046);
                    AddVehicleComponent(wVeiculo,1171);
                    AddVehicleComponent(wVeiculo,1149);
                    AddVehicleComponent(wVeiculo,1035);
                    AddVehicleComponent(wVeiculo,1147);
                    AddVehicleComponent(wVeiculo,1036);
                    AddVehicleComponent(wVeiculo,1040);
                    ChangeVehiclePaintjob(wVeiculo, 2);
                    ChangeVehicleColor(wVeiculo, 6, 6);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
            {
                    AddVehicleComponent(wVeiculo,1028);
                    AddVehicleComponent(wVeiculo,1169);
                    AddVehicleComponent(wVeiculo,1141);
                    AddVehicleComponent(wVeiculo,1032);
                    AddVehicleComponent(wVeiculo,1138);
                    AddVehicleComponent(wVeiculo,1026);
                    AddVehicleComponent(wVeiculo,1027);
                    ChangeVehiclePaintjob(wVeiculo, 2);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
            {


                    AddVehicleComponent(wVeiculo,1046);
                    AddVehicleComponent(wVeiculo,1153);
                    AddVehicleComponent(wVeiculo,1150);
                    AddVehicleComponent(wVeiculo,1054);
                    AddVehicleComponent(wVeiculo,1049);
                    AddVehicleComponent(wVeiculo,1047);
                    AddVehicleComponent(wVeiculo,1051);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 2);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
            {

                    AddVehicleComponent(wVeiculo,1065);
                    AddVehicleComponent(wVeiculo,1160);
                    AddVehicleComponent(wVeiculo,1159);
                    AddVehicleComponent(wVeiculo,1067);
                    AddVehicleComponent(wVeiculo,1162);
                    AddVehicleComponent(wVeiculo,1069);
                    AddVehicleComponent(wVeiculo,1071);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 1);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
            {

                    AddVehicleComponent(wVeiculo,1064);
                    AddVehicleComponent(wVeiculo,1155);
                    AddVehicleComponent(wVeiculo,1154);
                    AddVehicleComponent(wVeiculo,1055);
                    AddVehicleComponent(wVeiculo,1158);
                    AddVehicleComponent(wVeiculo,1056);
                    AddVehicleComponent(wVeiculo,1062);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 2);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
            {
                    AddVehicleComponent(wVeiculo,1089);
                    AddVehicleComponent(wVeiculo,1166);
                    AddVehicleComponent(wVeiculo,1168);
                    AddVehicleComponent(wVeiculo,1088);
                    AddVehicleComponent(wVeiculo,1164);
                    AddVehicleComponent(wVeiculo,1090);
                    AddVehicleComponent(wVeiculo,1094);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 2);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575)
            {
                    AddVehicleComponent(wVeiculo,1044);
                    AddVehicleComponent(wVeiculo,1174);
                    AddVehicleComponent(wVeiculo,1176);
                    AddVehicleComponent(wVeiculo,1042);
                    AddVehicleComponent(wVeiculo,1099);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 0);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
            {
                    AddVehicleComponent(wVeiculo,1126);
                    AddVehicleComponent(wVeiculo,1179);
                    AddVehicleComponent(wVeiculo,1180);
                    AddVehicleComponent(wVeiculo,1122);
                    AddVehicleComponent(wVeiculo,1101);
                    AddVehicleComponent(wVeiculo,1125);
                    AddVehicleComponent(wVeiculo,1123);
                    AddVehicleComponent(wVeiculo,1100);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 2);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
            {
                    AddVehicleComponent(wVeiculo,1104);
                    AddVehicleComponent(wVeiculo,1182);
                    AddVehicleComponent(wVeiculo,1184);
                    AddVehicleComponent(wVeiculo,1108);
                    AddVehicleComponent(wVeiculo,1107);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 1);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
            {
                    AddVehicleComponent(wVeiculo,1129);
                    AddVehicleComponent(wVeiculo,1189);
                    AddVehicleComponent(wVeiculo,1187);
                    AddVehicleComponent(wVeiculo,1102);
                    AddVehicleComponent(wVeiculo,1133);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 2);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420)
            {
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1087);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1139);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 400)
            {
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1087);
                    AddVehicleComponent(wVeiculo,1018);
                    AddVehicleComponent(wVeiculo,1013);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1086);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 401)
            {
                    AddVehicleComponent(wVeiculo,1086);
                    AddVehicleComponent(wVeiculo,1139);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1087);
                    AddVehicleComponent(wVeiculo,1012);
                    AddVehicleComponent(wVeiculo,1013);
                    AddVehicleComponent(wVeiculo,1042);
                    AddVehicleComponent(wVeiculo,1043);
                    AddVehicleComponent(wVeiculo,1018);
                    AddVehicleComponent(wVeiculo,1006);
                    AddVehicleComponent(wVeiculo,1007);
                    AddVehicleComponent(wVeiculo,1017);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
            {
                    ChangeVehiclePaintjob(wVeiculo,2);
                    AddVehicleComponent(wVeiculo,1191);
                    AddVehicleComponent(wVeiculo,1193);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1018);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    AddVehicleComponent(wVeiculo,1134);
                    AddVehicleComponent(wVeiculo,1137);
            }
            else
            {
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
            }
            return 1;
    }
    if(clickedid == wTuning2[0]){ // SHADOW
            AddVehicleComponent(wVeiculo,1073);
            return 1;
    }
    if(clickedid == wTuning2[1]){ // MEGA
            AddVehicleComponent(wVeiculo, 1074);
            return 1;
    }
    if(clickedid == wTuning2[2]){  // RINSHIME
            AddVehicleComponent(wVeiculo,1075);
            return 1;
    }
    if(clickedid == wTuning2[3]){ // WIRES
            AddVehicleComponent(wVeiculo,1076);
            return 1;
    }
    if(clickedid == wTuning2[4]){ // CLASSIC
            AddVehicleComponent(wVeiculo,1077);
            return 1;
    }
    if(clickedid == wTuning2[5]){ // TWIST
            AddVehicleComponent(wVeiculo,1078);
            return 1;
    }
    if(clickedid == wTuning2[6]){ // CUTTER
            AddVehicleComponent(wVeiculo,1079);
            return 1;
    }
    if(clickedid == wTuning2[7]){ // DOLLAR
            AddVehicleComponent(wVeiculo,1083);
            return 1;
    }
    if(clickedid == wTuning2[8]){ // ATOMIC
            AddVehicleComponent(wVeiculo,1085);
            return 1;
    }

    if(clickedid == wTuning1[14]){ // BLACK
            ChangeVehicleColor(wVeiculo, 0, 0);
            return 1;
    }
    if(clickedid == wTuning1[15]){ // WHITE
            ChangeVehicleColor(wVeiculo, 1, 1);
            return 1;
    }
    if(clickedid == wTuning1[16]){ // GREEN
            ChangeVehicleColor(wVeiculo, 128, 128);
            return 1;
    }
    if(clickedid == wTuning1[17]){ // CYAN
            ChangeVehicleColor(wVeiculo, 135, 135);
            return 1;
    }
    if(clickedid == wTuning1[18]){ // BLUE
            ChangeVehicleColor(wVeiculo, 152, 152);
            return 1;
    }
    if(clickedid == wTuning1[19]){ // YELLOW
            ChangeVehicleColor(wVeiculo, 6, 6);
            return 1;
    }
    if(clickedid == wTuning1[20]){ // GRAY
            ChangeVehicleColor(wVeiculo, 252, 252);
            return 1;
    }
    if(clickedid == wTuning1[21]){ // PINK
            ChangeVehicleColor(wVeiculo, 146, 146);
            return 1;
    }
    if(clickedid == wTuning1[22]){ // ORANGE
            ChangeVehicleColor(wVeiculo, 219, 219);
            return 1;
    }
    if(clickedid == wTuning4[0]){ // PAINTJOBS 1
            ChangeVehiclePaintjob(wVeiculo, 0);
            return 1;
    }
    if(clickedid == wTuning4[1]){ // PAINTJOBS 2
            ChangeVehiclePaintjob(wVeiculo, 2);
            return 1;
    }
    if(clickedid == wTuning4[2]){ // PAINTJOBS 2
            ChangeVehiclePaintjob(wVeiculo, 3);
            return 1;
    }
    if(clickedid == wTuning5[0]){ // NITRO 1
            AddVehicleComponent(wVeiculo,1009);
            return 1;
    }
    if(clickedid == wTuning5[1]){ // NITRO 2
            AddVehicleComponent(wVeiculo,1008);
            return 1;
    }
    if(clickedid == wTuning5[2]){ // NITRO 3
            AddVehicleComponent(wVeiculo,1010);
            return 1;
    }

    if(clickedid == wTuning3[0]){
            SetPVarInt(playerid, "neon", 1);
            SetPVarInt(playerid, "blue", CreateObject(18648,0,0,0,0,0,0));
            SetPVarInt(playerid, "blue1", CreateObject(18648,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "blue"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "blue1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            return 1;
    }

    if(clickedid == wTuning3[1]){
            SetPVarInt(playerid, "neon", 1);
            SetPVarInt(playerid, "yellow", CreateObject(18650,0,0,0,0,0,0));
            SetPVarInt(playerid, "yellow1", CreateObject(18650,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "yellow"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "yellow1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            return 1;
    }
    if(clickedid == wTuning3[2]){
            SetPVarInt(playerid, "neon", 1);
            SetPVarInt(playerid, "white", CreateObject(18652,0,0,0,0,0,0));
            SetPVarInt(playerid, "white1", CreateObject(18652,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "white"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "white1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            return 1;
    }
    if(clickedid == wTuning3[3]){
            SetPVarInt(playerid, "neon", 1);
            SetPVarInt(playerid, "pink", CreateObject(18651,0,0,0,0,0,0));
            SetPVarInt(playerid, "pink1", CreateObject(18651,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "pink"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "pink1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            return 1;
    }
    if(clickedid == wTuning3[4]){
            SetPVarInt(playerid, "neon", 1);
            SetPVarInt(playerid, "green", CreateObject(18649,0,0,0,0,0,0));
            SetPVarInt(playerid, "green1", CreateObject(18649,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "green"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "green1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            return 1;
    }
    if(clickedid == wTuning3[5]){
            DestroyObject(GetPVarInt(playerid, "blue"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "blue1"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "green"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "green1"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "yellow"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "yellow1"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "white"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "white1"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "pink"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "pink1"));
            DeletePVar(playerid, "neon");
            return 1;
    }
    if(clickedid == Text:INVALID_TEXT_DRAW)
    {
            for(new i = 0; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++)       { TextDrawHideForPlayer(playerid, wTuning5[i]); }
    }

	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    if(CountIP(GetIP(playerid)) >= 5) return BanBots(playerid);

	if (!playerData[playerid][IsLoggedIn])
	{
	    TogglePlayerSpectating(playerid, 1);
		SetTimerEx("OnAccountCheck", 400, false, "d", playerid);
	}
	else
	{
	    SpawnPlayer(playerid);
	}
	return 1;
}

forward SyncCamera2(playerid);
public SyncCamera2(playerid)
{
	if(GetPVarInt(playerid, "DisableFPS") == 1)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			AttachObjectToPlayer(playerData[playerid][pCameraFPS], playerid, 0.0, 0.20, 0.75, 0.0, 0.0, 0.0);
			AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
		}
		else
		{
			if(IsABike(GetPlayerVehicleID(playerid)))
			{
    		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 461) //PCJ Suc
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), 0.089999, 0.050000, 1.004999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
				else
				{
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), -0.484999, -0.309999, 1.164999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
			}
     		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) //Faggio Suc
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), 0.089999, -0.100000, 1.004999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
				else
				{
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), -0.004999, -0.609999, 1.164999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
			}
     		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 586) //Wayfarer
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), 0.089999, -0.18, 1.190, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
				else
				{
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), -0.084999, -0.809999, 1.264999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
			}
     		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 521) // FCR-900
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), 0.089999, 0.050000, 1.004999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
				else
				{
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), -0.484999, -0.309999, 1.164999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
			}
     		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 522) // NRG-500
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), 0.049999, 0.050000, 1.004999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
				else
				{
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), -0.284999, -0.459999, 1.164999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
			}
     		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 468) // Sanchez
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), 0.00, -0.100000, 0.954999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
				else
				{
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), -0.324999, -0.485, 1.154999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
			}
   		    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 581) //BF
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), 0.089999, 0.050000, 1.004999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
				else
				{
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), -0.484999, -0.309999, 1.164999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
			}
   		    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 463) //Freeway
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), 0.044999, -0.269999, 1.039999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
				else
				{
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), -0.059999, -0.859999, 1.289999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
				}
			}
		    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 411)
		    {
		    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], GetPlayerVehicleID(playerid), -0.40, -0.15, 0.45, 0.0, 0.0, 0.0);
				AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
			}
			}
			else
			{
			    new vehicleid = GetPlayerVehicleID(playerid);
			    new vehiclemodelid = GetVehicleModel(vehicleid);

			    new iSeat = GetPlayerVehicleSeat(playerid);
			    new Float:X, Float:Y, Float:Z;
			    GetVehicleModelInfo(vehiclemodelid, VEHICLE_MODEL_INFO_FRONTSEAT, X, Y, Z);

				if(iSeat == 0)
			    {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], vehicleid, X+(-0.85), Y+(-0.18), Z+(0.585), 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
			    }
				else if(iSeat == 1)
			    {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], vehicleid, X+(0.05), Y+(-0.18), Z+(0.585), 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
			    }
				else if(iSeat == 2)
			    {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], vehicleid, X+(-0.85), Y+(-0.86), Z+(0.585), 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
			    }
				else if(iSeat == 3)
			    {
			    	AttachObjectToVehicle(playerData[playerid][pCameraFPS], vehicleid, X+(0.05), Y+(-0.86), Z+(0.585), 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, playerData[playerid][pCameraFPS]);
			    }
			}
		}
	}
	return 1;
}
stock BanBots(playerid)
{
    printf("%s was Banned due to MANY Connections.", GetPlayerNameEx(playerid));
    Ban(playerid);
    return 1;
}
forward UpdateTime();
public UpdateTime()
{
	static
	    time[3];

	gettime(time[0], time[1], time[2]);

	foreach (new i : Player)
	{
		SetPlayerTime(i, time[0], time[1]);
	}
	SetTimer("UpdateTime", 30000, false);
}

forward OnAccountCheck(playerid);
public OnAccountCheck(playerid)
{
	OnAccountCheckCamera(playerid);
	OnAccountCheckMySQL(playerid);
	return 1;
}
ResetEditing(playerid)
{
	playerData[playerid][pEditType] = 0;
 	playerData[playerid][pEditGate] = -1;
	return 1;
}

OnAccountCheckCamera(playerid)
{
    
    SetPlayerCameraPos(playerid, 833.9591, -1893.1116, 12.8672);
    SetPlayerCameraLookAt(playerid, 835.4340, -1926.7677, 12.8672);
    return 1;
}

OnAccountCheckMySQL(playerid)
{
	new query[103];
	mysql_format(g_SQL, query, sizeof query, "SELECT * FROM `players` WHERE `playerName` = '%e' LIMIT 1", GetPlayerNameEx(playerid));
	mysql_tquery(g_SQL, query, "OnPlayerLoaded", "d", playerid);
	return 1;
}



CreatePlayerStuff(playerid)
{
	// Death message
	PlayerDeathTD[playerid] = CreatePlayerTextDraw(playerid, 216.000000, 357.000000, "Respawn available in 02 minutes 58 seconds");
	PlayerTextDrawFont(playerid, PlayerDeathTD[playerid], 2);
	PlayerTextDrawLetterSize(playerid, PlayerDeathTD[playerid], 0.212500, 1.499999);
	PlayerTextDrawTextSize(playerid, PlayerDeathTD[playerid], 446.000000, 31.000000);
	PlayerTextDrawSetOutline(playerid, PlayerDeathTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerDeathTD[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerDeathTD[playerid], 1);
	PlayerTextDrawColor(playerid, PlayerDeathTD[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerDeathTD[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerDeathTD[playerid], 50);
	PlayerTextDrawUseBox(playerid, PlayerDeathTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PlayerDeathTD[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerDeathTD[playerid], 0);

	// Earn EXP
	PlayerExpEarnBoxTD1[playerid] = CreatePlayerTextDraw(playerid, 70.000000, 295.000000, "_");
	PlayerTextDrawFont(playerid, PlayerExpEarnBoxTD1[playerid], 1);
	PlayerTextDrawLetterSize(playerid, PlayerExpEarnBoxTD1[playerid], 0.779165, 2.599992);
	PlayerTextDrawTextSize(playerid, PlayerExpEarnBoxTD1[playerid], 299.500000, 75.500000);
	PlayerTextDrawSetOutline(playerid, PlayerExpEarnBoxTD1[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerExpEarnBoxTD1[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerExpEarnBoxTD1[playerid], 2);
	PlayerTextDrawColor(playerid, PlayerExpEarnBoxTD1[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerExpEarnBoxTD1[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerExpEarnBoxTD1[playerid], -1094795521);
	PlayerTextDrawUseBox(playerid, PlayerExpEarnBoxTD1[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PlayerExpEarnBoxTD1[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerExpEarnBoxTD1[playerid], 0);

	PlayerExpEarnBoxTD2[playerid] = CreatePlayerTextDraw(playerid, 70.000000, 296.000000, "_");
	PlayerTextDrawFont(playerid, PlayerExpEarnBoxTD2[playerid], 1);
	PlayerTextDrawLetterSize(playerid, PlayerExpEarnBoxTD2[playerid], 0.737498, 2.299993);
	PlayerTextDrawTextSize(playerid, PlayerExpEarnBoxTD2[playerid], 298.500000, 73.000000);
	PlayerTextDrawSetOutline(playerid, PlayerExpEarnBoxTD2[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerExpEarnBoxTD2[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerExpEarnBoxTD2[playerid], 2);
	PlayerTextDrawColor(playerid, PlayerExpEarnBoxTD2[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerExpEarnBoxTD2[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerExpEarnBoxTD2[playerid], 255);
	PlayerTextDrawUseBox(playerid, PlayerExpEarnBoxTD2[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PlayerExpEarnBoxTD2[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerExpEarnBoxTD2[playerid], 0);

	PlayerEarnExpAmountTD[playerid] = CreatePlayerTextDraw(playerid, 71.000000, 300.000000, "EXP+100000");
	PlayerTextDrawFont(playerid, PlayerEarnExpAmountTD[playerid], 2);
	PlayerTextDrawLetterSize(playerid, PlayerEarnExpAmountTD[playerid], 0.233332, 1.500000);
	PlayerTextDrawTextSize(playerid, PlayerEarnExpAmountTD[playerid], 99.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerEarnExpAmountTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerEarnExpAmountTD[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerEarnExpAmountTD[playerid], 2);
	PlayerTextDrawColor(playerid, PlayerEarnExpAmountTD[playerid], 2094792959);
	PlayerTextDrawBackgroundColor(playerid, PlayerEarnExpAmountTD[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerEarnExpAmountTD[playerid], 16711730);
	PlayerTextDrawUseBox(playerid, PlayerEarnExpAmountTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PlayerEarnExpAmountTD[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerEarnExpAmountTD[playerid], 0);
}

ShowPlayerExpEarn(playerid, exp, time = 3000)
{
	if (playerData[playerid][pExpShow])
	{
		PlayerTextDrawHide(playerid, PlayerExpEarnBoxTD1[playerid]);
		PlayerTextDrawHide(playerid, PlayerExpEarnBoxTD2[playerid]);
		PlayerTextDrawHide(playerid, PlayerEarnExpAmountTD[playerid]);
	    KillTimer(playerData[playerid][pExpTimer]);
	}
	new string[15];
	format(string, sizeof(string), "EXP+%d", exp);
	PlayerTextDrawSetString(playerid, PlayerEarnExpAmountTD[playerid], string);
	PlayerTextDrawShow(playerid, PlayerExpEarnBoxTD1[playerid]);
	PlayerTextDrawShow(playerid, PlayerExpEarnBoxTD2[playerid]);
	PlayerTextDrawShow(playerid, PlayerEarnExpAmountTD[playerid]);

	playerData[playerid][pExpShow] = true;
	playerData[playerid][pExpTimer] = SetTimerEx("HidePlayerExpEarn", time, false, "d", playerid);
}

forward HidePlayerExpEarn(playerid);
public HidePlayerExpEarn(playerid)
{
	if (!playerData[playerid][pExpShow])
	    return 0;

	playerData[playerid][pExpShow] = false;
	PlayerTextDrawHide(playerid, PlayerExpEarnBoxTD1[playerid]);
	PlayerTextDrawHide(playerid, PlayerExpEarnBoxTD2[playerid]);
	PlayerTextDrawHide(playerid, PlayerEarnExpAmountTD[playerid]);
	return 1;
}

public OnPlayerConnect(playerid)
{
	if(IsPlayerNPC(playerid))
		return 0;
	/*if (!IsPlayerNPC(playerid))
	{
		SetPlayerColor(playerid, DEFAULT_COLOR);
	}*/


	/*if (!IsPlayerNPC(playerid))
	{
		new string[1024];
		format(string, sizeof(string), "{FFFFFF}[ID:%d]", playerid);
		cNametag[playerid] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 0.3, NT_DISTANCE, .attachedplayer = playerid, .testlos = 1);
	}*/

	CheckExpiredItems(playerid);

	// Boombox
	BoomboxData[playerid][boomboxPlaced] = 0;
	BoomboxData[playerid][boomboxPos][0] = 0.0;
	BoomboxData[playerid][boomboxPos][1] = 0.0;
	BoomboxData[playerid][boomboxPos][2] = 0.0;

	useitemdamas[playerid] = 0;
	//ซื้อของระบุจำนวน
	shopBuyType[playerid] = 0;

	//เช็คงานบัค
	BABYCheck[playerid] = 0;

	isFixCar[playerid] = 0;

	testveh[playerid] = 0;

	isPlayerCallCar[playerid] = 0;
	isPlayerListitem[playerid] = -1;

	DamageCount[playerid] = 0;

	lazadaCD[playerid] = 0;

	HUDToggle[playerid] = 1;

	isBaseFire[playerid] = 0;
	//wp
	//WEAPON_BRASSKNUCKLE[playerid] = 0;

	// ใบสั่ง
	fineID[playerid] = -1;
	finePrice[playerid] = 0;
	format(fineText[playerid], 64, "(null)");
	
    isgabog[playerid] = 0;

	playerData[playerid][pBoombox] = INVALID_PLAYER_ID;

	// ของแต่งตัว
	cl_buying[playerid] = 0;
    for(new i=0;i!=MAX_CLOTHES; ++i) cl_dataslot[playerid][i] = -1, ClothingData[playerid][i][cl_object] = INVALID_OBJECT_ID;

    isPoonStart[playerid] = 0;
	Nongkai[playerid] = 0;
	sira[playerid] = 0;
	bananapook[playerid] = 0;
	Makira[playerid] = 0;
    BottleOn[playerid] = 0;
    ArmourOn[playerid] = 0;
	inLabel[playerid] = 0;
	// หมัดไฟ
    MudFireOn[playerid] = 0;
    WeaponType[playerid] = 0;
    DubFah[playerid] = 0;
    KnifeFire[playerid] = 0;
    MudShockOn[playerid] = 0;
    DubOn[playerid] = 0;
    GreenOn[playerid] = 0;

    // ระบบ GPS
	//GPSOn[playerid] = 0;
	//ClearGPS(playerid);

	ResetEditing(playerid);

	//ตลาดใหม่
	RemoveBuildingForPlayer(playerid, 1297, 313.6641, -1811.8203, 6.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 326.3750, -1811.8203, 6.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 339.2891, -1811.8203, 6.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 352.2969, -1811.8203, 6.7656, 0.25);

    //อู่
    RemoveBuildingForPlayer(playerid, 5849, 1046.6797, -935.1953, 46.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 5854, 992.5313, -962.7344, 60.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1266, 1029.1797, -939.5156, 52.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1029.1797, -939.5156, 52.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 5848, 1046.6797, -935.1953, 46.9922, 0.25);

    //ลบรพ
    RemoveBuildingForPlayer(playerid, 5928, 1309.9141, -1330.1328, 25.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 5957, 1278.4688, -1189.5078, 11.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1335.0547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1321.5234, -1374.4297, 12.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1292.0000, -1374.2969, 12.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1300.5859, -1374.2969, 12.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 5704, 1309.9141, -1330.1328, 25.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1329.4766, -1374.4297, 12.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1330.6016, -1340.9844, 6.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1337.8828, -1350.4141, 15.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1326.6953, -1316.0078, 8.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1327.5938, -1333.6719, 6.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1337.8828, -1320.8594, 15.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1332.0000, -1309.4297, 8.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 5740, 1278.4688, -1189.5078, 11.8984, 0.25);

	RemoveBuildingForPlayer(playerid, 12983, 1242.098, 315.148, 18.554, 0.250);
	RemoveBuildingForPlayer(playerid, 13221, 1242.098, 315.148, 18.554, 0.250);
	RemoveBuildingForPlayer(playerid, 1368, 1262.328, 320.342, 19.437, 0.250);
	RemoveBuildingForPlayer(playerid, 1368, 1257.938, 322.273, 19.437, 0.250);
	RemoveBuildingForPlayer(playerid, 781, 1261.050, 325.273, 18.468, 0.250);
	RemoveBuildingForPlayer(playerid, 781, 1267.880, 322.445, 18.468, 0.250);
	RemoveBuildingForPlayer(playerid, 1368, 1236.550, 331.789, 19.437, 0.250);
	RemoveBuildingForPlayer(playerid, 1368, 1232.160, 333.717, 19.437, 0.250);
	RemoveBuildingForPlayer(playerid, 781, 1231.698, 338.195, 18.468, 0.250);
	RemoveBuildingForPlayer(playerid, 1690, 1254.848, 316.203, 24.398, 0.250);
	RemoveBuildingForPlayer(playerid, 1687, 1237.300, 306.937, 24.562, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 1247.948, 303.467, 28.906, 0.250);
	RemoveBuildingForPlayer(playerid, 1687, 1248.109, 295.795, 28.538, 0.250);
	RemoveBuildingForPlayer(playerid, 1687, 1247.410, 294.203, 28.538, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1231.948, 287.937, 19.225, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1250.609, 279.406, 19.225, 0.250);
	RemoveBuildingForPlayer(playerid, 1688, 1222.300, 311.959, 24.756, 0.250);
	RemoveBuildingForPlayer(playerid, 5742, 1197.318, -899.210, 45.092, 0.250);
	RemoveBuildingForPlayer(playerid, 1522, 1199.968, -917.640, 42.022, 0.250);
	RemoveBuildingForPlayer(playerid, 6010, 1214.150, -913.445, 43.054, 0.250);
	RemoveBuildingForPlayer(playerid, 5858, 1214.150, -913.445, 43.054, 0.250);
	RemoveBuildingForPlayer(playerid, 5708, 1134.250, -1338.078, 23.156, 0.250);
	RemoveBuildingForPlayer(playerid, 5930, 1134.250, -1338.078, 23.156, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1184.010, -1353.500, 12.578, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1184.010, -1343.270, 12.578, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1184.810, -1303.150, 12.578, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1184.810, -1292.910, 12.578, 0.250);
	RemoveBuildingForPlayer(playerid, 617, 1178.598, -1332.068, 12.890, 0.250);
	RemoveBuildingForPlayer(playerid, 618, 1177.729, -1315.660, 13.295, 0.250);


	//ลบafk

	RemoveBuildingForPlayer(playerid, 6463, 389.7734, -2028.4688, 19.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 6464, 379.0625, -2065.0234, 11.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 6465, 368.0547, -2028.2422, 8.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2028.5000, 32.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2021.6406, 29.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2017.4531, 24.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2017.4297, 16.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2021.6328, 10.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2028.5156, 8.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2035.3984, 10.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2039.6406, 16.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2039.6563, 24.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 3751, 389.8750, -2035.3828, 29.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 1529, 399.0078, -2066.8828, 11.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 360.4531, -2086.6719, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 353.0156, -2081.1875, 6.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 368.9297, -2083.2656, 7.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 353.0156, -2050.4844, 6.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 364.6094, -2036.1797, 9.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 6462, 368.0547, -2028.2422, 8.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 6466, 374.6953, -2054.8828, 8.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 374.7969, -2046.9375, 9.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 378.4609, -2012.9297, 7.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 378.4609, -2083.2656, 7.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 379.7422, -2086.8594, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 381.0313, -2070.9375, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 6283, 379.0625, -2065.0234, 11.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 379.5938, -2055.1016, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 386.5703, -2061.9531, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 379.5938, -2042.4922, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 379.5938, -2030.3359, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 379.5938, -2016.7500, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 386.5703, -2049.3516, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1340, 388.8594, -2071.6641, 7.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 390.2031, -2083.2656, 7.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2039.6406, 16.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2039.6563, 24.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 6298, 389.7734, -2028.4688, 19.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 6461, 389.7734, -2028.5000, 20.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2028.5000, 32.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2021.6406, 29.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2017.4531, 24.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2017.4297, 16.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2021.6328, 10.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2028.5156, 8.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2035.3984, 10.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 3752, 389.8750, -2035.3828, 29.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 400.3906, -2086.4219, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 400.7578, -2081.1875, 6.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 400.7578, -2050.4844, 6.5938, 0.25);

	RemoveBuildingForPlayer(playerid, 1410, 1345.1172, 201.3672, 19.2188, 0.25);
    RemoveBuildingForPlayer(playerid, 4245, 272.4844, -2012.1953, -15.4766, 0.25);
    RemoveBuildingForPlayer(playerid, 4380, 272.4844, -2012.1953, -15.4766, 0.25);
	
	//ลบตรงการาจ
	RemoveBuildingForPlayer(playerid, 3778, 289.2266, -1875.0000, 3.2031, 0.25);
    RemoveBuildingForPlayer(playerid, 3778, 200.4844, -1875.0000, 3.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 6415, 154.2109, -1950.1953, 26.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 1461, 147.9453, -1927.7266, 3.5547, 0.25);
    RemoveBuildingForPlayer(playerid, 6295, 154.2109, -1950.1953, 26.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 1461, 148.0938, -1887.2813, 3.5469, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 154.4531, -1887.2422, 5.4844, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 150.6641, -1870.3125, 3.1016, 0.25);
    RemoveBuildingForPlayer(playerid, 1461, 161.6563, -1893.6406, 3.5469, 0.25);
    RemoveBuildingForPlayer(playerid, 3615, 200.4844, -1875.0000, 3.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 3615, 289.2266, -1875.0000, 3.2031, 0.25);
    RemoveBuildingForPlayer(playerid, 1461, 148.0938, -1847.7109, 3.5469, 0.25);
    RemoveBuildingForPlayer(playerid, 1461, 148.8125, -1820.0469, 3.5391, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 150.6641, -1835.3594, 3.1094, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 154.6641, -1839.4297, 5.4766, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 159.1953, -1842.5859, 3.1406, 0.25);
    RemoveBuildingForPlayer(playerid, 1461, 161.6563, -1854.0781, 3.5469, 0.25);
    RemoveBuildingForPlayer(playerid, 1461, 161.8125, -1813.6328, 3.5547, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 150.6641, -1809.3594, 3.0859, 0.25);
    RemoveBuildingForPlayer(playerid, 1461, 148.8125, -1799.9375, 3.5391, 0.25);
    RemoveBuildingForPlayer(playerid, 1231, 154.5469, -1799.6406, 5.4688, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 159.3359, -1794.5859, 3.1719, 0.25);
    RemoveBuildingForPlayer(playerid, 1280, 150.6641, -1784.3359, 3.4688, 0.25);

	//ลบเทส
	RemoveBuildingForPlayer(playerid, 6189, 836.4453, -2003.5234, -2.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 6191, 836.4453, -2003.5234, -2.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.1484, -2061.0625, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.1484, -2055.2422, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 820.2813, -2019.0000, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 820.2813, -2015.0625, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 820.2813, -2002.9688, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 820.2813, -1999.0313, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 820.2813, -1968.7891, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 820.2813, -1977.1797, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 820.2813, -1901.1172, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 820.3438, -2058.1641, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 820.5859, -1928.2734, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -2066.1797, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -2036.6953, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -2008.9141, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.7891, -2011.7969, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -1991.4922, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.7891, -2005.9844, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 821.0078, -1986.0938, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -1973.4922, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.7891, -1980.5625, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.7891, -1965.9766, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -1950.1719, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.7891, -1889.9219, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 821.5469, -2048.8984, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 821.8125, -2042.2969, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 824.7969, -2036.6797, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 821.8125, -2031.3516, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 821.1094, -2023.7422, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 821.0703, -1996.2500, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 821.1016, -1961.1250, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 821.0859, -1912.9766, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 821.0859, -1897.0234, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 821.0859, -1874.6250, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 824.1563, -1874.3047, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 821.8125, -1868.9766, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.7969, -2049.0000, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.7969, -2066.3594, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 852.4531, -2060.3359, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 852.7344, -2055.2422, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 852.5313, -2058.1641, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 852.6094, -2042.5547, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 852.4531, -2039.6875, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 852.5313, -2036.3906, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 852.7344, -2033.4688, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 852.6094, -2030.4531, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 851.7578, -2023.7422, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 852.6094, -2026.5234, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.7969, -2018.0313, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 851.0078, -1992.5781, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 851.7578, -2012.7031, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 851.7578, -1994.9375, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 852.6094, -2008.8906, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 852.6094, -2004.9609, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 852.7344, -1997.3672, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 852.5313, -2000.6406, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 848.5625, -1986.6719, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.9766, -1986.8828, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 851.0078, -1981.6328, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 851.7578, -1978.5313, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 852.6094, -1974.2734, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 852.6094, -1970.3359, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.7969, -1955.9297, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 852.2109, -1961.1250, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 852.2109, -1950.5938, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 852.5313, -1965.3203, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.7969, -1937.1875, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 852.5313, -1932.3281, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 848.3281, -1909.3828, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.7969, -1909.9063, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 852.2109, -1901.2422, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 852.5313, -1886.8594, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.7969, -1874.5859, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 851.6250, -1869.2500, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.7891, -1857.1641, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 820.5859, -1860.0859, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.5156, -1846.9375, 12.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 852.2109, -1843.9766, 14.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.7969, -1848.8984, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 852.5313, -1855.1094, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 4344, 801.6563, -1996.7734, -31.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4477, 801.6563, -1996.7734, -31.5781, 0.25);


	CreatePlayerStuff(playerid);
	ResetPlayerConnection(playerid);

	ClearPlayerChat(playerid, 20);

	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	// ออกจากเกมแล้วแจ้งเตือนคนที่อยู่ใกล้ ::
	new szDisconnectReason[3][] =
    {
        "หลุดออกจากเซิร์ฟเวอร์",
        "ออกจากเซิร์ฟเวอร์",
        "ถูกเตะออก / ถูกแบนออก จากเซิร์ฟเวอร์"
    };
    SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "{FB5E28}[ออกเกม] :: {ffffff}%s {FBC9B8}ได้ออกจากเซิร์ฟเวอร์, สาเหตุ : {ffffff}%s", GetPlayerNameEx(playerid), szDisconnectReason[reason]);

	/*if (!IsPlayerNPC(playerid))
	{
		if(IsValidDynamic3DTextLabel(cNametag[playerid]))
			DestroyDynamic3DTextLabel(cNametag[playerid]);
	}*/

	if (oldSKin[playerid] != 0)
	{
		SetPlayerSkin(playerid, oldSKin[playerid]);
		oldSKin[playerid] = 0;
	}

	DestroyVehicle(testveh[playerid]);

	if(IsFPS[playerid] == 1)
	{
    	DestroyObject(CameraFirstPerson[playerid]);
	}

	if (BoomboxData[playerid][boomboxPlaced])
		Boombox_Destroy(playerid);

    if (playerData[playerid][pRoadblock] != -1)
    {
		DestroyDynamicObject(playerData[playerid][pRoadblock]);
		playerData[playerid][pRoadblock] = -1;
	}
    for (new i = 0; i <= 9; i++)
    {
        RemovePlayerAttachedObject(playerid, i);
    }
	if (GetPlayerWantedLevelEx(playerid) > 0)
	{
	    playerData[playerid][pPrisoned] = 1;
	    playerData[playerid][pJailTime] = GetPlayerWantedLevelEx(playerid)*120;
	}

	if(playerData[playerid][IsLoggedIn])
	{
		for(new i = 1; i < MAX_VEHICLES; i ++)
		{
	    	if(IsValidVehicle(i) && IsVehicleOwner(playerid, i) && carData[i][carTimer] == -1)
		    {
				carData[i][carTimer] = SetTimerEx("DespawnTimer", 600000, false, "d", i);
	   		}
		}
	}
    //DestroyPlayerStuff(playerid);
    UpdateplayerData(playerid);

	if (playerData[playerid][LoginTimer])
	{
		KillTimer(playerData[playerid][LoginTimer]);
		playerData[playerid][LoginTimer] = 0;
	}
	ResetPlayerDisconnection(playerid);

	playerData[playerid][IsLoggedIn] = false;
	return 1;
}

public OnPlayerSpawn(playerid)
{
    TogglePlayerControllable(playerid, true);

    // ให้กล้องอยู่หลัง player ทันที
    //SetCameraBehindPlayer(playerid);

    if (playerData[playerid][pJailTime] > 0)
    {
        SetPlayerInPrison(playerid);
        SetPlayerWeather(playerid, globalWeather);
        ResetPlayerWantedLevelEx(playerid);
    }
    else
    {
        if (playerData[playerid][pInjured])
        {
            SetPlayerInterior(playerid, playerData[playerid][pInterior]);
            SetPlayerVirtualWorld(playerid, playerData[playerid][pWorld]);
            SetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
            SetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);
            PlayerTextDrawShow(playerid, PlayerDeathTD[playerid]);

            ShowPlayerStats(playerid, false);

            SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน]:{FFFFFF} คุณกำลังอยู่ในสถานะบาดเจ็บ กรุณาโทรเรียก /call 911 เพื่อขอความช่วยเหลือ");
        }
        else
        {
            if (playerData[playerid][pHospital] != -1)
            {
                SetPlayerPos(playerid, 1187.821166, -1363.781738, 13.551229);
                SetPlayerFacingAngle(playerid, 264.060760);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                PlayerTextDrawHide(playerid, PlayerDeathTD[playerid]);
                playerData[playerid][pHospital] = -1;

                playerData[playerid][pHungry] = 20;
                playerData[playerid][pThirsty] = 20;

                ClearAnimations(playerid);
                TogglePlayerControllable(playerid, true);
                SetPlayerWeather(playerid, globalWeather);
            }
            else
            {
                if (playerData[playerid][pSpawnPoint] == 0)
                {
                    SetPlayerPos(playerid, 1657.5459, -1343.5229, 17.4348);
                    SetPlayerFacingAngle(playerid, 95.8267);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerInterior(playerid, 0);
                }
                if (playerData[playerid][pSpawnPoint] == 1)
                {
                    new faction = playerData[playerid][pFaction];
                    if (faction == -1)
                    {
                        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณเป็นประชาชนธรรมดา ระบบจึงส่งคุณมาที่จุดเกิด ''สาธารณะ''");
                        SetPlayerPos(playerid, 1220.9487, -1812.9459, 16.5938);
                        SetPlayerFacingAngle(playerid, 180.4311);
                        SetPlayerVirtualWorld(playerid, 0);
                        SetPlayerInterior(playerid, 0);
                    }
                    else
                    {
                        SetPlayerPos(playerid, factionData[faction][SpawnX], factionData[faction][SpawnY], factionData[faction][SpawnZ]);
                        SetPlayerInterior(playerid, factionData[faction][SpawnInterior]);
                        SetPlayerVirtualWorld(playerid, factionData[faction][SpawnVW]);
                        playerData[playerid][pEntrance] = factionData[faction][factionEntrance];
                    }
                }
                if (playerData[playerid][pSpawnPoint] == 2)
                {
                    SetPlayerInterior(playerid, playerData[playerid][pInterior]);
                    SetPlayerVirtualWorld(playerid, playerData[playerid][pWorld]);
                    SetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
                    SetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);
                }
				SetPlayerHealth(playerid, playerData[playerid][pHealth]);
                SetPlayerWeather(playerid, globalWeather);
				SetCameraBehindPlayer(playerid);
            }
            ShowPlayerStats(playerid, true);
        }
    }

    return 1;
}

 
/*hook OnPlayerConnect(playerid)
{
    SetPlayerMapIcon(playerid, 0, 1469.0569, -1645.2090, 16.2469, 30, 0, MAPICON_GLOBAL); // สถานีตำรวจ
    SetPlayerMapIcon(playerid, 1, 1266.5504, -1337.7650, 13.3336, 22, 0, MAPICON_GLOBAL); // โรงพยาบาล 
    SetPlayerMapIcon(playerid, 2, 1273.0791, -1554.1975, 13.5452, 55, 0, MAPICON_GLOBAL); // ร้านขายรถ
	SetPlayerMapIcon(playerid, 3, 1003.7355,  264.0209,  29.8106, 63, 0, MAPICON_GLOBAL); // งานข้าว
	SetPlayerMapIcon(playerid, 4, -245.3150, -1452.0371, 4.6461, 62, 0, MAPICON_GLOBAL);   // งานทุเรียน
    SetPlayerMapIcon(playerid, 5, 1454.2629, -82.7367, 19.0866, 61, 0, MAPICON_GLOBAL);    // งานส้ม
    SetPlayerMapIcon(playerid, 6, 217.2756, -2012.5477, 5.0295, 60, 0, MAPICON_GLOBAL);   // งานตกปลา
    SetPlayerMapIcon(playerid, 7, 610.5164, 878.8968, -42.9609, 59, 0, MAPICON_GLOBAL);   // งานขุดแร่
    SetPlayerMapIcon(playerid, 8, -504.7569, -1522.9686, 10.4485, 58, 0, MAPICON_GLOBAL);  // งานรังผึ้ง
    SetPlayerMapIcon(playerid, 9, 594.9028, -1885.6313, 3.9308, 57, 0, MAPICON_GLOBAL);    // งานล็อบสเตอร์
    SetPlayerMapIcon(playerid, 10, 1129.1749, -1467.8772, 15.7356, 56, 0, MAPICON_GLOBAL); // ตลาดกลาง
    SetPlayerMapIcon(playerid, 11, 2882.4521, -1995.6956, 6.7748, 55, 0, MAPICON_GLOBAL); // งานเก็บหมึก
    SetPlayerMapIcon(playerid, 12, 1118.1722, 729.9680, 10.8203, 54, 0, MAPICON_GLOBAL);  // งานเก็บกระบองเพชร
    SetPlayerMapIcon(playerid, 13, 1933.2969, 85.4039, 30.0811, 53, 0, MAPICON_GLOBAL);   // งานผักกาด
    SetPlayerMapIcon(playerid, 14, 216.9036, -1825.0366, 4.5000, 52, 0, MAPICON_GLOBAL);  // การาจกลาง
    SetPlayerMapIcon(playerid, 15, 400.3205, -2068.3162, 7.8359, 51, 0, MAPICON_GLOBAL);  // AFK
    SetPlayerMapIcon(playerid, 16, 266.5693, -1816.9425, 4.9168, 50, 0, MAPICON_GLOBAL);  // วอโซน
    SetPlayerMapIcon(playerid, 17, 256.0540, -1801.7892, 4.8231, 49, 0, MAPICON_GLOBAL);  // บาคาร่า
    SetPlayerMapIcon(playerid, 18, 277.6329, -1801.2725, 4.9559, 48, 0, MAPICON_GLOBAL);  // ร้านสกิน
    SetPlayerMapIcon(playerid, 19, 2765.7522, -2426.3218, 13.4324, 47, 0, MAPICON_GLOBAL); // เลเบล
    SetPlayerMapIcon(playerid, 20, 2772.7227, -2442.5129, 13.6373, 46, 0, MAPICON_GLOBAL); // ตู้เซฟ
    return 1;
}*/
/*hook OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
    
	if(issuerid != INVALID_PLAYER_ID) // If not self-inflicted
    {
		new Float:health, Float:armour;

		GetPlayerHealth(playerid, health);
        GetPlayerArmour(playerid, armour);

		if (weaponid == 0)
	    {
		    if (useitemdamas[issuerid] == 1)
		    {
		    	SetPlayerHealth(playerid, health-2);
		    	return 1;
		    }
		}

		if (weaponid == 1)
	    {
		    // สนับ
		    if (useitemdamas[issuerid] == 1)
		    {
		    	SetPlayerHealth(playerid, health-3);
		    	return 1;
		    }
		}

		if (weaponid == 7)
	    {
		    // ไม้สนุ๊ก
		    if (useitemdamas[issuerid] == 1)
		    {
		    	SetPlayerHealth(playerid, health-4);
		    	return 1;
		    }
		}

		if (weaponid == 5)
	    {
		    // ไม้เบสบอล
		    if (useitemdamas[issuerid] == 1)
		    {
		    	SetPlayerHealth(playerid, health-6);
		    	return 1;
		    }
		}

		if (weaponid == 2)
	    {
		    // ไม้กอล์ฟ
		    if (useitemdamas[issuerid] == 1)
		    {
		    	SetPlayerHealth(playerid, health-7);
		    	return 1;
		    }
		}

		if (weaponid == 8)
	    {
		    // คาตานะ
		    if (useitemdamas[issuerid] == 1)
		    {
		    	SetPlayerHealth(playerid, health-12);
		    	return 1;
		    }
		}
	}	    
	return 1;
}*/

/*public OnPlayerDeath(playerid, killerid, reason)
{
    SendDeathMessage(killerid, playerid, reason);
    playerData[playerid][pHealth] = 100.0;

    ResetPlayerWeaponsEx(playerid);
    ResetPlayer(playerid);


    if(GetPVarInt(playerid, "DisableFPS") == 0) {
		SetPVarInt(playerid, "DisableFPS", 1);
     	DestroyObject(CameraFirstPerson[playerid]);
		SetCameraBehindPlayer(playerid);
      	IsFPS[playerid] = 0;
 	}

	if (playerData[playerid][pStunned] > 0)
	{
        playerData[playerid][pStunned] = 0;
        TogglePlayerControllable(playerid, true);
	}

	if (playerData[playerid][pArmorOn])
	{
	    RemovePlayerAttachedObject(playerid, 9);
	    playerData[playerid][pArmorOn] = false;
	}
	if (playerData[playerid][pTazer])
	{
	    playerData[playerid][pTazer] = 0;
	}

	if (GetPlayerWantedLevelEx(playerid) > 0)
	{
	    playerData[playerid][pPrisoned] = 1;
	    playerData[playerid][pJailTime] = GetPlayerWantedLevelEx(playerid)*300;
	}
	else
	{
	    if (!IsPlayerInRangeOfPoint(playerid, 60.0, 1912.2245,-1388.4724,14.0504))
	    {
		    if (playerData[playerid][pInjured] == 0)
			{
		        playerData[playerid][pInjured] = 1;

		        if (GetFactionOnline(FACTION_MEDIC) > 0)
		        {
					playerData[playerid][pInjuredTime] = 300;
				}
				else
				{
				    playerData[playerid][pInjuredTime] = 300;
				}

		        playerData[playerid][pInterior] = GetPlayerInterior(playerid);
		    	playerData[playerid][pWorld] = GetPlayerVirtualWorld(playerid);

		    	GetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
		    	GetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);
			}
			else
			{
			    playerData[playerid][pInjured] = 0;
			    playerData[playerid][pInjuredTime] = 0;
			    playerData[playerid][pHospital] = 1;
			}
		}
		else
		{
			if (playerData[playerid][pInjured] == 0)
			{
		        playerData[playerid][pInjured] = 1;

				inLabel[playerid] = 1;

				playerData[playerid][pInterior] = GetPlayerInterior(playerid);
				playerData[playerid][pWorld] = GetPlayerVirtualWorld(playerid);

				GetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
				GetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);

			}
			else
			{
			    playerData[playerid][pInjured] = 0;
			    playerData[playerid][pInjuredTime] = 0;
			    playerData[playerid][pHospital] = 1;
			}
		}
	}
	ResetPlayerDeath(playerid);
    UpdatePlayerDeaths(playerid);
	UpdatePlayerKills(killerid, playerid);
//	SendClientMessageEx(playerid, COLOR_WHITE, "DEBUG: OnPlayerDeath (playerid: %d, killerid: %d)", playerid, killerid);
	return 1;
}*/

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	return 1;
}

Float:ExpToPecentage(playerid)
{
	new Float:exp = (playerData[playerid][pExp]*100/GetPlayerRequiredExp(playerid));
	return exp;
}

public OnPlayerUpdate(playerid)
{
    new Float:hp, Float:ap;
	GetPlayerHealth(playerid, hp);
	GetPlayerArmour(playerid, ap);

 	if(GetPlayerWeapon(playerid) != 4)
 	{
 	    if(bananapook[playerid] == 1)
 	    {
		    RemovePlayerAttachedObject(playerid, 0);
		    bananapook[playerid] = 99;
 	    }
 	}
 	else if(GetPlayerWeapon(playerid) == 4)
 	{
 	    if(bananapook[playerid] == 99)
 	    {
			SetPlayerAttachedObject(playerid,0, 19578, 6, 0.058999, 0.027000, 0.142000, -86.199974, 176.500015, 80.899925, 1.946000, 1.655999, 1.304000);
			bananapook[playerid] = 1;
 	    }
 	}

 	if(GetPlayerWeapon(playerid) != 7)
 	{
 	    if(sira[playerid] == 1)
 	    {
		    RemovePlayerAttachedObject(playerid, 0);
		    sira[playerid] = 99;
 	    }
 	}
 	else if(GetPlayerWeapon(playerid) == 7)
 	{
 	    if(sira[playerid] == 99)
 	    {
			SetPlayerAttachedObject(playerid,0, 3524, 6, 0.069000, -0.039000, 0.511000, 4.900000, 1.399999, 86.200019, 0.270999, 0.341999, 0.291000);
			sira[playerid] = 1;
 	    }
 	}

 	if(GetPlayerWeapon(playerid) != 5)
 	{
 	    if(Nongkai[playerid] == 1)
 	    {
		    RemovePlayerAttachedObject(playerid, 0);
		    Nongkai[playerid] = 99;
 	    }
 	}
 	else if(GetPlayerWeapon(playerid) == 5)
 	{
 	    if(Nongkai[playerid] == 99)
 	    {
			SetPlayerAttachedObject(playerid,0, 19847, 6, 0.064999, 0.036999, 0.000000, -86.599983, -4.499999, -0.699999, 1.135000, 2.098999, 1.000000);
			Nongkai[playerid] = 1;
 	    }
 	}

	if (GetPlayerExp(playerid) >= GetPlayerRequiredExp(playerid))
	{
		GivePlayerLevel(playerid, 1);
		SetPlayerExp(playerid, 0);
		SendClientMessageEx(playerid, COLOR_YELLOW, "*** {FFFFFF}คุณเลเวลอัพเป็นเลเวล {00FF00}%d{FFFFFF} ยินดีด้วย", GetPlayerLevel(playerid));
	}
	if (GetPlayerMoney(playerid) != playerData[playerid][pMoney])
	{
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, playerData[playerid][pMoney]);
	}
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    if(newkeys & KEY_NO)
	{
		if (IsPlayerInRangeOfPoint(playerid, 2.0, 1549.5214,-1790.6831,15.4356))
		{
	    	if (robCount > 0)
		    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รอเวลาอีก %s วินาที ถึงปล้นได้อีกครั้ง", FormatNumber(robCount));

			new price = randomEx(1000, 3000);
			robCount = 1800;
			GivePlayerMoneyEx(playerid, price);
			GivePlayerWanted(playerid, 3);
			SendClientMessageToAllEx(COLOR_LIGHTRED, "[ปล้นธนาคาร] %s ได้ทำการปล้นธนาคารและได้รับเงินไปจำนวน %s", GetPlayerNameEx(playerid), FormatMoney(price));
		}
	}
	if (newkeys & KEY_NO)
	{
		if (ATM_Nearest(playerid) != -1)
		{

			// แสดง TextDraw ของธนาคาร
			ShowPlayerBank_BxShop(playerid, true);

			// อัปเดตค่าใน TextDraw (ยอดเงิน, ไอดี, ชื่อ)
			TimerBank_BxShop(playerid);

			return 1;
		}
	}

	if (newkeys & KEY_NO)
	{
		if (FactionLocker_Nearest(playerid) != -1)
        {
		new factionid = playerData[playerid][pFaction];
		new id = FactionLocker_Nearest(playerid);

		if (factionid == -1)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

		if (id == -1)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่หน้าตู้เซฟ");

		if (id != factionid)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถใช้งานตู้เซฟนี้ได้");

		if (factionData[factionid][factionType] != FACTION_GANG)
			Dialog_Show(playerid, DIALOG_LOCKER, DIALOG_STYLE_LIST, "[ตู้เซฟ]", "คำสั่งเริ่มงาน\nตู้เสื้อผ้า\nตู้อาวุธ", "ตกลง", "ออก");
		else
			Dialog_Show(playerid, DIALOG_LOCKER, DIALOG_STYLE_LIST, "[ตู้เซฟ]", "ตู้เสื้อผ้า\nตู้อาวุธ", "ตกลง", "ออก");

		return 1;
		}
    }

	if (newkeys & KEY_NO)
	{
		if (Shop_Nearest(playerid) != -1) // ตรวจสอบว่าผู้เล่นอยู่ใกล้ร้านค้า
		{
			// แสดง TextDraw ของร้านค้า
			ShowShopShowShopUR(playerid, true);

			return 1;
		}
	}
    if (newkeys & KEY_CTRL_BACK)
	{
		// เรียกรถ
		if (Callcar_Nearest(playerid) != -1)
		{
			new query[128];
			mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `vehicles` WHERE `carOwnerID` = %d", playerData[playerid][pID]);
			mysql_tquery(g_SQL, query, "OnQueryFinished", "dd", playerid, THREAD_LIST_VEHICLES);
			Callcar_Nearest(playerid);
			return 1;
		}
	}
	if (newkeys & KEY_YES)
	{
		if (inBoxingZone[playerid] > 0)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณอยู่ในโซน Boxing ไม่สามารถเปิดกระเป๋าได้");

	    if (playerData[playerid][pJailTime] > 0)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดคุกอยู่ ไม่สามารถเปิดกระเป๋าได้");
		
		if (ProgressState[playerid] == 1)
			return ErrorMsg(playerid, "คุณกำลัง Progress อยู่ไม่สามารถเปิดกระเป๋าได้ !");

        if (playerData[playerid][pCuffed] > 0)
            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณถูกจับอยู่ ไม่สามารถเปิดกระเป๋าได้");

	    ShowMenuHelp(playerid);
	}
	if (newkeys & KEY_FIRE && !IsPlayerInAnyVehicle(playerid))
	{
		static
			id = -1;

		if ((id = Entrance_Nearest(playerid)) != -1)
	    {
	        if (entranceData[id][entranceLocked])
	        {
			    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ประตูนี้ถูกล็อคชั่วคราว");

				SendClientMessage(playerid, COLOR_YELLOW, "[ระบบ]: กรุณารอ LoadObject และ Map เวลา 5 วินาที");
				FreeTimer(playerid, 5000);
			}
			if (entranceData[id][entranceFaction] == -1)
			{
			    SetPlayerPos(playerid, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]);
				SetPlayerFacingAngle(playerid, entranceData[id][entranceIntA]);

				SetPlayerInterior(playerid, entranceData[id][entranceInterior]);
				SetPlayerVirtualWorld(playerid, entranceData[id][entranceWorld]);

				SetCameraBehindPlayer(playerid);
				playerData[playerid][pEntrance] = entranceData[id][entranceID];
			}
			else
			{
			    if (playerData[playerid][pFaction] == entranceData[id][entranceFaction])
			    {
				    SetPlayerPos(playerid, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]);
					SetPlayerFacingAngle(playerid, entranceData[id][entranceIntA]);

					SetPlayerInterior(playerid, entranceData[id][entranceInterior]);
					SetPlayerVirtualWorld(playerid, entranceData[id][entranceWorld]);

					SetCameraBehindPlayer(playerid);
					playerData[playerid][pEntrance] = entranceData[id][entranceID];
				}
			}
			return 1;
		}
		if ((id = Entrance_Inside(playerid)) != -1 && IsPlayerInRangeOfPoint(playerid, 2.5, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]))
	    {
	        SetPlayerPos(playerid, entranceData[id][entrancePosX], entranceData[id][entrancePosY], entranceData[id][entrancePosZ]);
			SetPlayerFacingAngle(playerid, entranceData[id][entrancePosA] - 180.0);

			SetPlayerInterior(playerid, entranceData[id][entranceExterior]);
			SetPlayerVirtualWorld(playerid, entranceData[id][entranceExteriorVW]);

			SendClientMessage(playerid, COLOR_YELLOW, "[ระบบ]: กรุณารอ LoadObject และ Map เวลา 5 วินาที");
			FreeTimer(playerid, 5000);

			SetCameraBehindPlayer(playerid);
			playerData[playerid][pEntrance] = Entrance_GetLink(playerid);
			return 1;
		}
	}
    if (newkeys & KEY_NO && !IsPlayerInAnyVehicle(playerid))
    {

    	new id = -1;

	    if ((id = House_Nearest(playerid)) != -1)
	    {
			SetPlayerPos(playerid, HouseData[id][houseInt][0], HouseData[id][houseInt][1], HouseData[id][houseInt][2]);
			SetPlayerFacingAngle(playerid, HouseData[id][houseInt][3]);

			SetPlayerInterior(playerid, HouseData[id][houseInterior]);
			SetPlayerVirtualWorld(playerid, HouseData[id][houseID] + 5000);

			SetCameraBehindPlayer(playerid);
			playerData[playerid][pHouse] = HouseData[id][houseID];
			return 1;
		}

		if ((id = House_Inside(playerid)) != -1 && IsPlayerInRangeOfPoint(playerid, 2.5, HouseData[id][houseInt][0], HouseData[id][houseInt][1], HouseData[id][houseInt][2]))
	    {
			SetPlayerPos(playerid, HouseData[id][housePos][0], HouseData[id][housePos][1], HouseData[id][housePos][2]);
			SetPlayerFacingAngle(playerid, HouseData[id][housePos][3] - 180.0);

			SetPlayerInterior(playerid, HouseData[id][houseExterior]);
			SetPlayerVirtualWorld(playerid, HouseData[id][houseExteriorVW]);

			SetCameraBehindPlayer(playerid);
			playerData[playerid][pHouse] = -1;

			return 1;
		}
	}

	if (newkeys & KEY_NO && IsPlayerInAnyVehicle(playerid))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
	    new Float:vehiclehealth;
	    GetVehicleHealth(vehicleid, vehiclehealth);

		if (!IsEngineVehicle(vehicleid))
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะคันนี้ไม่มีเครื่องยนต์");

		if (vehiclehealth <= 350)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะคันนี้มีความเสียหายมากเกินไป ไม่สามารถสตาร์ทได้");

		if (vehicleFuel[vehicleid] <= 0)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มีน้ำมันเลย");

		if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
			switch (GetEngineStatus(vehicleid))
			{
			    case false:
			    {
				    SetEngineStatus(vehicleid, true);
			        SendClientMessage(playerid, COLOR_WHITE, "คุณได้บิดกุญแจเพื่อ{00FF00}สตาร์ท{FFFFFF}เครื่องยนต์");
				}
				case true:
				{
					SetEngineStatus(vehicleid, false);
			        SendClientMessage(playerid, COLOR_WHITE, "คุณได้บิดกุญแจเพื่อ{FF0000}ดับ{FFFFFF}เครื่องยนต์");
				}
			}
		}
	}

	if (newkeys & KEY_NO && !IsPlayerInAnyVehicle(playerid))
	{
	    if (IsPlayerInRangeOfPoint(playerid, 2.5, 2120.0732,1482.9640,10.8203))
	    {
			if (!playerData[playerid][pInjured])
			    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ในสถานะบาดเจ็บ");

			SetPlayerHealth(playerid, 100);
			SetPlayerWeather(playerid, globalWeather);
		    playerData[playerid][pInjured] = 0;
		    playerData[playerid][pInjuredTime] = 0;
		    ClearAnimations(playerid);
		    PlayerTextDrawHide(playerid, PlayerDeathTD[playerid]);
		    ShowPlayerStats (playerid, true);

		    SendClientMessage(playerid, COLOR_LIGHTRED, "+ {FFFFFF}คุณได้รักษาอาการบาดเจ็บของคุณแล้ว");
	    

			if (Shop_Nearest(playerid) != -1)
			{
				ShowShopShowShopUR(playerid, true);
				return 1;
			}
		}

        // เบิกเรือ
        if (IsPlayerInRangeOfPoint(playerid, 2.0, 154.9825,-1964.4180,3.7734))
		{
			Dialog_Show(playerid, DIALOG_BOAT_FREE, DIALOG_STYLE_TABLIST_HEADERS, "{7BFC6C}เบิกเรือ", "\
   				รุ่นรถ\tราคา\n\
				เรือประมง\t{00FF00}$500", "เลือก", "ออก");
		}

        // --> ของขวัญเด็กใหม่
        if (IsPlayerInRangeOfPoint(playerid, 3.0, 1653.2191,-1349.3755,17.4297))
        {
			new query[512];

            if (playerData[playerid][pGiftBox] == 1)
                return SendClientMessage(playerid, COLOR_GREY, "คุณได้รับของขวัญเด็กใหม่แล้ว");

            playerData[playerid][pGiftBox] = 1;

			GivePlayerMoneyEx(playerid, 10000);
            Inventory_Add(playerid, "พิซซ่า", 5);
            Inventory_Add(playerid, "น้ำเปล่า", 5);
			Inventory_Add(playerid, "ปอมจะนั่ง", 1);
			Inventory_Add(playerid, "แฟชั่นผู้เล่นใหม่", 1);

			mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', 585, 0, 100.0, '552.8177', '-1284.1307', '17.0007', '0.0000')", playerData[playerid][pID], GetPlayerNameEx(playerid));
			mysql_tquery(g_SQL, query);

			SendClientMessage(playerid, COLOR_GREY, "|========================================|");
			SendClientMessage(playerid, COLOR_PINK, "[ของขวัญเด็กใหม่] : {FFFFFF}คุณได้รับ เงินเขียว + 10k");
			SendClientMessage(playerid, COLOR_PINK, "[ของขวัญเด็กใหม่] : {FFFFFF}คุณได้รับ พิซซ่า + 5");
			SendClientMessage(playerid, COLOR_PINK, "[ของขวัญเด็กใหม่] : {FFFFFF}คุณได้รับ น้ำเปล่า + 5");
			SendClientMessage(playerid, COLOR_PINK, "[ของขวัญเด็กใหม่] : {FFFFFF}คุณได้รับ ปอมจะนั่ง + 1");
			SendClientMessage(playerid, COLOR_PINK, "[ของขวัญเด็กใหม่] : {FFFFFF}คุณได้รับ แฟชั่นผู้เล่นใหม่ + 1");
			SendClientMessage(playerid, COLOR_PINK, "[ของขวัญเด็กใหม่] : {FFFFFF}คุณได้รับ รถ MINI COOPER ");
			SendClientMessage(playerid, COLOR_GREY, "|========================================|");
            
            return 1;
        }
	}

	return 1;
}

Dialog:DIALOG_TYPE_PAINTJOBS(playerid, response, listitem, inputtext[])
{
	if(!response)
	{
		SetCameraBehindPlayer(playerid);
	}
	if(response)
	{
		switch(listitem)// Checking which list item was selected
		{
			case 0:// Paintjobs
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			{
				new car = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(car,0);
				SendClientMessage(playerid,COLOR_WHITE,"คุณได้แต่งยานพาหนะของคุณเรียบร้อย");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
				PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			}
				else
			{
				SendClientMessage(playerid,COLOR_WHITE,"คำสั่งนี้สำหรับยานพาหนะที่มี 4 ล้อเท่านั้น");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			}
			case 1: // Colors
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			{
				new car = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(car,1);
				SendClientMessage(playerid,COLOR_WHITE,"คุณได้แต่งยานพาหนะของคุณเรียบร้อย");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
				PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			}
				else
			{
				SendClientMessage(playerid,COLOR_WHITE,"คำสั่งนี้สำหรับยานพาหนะที่มี 4 ล้อเท่านั้น");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			}
			case 2: // Exhausts
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			{
				new car = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(car,2);
				SendClientMessage(playerid,COLOR_WHITE,"คุณได้แต่งยานพาหนะของคุณเรียบร้อย");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
				PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			}
				else
			{
				SendClientMessage(playerid,COLOR_WHITE,"คำสั่งนี้สำหรับยานพาหนะที่มี 4 ล้อเท่านั้น");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			}
			case 3: // Front Bumpers
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			{
				new car = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(car,3);
				SendClientMessage(playerid,COLOR_WHITE,"คุณได้แต่งยานพาหนะของคุณเรียบร้อย");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
				PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			}
				else
			{
				SendClientMessage(playerid,COLOR_WHITE,"คำสั่งนี้สำหรับยานพาหนะที่มี 4 ล้อเท่านั้น");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			}
			case 4: // Rear Bumpers
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			{
				new car = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(car,4);
				SendClientMessage(playerid,COLOR_WHITE,"คุณได้แต่งยานพาหนะของคุณเรียบร้อย");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
				PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			}
				else
			{
				SendClientMessage(playerid,COLOR_WHITE,"คำสั่งนี้สำหรับยานพาหนะที่มี 4 ล้อเท่านั้น");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			}
			case 5:
			{
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			case 6:
			{
				Dialog_Show(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide", "Enter", "Close");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_AGPS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				new
				    count,
				    var[32],
					string[512],
					string2[512];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 1)
				    {
						format(string, sizeof(string), "%d\t%s\n", i, gpsData[i][gpsName]);
						strcat(string2, string);
						format(var, sizeof(var), "AGPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ไอดี\tชื่อ\n%s", string2);
				Dialog_Show(playerid, DIALOG_AGPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[สถานที่ต่าง ๆ]", string, "เลือก", "ปิด");
		    }
		    case 1:
		    {
				new
				    count,
				    var[32],
					string[512],
					string2[512];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 2)
				    {
						format(string, sizeof(string), "%d\t%s\n", i, gpsData[i][gpsName]);
						strcat(string2, string);
						format(var, sizeof(var), "AGPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ไอดี\tชื่อ\n%s", string2);
				Dialog_Show(playerid, DIALOG_AGPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[สถานที่ต่าง ๆ]", string, "เลือก", "ปิด");
		    }
		    case 2:
		    {
				new
				    count,
				    var[32],
					string[512],
					string2[512];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 3)
				    {
						format(string, sizeof(string), "%d\t%s\n", i, gpsData[i][gpsName]);
						strcat(string2, string);
						format(var, sizeof(var), "AGPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ไอดี\tชื่อ\n%s", string2);
				Dialog_Show(playerid, DIALOG_AGPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[สถานที่ต่าง ๆ]", string, "เลือก", "ปิด");
		    }
		  /*  case 3:
		    {
				new
				    count,
				    var[32],
					string[512],
					string2[512];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 4)
				    {
						format(string, sizeof(string), "%d\t%s\n", i, gpsData[i][gpsName]);
						strcat(string2, string);
						format(var, sizeof(var), "AGPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ไอดี\tชื่อ\n%s", string2);
				Dialog_Show(playerid, DIALOG_AGPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[Event]", string, "เลือก", "ปิด");
		    }*/
		}
	}
	return 1;
}

Dialog:DIALOG_AGPSPICK(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new var[32];
	    format(var, sizeof(var), "AGPSID%d", listitem);
	    new gpsid = GetPVarInt(playerid, var);
		SetPlayerPos(playerid, gpsData[gpsid][gpsPosX], gpsData[gpsid][gpsPosY], gpsData[gpsid][gpsPosZ]);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้วาร์ปหา GPSID: %d, ชื่อสถานที่: %s, รูปแบบ GPS: %d", gpsid, gpsData[gpsid][gpsName], gpsData[gpsid][gpsType]);
	}
	return 1;
}

Dialog:DIALOG_GPS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				new
				    count,
				    var[32],
					string[4096],
					string2[4096];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 1)
				    {
						format(string, sizeof(string), "%s\t{FFA84D}(%.0f เมตร)\n", gpsData[i][gpsName], GetPlayerDistanceFromPoint(playerid, gpsData[i][gpsPosX], gpsData[i][gpsPosY], gpsData[i][gpsPosZ]));
						strcat(string2, string);
						format(var, sizeof(var), "GPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ชื่อสถานที่\tระยะทาง\n%s", string2);
				Dialog_Show(playerid, DIALOG_GPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[สถานที่ทั่วไป]", string, "เลือก", "ปิด");
		    }
		    case 1:
		    {
				new
				    count,
				    var[32],
					string[4096],
					string2[4096];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 2)
				    {
						format(string, sizeof(string), "%s\t{FFA84D}(%.0f เมตร)\n", gpsData[i][gpsName], GetPlayerDistanceFromPoint(playerid, gpsData[i][gpsPosX], gpsData[i][gpsPosY], gpsData[i][gpsPosZ]));
						strcat(string2, string);
						format(var, sizeof(var), "GPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ชื่อสถานที่\tระยะทาง\n%s", string2);
				Dialog_Show(playerid, DIALOG_GPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[งานถูกกฎหมาย]", string, "เลือก", "ปิด");
		    }
		    case 2:
		    {
				new
				    count,
				    var[32],
					string[4096],
					string2[4096];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 3)
				    {
						format(string, sizeof(string), "%s\t{FFA84D}(%.0f เมตร)\n", gpsData[i][gpsName], GetPlayerDistanceFromPoint(playerid, gpsData[i][gpsPosX], gpsData[i][gpsPosY], gpsData[i][gpsPosZ]));
						strcat(string2, string);
						format(var, sizeof(var), "GPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ชื่อสถานที่\tระยะทาง\n%s", string2);
				Dialog_Show(playerid, DIALOG_GPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[งานผิดกฎหมาย]", string, "เลือก", "ปิด");
		    }
		    /*case 3:
		    {
				new
				    count,
				    var[32],
					string[4096],
					string2[4096];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 4)
				    {
						format(string, sizeof(string), "%s\t{FFA84D}(%.0f เมตร)\n", gpsData[i][gpsName], GetPlayerDistanceFromPoint(playerid, gpsData[i][gpsPosX], gpsData[i][gpsPosY], gpsData[i][gpsPosZ]));
						strcat(string2, string);
						format(var, sizeof(var), "GPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ชื่อสถานที่\tระยะทาง\n%s", string2);
				Dialog_Show(playerid, DIALOG_GPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[Event]", string, "เลือก", "ปิด");
		    }*/
		}
	}
	return 1;
}

Dialog:DIALOG_GPSPICK(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new var[32];
	    format(var, sizeof(var), "GPSID%d", listitem);
	    new gpsid = GetPVarInt(playerid, var);
		SetPlayerCheckpoint(playerid, gpsData[gpsid][gpsPosX], gpsData[gpsid][gpsPosY], gpsData[gpsid][gpsPosZ], 3.0);
		SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้เปิดระบบ GPS ค้นหาสถานที่ชื่อ %s", gpsData[gpsid][gpsName]);
		if (gpsid == 0)
		{
			if (playerData[playerid][pQuest] == 0)
			{
				SetPVarInt(playerid, "GPSQUEST", 1);
			}
		}
		else if (gpsid == 11)
		{
			if (playerData[playerid][pQuest] == 2)
			{
				SetPVarInt(playerid, "GPSQUEST", 1);
			}
		}
	}
	return 1;
}

Dialog:DIALOG_INVENTORYMENU1(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        OnPlayerUseItem(playerid, invData[playerid][playerData[playerid][pItemSelect]][invItem]);
		    }
		    case 1:
			{
		        new string[128],
				itemquantity = invData[playerid][playerData[playerid][pItemSelect]][invQuantity];
		        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่ต้องการจะทิ้ง คุณมีอยู่ {00FF00}%d", itemquantity);
				Dialog_Show(playerid, DIALOG_INVENTORYDROP, DIALOG_STYLE_INPUT, invData[playerid][playerData[playerid][pItemSelect]][invItem], string, "ตกลง", "ปิด");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_INVENTORYMENU(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        OnPlayerUseItem(playerid, invData[playerid][playerData[playerid][pItemSelect]][invItem]);
		    }
		    case 1:
			{
				new string[1000], var[15], count;
				foreach(new i : Player)
				{
				    if (i == playerid) continue;
					if (IsPlayerNearPlayer(playerid, i, 5.0))
					{
						format(string, sizeof(string), "[ID: %d]\t%s\n", i, GetPlayerNameEx(i));
						format(var, sizeof(var), "PID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครอยู่รอบ ๆ คุณเลย");
					return 1;
				}
				Dialog_Show(playerid, DIALOG_INVENTORYGIVEID, DIALOG_STYLE_TABLIST, invData[playerid][playerData[playerid][pItemSelect]][invItem], string, "เลือก", "ปิด");
		    }
		    case 2:
			{
		        new string[128],
				itemquantity = invData[playerid][playerData[playerid][pItemSelect]][invQuantity];
		        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่ต้องการจะทิ้ง คุณมีอยู่ {00FF00}%d", itemquantity);
				Dialog_Show(playerid, DIALOG_INVENTORYDROP, DIALOG_STYLE_INPUT, invData[playerid][playerData[playerid][pItemSelect]][invItem], string, "ตกลง", "ปิด");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_INVENTORYGIVEID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new string[256], var[15];
	    new itemid = playerData[playerid][pItemSelect];
		format(var, sizeof(var), "PID%d", listitem);
		new userid = GetPVarInt(playerid, var);
		playerData[playerid][pItemOfferID] = userid;
        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่คุณต้องการจะให้ {00FF00}%s {FFFFFF}กับ {33CCFF}%s", invData[playerid][itemid][invItem], GetPlayerNameEx(userid));
		Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
	}
	return 1;
}


Dialog:DIALOG_INVENTORYGIVE(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new string[256], amount,
	    itemid = playerData[playerid][pItemSelect],
	    itemquantity = invData[playerid][itemid][invQuantity],
	    userid = playerData[playerid][pItemOfferID];

		if (sscanf(inputtext, "d", amount))
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่คุณต้องการจะให้ {00FF00}%s {FFFFFF}กับ {33CCFF}%s", invData[playerid][itemid][invItem],GetPlayerNameEx(userid));
			Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
	    	return 1;
		}

		if (amount < 1)
		{
	        format(string, sizeof(string), "{FFFFFF}จำนวนต้องไม่ต่ำกว่า 1 สำหรับ {00FF00}%s {FFFFFF}กับ {33CCFF}%s", invData[playerid][itemid][invItem],GetPlayerNameEx(userid));
			Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT,invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
	    	return 1;
		}

		if (itemquantity < amount)
		{
	        format(string, sizeof(string), "{FFFFFF}%s ของคุณมีไม่พอ {FF0000}(%d/%d)", invData[playerid][itemid][invItem], amount, itemquantity);
			Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "เลือก", "ปิด");
		    return 1;
		}

		if (Inventory_Count(userid, invData[playerid][itemid][invItem]) + amount > playerData[userid][pItemAmount])
		{
	        format(string, sizeof(string), "{FFFFFF}%s ของผู้เล่นไอดีนี้เต็มแล้ว {FF0000}(%d/%d)", invData[playerid][itemid][invItem],Inventory_Count(userid, invData[playerid][itemid][invItem]) + amount,playerData[userid][pItemAmount]);
			Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "เลือก", "ปิด");
		    return 1;
		}

		if (!IsPlayerNearPlayer(playerid, userid, 4.0))
		{
	        format(string, sizeof(string), "{FF0000}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ"); Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT,invData[playerid][itemid][invItem], string, "เลือก", "ปิด");
		    return 1;
		}
		
		for (new e = 0; e < sizeof(WeaponTradeNames); e++)
		{
			if (!strcmp(invData[playerid][itemid][invItem], WeaponTradeNames[e], true))
			{
				if (Inventory_Count(playerid, "บัตรเทรดอาวุธ") <= 0) return SendClientMessageEx(playerid, COLOR_RED, "คุณไม่มีบัตรเทรดอาวุธ");

				Inventory_Remove(playerid, "บัตรเทรดอาวุธ", 1);
			}
		}

		if (!strcmp(invData[playerid][itemid][invItem], "เหยื่อ", true))
		{
			format(string, sizeof(string), "{FFFFFF}ไม่สามารถให้ไอเท็มนี้ได้");
			Dialog_Show(playerid, SHOWONLY, DIALOG_STYLE_MSGBOX, invData[playerid][itemid][invItem], string, "ปิดหน้าต่าง", "");
	    	return 1;
		}
		// แก้บัคเกราะ & แก้บัคการให้อาวุธ
		ResetPlayerWeaponsEx(playerid);
		SetPlayerArmour(playerid, 0.0);
	    for (new i = 0; i <= 9; i++)
	    RemovePlayerAttachedObject(playerid, i);

		// หมัดไฟ
	    MudFireOn[playerid] = 0;
	    WeaponType[playerid] = 0;
	    DubFah[playerid] = 0;
	    KnifeFire[playerid] = 0;
	    MudShockOn[playerid] = 0;
	    DubOn[playerid] = 0;
	    GreenOn[playerid] = 0;

        //ให้ของผู้เล่น (ครั้งเดียวเท่านั้น)
        if (CheckInventoryIsWeapon(playerid, itemid) == 1)
        {
            Inventory_Add(userid, invData[playerid][itemid][invItem], amount, invData[playerid][itemid][invWeapon]);
        }
        else
        {
            Inventory_Add(userid, invData[playerid][itemid][invItem], amount);
        }

		
		//log2
		new strd[256];
		new DCC_Embed:embed = DCC_CreateEmbed();
		DCC_SetEmbedTitle(embed, "Log Giveitem");
		format(strd, sizeof(strd), "%s ได้ให้ไอเทม %s กับ %s จำนวน %d \n `วัน/เวลา %s`",GetPlayerNameEx(playerid),invData[playerid][itemid][invItem], GetPlayerNameEx(userid), amount, ReturnDate());
		DCC_SetEmbedDescription(embed, strd);
    	DCC_SetEmbedColor(embed, 0xFFFF00);
		DCC_SetEmbedThumbnail(embed, "https://img2.pic.in.th/pic/LOGO0f2189a16b0f7ee0.th.png");
		DCC_SendChannelEmbedMessage(DCC_FindChannelById("1401633788148318238"), embed);

        Inventory_Remove(playerid, invData[playerid][itemid][invItem], amount);
		//Inventory_Remove(playerid,"บัตรเทรดอาวุธ", amount);//pp
        SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s{FFFFFF} ได้ให้ไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} กับคุณ", GetPlayerNameEx(playerid),invData[playerid][itemid][invItem],amount);
        SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ให้ไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} กับ {33CCFF}%s", invData[playerid][itemid][invItem],amount,GetPlayerNameEx(userid));
	    playerData[playerid][pItemOfferID] = INVALID_PLAYER_ID;
	}
	return 1;
}

Dialog:DIALOG_INVENTORYDROP(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new amount, string[256],
	    itemid = playerData[playerid][pItemSelect],
		itemquantity = invData[playerid][itemid][invQuantity];
		if (sscanf(inputtext, "d", amount))
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่ต้องการจะทิ้ง คุณมีอยู่ {00FF00}%d", itemquantity);
			Dialog_Show(playerid, DIALOG_INVENTORYDROP, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
	    	return 1;
		}
		if (amount < 1 || amount > 10000)
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่ต้องการจะทิ้ง คุณมีอยู่ {00FF00}%d\n{FF0000}*** จำนวนต้องไม่ต่ำกว่า 1 และไม่เกิน 10000", itemquantity);
			Dialog_Show(playerid, DIALOG_INVENTORYDROP, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
	    	return 1;
		}
		if (invData[playerid][itemid][invQuantity] < amount)
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่ต้องการจะทิ้ง คุณมีอยู่ {00FF00}%d\n{FF0000}*** %s ของคุณมีไม่เพียงพอที่จะทิ้ง {FFFFFF}(%d/%d)", itemquantity, invData[playerid][itemid][invItem], amount, itemquantity);
			Dialog_Show(playerid, DIALOG_INVENTORYDROP, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
		    return 1;
		}
		Inventory_Remove(playerid, invData[playerid][itemid][invItem], amount);
		ApplyAnimation(playerid, "GRENADE", "WEAPON_throwu", 3.0, 0, 0, 0, 0, 0);
		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ทิ้งไอเท็ม {00FF00}%s {FFFFFF}จำนวน {00FF00}%d {FFFFFF}ชิ้น", invData[playerid][itemid][invItem], amount);

		new strd[256];
		new DCC_Embed:embed = DCC_CreateEmbed();
		DCC_SetEmbedTitle(embed, "Log Dropitem");
		format(strd, sizeof(strd), "%s ได้ทิ้งไอเทม %s จำนวน %d \n `วัน/เวลา %s`",GetPlayerNameEx(playerid),invData[playerid][itemid][invItem], amount, ReturnDate());
		DCC_SetEmbedDescription(embed, strd);
    	DCC_SetEmbedColor(embed, 0xFF0000);
		DCC_SetEmbedThumbnail(embed, "https://img2.pic.in.th/pic/LOGO0f2189a16b0f7ee0.th.png");
		DCC_SendChannelEmbedMessage(DCC_FindChannelById("1401633886047572019"), embed);
	}
	return 1;
}

Dialog:DIALOG_INVENTORY(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new var[32];
		format(var, sizeof(var), "itemlist%d", listitem);
		new item = GetPVarInt(playerid, var);

        OnPlayerClickItem(playerid, item, invData[playerid][item][invItem]);
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new vehicleid = GetPlayerVehicleID(playerid);

    SyncCamera(playerid);

	if (newstate == PLAYER_STATE_DRIVER)
	{
		if (NewbieCar[0] <= vehicleid <= NewbieCar[10])
		{
			if (playerData[playerid][pLevel] >= 3)
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะสำหรับเด็กใหม่ที่เวลต่ำกว่า 3 เท่านั้น!");
			}
			if (GetPlayerWantedLevelEx(playerid) > 0)
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใช้จักรยานได้หากคุณมีคดีติดตัว!");
			}
			if (IsABike(vehicleid))
			{
				SetEngineStatus(vehicleid, true);
			}
			return 1;
		}

		pvehicleid[playerid] = GetPlayerVehicleID(playerid);
		pmodelid[playerid] = GetVehicleModel(pvehicleid[playerid]);

		/*if (playerData[playerid][pAdmin] == 0)
		{
		    if (carData[vehicleid][carFaction] >= 0 && playerData[playerid][pFaction] != carData[vehicleid][carFaction])
		    {
		        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีกุญแจ");
		        RemovePlayerFromVehicle(playerid);
		        return 1;
		    }
		}*/

	    if(IsVehicleOwner(playerid, vehicleid) && carData[vehicleid][carTickets] > 0)
	    {
	        SendClientMessageEx(playerid, COLOR_SERVER, "รถคันนี้โดนใบสั่งจำนวน %s ในการจ่ายใบสั่งสามารถใช้ /paytickets ได้เลย", FormatMoney(carData[vehicleid][carTickets]));
	    }
		if (IsABike(vehicleid))
		{
		    SetEngineStatus(vehicleid, true);
		}
		else
		{
			KillTimer(playerData[playerid][pSpeedoTimer]);
			switch(GetEngineStatus(vehicleid))
			{
				case false: SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน] {FFFFFF}กดปุ่ม N เพื่อสตาร์ทเครื่องยนต์");
			}
			ShowPlayerSpeedo(playerid, true);
			playerData[playerid][pSpeedoTimer] = SetTimerEx("SpeedoTimer", 250, true, "dd", playerid, vehicleid);
		}
	}
	else
	{
		ShowPlayerSpeedo(playerid, false);
		pvehicleid[playerid] = 0;
	    pmodelid[playerid] = 0;
	}
	return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    if(weaponid != 0 && weaponid != 46)
    {
        if(GetPlayerAmmo(playerid) <= 1) gPlayerWeaponData[playerid][weaponid] = false;
    }
    return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	if (playerData[playerid][pDrivingTest])
	{
	    playerData[playerid][pTestStage]++;

	    if (playerData[playerid][pTestStage] < sizeof(g_arrDrivingCheckpoints))
		{
			SetPlayerCheckpoint(playerid, g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][0], g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][1], g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][2], 3.0);
		}
		else
		{
		    static
		        Float:health;

		    GetVehicleHealth(GetPlayerVehicleID(playerid), health);

		    if (health < 950.0)
				SendClientMessage(playerid, COLOR_LIGHTRED, "[กรมขนส่ง] {FFFFFF}คุณสอบไม่ผ่าน เพราะคุณสร้างความเสียหายให้รถยนต์มากเกินไป เสียใจด้วย");

		    else
			{
		        GivePlayerMoneyEx(playerid, -500);
		        GameTextForPlayer(playerid, "You've been charged ~r~$50~w~ for the test.", 5000, 1);

		        Inventory_Add(playerid, "ใบขับขี่รถยนต์", 1);
		        SendClientMessage(playerid, COLOR_GREEN, "[กรมขนส่ง] {FFFFFF}คุณสอบใบขับขี่ผ่านแล้ว ยินดีด้วย");
		        SendClientMessage(playerid, COLOR_GREEN, "[กรมขนส่ง] {FFFFFF}ทางเราขอมอบใบขับขี่รถยนต์ให้คุณ");
		        SendClientMessage(playerid, COLOR_GREEN, "[กรมขนส่ง] {FFFFFF}คุณสามารถดูใบขับขี่ได้โดยการกดปุ่ม {FFFF00}''Y''");
		    }
  			CancelDrivingTest(playerid);
		}
	}
	return 1;
}

//-----------------------------------------------------

public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
    return 1;
}

public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
	if(playerData[playerid][IsLoggedIn] == false)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องล็อคอินก่อน!");

    if (result == -1)
    {
        SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีคำสั่ง /%s อยู่ในระบบ", cmd);
        return 0;
    }

    return 1;
}

ResetPlayerConnection(playerid)
{
	for (new i = 0; i != MAX_INVENTORY; i ++)
	{
	    invData[playerid][i][invExists] = false;
	    invData[playerid][i][invQuantity] = 0;
	}
	for (new i = 0; i != MAX_CONTACTS; i ++)
	{
	    contactData[playerid][i][contactExists] = false;
	    contactData[playerid][i][contactID] = 0;
	    contactData[playerid][i][contactNumber] = 0;
	    ListedContacts[playerid][i] = -1;
	}
	playerData[playerid][pRegisterDate][0] = EOS;
	playerData[playerid][pGender] = 0;
	playerData[playerid][pBirthday][0] = EOS;
	playerData[playerid][pAdmin] = 0;
	playerData[playerid][pKills] = 0;
	playerData[playerid][pDeaths] = 0;
	playerData[playerid][pMoney] = 0;
	playerData[playerid][pBankMoney] = 0;
	playerData[playerid][pRedMoney] = 0;
	playerData[playerid][pLevel] = 1;
	playerData[playerid][pExp] = 0;
	playerData[playerid][pMinutes] = 0;
	playerData[playerid][pHours] = 0;
	playerData[playerid][pPos_X] = 0.000;
	playerData[playerid][pPos_Y] = 0.000;
	playerData[playerid][pPos_Z] = 0.000;
	playerData[playerid][pPos_A] = 0.000;
	playerData[playerid][pSkin] = 0;
	playerData[playerid][pInterior] = 0;
	playerData[playerid][pWorld] = 0;
	playerData[playerid][pTutorial] = 0;
	playerData[playerid][pSpawnPoint] = 0;

	playerData[playerid][pThirsty] = 0;
	playerData[playerid][pHungry] = 0;

	playerData[playerid][pHealth] = 0.0;
	playerData[playerid][pInjured] = 0;
	playerData[playerid][pInjuredTime] = 0;

	playerData[playerid][pHospital] = -1;

	playerData[playerid][IsLoggedIn] = false;
	playerData[playerid][LoginAttempts] = 0;
	playerData[playerid][LoginTimer] = 0;

	playerData[playerid][pFactionOffer] = INVALID_PLAYER_ID;
	playerData[playerid][pFactionOffered] = -1;
	playerData[playerid][pFaction] = -1;
	playerData[playerid][pFactionID] = -1;
	playerData[playerid][pFactionRank] = 0;
	playerData[playerid][pFactionEdit] = -1;
	playerData[playerid][pSelectedSlot] = -1;

	playerData[playerid][pDisableFaction] = 0;
	playerData[playerid][pOnDuty] = false;
	playerData[playerid][pArmorOn] = false;
	playerData[playerid][pCuffed] = 0;

	playerData[playerid][pPrisoned] = 0;
	playerData[playerid][pPrisonOut] = 0;
	playerData[playerid][pJailTime] = 0;

	playerData[playerid][pEntrance] = -1;

	playerData[playerid][pCarSeller] = INVALID_PLAYER_ID;
	playerData[playerid][pCarOffered] = -1;
	playerData[playerid][pCarValue] = 0;

	playerData[playerid][pMaxItem] = 8;
	playerData[playerid][pItemAmount] = 20;
	playerData[playerid][pItemSelect] = 0;
	playerData[playerid][pItemOfferID] = INVALID_PLAYER_ID;

	playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
	playerData[playerid][pMecOfferPrice] = 0;

	playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
	playerData[playerid][pMedicOfferPrice] = 0;

	playerData[playerid][pRoadblock] = -1;

	playerData[playerid][pPhone] = 0;
	playerData[playerid][pPhoneOff] = 0;

	playerData[playerid][pIncomingCall] = 0;
	playerData[playerid][pCallLine] = INVALID_PLAYER_ID;

	playerData[playerid][pEmergency] = 0;
//	playerData[playerid][pPlaceAd] = 0;

	playerData[playerid][pMarker] = 0;

	playerData[playerid][pWanted] = 0;
	playerData[playerid][pWantedTime] = 0;

	playerData[playerid][pTransfer] = INVALID_PLAYER_ID;

	playerData[playerid][pColor1] = -1;
	playerData[playerid][pColor2] = -1;

	playerData[playerid][pPaintjob] = -1;

	playerData[playerid][pDrivingTest] = 0;
	playerData[playerid][pTestStage] = 0;
	playerData[playerid][pTestWarns] = 0;

	playerData[playerid][pEventBackX] = 0.000;
	playerData[playerid][pEventBackY] = 0.000;
	playerData[playerid][pEventBackZ] = 0.000;

	playerData[playerid][pEventBackInterior] = 0;
	playerData[playerid][pEventBackWorld] = 0;
	playerData[playerid][pEventGo] = 0;

	playerData[playerid][pOOCSpam] = 0;

	playerData[playerid][pVip] = 0;

	playerData[playerid][pQuest] = 0;
	playerData[playerid][pQuestProgress] = 0;

	playerData[playerid][pBan] = 0;
	playerData[playerid][pBanReason][0] = EOS;

	playerData[playerid][pVehicleKeys] = INVALID_VEHICLE_ID;

	playerData[playerid][pTazer] = 0;
	playerData[playerid][pStunned] = 0;

	playerData[playerid][pITEMCODE1] = 0;
	playerData[playerid][pAnims1] = 0;
	playerData[playerid][pMarryOn] = 0;
	shopBuyType[playerid] = 0;

	playerData[playerid][pPVP] = 0;
	playerData[playerid][pPVPFreeze] = 0;
	playerData[playerid][pHelmetOn] = false;

	playerData[playerid][pWorkOn] = INVALID_STREAMER_ID;
}

ResetPlayerDeath(playerid)
{
	if (playerData[playerid][pDrivingTest])
	    DestroyVehicle(playerData[playerid][pTestCar]);

    playerData[playerid][pDrivingTest] = 0;
}

ResetPlayerDisconnection(playerid)
{
	if (playerData[playerid][pDragged])
	    KillTimer(playerData[playerid][pDragTimer]);

	if (playerData[playerid][pDrivingTest])
	    DestroyVehicle(playerData[playerid][pTestCar]);

	if (playerData[playerid][pExpShow])
	    KillTimer(playerData[playerid][pExpTimer]);

	if (playerData[playerid][pWorkOn] != INVALID_STREAMER_ID)
	    playerData[playerid][pWorkOn] = INVALID_STREAMER_ID;

	foreach (new i : Player)
	{
		if (playerData[i][pFactionOffer] == playerid)
		{
		    playerData[i][pFactionOffer] = INVALID_PLAYER_ID;
		    playerData[i][pFactionOffered] = -1;
		}
		if (playerData[i][pDraggedBy] == playerid)
		{
		    KillTimer(playerData[i][pDragTimer]);

		    playerData[i][pDragged] = 0;
            playerData[i][pDraggedBy] = INVALID_PLAYER_ID;
		}
		if (playerData[i][pCarSeller] == playerid)
		{
		    playerData[i][pCarSeller] = INVALID_PLAYER_ID;
		    playerData[i][pCarOffered] = -1;
		}
		if (playerData[i][pMecOfferID] == playerid)
		{
		    playerData[i][pMecOfferID] = INVALID_PLAYER_ID;
		    playerData[i][pMecOfferPrice] = 0;
		}
		if (playerData[i][pMedicOfferID] == playerid)
		{
			playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
			playerData[playerid][pMedicOfferPrice] = 0;
		}
	}
}

CancelDrivingTest(playerid)
{
	if (playerData[playerid][pDrivingTest])
	{
 		SetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
 		SetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);

  		SetPlayerInterior(playerid, playerData[playerid][pInterior]);
  		SetPlayerVirtualWorld(playerid, playerData[playerid][pWorld]);

		DisablePlayerCheckpoint(playerid);
  		SetCameraBehindPlayer(playerid);

		DestroyVehicle(playerData[playerid][pTestCar]);
  		playerData[playerid][pDrivingTest] = false;
	}
	return 1;
}

ResetPlayerWantedLevelEx(playerid)
{
	SetPlayerWantedLevel(playerid, 0);
	playerData[playerid][pWanted] = 0;
	playerData[playerid][pWantedTime] = 0;
	return 1;
}

GivePlayerWanted(playerid, level)
{
	SetPlayerWantedLevel(playerid, GetPlayerWantedLevelEx(playerid)+level);
	playerData[playerid][pWanted] += level;
	return 1;
}

GetPlayerWantedLevelEx(playerid)
{
	return (playerData[playerid][pWanted]);
}

/*hook OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
    new Float:hp, Float:armor;
    GetPlayerHealth(damagedid, hp);
    GetPlayerArmour(damagedid, armor);

	if (damagedid != INVALID_PLAYER_ID)
	{
		// ต้องถืออาวุธที่ไม่ใช่หมัด
	    if (GetPlayerWeapon(playerid) > 0)
	    {
			// ความทนทานอาวุธ
			new itemid = playerData[playerid][pItemSelect];
	 		if (CheckInventoryIsWeapon(playerid, itemid) == 1)
	 		{
				DamageCount[playerid] ++;

				if (DamageCount[playerid] >= 10)
				{
					invData[playerid][itemid][invWeapon] -= 1;
					DamageCount[playerid] = 0;

					new query[256];
					mysql_format(g_SQL, query, sizeof(query), "UPDATE `inventory` SET `invWeapon` = '%d' WHERE `invID` = '%d'", invData[playerid][itemid][invWeapon], invData[playerid][itemid][invID]);
					mysql_tquery(g_SQL, query);

					// ถ้าค่าความทน <= 0
					if (invData[playerid][itemid][invWeapon] <= 0)
					{
					    Inventory_Remove(playerid, invData[playerid][itemid][invItem]);
					    SendClientMessage(playerid, COLOR_LIGHTRED, "อาวุธของคุณเสียหายหนัก, ทำให้อาวุธของคุณหายไป");
					//}
				}
			}
		}

	    for(new Sz; Sz < MAX_SZ; Sz++)//safezone
	    {
	  		if(IsPlayerInRangeOfPoint(playerid, SafeZoneInfo[Sz][szSize], SafeZoneInfo[Sz][szPosX], SafeZoneInfo[Sz][szPosY], SafeZoneInfo[Sz][szPosZ]))
	  		{
			    TogglePlayerControllable(playerid, false);
				playerData[playerid][pStunned] = 10;
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, COLOR_LIGHTRED, "(( คุณไม่สามารถทำดาเมจบริเวณนี้ได้! ))");
				return 1;
			}

			if (playerData[playerid][pDev] != 1)
			{
				if (playerData[damagedid][pDev] == 1)
				{
					playerData[playerid][pStunned] = 3;
					TogglePlayerControllable(playerid, 0);
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถทำร้าย Developer ได้");
				}
			}
		}

		if (playerData[playerid][pTazer] && playerData[damagedid][pStunned] < 1 && weaponid == 23)
		{
			if (GetPlayerDistanceFromPlayer(playerid, damagedid) > 30.0)
				return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้ร้ายต้องอยู่ในระยะเท่านั้น 30 เมตร");

			playerData[damagedid][pStunned] = 3;
			TogglePlayerControllable(damagedid, 0);

			//ApplyAnimation(damagedid, "CRACK", "crckdeth4", 4.0, 0, 0, 0, 1, 0, 1);

			SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ยิงปืนยิงล้มใส่ %s", GetPlayerNameEx(playerid), GetPlayerNameEx(damagedid));
			return 1;
		}

		if (playerData[playerid][pTazer] && playerData[damagedid][pStunned] < 1 && weaponid == 23)
		{
			if (GetPlayerDistanceFromPlayer(playerid, damagedid) > 30.0)
				return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้ร้ายต้องอยู่ในระยะเท่านั้น 30 เมตร");

			playerData[damagedid][pStunned] = 10;
			TogglePlayerControllable(damagedid, 0);

			//ApplyAnimation(damagedid, "CRACK", "crckdeth4", 4.0, 0, 0, 0, 1, 0, 1);

			SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ยิงปืนช็อตไฟฟ้าใส่ %s", GetPlayerNameEx(playerid), GetPlayerNameEx(damagedid));
		}

	   	for(new Sz; Sz < MAX_SZ; Sz++)
		{
			if(IsPlayerInRangeOfPoint(playerid, SafeZoneInfo[Sz][szSize], SafeZoneInfo[Sz][szPosX], SafeZoneInfo[Sz][szPosY], SafeZoneInfo[Sz][szPosZ]))
			{
				if(playerData[playerid][pAdmin] == 0)
		 		{
		 		    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 1, 0, 0, 0, 0, 1);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "[!] ห้ามทำดาเมจคนในที่เซฟโซนเด็ดขาด");
					SetTimerEx("ClearAnimSafeZone", 10000, 0, "d", playerid);

					playerData[playerid][pPVPFreeze] = 10; //10วิ

					SendClientMessage(playerid, COLOR_GREY, "เนื่องจากคุณทำร้ายคนทำให้คุณโดนแช่แข็ง10วินาที");
				}
			}
		}

		if (playerData[playerid][pPVP] == 0)
		{
		    switch(weaponid)
		    {
				case WEAPON_FLOWER:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-2);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-2);
					}
				}
				case WEAPON_BRASSKNUCKLE:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-6);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-6);
					}
				}
				case WEAPON_DILDO:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-3);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-3);
					}
				}
				case WEAPON_POOLSTICK:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-4);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-4);
					}
				}
				case WEAPON_GOLFCLUB:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-12);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-12);
					}
				}
				case WEAPON_BAT:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-14);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-14);
					}
				}
				case WEAPON_KNIFE:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-10);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-10);
					}
				}
				case WEAPON_SHOVEL:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-7);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-7);
					}
				}
				case WEAPON_KATANA:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-20);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-20);
					}
				}
			}
		}
		else
		{
			if (GetFactionType(playerid) == FACTION_POLICE)
			{
		        if (playerData[playerid][pTazer] && playerData[damagedid][pStunned] < 1 && weaponid == 23)
		        {
		            if (GetPlayerDistanceFromPlayer(playerid, damagedid) > 30.0)
		                return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้ร้ายต้องอยู่ในระยะเท่านั้น 30 เมตร");

		            playerData[damagedid][pStunned] = 10;
		            TogglePlayerControllable(damagedid, 0);

		            //ApplyAnimation(damagedid, "CRACK", "crckdeth4", 4.0, 0, 0, 0, 1, 0, 1);

					SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ยิงปืนช็อตไฟฟ้าใส่ %s", GetPlayerNameEx(playerid), GetPlayerNameEx(damagedid));
		        }
			}
			else
			{
		        if (playerData[playerid][pTazer] && playerData[damagedid][pStunned] < 1 && weaponid == 23)
		        {
		            if (GetPlayerDistanceFromPlayer(playerid, damagedid) > 30.0)
		                return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้ร้ายต้องอยู่ในระยะเท่านั้น 30 เมตร");

		            playerData[damagedid][pStunned] = 3;
		            TogglePlayerControllable(damagedid, 0);

		            //ApplyAnimation(damagedid, "CRACK", "crckdeth4", 4.0, 0, 0, 0, 1, 0, 1);

					SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ยิงปืนยิงล้มใส่ %s", GetPlayerNameEx(playerid), GetPlayerNameEx(damagedid));
		        }
			}
		}
	}
	return 1;
}*/

forward StopChatting(playerid);
public StopChatting(playerid)
{
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
}

public OnPlayerText(playerid, text[])
{
	if ((!playerData[playerid][IsLoggedIn]) || playerData[playerid][pHospital] != -1)
	    return 0;

	new
		targetid = playerData[playerid][pCallLine];

	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);

    if (!IsPlayerOnPhone(playerid))
		SendNearbyMessage(playerid, 20.0, COLOR_WHITE, "%s พูดว่า: %s", GetPlayerNameEx(playerid), text);

	else SendNearbyMessage(playerid, 20.0, COLOR_WHITE, "(โทรศัพท์) %s พูดว่า: %s", GetPlayerNameEx(playerid), text);

	if (!IsPlayerInAnyVehicle(playerid) && !playerData[playerid][pInjured])
	{
	    SetPlayerChatBubble(playerid, text, COLOR_WHITE, 30.0, 10000);
		ApplyAnimation(playerid, "GANGS", "prtial_gngtlkA", 4.1, 0, 1, 1, 1, strlen(text) * 100, 1);
		SetTimerEx("StopChatting", strlen(text) * 100, false, "d", playerid);
	}
	switch (playerData[playerid][pEmergency])
	{
		case 1:
		{
			if (!strcmp(text, "ตำรวจ", true))
			{
			    playerData[playerid][pEmergency] = 2;
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "[พนักงาน]:{FFFFFF} สายถูกโอนไปที่สถานีตำรวจ โปรดระบุเหตุฉุกเฉินของคุณ");
			}
			else if (!strcmp(text, "หมอ", true))
			{
			    playerData[playerid][pEmergency] = 3;
			    SendClientMessage(playerid, COLOR_HOSPITAL, "[พนักงาน]:{FFFFFF} สายถูกโอนไปที่โรงพยาบาล โปรดระบุเหตุฉุกเฉินของคุณ");
			}
			else SendClientMessage(playerid, COLOR_LIGHTBLUE, "[พนักงาน]:{FFFFFF} ขออภัย, เราไม่เข้าใจที่คุณสื่อสาร \"ตำรวจ\" หรือ \"หมอ\"?");
		}
		case 2:
		{
			SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "911 CALL: %s พิกัด (%.4f, %.4f, %.4f)", GetPlayerNameEx(playerid), x, y, z);
    		SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "เหตุฉุกเฉิน: %s", text);

		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "[พนักงาน]:{FFFFFF} เราได้แจ้งทุกหน่วยในพื้นที่แล้ว ขอบคุณในการแจ้ง");
		    callcmd::hangup(playerid, "\1");

		    SetFactionMarkerEx(playerid, FACTION_POLICE, x, y, z);
		}
		case 3:
		{
		    SendFactionMessageEx(FACTION_MEDIC, COLOR_HOSPITAL, "911 CALL: %s พิกัด (%.4f, %.4f, %.4f)", GetPlayerNameEx(playerid), x, y, z);
   			SendFactionMessageEx(FACTION_MEDIC, COLOR_HOSPITAL, "เหตุฉุกเฉิน: %s", text);

		    SendClientMessage(playerid, COLOR_HOSPITAL, "[พนักงาน]:{FFFFFF} เราได้แจ้งทุกหน่วยในพื้นที่แล้ว ขอบคุณในการแจ้ง");
		    callcmd::hangup(playerid, "\1");

		    SetFactionMarkerEx(playerid, FACTION_MEDIC, x, y, z);
		}
	}
	if (targetid != INVALID_PLAYER_ID && !playerData[playerid][pIncomingCall])
	{
		SendClientMessageEx(targetid, COLOR_YELLOW, "(โทรศัพท์) %s พูดว่า: %s", GetPlayerNameEx(playerid), text);
	}
	return 0;
}

forward OnPlayerLoaded(playerid);
public OnPlayerLoaded(playerid)
{
	if(cache_num_rows())
	{
		ShowDialog_Login(playerid);
		playerData[playerid][LoginTimer] = SetTimerEx("OnLoginTimeout", SECONDS_TO_LOGIN * 1000, false, "d", playerid);

		SendClientMessage(playerid, -1, "{FF00FF}|====================================|");
		SendClientMessage(playerid, -1, "ยินดีต้อนรับเข้าสู่ URCITY ");
		SendClientMessage(playerid, COLOR_LIGHTRED, "หากพบปัญหาสามารถติดต่อผู้ดูแลระบบ");
		SendClientMessage(playerid, -1, "{FF00FF}|====================================|");
	}
	else
	{
		ShowDialog_Register(playerid);
	}
	return 1;
}

forward OnLoginTimeout(playerid);
public OnLoginTimeout(playerid)
{
	playerData[playerid][LoginTimer] = 0;
	SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เวลาล็อคอินของคุณหมดลงแล้ว 60 วินาที ระบบจึงเตะคุณออกจากเกม");
	SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
	DelayedKick(playerid);
	return 1;
}

forward OnPlayerRegister(playerid);
public OnPlayerRegister(playerid)
{
	playerData[playerid][pID] = cache_insert_id();
	ShowDialog_Login(playerid);
	playerData[playerid][LoginTimer] = SetTimerEx("OnLoginTimeout", SECONDS_TO_LOGIN * 1000, false, "d", playerid);
	return 1;
}

forward _KickPlayerDelayed(playerid);
public _KickPlayerDelayed(playerid)
{
	Kick(playerid);
	return 1;
}

AssignplayerData(playerid)
{
	cache_get_value_name_int(0, "playerID", playerData[playerid][pID]);

    cache_get_value_name(0, "playerRegDate", playerData[playerid][pRegisterDate], 90);
	cache_get_value_name_int(0, "playerGender", playerData[playerid][pGender]);
	cache_get_value_name(0, "playerBirthday", playerData[playerid][pBirthday], 24);

	cache_get_value_name_int(0, "playerAdmin", playerData[playerid][pAdmin]);

	cache_get_value_name_int(0, "playerKills", playerData[playerid][pKills]);
	cache_get_value_name_int(0, "playerDeaths", playerData[playerid][pDeaths]);
	cache_get_value_name_int(0, "playerMoney", playerData[playerid][pMoney]);
	cache_get_value_name_int(0, "playerBank", playerData[playerid][pBankMoney]);
	cache_get_value_name_int(0, "playerRedMoney", playerData[playerid][pRedMoney]);
	cache_get_value_name_int(0, "playerLevel", playerData[playerid][pLevel]);
	cache_get_value_name_int(0, "playerExp", playerData[playerid][pExp]);
	cache_get_value_name_int(0, "playerMinutes", playerData[playerid][pMinutes]);
	cache_get_value_name_int(0, "playerHours", playerData[playerid][pHours]);

	cache_get_value_name_float(0, "playerPosX", playerData[playerid][pPos_X]);
	cache_get_value_name_float(0, "playerPosY", playerData[playerid][pPos_Y]);
	cache_get_value_name_float(0, "playerPosZ", playerData[playerid][pPos_Z]);
	cache_get_value_name_float(0, "playerPosA", playerData[playerid][pPos_A]);
	cache_get_value_name_int(0, "playerSkin", playerData[playerid][pSkin]);
	cache_get_value_name_int(0, "playerInterior", playerData[playerid][pInterior]);
	cache_get_value_name_int(0, "playerWorld", playerData[playerid][pWorld]);
	cache_get_value_name_int(0, "playerTutorial", playerData[playerid][pTutorial]);
	cache_get_value_name_int(0, "playerSpawn", playerData[playerid][pSpawnPoint]);

	cache_get_value_name_float(0, "playerThirsty", playerData[playerid][pThirsty]);
	cache_get_value_name_float(0, "playerHungry", playerData[playerid][pHungry]);

	cache_get_value_name_float(0, "playerHealth", playerData[playerid][pHealth]);
	cache_get_value_name_int(0, "playerInjured", playerData[playerid][pInjured]);
	cache_get_value_name_int(0, "playerInjuredTime", playerData[playerid][pInjuredTime]);

    cache_get_value_name_int(0, "playerFaction", playerData[playerid][pFactionID]);
    cache_get_value_name_int(0, "playerFactionRank", playerData[playerid][pFactionRank]);

    cache_get_value_name_int(0, "playerPrisoned", playerData[playerid][pPrisoned]);
    cache_get_value_name_int(0, "playerPrisonOut", playerData[playerid][pPrisonOut]);
    cache_get_value_name_int(0, "playerJailTime", playerData[playerid][pJailTime]);

    cache_get_value_name_int(0, "playerEntrance", playerData[playerid][pEntrance]);

    cache_get_value_name_int(0, "playerMaxItem", playerData[playerid][pMaxItem]);
    cache_get_value_name_int(0, "playerItemAmount", playerData[playerid][pItemAmount]);
    cache_get_value_name_int(0, "playerPhone", playerData[playerid][pPhone]);

    cache_get_value_name_int(0, "playerVIP", playerData[playerid][pVip]);

	cache_get_value_name_int(0, "playerQuest", playerData[playerid][pQuest]);
	cache_get_value_name_int(0, "playerQuestProgress", playerData[playerid][pQuestProgress]);

	cache_get_value_name_int(0, "playerBan", playerData[playerid][pBan]);
	cache_get_value_name(0, "playerBanReason", playerData[playerid][pBanReason], 128);

	cache_get_value_name_int(0, "playerWhitelist", playerData[playerid][pWhitelist]);
	cache_get_value_name_int(0, "playerCoin", playerData[playerid][pCoin]);
	cache_get_value_name_int(0, "GiftBox", playerData[playerid][pGiftBox]);
	cache_get_value_name_int(0, "itemcode1", playerData[playerid][pITEMCODE1]);
	cache_get_value_name_int(0, "Anims1", playerData[playerid][pAnims1]);
	cache_get_value_name_int(0, "playerMarryOn", playerData[playerid][pMarryOn]);
	cache_get_value_name_int(0, "Animation", playerData[playerid][pAnimation]);
	cache_get_value_name(0, "playerLatsPlay", playerData[playerid][pLatsPlay], 90);

	if (playerData[playerid][pFactionID] != -1) {
	    playerData[playerid][pFaction] = GetFactionByID(playerData[playerid][pFactionID]);

	    if (playerData[playerid][pFaction] == -1) {
	        ResetFaction(playerid);
		}
	}

	for(new i = 1; i < MAX_VEHICLES; i ++)
	{
		if(IsValidVehicle(i) && IsVehicleOwner(playerid, i) && carData[i][carTimer] >= 0)
		{
			KillTimer(carData[i][carTimer]);
			carData[i][carTimer] = -1;
		}
	}


    new query[256];
    mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `inventory` WHERE `invOwner` = '%d'", playerData[playerid][pID]);
	mysql_tquery(g_SQL, query, "Inventory_Load", "d", playerid);

    mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `contacts` WHERE `ID` = '%d'", playerData[playerid][pID]);
	mysql_tquery(g_SQL, query, "Contact_Load", "d", playerid);
	return 1;
}

forward KickTimePlayer(playerid);
public KickTimePlayer(playerid){
	Kick(playerid);
	return 1;
}

DelayedKick(playerid, time = 500)
{
	SetTimerEx("_KickPlayerDelayed", time, false, "d", playerid);
	return 1;
}

UpdateplayerData(playerid)
{
	if (playerData[playerid][IsLoggedIn] == false) return 0;

/*	if (reason == 1)
	{
		GetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
		GetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);
	}*/
	if (!playerData[playerid][pDrivingTest])
	{
	    playerData[playerid][pInterior] = GetPlayerInterior(playerid);
	    playerData[playerid][pWorld] = GetPlayerVirtualWorld(playerid);

	    GetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
	    GetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);

	    GetPlayerHealth(playerid, playerData[playerid][pHealth]);
	}
	if (playerData[playerid][pInjured] == 0)
	    GetPlayerHealth(playerid, playerData[playerid][pHealth]);

	playerData[playerid][pSkin] = GetPlayerSkin(playerid);

	new query[10008];
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerAdmin` = %d, `playerMoney` = %d, `playerBank` = %d, \
	`playerRedMoney` = %d, `playerLevel` = %d, `playerExp` = %d, `playerMinutes` = %d, `playerHours` = %d, `playerPosX` = %f, \
	`playerPosY` = %f, `playerPosZ` = %f, `playerPosA` = %f, `playerSkin` = %d, `playerInterior` = %d, `playerWorld` = %d, \
	`playerThirsty` = %.3f, `playerHungry` = %.3f, `playerHealth` = %.4f, `playerInjured` = %d, `playerInjuredTime` = %d, \
	`playerFaction` = %d, `playerFactionRank` = %d, `playerPrisoned` = %d, `playerPrisonOut` = %d, `playerJailTime` = %d, \
	`playerEntrance` = %d, `playerMaxItem` = %d, `playerItemAmount` = %d, `playerPhone` = %d, `playerVIP` = %d, \
	`playerQuest` = %d, `playerQuestProgress` = %d, `playerWhitelist` = %d, `playerCoin` = %d, `GiftBox` = %d, `itemcode1` = %d, `Anims1` = %d, `playerMarryOn` = %d, `Animation` = %d WHERE `playerID` = %d",
	playerData[playerid][pAdmin],
	playerData[playerid][pMoney],
	playerData[playerid][pBankMoney],
	playerData[playerid][pRedMoney],
	playerData[playerid][pLevel],
	playerData[playerid][pExp],
	playerData[playerid][pMinutes],
	playerData[playerid][pHours],
	playerData[playerid][pPos_X],
	playerData[playerid][pPos_Y],
	playerData[playerid][pPos_Z],
	playerData[playerid][pPos_A],
	playerData[playerid][pSkin],
	playerData[playerid][pInterior],
	playerData[playerid][pWorld],
	playerData[playerid][pThirsty],
	playerData[playerid][pHungry],
	playerData[playerid][pHealth],
	playerData[playerid][pInjured],
	playerData[playerid][pInjuredTime],
	playerData[playerid][pFactionID],
	playerData[playerid][pFactionRank],
	playerData[playerid][pPrisoned],
	playerData[playerid][pPrisonOut],
	playerData[playerid][pJailTime],
	playerData[playerid][pEntrance],
	playerData[playerid][pMaxItem],
	playerData[playerid][pItemAmount],
	playerData[playerid][pPhone],
	playerData[playerid][pVip],
	playerData[playerid][pQuest],
	playerData[playerid][pQuestProgress],
	playerData[playerid][pWhitelist],
	playerData[playerid][pCoin],
	playerData[playerid][pGiftBox],
	playerData[playerid][pITEMCODE1],
	playerData[playerid][pAnims1],
	playerData[playerid][pMarryOn],
	playerData[playerid][pAnimation],
	playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);
	return 1;
}

UpdatePlayerRegister(playerid)
{
	if (playerData[playerid][IsLoggedIn] == false) return 0;

	new query[256];
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerGender` = %d, `playerBirthday` = '%s', `playerTutorial` = %d, `playerRegDate` = '%e' WHERE `playerID` = %d LIMIT 1",
	playerData[playerid][pGender], playerData[playerid][pBirthday], playerData[playerid][pTutorial], playerData[playerid][pRegisterDate], playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);
	return 1;
}

UpdatePlayerDeaths(playerid)
{
	if (playerData[playerid][IsLoggedIn] == false) return 0;
	if (playerData[playerid][pInjured] == 1) return 0;

	playerData[playerid][pDeaths]++;

	new query[90];
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerDeaths` = %d WHERE `playerID` = %d LIMIT 1", playerData[playerid][pDeaths], playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);
	return 1;
}

UpdatePlayerKills(killerid, deadid)
{
    if (killerid == INVALID_PLAYER_ID) return 0;
    if (playerData[killerid][IsLoggedIn] == false) return 0;
	if (playerData[deadid][pInjured] == 1) return 0;

	playerData[killerid][pKills]++;

	new query[90];
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerKills` = %d WHERE `playerID` = %d LIMIT 1", playerData[killerid][pKills], playerData[killerid][pID]);
	mysql_tquery(g_SQL, query);
	return 1;
}

GetPlayerNameEx(playerid)
{
    new string[MAX_PLAYER_NAME + 1];
    GetPlayerName(playerid, string, sizeof(string));
    return string;
}

ReturnDate()
{
	new sendString[90], MonthStr[6], month, day, year;
	new hour, minute, second;
	gettime(hour, minute, second);
	getdate(year, month, day);
	switch(month)
	{
	    case 1:  MonthStr = "ม.ค";
	    case 2:  MonthStr = "ก.พ";
	    case 3:  MonthStr = "มี.ค";
	    case 4:  MonthStr = "เม.ย";
	    case 5:  MonthStr = "พ.ค";
	    case 6:  MonthStr = "มิ.ย";
	    case 7:  MonthStr = "ก.ค";
	    case 8:  MonthStr = "ส.ค";
	    case 9:  MonthStr = "ก.ย";
	    case 10: MonthStr = "ต.ค";
	    case 11: MonthStr = "พ.ย";
	    case 12: MonthStr = "ธ.ค";
	}
	format(sendString, sizeof(sendString), "%02d-%02d-%04d %02d:%02d:%02d", day, month, year, hour, minute, second);
	return sendString;
}

ReturnDateEx()
{
	new sendString[90], MonthStr[11], month, day, year;
	new hour, minute, second;
	gettime(hour, minute, second);
	getdate(year, month, day);
	switch(month)
	{
	    case 1:  MonthStr = "มกราคม";
	    case 2:  MonthStr = "กุมภาพันธ์";
	    case 3:  MonthStr = "มีนาคม";
	    case 4:  MonthStr = "เมษายน";
	    case 5:  MonthStr = "พฤษภาคม";
	    case 6:  MonthStr = "มิถุนายน";
	    case 7:  MonthStr = "กรกฎาคม";
	    case 8:  MonthStr = "สิงหาคม";
	    case 9:  MonthStr = "กันยายน";
	    case 10: MonthStr = "ตุลาคม";
	    case 11: MonthStr = "พฤศจิกายน";
	    case 12: MonthStr = "ธันวาคม";
	}
	format(sendString, sizeof(sendString), "%d %s %d %02d:%02d:%02d", day, MonthStr, year, hour, minute, second);
	return sendString;
}

ClearPlayerChat(playerid, lines)
{
	for(new i = 0; i <= lines; i++)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "");
	}
	return 1;
}

SendClientMessageEx(playerid, color, const text[], {Float, _}:...)
{
	static
	    args,
	    str[144];

	/*
     *  Custom function that uses #emit to format variables into a string.
     *  This code is very fragile; touching any code here will cause crashing!
	*/
	if ((args = numargs()) == 3)
	{
	    SendClientMessage(playerid, color, text);
	}
	else
	{
		while (--args >= 3)
		{
			#emit LCTRL 5
			#emit LOAD.alt args
			#emit SHL.C.alt 2
			#emit ADD.C 12
			#emit ADD
			#emit LOAD.I
			#emit PUSH.pri
		}
		#emit PUSH.S text
		#emit PUSH.C 144
		#emit PUSH.C str
		#emit PUSH.S 8
		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

		SendClientMessage(playerid, color, str);

		#emit RETN
	}
	return 1;
}

SendClientMessageToAllEx(color, const text[], {Float, _}:...)
{
	static
	    args,
	    str[144];

	/*
     *  Custom function that uses #emit to format variables into a string.
     *  This code is very fragile; touching any code here will cause crashing!
	*/
	if ((args = numargs()) == 2)
	{
	    SendClientMessageToAll(color, text);
	}
	else
	{
		while (--args >= 2)
		{
			#emit LCTRL 5
			#emit LOAD.alt args
			#emit SHL.C.alt 2
			#emit ADD.C 12
			#emit ADD
			#emit LOAD.I
			#emit PUSH.pri
		}
		#emit PUSH.S text
		#emit PUSH.C 144
		#emit PUSH.C str
		#emit LOAD.S.pri 8
		#emit ADD.C 4
		#emit PUSH.pri
		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

		SendClientMessageToAll(color, str);

		#emit RETN
	}
	return 1;
}

// Red Money

/*GivePlayerRedMoney(playerid, amount)
{
	playerData[playerid][pRedMoney] += amount;
	PlayerLoadRedMoney(playerid);
	return 1;
}

GetPlayerRedMoney(playerid)
{
	return (playerData[playerid][pRedMoney]);
}

SetPlayerRedMoney(playerid, amount)
{
	playerData[playerid][pRedMoney] = amount;
	PlayerLoadRedMoney(playerid);
	return 1;
}*/
/////////////////////////////////////////////////////
// Red Money

GivePlayerRedMoney(playerid, amount)
{
	return Inventory_Add(playerid, "เงินแดง", amount);
}

GetPlayerRedMoney(playerid)
{
	return Inventory_Count(playerid, "เงินแดง");
}

SetPlayerRedMoney(playerid, amount)
{
	return Inventory_Set(playerid, "เงินแดง", amount);
}
/////////////////////////////////////////////////////

/*PlayerLoadRedMoney(playerid)
{
	new redmoney[12];
    format(redmoney, sizeof(redmoney), "%s", FormatNumber(GetPlayerRedMoney(playerid)));
    //PlayerTextDrawSetString(playerid, tdredmoney[playerid], redmoney);
    return 1;
}*/

// Exp

GetPlayerRequiredExp(playerid)
{
    new requiredexp = playerData[playerid][pLevel] * 2000;
	return requiredexp;
}

GivePlayerExp(playerid, amount)
{
	if (GetPlayerExp(playerid) > GetPlayerRequiredExp(playerid))
		return 0;

	playerData[playerid][pExp] += amount;
	ShowPlayerExpEarn(playerid, amount);
	PlayerLoadStats(playerid);
	PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
    return 1;
}

GetPlayerExp(playerid)
{
	return playerData[playerid][pExp];
}

SetPlayerExp(playerid, amount)
{
	playerData[playerid][pExp] = amount;
	PlayerLoadStats(playerid);
	return 1;
}

PlayerLoadStats(playerid)
{
    new exp[64];
    format(exp, sizeof(exp), "LEVEL %d (%.0f%c)", playerData[playerid][pLevel], ExpToPecentage(playerid), '%');
    //PlayerTextDrawSetString(playerid, tdexp[playerid], exp);
	//SetPlayerProgressBarValue(playerid, barexp[playerid], ExpToPecentage(playerid));
    return 1;
}

// Level

GivePlayerLevel(playerid, amount)
{
	playerData[playerid][pLevel] += amount;
	PlayerLoadStats(playerid);
    return 1;
}

GetPlayerLevel(playerid)
{
	return playerData[playerid][pLevel];
}

SetPlayerLevel(playerid, amount)
{
	playerData[playerid][pLevel] = amount;
	PlayerLoadStats(playerid);
	return 1;
}

// Anti Money Hack

GivePlayerMoneyEx(playerid, amount)
{
	playerData[playerid][pMoney] += amount;
	GivePlayerMoney(playerid, amount);
	return 1;
}

GetPlayerMoneyEx(playerid)
{
	return (playerData[playerid][pMoney]);
}

SetPlayerMoneyEx(playerid, amount)
{
	ResetPlayerMoney(playerid);
	playerData[playerid][pMoney] = amount;
	GivePlayerMoney(playerid, amount);
	return 1;
}

GivePlayerWeaponEx(playerid, weaponid, ammo)
{
    if(!weaponid) return 0;

    gPlayerWeaponData[playerid][weaponid] = true;
    return GivePlayerWeapon(playerid, weaponid, ammo);
}

ResetPlayerWeaponsEx(playerid)
{
    for(new weaponid; weaponid < 46; weaponid++)
    gPlayerWeaponData[playerid][weaponid] = false;
    return ResetPlayerWeapons(playerid);
}

/*RemovePlayerWeapon(playerid, weaponid)
{
    new plyWeapons[12], plyAmmo[12];

    for(new slot; slot != 12; slot ++)
    {
        new weap, ammo;

        GetPlayerWeaponData(playerid, slot, weap, ammo);
        if(weap != weaponid)
        {
            GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
        }
    }

    ResetPlayerWeaponsEx(playerid);

    for(new slot; slot != 12; slot ++)
    {
        GivePlayerWeaponEx(playerid, plyWeapons[slot], plyAmmo[slot]);
    }
}*/

FormatMoney(number, const prefix[] = "$")
{
	static
		value[32],
		length;

	format(value, sizeof(value), "%d", (number < 0) ? (-number) : (number));

	if ((length = strlen(value)) > 3)
	{
		for (new i = length, l = 0; --i >= 0; l ++)
		{
		    if ((l > 0) && (l % 3 == 0)) strins(value, ",", i + 1);
		}
	}
	if (prefix[0] != 0)
	    strins(value, prefix, 0);

	if (number < 0)
		strins(value, "-", 0);

	return value;
}

FormatNumber(number)
{
	static
		value[32],
		length;

	format(value, sizeof(value), "%d", (number < 0) ? (-number) : (number));

	if ((length = strlen(value)) > 3)
	{
		for (new i = length, l = 0; --i >= 0; l ++)
		{
		    if ((l > 0) && (l % 3 == 0)) strins(value, ",", i + 1);
		}
	}
	if (number < 0)
		strins(value, "-", 0);

	return value;
}

ShowDialog_Register(playerid)
{
	new string[256];
	format(string, sizeof string, "\
		{FFFFFF}ยินดีต้อนรับ {BD0404}%s{FFFFFF}\n\
		{FFFFFF}- ตัวละครของคุณยังไม่ทำการสมัครสมาชิก\n\
		{FF0000}- แนะนำ: ระบุรหัสผ่านที่คุณต้องการเพื่อใช้ในการเข้าสู่ระบบ",
   	GetPlayerNameEx(playerid));
	Dialog_Show(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "{BD1203}[{FA6B5F}การสมัครสมาชิก{BD1203}]", string, "ลงทะเบียน", "ออกเกม");
	return 1;
}
ShowDialog_Login(playerid)
{
	new string[256];
	format(string, sizeof string, "\
		{FFFFFF}ยินดีต้อนรับ {2ABD03}%s{FFFFFF}\n\
		{FFFFFF}- ตัวละครของคุณทำการสมัครมาชิกแล้ว\n\
		{F2F90A}- แนะนำ : ระบุรหัสผ่านเพื่อเข้าสู่ระบบ",
    GetPlayerNameEx(playerid));
	Dialog_Show(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "{01A510}[{5FFA6D}การเข้าสู่ระบบ{01A510}]", string, "ล็อคอิน", "ออกเกม");
	return 1;
}


ShowDialog_Tutorial(playerid)
{
	new string[256];
	static const aGender[3][10] = {"แก้ไข", "ชาย", "หญิง"};
	format(string, sizeof(string), "\
		ลำดับไอดี:\t{00FF00}%d\n\
		วันที่ลงทะเบียน:\t{00FF00}%s\n\
		ชื่อ:\t{00FF00}%s\n\
		เพศ:\t{00FF00}%s\n\
		วันเดือนปีเกิด:\t{00FF00}%s\n\
		{FFFF00}>> เสร็จสิ้น",
	playerData[playerid][pID], playerData[playerid][pRegisterDate], GetPlayerNameEx(playerid), aGender[playerData[playerid][pGender]], playerData[playerid][pBirthday]);
	Dialog_Show(playerid, DIALOG_TUTORIAL, DIALOG_STYLE_TABLIST, "[ข้อมูลตัวละคร]", string, "เลือก", "ออกเกม");
	return 1;
}

IsVehicleSeatUsed(vehicleid, seat)
{
	foreach (new i : Player) if (IsPlayerInVehicle(i, vehicleid) && GetPlayerVehicleSeat(i) == seat) {
	    return 1;
	}
	return 0;
}

GetVehicleMaxSeats(vehicleid)
{
    static const g_arrMaxSeats[] = {
		4, 2, 2, 2, 4, 4, 1, 2, 2, 4, 2, 2, 2, 4, 2, 2, 4, 2, 4, 2, 4, 4, 2, 2, 2, 1, 4, 4, 4, 2,
		1, 7, 1, 2, 2, 0, 2, 7, 4, 2, 4, 1, 2, 2, 2, 4, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 2, 2, 4, 4,
		2, 2, 2, 2, 1, 1, 4, 4, 2, 2, 4, 2, 1, 1, 2, 2, 1, 2, 2, 4, 2, 1, 4, 3, 1, 1, 1, 4, 2, 2,
		4, 2, 4, 1, 2, 2, 2, 4, 4, 2, 2, 1, 2, 2, 2, 2, 2, 4, 2, 1, 1, 2, 1, 1, 2, 2, 4, 2, 2, 1,
		1, 2, 2, 2, 2, 2, 2, 2, 2, 4, 1, 1, 1, 2, 2, 2, 2, 7, 7, 1, 4, 2, 2, 2, 2, 2, 4, 4, 2, 2,
		4, 4, 2, 1, 2, 2, 2, 2, 2, 2, 4, 4, 2, 2, 1, 2, 4, 4, 1, 0, 0, 1, 1, 2, 1, 2, 2, 1, 2, 4,
		4, 2, 4, 1, 0, 4, 2, 2, 2, 2, 0, 0, 7, 2, 2, 1, 4, 4, 4, 2, 2, 2, 2, 2, 4, 2, 0, 0, 0, 4,
		0, 0
	};
	new
	    model = GetVehicleModel(vehicleid);

	if (400 <= model <= 611)
	    return g_arrMaxSeats[model - 400];

	return 0;
}

GetAvailableSeat(vehicleid, start = 1)
{
	new seats = GetVehicleMaxSeats(vehicleid);

	for (new i = start; i < seats; i ++) if (!IsVehicleSeatUsed(vehicleid, i)) {
	    return i;
	}
	return -1;
}

GetNearestVehicle(playerid)
{
	static
	    Float:fX,
	    Float:fY,
	    Float:fZ;

	for (new i = 1; i != MAX_VEHICLES; i ++) if (IsValidVehicle(i) && GetVehiclePos(i, fX, fY, fZ))
	{
	    if (IsPlayerInRangeOfPoint(playerid, 3.5, fX, fY, fZ)) return i;
	}
	return INVALID_VEHICLE_ID;
}

ReturnVehicleName(vehicleid)
{
	new
		model = GetVehicleModel(vehicleid),
		name[32] = "None";

    if (model < 400 || model > 611)
	    return name;

	format(name, sizeof(name), g_arrVehicleNames[model - 400]);
	return name;
}

IsWindowsVehicle(vehicleid)
{
    static const vehicleWindows[] = {
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0,
		1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0,
		0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1,
		0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
		1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,
		0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0
	};

	new
	    model = GetVehicleModel(vehicleid);

	if(400 <= model <= 611)
	{
	    return vehicleWindows[model - 400];
	}

	return 0;
}

IsEngineVehicle(vehicleid)
{
	static const g_aEngineStatus[] = {
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	    1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0
	};
    new modelid = GetVehicleModel(vehicleid);

    if (modelid < 400 || modelid > 611)
        return 0;

    return (g_aEngineStatus[modelid - 400]);
}

GetEngineStatus(vehicleid)
{
	static
	    engine,
	    lights,
	    alarm,
	    doors,
	    bonnet,
	    boot,
	    objective;

	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

	if (engine != 1)
		return 0;

	return 1;
}

SetEngineStatus(vehicleid, status)
{
	static
	    engine,
	    lights,
	    alarm,
	    doors,
	    bonnet,
	    boot,
	    objective;

	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return SetVehicleParamsEx(vehicleid, status, lights, alarm, doors, bonnet, boot, objective);
}

SetVehicleParams(vehicleid, param, status)
{
	new
	    params[7];

	GetVehicleParamsEx(vehicleid, params[0], params[1], params[2], params[3], params[4], params[5], params[6]);

	params[param] = status;

	return SetVehicleParamsEx(vehicleid, params[0], params[1], params[2], params[3], params[4], params[5], params[6]);
}

SetFactionMarkerEx(playerid, type, Float:x, Float:y, Float:z)
{
    foreach (new i : Player) if (GetFactionType(i) == type)
	{
    	SetPlayerCheckpoint(i, x, y, z, 5.0);
	}
	playerData[playerid][pMarker] = 1;
	SetTimerEx("ExpireMarker", 300000, false, "d", playerid);
	return 1;
}

forward ExpireMarker(playerid);
public ExpireMarker(playerid)
{
	if (!playerData[playerid][pMarker])
	    return 0;

	playerData[playerid][pMarker] = 0;
	DisablePlayerCheckpoint(playerid);
	return 1;
}
/*
forward ExpireMarker(playerid);
public ExpireMarker(playerid)
{
	if (!playerData[playerid][pMarker])
	    return 0;

    if (GetFactionType(playerid) == FACTION_GANG || (GetFactionType(playerid) != FACTION_GANG && playerData[playerid][pOnDuty]))
		SetFactionColor(playerid);

	else SetPlayerColor(playerid, DEFAULT_COLOR);
	return 1;
}*/

FactionLocker_Nearest(playerid)
{
	for (new i = 0; i < MAX_FACTIONS; i ++) if (factionData[i][factionExists] && IsPlayerInRangeOfPoint(playerid, 2.0, factionData[i][factionLockerPosX], factionData[i][factionLockerPosY], factionData[i][factionLockerPosZ]))
		return i;
	return -1;
}

Faction_GetName(playerid)
{
    new
		factionid = playerData[playerid][pFaction],
		name[32] = "None";

 	if (factionid == -1)
	    return name;

	format(name, 32, factionData[factionid][factionName]);
	return name;
}

Faction_GetRank(playerid)
{
    new
		factionid = playerData[playerid][pFaction],
		rank[32] = "None";

 	if (factionid == -1)
	    return rank;

	format(rank, 32, FactionRanks[factionid][playerData[playerid][pFactionRank] - 1]);
	return rank;
}



forward Faction_Load();
forward Faction_Load();
public Faction_Load()
{
	static
	    rows,
		str[32];

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_FACTIONS)
	{
	    factionData[i][factionExists] = true;
	    cache_get_value_name_int(i, "factionID", factionData[i][factionID]);

	    cache_get_value_name(i, "factionName", factionData[i][factionName], 32);

	    cache_get_value_name_int(i, "factionColor", factionData[i][factionColor]);
	    cache_get_value_name_int(i, "factionType", factionData[i][factionType]);
	    cache_get_value_name_int(i, "factionRanks", factionData[i][factionRanks]);
	    cache_get_value_name_float(i, "factionLockerX", factionData[i][factionLockerPosX]);
	    cache_get_value_name_float(i, "factionLockerY", factionData[i][factionLockerPosY]);
	    cache_get_value_name_float(i, "factionLockerZ", factionData[i][factionLockerPosZ]);
	    cache_get_value_name_int(i, "factionLockerInt", factionData[i][factionLockerInt]);
	    cache_get_value_name_int(i, "factionLockerWorld", factionData[i][factionLockerWorld]);

		//Spawning
		cache_get_value_name_float(i, "SpawnX", factionData[i][SpawnX]);
	 	cache_get_value_name_float(i, "SpawnY", factionData[i][SpawnY]);
   		cache_get_value_name_float(i, "SpawnZ", factionData[i][SpawnZ]);
		cache_get_value_name_int(i, "SpawnInterior", factionData[i][SpawnInterior]);
  		cache_get_value_name_int(i, "SpawnVW", factionData[i][SpawnVW]);

  		cache_get_value_name_int(i, "factionEntrance", factionData[i][factionEntrance]);

	    for (new j = 0; j < 8; j ++)
		{
	        format(str, sizeof(str), "factionSkin%d", j + 1);

	        cache_get_value_name_int(i, str, factionData[i][factionSkins][j]);
		}
        for (new j = 0; j < 10; j ++)
		{
	        format(str, sizeof(str), "factionWeapon%d", j + 1);

	        cache_get_value_name_int(i, str, factionData[i][factionWeapons][j]);

	        format(str, sizeof(str), "factionAmmo%d", j + 1);

			cache_get_value_name_int(i, str, factionData[i][factionAmmo][j]);
		}
		for (new j = 0; j < 15; j ++)
		{
		    format(str, sizeof(str), "factionRank%d", j + 1);

		    cache_get_value_name(i, str, FactionRanks[i][j]);
		}

		cache_get_value_name_int(i, "factionMoney", factionData[i][factionMoney]);

		Faction_Refresh(i);
	}
	printf("[PondJirasak]: Faction load %d ", rows);
	return 1;
}

forward Arrest_Load();
public Arrest_Load()
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_ARREST)
	{
	    arrestData[i][arrestExists] = true;

	    cache_get_value_name_int(i, "arrestID", arrestData[i][arrestID]);
	    cache_get_value_name_float(i, "arrestX", arrestData[i][arrestPosX]);
	    cache_get_value_name_float(i, "arrestY", arrestData[i][arrestPosY]);
	    cache_get_value_name_float(i, "arrestZ", arrestData[i][arrestPosZ]);
	    cache_get_value_name_int(i, "arrestInterior", arrestData[i][arrestInterior]);
	    cache_get_value_name_int(i, "arrestWorld", arrestData[i][arrestWorld]);

	    Arrest_Refresh(i);
	}
	printf("[SERVER]: %d Arrest were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward GPS_Load();
public GPS_Load()
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_GPS)
	{
	    gpsData[i][gpsExists] = true;

	    cache_get_value_name_int(i, "gpsID", gpsData[i][gpsID]);
	    cache_get_value_name(i, "gpsName", gpsData[i][gpsName], 32);
	    cache_get_value_name_float(i, "gpsX", gpsData[i][gpsPosX]);
	    cache_get_value_name_float(i, "gpsY", gpsData[i][gpsPosY]);
	    cache_get_value_name_float(i, "gpsZ", gpsData[i][gpsPosZ]);
	    cache_get_value_name_int(i, "gpsType", gpsData[i][gpsType]);
	}
	printf("[SERVER]: %d GPS were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward Vehicle_Load();
public Vehicle_Load()
{
    static
	    rows,
		count;

	cache_get_row_count(rows);

	new modelid, Float:pos_x, Float:pos_y, Float:pos_z, Float:pos_a, color1, color2, vehicleid;

	for(new i = 0; i < rows; i ++)
	{
		cache_get_value_name_int(i, "carModel", modelid);
		cache_get_value_name_float(i, "carPosX", pos_x);
		cache_get_value_name_float(i, "carPosY", pos_y);
		cache_get_value_name_float(i, "carPosZ", pos_z);
		cache_get_value_name_float(i, "carPosA", pos_a);
		cache_get_value_name_int(i, "carColor1", color1);
		cache_get_value_name_int(i, "carColor2", color2);
		vehicleid = CreateVehicle(modelid, pos_x, pos_y, pos_z, pos_a, color1, color2, -1);
		count++;

		if(vehicleid != INVALID_VEHICLE_ID)
		{
			cache_get_value_name_int(i, "carID", carData[vehicleid][carID]);
			cache_get_value_name_int(i, "carFaction", carData[vehicleid][carFaction]);
			cache_get_value_name_float(i, "carHealth", carData[vehicleid][carHealth]);

			if(carData[vehicleid][carFaction] >= 0)
			{
				cache_get_value_name_int(i, "carPrice", carData[vehicleid][carPrice]);
				cache_get_value_name_int(i, "carLocked", carData[vehicleid][carLocked]);
				cache_get_value_name_int(i, "carPaintjob", carData[vehicleid][carPaintjob]);
				cache_get_value_name_int(i, "carInterior", carData[vehicleid][carInterior]);
				cache_get_value_name_int(i, "carWorld", carData[vehicleid][carWorld]);
				cache_get_value_name_int(i, "carMod1", carData[vehicleid][carMods][0]);
				cache_get_value_name_int(i, "carMod2", carData[vehicleid][carMods][1]);
				cache_get_value_name_int(i, "carMod3", carData[vehicleid][carMods][2]);
				cache_get_value_name_int(i, "carMod4", carData[vehicleid][carMods][3]);
				cache_get_value_name_int(i, "carMod5", carData[vehicleid][carMods][4]);
				cache_get_value_name_int(i, "carMod6", carData[vehicleid][carMods][5]);
				cache_get_value_name_int(i, "carMod7", carData[vehicleid][carMods][6]);
				cache_get_value_name_int(i, "carMod8", carData[vehicleid][carMods][7]);
				cache_get_value_name_int(i, "carMod9", carData[vehicleid][carMods][8]);
				cache_get_value_name_int(i, "carMod10", carData[vehicleid][carMods][9]);
				cache_get_value_name_int(i, "carMod11", carData[vehicleid][carMods][10]);
				cache_get_value_name_int(i, "carMod12", carData[vehicleid][carMods][11]);
				cache_get_value_name_int(i, "carMod13", carData[vehicleid][carMods][12]);
				cache_get_value_name_int(i, "carMod14", carData[vehicleid][carMods][13]);
				ReloadVehicle(vehicleid);
			}

			carData[vehicleid][carModel] = modelid;
			carData[vehicleid][carPosX] = pos_x;
			carData[vehicleid][carPosY] = pos_y;
			carData[vehicleid][carPosZ] = pos_z;
			carData[vehicleid][carPosA] = pos_a;
			carData[vehicleid][carColor1] = color1;
			carData[vehicleid][carColor2] = color2;
			carData[vehicleid][carObjects][0] = INVALID_OBJECT_ID;
			carData[vehicleid][carObjects][1] = INVALID_OBJECT_ID;
			carData[vehicleid][carTimer] = -1;
			vehicleFuel[vehicleid] = vehicleData[modelid - 400][vFuel];

			if (carData[vehicleid][carHealth] < 350)
				SetVehicleHealth(vehicleid, 350);
			else
			    SetVehicleHealth(vehicleid, carData[vehicleid][carHealth]);
		}
	}
	printf("[SERVER]: %d Vehicles were loaded from \"%s\" database...", count, MYSQL_DATABASE);
	return 1;
}
Float:ManmyGetVehicleSpeed(vehicleid)
{
    new Float:vx, Float:vy, Float:vz;
    GetVehicleVelocity(vehicleid, vx, vy, vz);
	new Float:vel = floatmul(floatsqroot(floatadd(floatadd(floatpower(vx, 2), floatpower(vy, 2)),  floatpower(vz, 2))), 181.5);
	return vel;
}

forward OnCheatDetected(playerid, ip_address[], type, code);
public OnCheatDetected(playerid, ip_address[], type, code)
{
    new vehicleid = GetPlayerVehicleID(playerid);
    new Float:returnspeed = ManmyGetVehicleSpeed(vehicleid);
	new speeds = floatround(returnspeed);

    if (playerData[playerid][pAdmin] == 0)
	{
		new string[128], hacking[64], Float:extrafloat;
		switch(code)
		{
			case 0: format(hacking, sizeof(hacking), "โปรตัวลอย");//AirBreak (onfoot)
			case 1: format(hacking, sizeof(hacking), "โปรรถลอย");//AirBreak (in vehicle)
			case 2: format(hacking, sizeof(hacking), "โปรวาป");//teleport hack (onfoot)
			case 3: format(hacking, sizeof(hacking), "โปรรถวาป");//teleport hack (in vehicle)
			case 4: format(hacking, sizeof(hacking), "โปรวาปรถ");//teleport hack (into vehicles)
			case 5: {
				format(hacking, sizeof(hacking), "โปรวาปรถ(ดึงรถ)");//teleport hack (vehicle to player)
				SendClientMessageToAllEx(COLOR_LIGHTRED, "{FF0000}[{FFFF00}AGGUARD{FF0000}] {FFFF00}%s ถูกเตะออกจากเซิฟเวอร์ |>{00FFFF}  %s", GetPlayerNameEx(playerid), hacking);
				SendClientMessageEx(playerid, COLOR_WHITE, "วันที่โดนเตะ: %s", ReturnDate());
				SendClientMessageEx(playerid, COLOR_WHITE, "[!] กรุณาลบโปรแกรมช่วยเล่นออก ก่อนจะโดนแบนถาวร!");
				DelayedKick(playerid);
			}
			case 6: format(hacking, sizeof(hacking), "โปรวาป (pickups)");//teleport hack (pickups)
			case 7: format(hacking, sizeof(hacking), "โปรบิน");//FlyHack (onfoot)
			case 8: format(hacking, sizeof(hacking), "โปรรถบิน");//FlyHack (in vehicle)
			case 9: {
				format(hacking, sizeof(hacking), "โปรความเร็วผู้เล่น");//SpeedHack (onfoot)
				SendClientMessageToAllEx(COLOR_LIGHTRED, "{FF0000}[{FFFF00}AGGUARD{FF0000}] {FFFF00}%s ถูกเตะออกจากเซิฟเวอร์ |>{00FFFF}  %s", GetPlayerNameEx(playerid), hacking);
				SendClientMessageEx(playerid, COLOR_WHITE, "วันที่โดนเตะ: %s", ReturnDate());
				SendClientMessageEx(playerid, COLOR_WHITE, "[!] กรุณาลบโปรแกรมช่วยเล่นออก ก่อนจะโดนแบนถาวร!");
				DelayedKick(playerid);
			}
			case 10: {
				format(hacking, sizeof(hacking), "โปรความเร็วรถ ความเร็ว %d (Default 257)", speeds);//SpeedHack (in vehicle)
			}
			case 11: {
				format(hacking, sizeof(hacking), "โปรซ่อมรถ");//Health hack (in vehicle)

				new as1, as2, as3, as4;
				//AntiCheatGetVehicleHealth(vehicleid, extrafloat);
				SetVehicleHealth(vehicleid, extrafloat);
				//SetVehicleDamage(vehicleid);

				//AntiCheatGetVehicleDamage(vehicleid, as1, as2, as3, as4);
				UpdateVehicleDamageStatus(vehicleid, as1, as2, as3, as4);
			}
			case 12: {
				format(hacking, sizeof(hacking), "โปรเพิ่มเลือด");//Health hack (onfoot)

				//AntiCheatGetHealth(playerid, extrafloat);
				SetPlayerHealth(playerid, extrafloat);
			}
			case 13: {
				format(hacking, sizeof(hacking), "โปรเพิ่มเกราะ");//Armour hack

				//AntiCheatGetArmour(playerid, extrafloat);
				SetPlayerArmour(playerid, extrafloat);
			}
			case 14: format(hacking, sizeof(hacking), "โปรเสกเงิน");//Money hack
			case 15: {

				if (GetFactionType(playerid) == FACTION_POLICE)
					return 1;

				format(hacking, sizeof(hacking), "โปรเสกอาวุธ");//Weapon hack
				//SendClientMessageToAllEx(COLOR_LIGHTRED, "{FF0000}[{FFFF00}AGGUARD{FF0000}] {FFFF00}%s ถูกเตะออกจากเซิฟเวอร์ |>{00FFFF}  %s", GetPlayerNameEx(playerid), hacking);
				//SendClientMessageEx(playerid, COLOR_WHITE, "วันที่โดนเตะ: %s", ReturnDate());
				//SendClientMessageEx(playerid, COLOR_WHITE, "[!] กรุณาลบโปรแกรมช่วยเล่นออก ก่อนจะโดนแบนถาวร!");
				//DelayedKick(playerid);
			}
			case 16: format(hacking, sizeof(hacking), "Ammo hack (แฮคกระสุน)");
			case 17: format(hacking, sizeof(hacking), "Ammo hack (ล็อคกระสุน)");
			case 18: format(hacking, sizeof(hacking), "Special actions hack");
			case 19: format(hacking, sizeof(hacking), "GodMode from bullets (ล็อคเลือด)");
			case 20: format(hacking, sizeof(hacking), "GodMode from bullets (ล็อคเลือดรถ)");
			case 21: format(hacking, sizeof(hacking), "Invisible hack");
			case 22: format(hacking, sizeof(hacking), "lagcomp-spoof");
			case 23: format(hacking, sizeof(hacking), "Tuning hack");
			case 24: format(hacking, sizeof(hacking), "Parkour mod");
			case 25: format(hacking, sizeof(hacking), "Quick turn");
			case 26: format(hacking, sizeof(hacking), "Rapid fire");
			case 27: format(hacking, sizeof(hacking), "FakeSpawn");
			case 28: format(hacking, sizeof(hacking), "FakeKill");
			case 29: format(hacking, sizeof(hacking), "Pro Aim");
			//case 30: format(hacking, sizeof(hacking), "CJ run");
			case 31: {
				format(hacking, sizeof(hacking), "CarShot");
				SendClientMessageToAllEx(COLOR_LIGHTRED, "{FF0000}[{FFFF00}AGGUARD{FF0000}] {FFFF00}%s ถูกเตะออกจากเซิฟเวอร์ |>{00FFFF}  %s", GetPlayerNameEx(playerid), hacking);
				SendClientMessageEx(playerid, COLOR_WHITE, "วันที่โดนเตะ: %s", ReturnDate());
				SendClientMessageEx(playerid, COLOR_WHITE, "[!] กรุณาลบโปรแกรมช่วยเล่นออก ก่อนจะโดนแบถาวร!");
				DelayedKick(playerid);
			}
			case 32: format(hacking, sizeof(hacking), "CarJack");
			case 33: format(hacking, sizeof(hacking), "UnFreeze");
			case 34: format(hacking, sizeof(hacking), "AFK Ghost");
			case 35: format(hacking, sizeof(hacking), "Full Aiming");
			case 36: format(hacking, sizeof(hacking), "Fake NPC");
			case 37: format(hacking, sizeof(hacking), "Reconnect");
			case 38: format(hacking, sizeof(hacking), "High ping");
			case 39: format(hacking, sizeof(hacking), "Dialog hack");
			case 40: {
				format(hacking, sizeof(hacking), "เข้าข่ายไอพีวงเดียวกัน");
				//SendClientMessageToAllEx(COLOR_LIGHTRED, "{FF0000}[{FFFF00}AGGUARD{FF0000}] {FFFF00}%s ถูกเตะออกจากเซิฟเวอร์ |>{00FFFF}  ไอพีวงเดียวกัน", GetPlayerNameEx(playerid));
				//SendClientMessageEx(playerid, COLOR_WHITE, "วันที่โดนเตะ: %s", ReturnDate());
				//SendClientMessageEx(playerid, COLOR_WHITE, "[!] อย่าเล่น 2 เครื่องพร้อมกันสิ!");
				//DelayedKick(playerid);
			}
			case 41: format(hacking, sizeof(hacking), "Protection against an invalid version");
			case 42: format(hacking, sizeof(hacking), "Rcon hack");
			case 43: format(hacking, sizeof(hacking), "Tuning crasher");
			case 44: format(hacking, sizeof(hacking), "Invalid seat crasher");
			case 45: format(hacking, sizeof(hacking), "Dialog crasher");
			case 46: format(hacking, sizeof(hacking), "Attached object crasher");
			case 47: format(hacking, sizeof(hacking), "Weapon Crasher");
			case 48: format(hacking, sizeof(hacking), "Flood protection connects to one slot");
			case 49: format(hacking, sizeof(hacking), "flood callback functions");
			case 50: format(hacking, sizeof(hacking), "flood change seat");
			case 51: format(hacking, sizeof(hacking), "Ddos");
			case 52: format(hacking, sizeof(hacking), "NOP's");
		}

		format(string, 256, "[AGGUARD] : [%d]%s มีความเป็นไปได้ที่จะ %s", playerid, GetPlayerNameEx(playerid), hacking);
		SendAdminMessage(COLOR_ADMIN, string);
	}
	return 1;
  }

forward ATM_Load();
public ATM_Load()
{
    static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_ATM_MACHINES)
	{
	    atmData[i][atmExists] = true;
	    cache_get_value_name_int(i, "atmID", atmData[i][atmID]);
	    cache_get_value_name_float(i, "atmX", atmData[i][atmPosX]);
        cache_get_value_name_float(i, "atmY", atmData[i][atmPosY]);
        cache_get_value_name_float(i, "atmZ", atmData[i][atmPosZ]);
        cache_get_value_name_float(i, "atmA", atmData[i][atmPosA]);
        cache_get_value_name_int(i, "atmInterior", atmData[i][atmInterior]);
		cache_get_value_name_int(i, "atmWorld", atmData[i][atmWorld]);

		ATM_Refresh(i);
	}
	printf("[SERVER]: %d ATM were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward Shop_Load();
public Shop_Load()
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_SHOPS)
	{
	    shopData[i][shopExists] = true;

	    cache_get_value_name_int(i, "shopID", shopData[i][shopID]);
	    cache_get_value_name_float(i, "shopX", shopData[i][shopPosX]);
	    cache_get_value_name_float(i, "shopY", shopData[i][shopPosY]);
	    cache_get_value_name_float(i, "shopZ", shopData[i][shopPosZ]);
	    cache_get_value_name_int(i, "shopInterior", shopData[i][shopInterior]);
	    cache_get_value_name_int(i, "shopWorld", shopData[i][shopWorld]);
		cache_get_value_name_int(i, "shopType", shopData[i][shopType]);

	    Shop_Refresh(i);
	}
	printf("[SERVER]: %d Shops were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward Pump_Load();
public Pump_Load()
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_PUMPS)
	{
	    pumpData[i][pumpExists] = true;

	    cache_get_value_name_int(i, "pumpID", pumpData[i][pumpID]);
	    cache_get_value_name_float(i, "pumpX", pumpData[i][pumpPosX]);
	    cache_get_value_name_float(i, "pumpY", pumpData[i][pumpPosY]);
	    cache_get_value_name_float(i, "pumpZ", pumpData[i][pumpPosZ]);

	    Pump_Refresh(i);
	}
	printf("[SERVER]: %d Pumps were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward Garage_Load();
public Garage_Load()
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_GARAGES)
	{
	    garageData[i][garageExists] = true;

	    cache_get_value_name_int(i, "garageID", garageData[i][garageID]);
	    cache_get_value_name_float(i, "garageX", garageData[i][garagePosX]);
	    cache_get_value_name_float(i, "garageY", garageData[i][garagePosY]);
	    cache_get_value_name_float(i, "garageZ", garageData[i][garagePosZ]);

	    Garage_Refresh(i);
	}
	printf("[SERVER]: %d Garages were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward OnFactionCreated(factionid);
public OnFactionCreated(factionid)
{
	if (factionid == -1 || !factionData[factionid][factionExists])
	    return 0;

	factionData[factionid][factionID] = cache_insert_id();

	Faction_Save(factionid);
	Faction_SaveRanks(factionid);

	return 1;
}

forward OnArrestCreated(arrestid);
public OnArrestCreated(arrestid)
{
	if (arrestid == -1 || !arrestData[arrestid][arrestExists])
	    return 0;

	arrestData[arrestid][arrestID] = cache_insert_id();
	Arrest_Save(arrestid);

	return 1;
}

forward OnGPSCreated(gpsid);
public OnGPSCreated(gpsid)
{
	if (gpsid == -1 || !gpsData[gpsid][gpsExists])
	    return 0;

	gpsData[gpsid][gpsID] = cache_insert_id();
	GPS_Save(gpsid);

	return 1;
}

forward OnATMCreated(atmid);
public OnATMCreated(atmid)
{
    if (atmid == -1 || !atmData[atmid][atmExists])
		return 0;

	atmData[atmid][atmID] = cache_insert_id();
 	ATM_Save(atmid);

	return 1;
}

forward OnShopCreated(shopid);
public OnShopCreated(shopid)
{
	if (shopid == -1 || !shopData[shopid][shopExists])
	    return 0;

	shopData[shopid][shopID] = cache_insert_id();
	Shop_Save(shopid);

	return 1;
}

forward OnPumpCreated(pumpid);
public OnPumpCreated(pumpid)
{
	if (pumpid == -1 || !pumpData[pumpid][pumpExists])
	    return 0;

	pumpData[pumpid][pumpID] = cache_insert_id();
	Pump_Save(pumpid);

	return 1;
}

forward OnGarageCreated(garageid);
public OnGarageCreated(garageid)
{
	if (garageid == -1 || !garageData[garageid][garageExists])
	    return 0;

	garageData[garageid][garageID] = cache_insert_id();
	Garage_Save(garageid);

	return 1;
}

forward OnInventoryAdd(playerid, itemid);
public OnInventoryAdd(playerid, itemid)
{
	invData[playerid][itemid][invID] = cache_insert_id();
	return 1;
}

forward OnContactAdd(playerid, id);
public OnContactAdd(playerid, id)
{
	contactData[playerid][id][contactID] = cache_insert_id();
	return 1;
}

ResetFaction(playerid)
{
    new query[90];
    playerData[playerid][pFaction] = -1;
    playerData[playerid][pFactionID] = -1;
    playerData[playerid][pFactionRank] = 0;
    if (playerData[playerid][pSpawnPoint] == 1) playerData[playerid][pSpawnPoint] = 0;
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerSpawn` = %d WHERE `playerID` = %d LIMIT 1",
	playerData[playerid][pSpawnPoint],
	playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);
}

ResetPlayer(playerid)
{
	foreach (new i : Player) if (playerData[i][pDraggedBy] == playerid)
	{
	    StopDragging(i);
	}
	if (playerData[playerid][pDragged])
	{
	    StopDragging(playerid);
	}
	playerData[playerid][pCuffed] = 0;
    playerData[playerid][pDragged] = 0;
    playerData[playerid][pDraggedBy] = INVALID_PLAYER_ID;
}

forward DragUpdate(playerid, targetid);
public DragUpdate(playerid, targetid)
{
	if (playerData[targetid][pDragged] && playerData[targetid][pDraggedBy] == playerid)
	{
	    static
	        Float:fX,
	        Float:fY,
	        Float:fZ,
			Float:fAngle;

		GetPlayerPos(playerid, fX, fY, fZ);
		GetPlayerFacingAngle(playerid, fAngle);

		fX -= 3.0 * floatsin(-fAngle, degrees);
		fY -= 3.0 * floatcos(-fAngle, degrees);

		SetPlayerPos(targetid, fX, fY, fZ);
		SetPlayerInterior(targetid, GetPlayerInterior(playerid));
		SetPlayerVirtualWorld(targetid, GetPlayerVirtualWorld(playerid));
	}
	return 1;
}

StopDragging(playerid)
{
	if (playerData[playerid][pDragged])
	{
	    playerData[playerid][pDragged] = 0;
		playerData[playerid][pDraggedBy] = INVALID_PLAYER_ID;
		KillTimer(playerData[playerid][pDragTimer]);
	}
	return 1;
}

SendPlayerToPlayer(playerid, targetid)
{
	new
	    Float:x,
	    Float:y,
	    Float:z;

	GetPlayerPos(targetid, x, y, z);

	if (IsPlayerInAnyVehicle(playerid))
	{
	    SetVehiclePos(GetPlayerVehicleID(playerid), x, y + 2, z);
		LinkVehicleToInterior(GetPlayerVehicleID(playerid), GetPlayerInterior(targetid));
	}
	else
		SetPlayerPos(playerid, x + 1, y, z);

	SetPlayerInterior(playerid, GetPlayerInterior(targetid));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(targetid));

	playerData[playerid][pEntrance] = playerData[targetid][pEntrance];
}

/*Tax_Percent(price)
{
	return floatround((float(price) / 100) * 95);
}*/

Tax_AddMoney(amount)
{
	g_TaxVault = g_TaxVault + amount;

	Server_Save();

	return 0;
}

/*Tax_AddPercent(price)
{
	new money = (price - Tax_Percent(price));

	g_TaxVault = g_TaxVault + money;

	Server_Save();
	return 1;
}*/

Server_Save()
{
	new
	    File:file = fopen("server.ini", io_write),
	    str[128];

	format(str, sizeof(str), "TaxMoney = %d\n", g_TaxVault);
	return (fwrite(file, str), fclose(file));
}

Server_Load()
{
	new File:file = fopen("server.ini", io_read);

	if (file)
	{
		g_TaxVault = file_parse_int(file, "TaxMoney");

		fclose(file);
	}
	return 1;
}

file_parse_int(File:handle, const field[])
{
	new
	    str[16];

	return (file_parse(handle, field, str), strval(str));
}

file_parse(File:handle, const field[], dest[], size = sizeof(dest))
{
	if (!handle)
	    return 0;

	new
	    str[128],
		pos = strlen(field);

	fseek(handle, 0, seek_start);

	while (fread(handle, str)) if (strfind(str, field, true) == 0 && (str[pos] == '=' || str[pos] == ' '))
	{
	    strmid(dest, str, (str[pos] == '=') ? (pos + 1) : (pos + 3), strlen(str), size);

		if ((pos = strfind(dest, "\r")) != -1)
			dest[pos] = '\0';
   		else if ((pos = strfind(dest, "\n")) != -1)
     		dest[pos] = '\0';

		return 1;
	}
	return 0;
}

randomEx(min, max)
{
    return random(max + 1 - min) + min;
}

IsPlayerInCityHall(playerid)
{
	new
		id = -1;

	if ((id = Entrance_Inside(playerid)) != -1 && entranceData[id][entranceType] == 4)
	    return 1;

	return 0;
}

IsPlayerInBank(playerid)
{
	new
		id = -1;

	if ((id = Entrance_Inside(playerid)) != -1 && entranceData[id][entranceType] == 2)
	    return 1;

	return 0;
}

AdminRank(playerid)
{
	new adminname[32];
	switch(playerData[playerid][pAdmin])
	{
	    case 1: adminname = "แอดมินคุมโปร";
	    case 2: adminname = "แอดมินคุมโปร";
	    case 3: adminname = "แอดมินคุมโปร";
	    case 4: adminname = "แอดมินระบบ";
	    case 5: adminname = "รองแอดมิน";
	    case 6: adminname = "แอดมิน";
	    case 126: adminname = "แอดมินท็อป";
	}
	return adminname;
}

IsPlayerSpawnedEx(playerid)
{
	if (playerid < 0 || playerid >= MAX_PLAYERS)
	    return 0;

	return (GetPlayerState(playerid) != PLAYER_STATE_SPECTATING && GetPlayerState(playerid) != PLAYER_STATE_NONE && GetPlayerState(playerid) != PLAYER_STATE_WASTED);
}

Arrest_Nearest(playerid)
{
    for (new i = 0; i != MAX_ARREST; i ++) if (arrestData[i][arrestExists] && IsPlayerInRangeOfPoint(playerid, 4.0, arrestData[i][arrestPosX], arrestData[i][arrestPosY], arrestData[i][arrestPosZ]))
	{
		if (GetPlayerInterior(playerid) == arrestData[i][arrestInterior] && GetPlayerVirtualWorld(playerid) == arrestData[i][arrestWorld])
			return i;
	}
	return -1;
}

Shop_Nearest(playerid)
{
    for (new i = 0; i != MAX_SHOPS; i ++) if (shopData[i][shopExists] && IsPlayerInRangeOfPoint(playerid, 4.0, shopData[i][shopPosX], shopData[i][shopPosY], shopData[i][shopPosZ]))
	{
		if (GetPlayerInterior(playerid) == shopData[i][shopInterior] && GetPlayerVirtualWorld(playerid) == shopData[i][shopWorld])
			return i;
	}
	return -1;
}

Pump_Nearest(playerid)
{
    for (new i = 0; i != MAX_PUMPS; i ++) if (pumpData[i][pumpExists] && IsPlayerInRangeOfPoint(playerid, 4.0, pumpData[i][pumpPosX], pumpData[i][pumpPosY], pumpData[i][pumpPosZ]))
	{
		return i;
	}
	return -1;
}

Garage_Nearest(playerid)
{
    for (new i = 0; i != MAX_GARAGES; i ++) if (garageData[i][garageExists] && IsPlayerInRangeOfPoint(playerid, 4.0, garageData[i][garagePosX], garageData[i][garagePosY], garageData[i][garagePosZ]))
	{
		return i;
	}
	return -1;
}

IsABike(vehicleid)
{
	switch (GetVehicleModel(vehicleid))
	{
		case 481, 509, 510: return 1;
	}
	return 0;
}
stock Gate_Operate(gateid)
{
	if (gateid != -1 && GateData[gateid][gateExists])
	{
	    new id = -1;

		if (!GateData[gateid][gateOpened])
		{
		    GateData[gateid][gateOpened] = true;
		    MoveDynamicObject(GateData[gateid][gateObject], GateData[gateid][gateMove][0], GateData[gateid][gateMove][1], GateData[gateid][gateMove][2], GateData[gateid][gateSpeed], GateData[gateid][gateMove][3], GateData[gateid][gateMove][4], GateData[gateid][gateMove][5]);

            if (GateData[gateid][gateTime] > 0) {
				GateData[gateid][gateTimer] = SetTimerEx("CloseGate", GateData[gateid][gateTime], false, "ddfffffff", gateid, GateData[gateid][gateLinkID], GateData[gateid][gatePos][0], GateData[gateid][gatePos][1], GateData[gateid][gatePos][2], GateData[gateid][gateSpeed], GateData[gateid][gatePos][3], GateData[gateid][gatePos][4], GateData[gateid][gatePos][5]);
			}
			if (GateData[gateid][gateLinkID] != -1 && (id = GetGateByID(GateData[gateid][gateLinkID])) != -1)
			{
			    GateData[id][gateOpened] = true;
			    MoveDynamicObject(GateData[id][gateObject], GateData[id][gateMove][0], GateData[id][gateMove][1], GateData[id][gateMove][2], GateData[id][gateSpeed], GateData[id][gateMove][3], GateData[id][gateMove][4], GateData[id][gateMove][5]);
			}
		}
		else if (GateData[gateid][gateOpened])
		{
		    GateData[gateid][gateOpened] = false;
		    MoveDynamicObject(GateData[gateid][gateObject], GateData[gateid][gatePos][0], GateData[gateid][gatePos][1], GateData[gateid][gatePos][2], GateData[gateid][gateSpeed], GateData[gateid][gatePos][3], GateData[gateid][gatePos][4], GateData[gateid][gatePos][5]);

            if (GateData[gateid][gateTime] > 0) {
				KillTimer(GateData[gateid][gateTimer]);
		    }
			if (GateData[gateid][gateLinkID] != -1 && (id = GetGateByID(GateData[gateid][gateLinkID])) != -1)
			{
			    GateData[id][gateOpened] = false;
			    MoveDynamicObject(GateData[id][gateObject], GateData[id][gatePos][0], GateData[id][gatePos][1], GateData[id][gatePos][2], GateData[id][gateSpeed], GateData[id][gatePos][3], GateData[id][gatePos][4], GateData[id][gatePos][5]);
			}
		}
	}
	return 1;
}

stock PlayerBandage(playerid)
{
    if (isBandagingBig[playerid]) 
        return SendClientMessage(playerid, -1, "คุณกำลังใช้ผ้าพันแผลใหญ่อยู่...");

    if (Inventory_Count(playerid, "ผ้าพันแผลใหญ่") <= 0)
        return SendClientMessage(playerid, -1, "คุณไม่มีผ้าพันแผลใหญ่ในกระเป๋า!");

    new Float:health;
    GetPlayerHealth(playerid, health);

    if (health >= 100.0)
        return SendClientMessage(playerid, -1, "คุณมีพลังชีวิตเต็มอยู่แล้ว!");

    // เริ่มโหลด + เล่นอนิเมชันท่าก้มใช้
    isBandagingBig[playerid] = true;
    TogglePlayerControllable(playerid, 0); // หยุดขยับ
    StartProgress(playerid, 100, 0, INVALID_OBJECT_ID);

    // ใช้ animation ที่แน่นอนว่าเล่นได้
    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 0, 0, 0, 0, 1);

    SendClientMessage(playerid, -1, "* กำลังใช้ผ้าพันแผลใหญ่ กรุณารอ...");

    // เรียกฟังก์ชันจบผ้าพันแผลใหญ่ใหญ่
    SetTimerEx("FinishBandageBig", 2000, false, "d", playerid);
    return 1;
}

stock UseBandageItem(playerid)
{
    if (isBandaging[playerid]) 
        return SendClientMessage(playerid, -1, "คุณกำลังใช้ผ้าพันแผลอยู่...");

    if (Inventory_Count(playerid, "ผ้าพันแผล") <= 0)
        return SendClientMessage(playerid, -1, "คุณไม่มีผ้าพันแผลในกระเป๋า!");

    new Float:health;
    GetPlayerHealth(playerid, health);

    if (health >= 100.0)
        return SendClientMessage(playerid, -1, "คุณมีพลังชีวิตเต็มอยู่แล้ว!");

    // เริ่มโหลด + เล่นอนิเมชันท่าก้มใช้
    isBandaging[playerid] = true;
    TogglePlayerControllable(playerid, 0); // หยุดขยับ
    StartProgress(playerid, 100, 0, INVALID_OBJECT_ID);

    // ใช้ ApplyAnimation แทน SetPlayerAnimation
    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 0, 0, 0, 0, 1);

    SendClientMessage(playerid, -1, "* กำลังใช้ผ้าพันแผล กรุณารอ...");

    SetTimerEx("FinishBandage", 2000, false, "d", playerid);
    return 1;
}

// ระบบ Gate
stock IsValidObjectModel(modelid)
{
	if (modelid < 0 || modelid > 20000)
	    return 0;

    switch (modelid)
	{
		case 18632..18645, 18646..18658, 18659..18667, 18668..19299, 19301..19515, 18631, 331, 333..339, 318..321, 325, 326, 341..344, 346..353, 355..370, 372, 19817, 12943, 12978:
			return 1;
	}
    new const g_arrModelData[] =
	{
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -128,
        -515899393, -134217729, -1, -1, 33554431, -1, -1, -1, -14337, -1, -33,
      	127, 0, 0, 0, 0, 0, -8388608, -1, -1, -1, -16385, -1, -1, -1, -1, -1,
       -1, -1, -33, -1, -771751937, -1, -9, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, 33554431, -25, -1, -1, -1, -1, -1, -1,
       -1073676289, -2147483648, 34079999, 2113536, -4825600, -5, -1, -3145729,
       -1, -16777217, -63, -1, -1, -1, -1, -201326593, -1, -1, -1, -1, -1,
       -257, -1, 1073741823, -133122, -1, -1, -65, -1, -1, -1, -1, -1, -1,
       -2146435073, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1073741823, -64, -1,
       -1, -1, -1, -2635777, 134086663, 0, -64, -1, -1, -1, -1, -1, -1, -1,
       -536870927, -131069, -1, -1, -1, -1, -1, -1, -1, -1, -16384, -1,
       -33554433, -1, -1, -1, -1, -1, -1610612737, 524285, -128, -1,
       2080309247, -1, -1, -1114113, -1, -1, -1, 66977343, -524288, -1, -1, -1,
       -1, -2031617, -1, 114687, -256, -1, -4097, -1, -4097, -1, -1,
       1010827263, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -32768, -1, -1, -1, -1, -1,
       2147483647, -33554434, -1, -1, -49153, -1148191169, 2147483647,
       -100781080, -262145, -57, 134217727, -8388608, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1048577, -1, -449, -1017, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1835009, -2049, -1, -1, -1, -1, -1, -1,
       -8193, -1, -536870913, -1, -1, -1, -1, -1, -87041, -1, -1, -1, -1, -1,
       -1, -209860, -1023, -8388609, -2096897, -1, -1048577, -1, -1, -1, -1,
       -1, -1, -897, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1610612737,
       -3073, -28673, -1, -1, -1, -1537, -1, -1, -13, -1, -1, -1, -1, -1985,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1056964609, -1, -1, -1,
       -1, -1, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -236716037, -1, -1, -1, -1, -1, -1, -1, -536870913, 3, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -2097153, -2109441, -1, 201326591, -4194304, -1, -1,
       -241, -1, -1, -1, -1, -1, -1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, -32768, -1, -1, -1, -2, -671096835, -1, -8388609, -66323585, -13,
       -1793, -32257, -247809, -1, -1, -513, 16252911, 0, 0, 0, -131072,
       33554383, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8356095, 0, 0, 0, 0, 0,
       0, -256, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       -268435449, -1, -1, -2049, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
       92274627, -65536, -2097153, -268435457, 591191935, 1, 0, -16777216, -1,
       -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 127
	};
 	return ((modelid >= 0) && ((modelid / 32) < sizeof(g_arrModelData)) && (g_arrModelData[modelid / 32] & (1 << (modelid % 32))));
}
stock Gate_Save(gateid)
{
	static
	    query[1024];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `gates` SET `gateModel` = '%d', `gateSpeed` = '%.4f', `gateRadius` = '%.4f', `gateTime` = '%d', `gateX` = '%.4f', `gateY` = '%.4f', `gateZ` = '%.4f', `gateRX` = '%.4f', `gateRY` = '%.4f', `gateRZ` = '%.4f', `gateInterior` = '%d', `gateWorld` = '%d', `gateMoveX` = '%.4f', `gateMoveY` = '%.4f', `gateMoveZ` = '%.4f', `gateMoveRX` = '%.4f', `gateMoveRY` = '%.4f', `gateMoveRZ` = '%.4f', `gateLinkID` = '%d', `gateFaction` = '%d', `gatePass` = '%s' WHERE `gateID` = '%d'",
	    GateData[gateid][gateModel],
	    GateData[gateid][gateSpeed],
	    GateData[gateid][gateRadius],
	    GateData[gateid][gateTime],
	    GateData[gateid][gatePos][0],
	    GateData[gateid][gatePos][1],
	    GateData[gateid][gatePos][2],
	    GateData[gateid][gatePos][3],
	    GateData[gateid][gatePos][4],
	    GateData[gateid][gatePos][5],
	    GateData[gateid][gateInterior],
	    GateData[gateid][gateWorld],
	    GateData[gateid][gateMove][0],
	    GateData[gateid][gateMove][1],
	    GateData[gateid][gateMove][2],
	    GateData[gateid][gateMove][3],
	    GateData[gateid][gateMove][4],
	    GateData[gateid][gateMove][5],
	    GateData[gateid][gateLinkID],
	    GateData[gateid][gateFaction],
	    SQL_ReturnEscaped(GateData[gateid][gatePass]),
	    GateData[gateid][gateID]
	);
	return mysql_tquery(g_SQL, query);
}
stock Gate_Create(playerid)
{
	new
	    Float:x,
	    Float:y,
	    Float:z,
	    id,
	    Float:angle;


	if (GetPlayerPos(playerid, x, y, z) && GetPlayerFacingAngle(playerid, angle))
	{
		for (new i = 0; i < MAX_GATES; i ++) if (!GateData[i][gateExists])
		{
		    GateData[i][gateExists] = true;
			GateData[i][gateModel] = 980;
			GateData[i][gateSpeed] = 3.0;
			GateData[i][gateRadius] = 5.0;
			GateData[i][gateOpened] = 0;
			GateData[i][gateTime] = 0;

			GateData[i][gatePos][0] = x + (3.0 * floatsin(-angle, degrees));
			GateData[i][gatePos][1] = y + (3.0 * floatcos(-angle, degrees));
			GateData[i][gatePos][2] = z;
			GateData[i][gatePos][3] = 0.0;
			GateData[i][gatePos][4] = 0.0;
			GateData[i][gatePos][5] = angle;

			GateData[i][gateMove][0] = x + (3.0 * floatsin(-angle, degrees));
			GateData[i][gateMove][1] = y + (3.0 * floatcos(-angle, degrees));
			GateData[i][gateMove][2] = z - 10.0;
			GateData[i][gateMove][3] = -1000.0;
			GateData[i][gateMove][4] = -1000.0;
			GateData[i][gateMove][5] = -1000.0;

            GateData[i][gateInterior] = GetPlayerInterior(playerid);
            GateData[i][gateWorld] = GetPlayerVirtualWorld(playerid);

            GateData[i][gateLinkID] = -1;
            GateData[i][gateFaction] = -1;

            GateData[i][gatePass][0] = '\0';
            GateData[i][gateObject] = CreateDynamicObject(GateData[i][gateModel], GateData[i][gatePos][0], GateData[i][gatePos][1], GateData[i][gatePos][2], GateData[i][gatePos][3], GateData[i][gatePos][4], GateData[i][gatePos][5], GateData[i][gateWorld], GateData[i][gateInterior]);
			Gate_Save(id);

			mysql_tquery(g_SQL, "INSERT INTO `gates` (`gateModel`) VALUES(980)", "OnGateCreated", "d", i);
			return i;
		}
	}
	return -1;
}
stock Gate_Delete(gateid)
{
	if (gateid != -1 && GateData[gateid][gateExists])
	{
		new
		    query[64];

		format(query, sizeof(query), "DELETE FROM `gates` WHERE `gateID` = '%d'", GateData[gateid][gateID]);
		mysql_tquery(g_SQL, query);

		if (IsValidDynamicObject(GateData[gateid][gateObject]))
		    DestroyDynamicObject(GateData[gateid][gateObject]);

		for (new i = 0; i != MAX_GATES; i ++) if (GateData[i][gateExists] && GateData[i][gateLinkID] == GateData[gateid][gateID]) {
		    GateData[i][gateLinkID] = -1;
		    Gate_Save(i);
		}
		if (GateData[gateid][gateOpened] && GateData[gateid][gateTime] > 0) {
		    KillTimer(GateData[gateid][gateTimer]);
		}
	    GateData[gateid][gateExists] = false;
	    GateData[gateid][gateID] = 0;
	    GateData[gateid][gateOpened] = 0;
	}
	return 1;
}

stock SetPlayerPosExten(playerid, Float:x, Float:y, Float:z, time = 2000)
{
	SetPlayerPos(playerid, x, y, z + 0.5);
	TogglePlayerControllable(playerid, 0);

	SetTimerEx("SetPlayerToUnfreeze", time, false, "dfff", playerid, x, y, z);
	return 1;
}

IsPlayerNearPlayer(playerid, targetid, Float:radius)
{
	static
		Float:fX,
		Float:fY,
		Float:fZ;

	GetPlayerPos(targetid, fX, fY, fZ);

	return (GetPlayerInterior(playerid) == GetPlayerInterior(targetid) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid)) && IsPlayerInRangeOfPoint(playerid, radius, fX, fY, fZ);
}

SetPlayerInPrison(playerid)
{
	SetPlayerPos(playerid, -725.3315,2592.8340,1001.9197);

	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);

    ShowPlayerStats (playerid, false);

    TogglePlayerSpectating(playerid, false);

	SetCameraBehindPlayer(playerid);
}

SendNearbyMessage(playerid, Float:radius, color, const str[], {Float,_}:...)
{
	static
	    args,
	    start,
	    end,
	    string[144]
	;
	#emit LOAD.S.pri 8
	#emit STOR.pri args

	if (args > 16)
	{
		#emit ADDR.pri str
		#emit STOR.pri start

	    for (end = start + (args - 16); end > start; end -= 4)
		{
	        #emit LREF.pri end
	        #emit PUSH.pri
		}
		#emit PUSH.S str
		#emit PUSH.C 144
		#emit PUSH.C string

		#emit LOAD.S.pri 8
		#emit CONST.alt 4
		#emit SUB
		#emit PUSH.pri

		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

        foreach (new i : Player)
		{
			if (IsPlayerNearPlayer(i, playerid, radius))
			{
  				SendClientMessage(i, color, string);
			}
		}
		return 1;
	}
	foreach (new i : Player)
	{
		if (IsPlayerNearPlayer(i, playerid, radius))
		{
			SendClientMessage(i, color, str);
		}
	}
	return 1;
}

SendAdminMessage(color, const str[], {Float,_}:...)
{
	static
	    args,
	    start,
	    end,
	    string[144]
	;
	#emit LOAD.S.pri 8
	#emit STOR.pri args

	if (args > 8)
	{
		#emit ADDR.pri str
		#emit STOR.pri start

	    for (end = start + (args - 8); end > start; end -= 4)
		{
	        #emit LREF.pri end
	        #emit PUSH.pri
		}
		#emit PUSH.S str
		#emit PUSH.C 144
		#emit PUSH.C string

		#emit LOAD.S.pri 8
		#emit ADD.C 4
		#emit PUSH.pri

		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

        foreach (new i : Player)
		{
			if (playerData[i][pAdmin] >= 1)
			{
  				SendClientMessage(i, color, string);
			}
		}
		return 1;
	}
	foreach (new i : Player)
	{
		if (playerData[i][pAdmin] >= 1)
		{
			SendClientMessage(i, color, str);
		}
	}
	return 1;
}

SendFactionMessageEx(type, color, const str[], {Float,_}:...)
{
	static
	    args,
	    start,
	    end,
	    string[144]
	;
	#emit LOAD.S.pri 8
	#emit STOR.pri args

	if (args > 12)
	{
		#emit ADDR.pri str
		#emit STOR.pri start

	    for (end = start + (args - 12); end > start; end -= 4)
		{
	        #emit LREF.pri end
	        #emit PUSH.pri
		}
		#emit PUSH.S str
		#emit PUSH.C 144
		#emit PUSH.C string
		#emit PUSH.C args

		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

		foreach (new i : Player) if (playerData[i][pFaction] != -1 && GetFactionType(i) == type && !playerData[i][pDisableFaction])
		{
		    SendClientMessage(i, color, string);
		}
		return 1;
	}
	foreach (new i : Player) if (playerData[i][pFaction] != -1 && GetFactionType(i) == type && !playerData[i][pDisableFaction])
	{
 		SendClientMessage(i, color, str);
	}
	return 1;
}

SendFactionMessage(factionid, color, const str[], {Float,_}:...)
{
	static
	    args,
	    start,
	    end,
	    string[144]
	;
	#emit LOAD.S.pri 8
	#emit STOR.pri args

	if (args > 12)
	{
		#emit ADDR.pri str
		#emit STOR.pri start

	    for (end = start + (args - 12); end > start; end -= 4)
		{
	        #emit LREF.pri end
	        #emit PUSH.pri
		}
		#emit PUSH.S str
		#emit PUSH.C 144
		#emit PUSH.C string
		#emit PUSH.C args

		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

		foreach (new i : Player) if (playerData[i][pFaction] == factionid && !playerData[i][pDisableFaction])
		{
		    SendClientMessage(i, color, string);
		}
		return 1;
	}
	foreach (new i : Player) if (playerData[i][pFaction] == factionid && !playerData[i][pDisableFaction])
	{
 		SendClientMessage(i, color, str);
	}
	return 1;
}

IsNearFactionLocker(playerid)
{
	new factionid = playerData[playerid][pFaction];

	if (factionid == -1)
	    return 0;

	if (IsPlayerInRangeOfPoint(playerid, 3.0, factionData[factionid][factionLockerPosX], factionData[factionid][factionLockerPosY], factionData[factionid][factionLockerPosZ]) && GetPlayerInterior(playerid) == factionData[factionid][factionLockerInt] && GetPlayerVirtualWorld(playerid) == factionData[factionid][factionLockerWorld])
	    return 1;

	return 0;
}

GetFactionByID(sqlid)
{
	for (new i = 0; i != MAX_FACTIONS; i ++) if (factionData[i][factionExists] && factionData[i][factionID] == sqlid)
	    return i;

	return -1;
}

SetFaction(playerid, id)
{
	new query[256];
	playerData[playerid][pFaction] = id;
	playerData[playerid][pFactionID] = factionData[id][factionID];

	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerFaction` = %d WHERE `playerID` = %d",playerData[playerid][pFactionID],playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);
}

RemoveAlpha(color)
{
    return (color & ~0xFF);
}

SetFactionColor(playerid)
{
	new factionid = playerData[playerid][pFaction];

	if (factionid != -1)
		return SetPlayerColor(playerid, RemoveAlpha(factionData[factionid][factionColor]));

	return 0;
}

Faction_Update(factionid)
{
	if (factionid != -1 || factionData[factionid][factionExists])
	{
	    foreach (new i : Player) if (playerData[i][pFaction] == factionid)
		{
 			if (GetFactionType(i) == FACTION_GANG || (GetFactionType(i) != FACTION_GANG && playerData[i][pOnDuty]))
			 	SetFactionColor(i);
		}
	}
	return 1;
}

Faction_Refresh(factionid)
{
	if (factionid != -1 && factionData[factionid][factionExists])
	{
	    if (factionData[factionid][factionLockerPosX] != 0.0 && factionData[factionid][factionLockerPosY] != 0.0 && factionData[factionid][factionLockerPosZ] != 0.0)
	    {
		    static
		        string[128];

			if (IsValidDynamicPickup(factionData[factionid][factionPickup]))
			    DestroyDynamicPickup(factionData[factionid][factionPickup]);

			if (IsValidDynamic3DTextLabel(factionData[factionid][factionText3D]))
			    DestroyDynamic3DTextLabel(factionData[factionid][factionText3D]);

			factionData[factionid][factionPickup] = CreateDynamicPickup(1239, 23, factionData[factionid][factionLockerPosX], factionData[factionid][factionLockerPosY], factionData[factionid][factionLockerPosZ], factionData[factionid][factionLockerWorld], factionData[factionid][factionLockerInt]);

			format(string, sizeof(string), "ตู้เซฟ: {FFFFFF}%s\nกด {00FF00}N{FFFFFF} เพื่อใช้งาน", factionData[factionid][factionName]);
	  		factionData[factionid][factionText3D] = CreateDynamic3DTextLabel(string, COLOR_GREEN, factionData[factionid][factionLockerPosX], factionData[factionid][factionLockerPosY], factionData[factionid][factionLockerPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0, factionData[factionid][factionLockerWorld], factionData[factionid][factionLockerInt]);
		}
	}
	return 1;
}

Faction_Save(factionid)
{
	static
	    query[2048];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `factions` SET `factionName` = '%e', `factionColor` = '%d', `factionType` = '%d', `factionRanks` = '%d', `factionLockerX` = '%.4f', `factionLockerY` = '%.4f', `factionLockerZ` = '%.4f', `factionLockerInt` = '%d', `factionLockerWorld` = '%d', `SpawnX` = '%f', `SpawnY` = '%f', `SpawnZ` = '%f', `SpawnInterior` = '%d', `SpawnVW` = '%d', `factionEntrance` = '%d', `factionMoney` = '%d",
		factionData[factionid][factionName],
		factionData[factionid][factionColor],
		factionData[factionid][factionType],
		factionData[factionid][factionRanks],
		factionData[factionid][factionLockerPosX],
		factionData[factionid][factionLockerPosY],
		factionData[factionid][factionLockerPosZ],
		factionData[factionid][factionLockerInt],
		factionData[factionid][factionLockerWorld],

		factionData[factionid][SpawnX],
		factionData[factionid][SpawnY],
		factionData[factionid][SpawnZ],
		factionData[factionid][SpawnInterior],
		factionData[factionid][SpawnVW],
		factionData[factionid][factionEntrance],
		factionData[factionid][factionMoney]
	);
	for (new i = 0; i < 10; i ++)
	{
	    if (i < 8)
			mysql_format(g_SQL, query, sizeof(query), "%s, `factionSkin%d` = '%d', `factionWeapon%d` = '%d', `factionAmmo%d` = '%d'", query, i + 1, factionData[factionid][factionSkins][i], i + 1, factionData[factionid][factionWeapons][i], i + 1, factionData[factionid][factionAmmo][i]);

		else
			mysql_format(g_SQL, query, sizeof(query), "%s, `factionWeapon%d` = '%d', `factionAmmo%d` = '%d'", query, i + 1, factionData[factionid][factionWeapons][i], i + 1, factionData[factionid][factionAmmo][i]);
	}
	mysql_format(g_SQL, query, sizeof(query), "%s WHERE `factionID` = '%d'",
		query,
		factionData[factionid][factionID]
	);
	return mysql_tquery(g_SQL, query);
}

Faction_SaveRanks(factionid)
{
	static
	    query[768];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `factions` SET `factionRank1` = '%e', `factionRank2` = '%e', `factionRank3` = '%e', `factionRank4` = '%e', `factionRank5` = '%e', `factionRank6` = '%e', `factionRank7` = '%e', `factionRank8` = '%e', `factionRank9` = '%e', `factionRank10` = '%e', `factionRank11` = '%e', `factionRank12` = '%e', `factionRank13` = '%e', `factionRank14` = '%e', `factionRank15` = '%e' WHERE `factionID` = '%d'",
	    FactionRanks[factionid][0],
	    FactionRanks[factionid][1],
	    FactionRanks[factionid][2],
	    FactionRanks[factionid][3],
	    FactionRanks[factionid][4],
	    FactionRanks[factionid][5],
	    FactionRanks[factionid][6],
	    FactionRanks[factionid][7],
	    FactionRanks[factionid][8],
	    FactionRanks[factionid][9],
	    FactionRanks[factionid][10],
	    FactionRanks[factionid][11],
	    FactionRanks[factionid][12],
	    FactionRanks[factionid][13],
	    FactionRanks[factionid][14],
	    factionData[factionid][factionID]
	);
	return mysql_tquery(g_SQL, query);
}

Faction_Delete(factionid)
{
	if (factionid != -1 && factionData[factionid][factionExists])
	{
	    new
	        string[512];

		mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `factions` WHERE `factionID` = '%d'", factionData[factionid][factionID]);
		mysql_tquery(g_SQL, string);

		mysql_format(g_SQL, string, sizeof(string), "UPDATE `players` SET `playerFaction` = '-1' WHERE `playerFaction` = '%d'", factionData[factionid][factionID]);
		mysql_tquery(g_SQL, string);

		foreach (new i : Player)
		{
			if (playerData[i][pFaction] == factionid)
			{
		    	playerData[i][pFaction] = -1;
		    	playerData[i][pFactionID] = -1;
		    	playerData[i][pFactionRank] = -1;
			}
			if (playerData[i][pFactionEdit] == factionid)
			{
			    playerData[i][pFactionEdit] = -1;
			}
		}
		if (IsValidDynamicPickup(factionData[factionid][factionPickup]))
  			DestroyDynamicPickup(factionData[factionid][factionPickup]);

		if (IsValidDynamic3DTextLabel(factionData[factionid][factionText3D]))
  			DestroyDynamic3DTextLabel(factionData[factionid][factionText3D]);

	    factionData[factionid][factionExists] = false;
	    factionData[factionid][factionType] = 0;
	    factionData[factionid][factionID] = 0;
	}
	return 1;
}


GetFactionType(playerid)
{
	if (playerData[playerid][pFaction] == -1)
	    return 0;

	return (factionData[playerData[playerid][pFaction]][factionType]);
}

stock IsACop(playerid) //แก้บัค /ca /cs
{
	if(IsPlayerConnected(playerid))
	{
	    new id = -1;

	    if((id = playerData[playerid][pFaction]) != -1 && factionData[id][factionType] == FACTION_POLICE)
		{
		    return 1;
		}
	}
	return 0;
}

Faction_ShowRanks(playerid, factionid)
{
    if (factionid != -1 && factionData[factionid][factionExists])
	{
		static
		    string[640];

		string[0] = 0;

		for (new i = 0; i < factionData[factionid][factionRanks]; i ++)
		    format(string, sizeof(string), "%sระดับ %d: ตำแหน่ง %s\n", string, i + 1, FactionRanks[factionid][i]);

		playerData[playerid][pFactionEdit] = factionid;
		Dialog_Show(playerid, DIALOG_EDITRANKS, DIALOG_STYLE_LIST, factionData[factionid][factionName], string, "เปลี่ยน", "ออก");
	}
	return 1;
}

Faction_Create(const name[], type)
{
	for (new i = 0; i != MAX_FACTIONS; i ++) if (!factionData[i][factionExists])
	{
	    format(factionData[i][factionName], 32, name);

        factionData[i][factionExists] = true;
        factionData[i][factionColor] = 0xFFFFFF00;
        factionData[i][factionType] = type;
        factionData[i][factionRanks] = 5;

        factionData[i][factionLockerPosX] = 0.0;
        factionData[i][factionLockerPosY] = 0.0;
        factionData[i][factionLockerPosZ] = 0.0;
        factionData[i][factionLockerInt] = 0;
        factionData[i][factionLockerWorld] = 0;

        for (new j = 0; j < 8; j ++)
		{
            factionData[i][factionSkins][j] = 0;
        }
        for (new j = 0; j < 10; j ++)
		{
            factionData[i][factionWeapons][j] = 0;
            factionData[i][factionAmmo][j] = 0;
	    }
	    for (new j = 0; j < 15; j ++)
		{
			format(FactionRanks[i][j], 32, "Rank %d", j + 1);
	    }
		factionData[i][factionMoney] = 0;
	    mysql_tquery(g_SQL, "INSERT INTO `factions` (`factionType`) VALUES(0)", "OnFactionCreated", "d", i);
	    return i;
	}
	return -1;
}

IsNumeric(const str[])
{
	for (new i = 0, l = strlen(str); i != l; i ++)
	{
	    if (i == 0 && str[0] == '-')
			continue;

	    else if (str[i] < '0' || str[i] > '9')
			return 0;
	}
	return 1;
}

GetVehicleModelByName(const name[])
{
	if (IsNumeric(name) && (strval(name) >= 400 && strval(name) <= 611))
	    return strval(name);

	for (new i = 0; i < sizeof(g_arrVehicleNames); i ++)
	{
	    if (strfind(g_arrVehicleNames[i], name, true) != -1)
	    {
	        return i + 400;
		}
	}
	return 0;
}

GetVehicleDriver(vehicleid)
{
	foreach (new i : Player)
	{
		if (GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return i;
	}
	return INVALID_PLAYER_ID;
}

forward FinishBandage(playerid);
public FinishBandage(playerid)
{
    if (!IsPlayerConnected(playerid)) return;

    StopProgress(playerid); // หยุดหลอดโหลด

    TogglePlayerControllable(playerid, 1); // ปลดบล็อกขยับ
    isBandaging[playerid] = false;

    // หยุดอนิเมชันด้วย RemoveAnimations
    SetPlayerSpecialAction(playerid, 0);

    new Float:health;
    GetPlayerHealth(playerid, health);

    new Float:newHealth = health + 20.0;
    if (newHealth > 100.0) newHealth = 100.0;

    SetPlayerHealth(playerid, newHealth);
    Inventory_Remove(playerid, "ผ้าพันแผล", 1);

    new string[64];
    format(string, sizeof(string), "* คุณใช้ผ้าพันแผล และฟื้นพลังชีวิตเป็น %.1f", newHealth);
    SendClientMessage(playerid, -1, string);
}

// สำหรับผ้าพันแผลใหญ่
forward FinishBandageBig(playerid);
public FinishBandageBig(playerid)
{
    if (!IsPlayerConnected(playerid)) return 1;

    StopProgress(playerid);
    TogglePlayerControllable(playerid, 1);
    isBandagingBig[playerid] = false;
    SetPlayerSpecialAction(playerid, 0);

    new Float:health; GetPlayerHealth(playerid, health);
    new Float:newHealth = health + 40.0;
    if (newHealth > 100.0) newHealth = 100.0;

    SetPlayerHealth(playerid, newHealth);
    Inventory_Remove(playerid, "ผ้าพันแผลใหญ่", 1);

    new string[96];
    format(string, sizeof(string), "* คุณใช้ผ้าพันแผลใหญ่ และฟื้นพลังชีวิตเป็น %.1f", newHealth);
    SendClientMessage(playerid, -1, string);

    return 1;
}



/*forward RespawnAllVehicles(number);
public RespawnAllVehicles(number)
{
	switch(number)
	{
	    case 1:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 1 นาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 57000, false, "d", 2);
	    }
	    case 2:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 5 วินาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 1000, false, "d", 3);
	    }
	    case 3:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 4 วินาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 1000, false, "d", 4);
	    }
	    case 4:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 3 วินาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 1000, false, "d", 5);
	    }
	    case 5:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 2 วินาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 1000, false, "d", 6);
	    }
	    case 6:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 1 วินาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 1000, false, "d", 7);
	    }
	    case 7:
	    {
			new count;

			for (new i = 1; i != MAX_VEHICLES; i ++)
			{
			    if (IsValidVehicle(i) && GetVehicleDriver(i) == INVALID_PLAYER_ID)
			    {
			        SetVehicleToRespawn(i);
					count++;
				}
				if(carData[i][carOwnerID] > 0 && !IsVehicleOccupied(i))
				{
				    DespawnVehicle(i);
				}
			}
		    SendClientMessageToAllEx(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบได้ทำการรียานพาหนะกลับจุดเกิดทั้งหมด %d คัน ขออภัยในความไม่สะดวก {FF0080}~~~*", count);
		    SetTimerEx("RespawnAllVehicles", 120000*14, false, "d", 1);
	    }
	}
    return 1;
}*/

RemoveFromVehicle(playerid)
{
	if (IsPlayerInAnyVehicle(playerid))
	{
		static
		    Float:fX,
	    	Float:fY,
	    	Float:fZ;

		GetPlayerPos(playerid, fX, fY, fZ);
		SetPlayerPos(playerid, fX, fY, fZ + 1.5);
	}
	return 1;
}

forward PutInsideVehicle(playerid, vehicleid);
public PutInsideVehicle(playerid, vehicleid)
{
	if (!playerData[playerid][pDrivingTest])
	    return 0;

	RemoveFromVehicle(vehicleid);
    PutPlayerInVehicle(playerid, vehicleid, 0);
    return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if (GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED || GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CARRY || playerData[playerid][pInjured] == 1)
	{
	    ClearAnimations(playerid);
	    return 1;
	}
	if (!ispassenger)
	{
		if (NewbieCar[0] <= vehicleid <= NewbieCar[10])
		{
			if (playerData[playerid][pLevel] >= 3)
			{
				ClearAnimations(playerid);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะสำหรับเด็กใหม่ที่เวลต่ำกว่า 3 เท่านั้น!");
			}
			if (GetPlayerWantedLevelEx(playerid) > 0)
			{
				ClearAnimations(playerid);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใช้จักรยานได้หากคุณมีคดีติดตัว!");
			}
			return 1;
		}

		/*if (playerData[playerid][pAdmin] == 0)
		{
		    if (carData[vehicleid][carFaction] >= 0 && playerData[playerid][pFaction] != carData[vehicleid][carFaction])
		    {
		        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีกุญแจ");
		        ClearAnimations(playerid);
				return 1;
		    }
		}*/
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    if (IsPlayerNPC(playerid))
	    return 1;

    if (playerData[playerid][pDrivingTest])
	{
	    SetTimerEx("PutInsideVehicle", 500, false, "dd", playerid, vehicleid);
		Dialog_Show(playerid, DIALOG_LEAVETEST, DIALOG_STYLE_MSGBOX, "[ยืนยันการยกเลิกสอบ]", "{FFFFFF}คุณยืนยันที่จะออกจากการสอบใบขับขี่?", "ตกลง", "ยกเลิก");
	}
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(carData[vehicleid][carOwnerID] > 0 || carData[vehicleid][carFaction] >= 0)
	{
		new query[128];
	    carData[vehicleid][carColor1] = color1;
	    carData[vehicleid][carColor2] = color2;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carColor1 = %d, carColor2 = %d WHERE carID = %d", color1, color2, carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);
	}

	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(carData[vehicleid][carOwnerID] > 0 || carData[vehicleid][carFaction] >= 0)
	{
		new query[128];
	    carData[vehicleid][carPaintjob] = paintjobid;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPaintjob = %d WHERE carID = %d", paintjobid, carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);
	}

	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(!GetPlayerInterior(playerid) && playerData[playerid][pAdmin] < 2)
	{
	    SendClientMessageToAllEx(COLOR_LIGHTRED, "AdmCmd: %s ถูกแบนโดยแอดมิน SERVER_ANTICHEAT, สาเหตุ: Illegal modding", GetPlayerNameEx(playerid));
	    playerData[playerid][pBan] = 1;
		format(playerData[playerid][pBanReason], 32, "Illegal modding");
		DelayedKick(playerid);
	    return 0;
	}

	if(carData[vehicleid][carOwnerID] > 0 || carData[vehicleid][carFaction] >= 0)
	{
	    new slotid = GetVehicleComponentType(componentid);
		new query[128];

	    carData[vehicleid][carMods][slotid] = componentid;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carMod%d = %d WHERE carID = %d", slotid + 1, componentid, carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);
	}

	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	if(adminVehicle[vehicleid])
	{
	    DestroyVehicle(vehicleid);
	    adminVehicle[vehicleid] = false;
	}
	if(IsValidDynamicObject(vehicleSiren[vehicleid]))
	{
	    DestroyDynamicObject(vehicleSiren[vehicleid]);
	    vehicleSiren[vehicleid] = INVALID_OBJECT_ID;
	}
	new modelid = GetVehicleModel(vehicleid);
	if((carData[vehicleid][carID] > 0 && carData[vehicleid][carOwnerID] > 0) || (carData[vehicleid][carFaction] >= 0))
	{
	    ReloadVehicle(vehicleid);

	    if(carData[vehicleid][carFaction] >= 0)
	    {
		vehicleFuel[vehicleid] = vehicleData[modelid - 400][vFuel];
		}
	}
	else
	{
     	if(carData[vehicleid][carID] > 0 && carData[vehicleid][carHealth] > 300.0)
     	{
			if (carData[vehicleid][carHealth] < 350)
				SetVehicleHealth(vehicleid, 350);
			else
			    SetVehicleHealth(vehicleid, carData[vehicleid][carHealth]);
     	}

		vehicleFuel[vehicleid] = vehicleData[modelid - 400][vFuel];
	}

	vehicleStream[vehicleid][0] = 0;

	return 1;
}

GetSpawnedVehicles(playerid)
{
	new count;

    for(new i = 1; i < MAX_VEHICLES; i ++)
	{
	    if(IsValidVehicle(i) && IsVehicleOwner(playerid, i))
	    {
	        count++;
		}
	}

	return count;
}

GetNearbyVehicle(playerid)
{
	new Float:x, Float:y, Float:z;

	for(new i = 1; i < MAX_VEHICLES; i ++)
	{
	    if(IsValidVehicle(i) && IsVehicleStreamedIn(i, playerid))
	    {
	        GetVehiclePos(i, x, y, z);

	        if(IsPlayerInRangeOfPoint(playerid, 3.5, x, y, z))
	        {
	            return i;
			}
		}
	}

	return INVALID_VEHICLE_ID;
}

IsVehicleOccupied(vehicleid)
{
	foreach(new i : Player)
	{
	    if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
	    {
	        return 1;
		}
	}

	return 0;
}

IsVehicleOwner(playerid, vehicleid)
{
	return (carData[vehicleid][carOwnerID] == playerData[playerid][pID]) && (carData[vehicleid][carOwnerID] != 0);
}

SetVehicleNeon(vehicleid, modelid)
{
	if(18647 <= modelid <= 18652)
	{
	    if(carData[vehicleid][carNeonEnabled])
	    {
	        DestroyDynamicObject(carData[vehicleid][carObjects][0]);
			DestroyDynamicObject(carData[vehicleid][carObjects][1]);
	    }

		new query[128];

	    carData[vehicleid][carNeon] = modelid;
	    carData[vehicleid][carNeonEnabled] = (modelid > 0);

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carNeon = %d, carNeonEnabled = 1 WHERE carID = %d", carData[vehicleid][carNeon], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		ReloadVehicleNeon(vehicleid);
	}
}

ReloadVehicleNeon(vehicleid)
{
	if(carData[vehicleid][carID] > 0)
	{
	    DestroyDynamicObject(carData[vehicleid][carObjects][0]);
	    DestroyDynamicObject(carData[vehicleid][carObjects][1]);

	    if(carData[vehicleid][carNeon] && carData[vehicleid][carNeonEnabled])
	    {
	        new
				Float:x,
				Float:y,
				Float:z;

			GetVehicleModelInfo(carData[vehicleid][carModel], VEHICLE_MODEL_INFO_SIZE, x, y, z);

			carData[vehicleid][carObjects][0] = CreateDynamicObject(carData[vehicleid][carNeon], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
			carData[vehicleid][carObjects][1] = CreateDynamicObject(carData[vehicleid][carNeon], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);

			AttachDynamicObjectToVehicle(carData[vehicleid][carObjects][0], vehicleid, -x / 2.8, 0.0, -0.6, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(carData[vehicleid][carObjects][1], vehicleid, x / 2.8, 0.0, -0.6, 0.0, 0.0, 0.0);
		}
	}
}

ResyncVehicle(vehicleid)
{
	new
		worldid = GetVehicleVirtualWorld(vehicleid);
	SetVehicleVirtualWorld(vehicleid, cellmax);
	SetVehicleVirtualWorld(vehicleid, worldid);
}

SaveVehicleModifications(vehicleid)
{
	for(new i = 0; i < 14; i ++)
	{
	    carData[vehicleid][carMods][i] = GetVehicleComponentInSlot(vehicleid, i);

		new query[128];

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carMod%d = %d WHERE carID = %d", i + 1, carData[vehicleid][carMods][i], carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);
	}
}

ReloadVehicle(vehicleid)
{
    if(carData[vehicleid][carPaintjob] >= 0)
    {
        ChangeVehiclePaintjob(vehicleid, carData[vehicleid][carPaintjob]);
    }
    if(carData[vehicleid][carNeon] && carData[vehicleid][carNeonEnabled])
	{
		ReloadVehicleNeon(vehicleid);
    }

	for(new i = 0; i < 14; i ++)
	{
	    if(carData[vehicleid][carMods][i] >= 1000)
	    {
	        AddVehicleComponent(vehicleid, carData[vehicleid][carMods][i]);
		}
	}

	if(strcmp(carData[vehicleid][carPlate], "None") != 0)
	{
	    SetVehicleNumberPlate(vehicleid, carData[vehicleid][carPlate]);
	    ResyncVehicle(vehicleid);
	}

    LinkVehicleToInterior(vehicleid, carData[vehicleid][carInterior]);
    SetVehicleVirtualWorld(vehicleid, carData[vehicleid][carWorld]);
	if (carData[vehicleid][carHealth] < 350)
		SetVehicleHealth(vehicleid, 350);
	else
	    SetVehicleHealth(vehicleid, carData[vehicleid][carHealth]);
    SetVehicleParams(vehicleid, VEHICLE_DOORS, carData[vehicleid][carLocked]);
}

DespawnVehicle(vehicleid, bool:save = true)
{
	if(carData[vehicleid][carID] > 0)
	{
	    if(carData[vehicleid][carNeonEnabled])
	    {
	        DestroyDynamicObject(carData[vehicleid][carObjects][0]);
	        DestroyDynamicObject(carData[vehicleid][carObjects][1]);
	    }
		if(save)
		{
		    new
				Float:health,
				query[128];

		    GetVehicleHealth(vehicleid, health);
		    SaveVehicleModifications(vehicleid);

		    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carFuel = %.2f, carHealth = '%f' WHERE carID = %d", vehicleFuel[vehicleid], health, carData[vehicleid][carID]);
	    	mysql_tquery(g_SQL, query);
	    }
		DestroyVehicle(vehicleid);
		ResetVehicle(vehicleid);
	}
}

ResetVehicle(vehicleid)
{
	strcpy(carData[vehicleid][carPlate], "None", 32);

	if(carData[vehicleid][carTimer] >= 0)
	{
	    KillTimer(carData[vehicleid][carTimer]);
	}

    carData[vehicleid][carID] = 0;
	carData[vehicleid][carOwnerID] = 0;
	carData[vehicleid][carOwner] = 0;
	carData[vehicleid][carModel] = 0;
	carData[vehicleid][carPrice] = 0;
	carData[vehicleid][carTickets] = 0;
	carData[vehicleid][carLocked] = 0;
	carData[vehicleid][carHealth] = 1000.0;
	carData[vehicleid][carPosX] = 0.0;
	carData[vehicleid][carPosY] = 0.0;
	carData[vehicleid][carPosZ] = 0.0;
	carData[vehicleid][carPosA] = 0.0;
	carData[vehicleid][carColor1] = 0;
	carData[vehicleid][carColor2] = 0;
	carData[vehicleid][carPaintjob] = -1;
	carData[vehicleid][carInterior] = 0;
	carData[vehicleid][carWorld] = 0;
	carData[vehicleid][carCash] = 0;
    carData[vehicleid][carFaction] = -1;
	carData[vehicleid][carObjects][0] = INVALID_OBJECT_ID;
	carData[vehicleid][carObjects][1] = INVALID_OBJECT_ID;
	carData[vehicleid][carTimer] = -1;

	for(new i = 0; i < 14; i ++)
	{
	    carData[vehicleid][carMods][i] = 0;
	}
}

GetVehicleStashCapacity(vehicleid, item)
{
	static const stashCapacities[][] = {
		// Cash   Mats    W     C    M    P   HP   PT   FMJ  W
	    {25000,   5000,   25,   25,  10,  5,  80,  60,  50,  3}, // level 1
	    {50000,   10000,  50,   50,  25,  10, 100, 80,  60,  4}, // level 2
	    {100000,  25000,  100,  75,  50,  20, 125, 100, 70,  5} // level 3
	};

	if(carData[vehicleid][carTrunk] > 0)
	{
		return stashCapacities[carData[vehicleid][carTrunk] - 1][item];
	}

	return 0;
}

forward DespawnTimer(vehicleid);
public DespawnTimer(vehicleid)
{
	if(carData[vehicleid][carOwnerID] > 0 && !IsVehicleOccupied(vehicleid))
	{
	    DespawnVehicle(vehicleid);
	}
	else
	{
	    // ANOTHER TEN MINUTES!
	    carData[vehicleid][carTimer] = SetTimerEx("DespawnTimer", 600000, false, "i", vehicleid);
	}
}

GetPlayerAssetLimit(playerid, type)
{
	switch(type)
	{
        case LIMIT_VEHICLES:
	    {
            switch(playerData[playerid][pVip])
			{
				case 0: return 5;
			    case 1: return 10;
			    case 2: return 15;
			    case 3: return 20;
			    case 4: return 20;
			}
		}
	}

	return 0;
}

forward OnPlayerAttemptBuyVehicle(playerid, index);
public OnPlayerAttemptBuyVehicle(playerid, index)
{
	new count;
	cache_get_value_index_int(0, 0, count);

	if(count >= GetPlayerAssetLimit(playerid, LIMIT_VEHICLES))
	{
	    SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถส่วนตัวของตัวละครคุณเต็มจำนวนแล้ว %d/%d ไม่สามารถซื้อเพิ่มได้อีก", count, GetPlayerAssetLimit(playerid, LIMIT_VEHICLES));
	}
	else
	{
		new string[20], query[1080];

		if(GetPlayerMoneyEx(playerid) < vehicleArray[index][carPrice])
		{
			SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อรถส่วนตัว (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(vehicleArray[index][carPrice]));
		}
		else
		{
			switch(random(3))
			{
				case 0:
				{
					mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', %d, %d, %.1f, '562.3970', '-1283.8485', '17.0007', '0.0000')", playerData[playerid][pID], GetPlayerNameEx(playerid), vehicleArray[index][carModel], vehicleArray[index][carPrice], vehicleData[vehicleArray[index][carModel] - 400][vFuel]);
					mysql_tquery(g_SQL, query);
				}
				case 1:
				{
					mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', %d, %d, %.1f, '557.8670', '-1283.9822', '17.0007', '0.0000')", playerData[playerid][pID], GetPlayerNameEx(playerid), vehicleArray[index][carModel], vehicleArray[index][carPrice], vehicleData[vehicleArray[index][carModel] - 400][vFuel]);
					mysql_tquery(g_SQL, query);
				}
				case 2:
				{
					mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', %d, %d, %.1f, '552.8177', '-1284.1307', '17.0007', '0.0000')", playerData[playerid][pID], GetPlayerNameEx(playerid), vehicleArray[index][carModel], vehicleArray[index][carPrice], vehicleData[vehicleArray[index][carModel] - 400][vFuel]);
					mysql_tquery(g_SQL, query);
				}
			}

			GivePlayerMoneyEx(playerid, -vehicleArray[index][carPrice]);

			format(string, sizeof(string), "~r~-$%d", vehicleArray[index][carPrice]);
			GameTextForPlayer(playerid, string, 5000, 1);

			SendClientMessageEx(playerid, COLOR_GREEN, "คุณได้ซื้อรถรุ่น %s ในราคา %s สำเร็จ /car ในการเรียกรถออกมา", g_arrVehicleNames[vehicleArray[index][carModel] - 400], FormatMoney(vehicleArray[index][carPrice]));
		}
	}
}

forward OnPlayerSpawnVehicle(playerid, parked);
public OnPlayerSpawnVehicle(playerid, parked)
{
	static
	    rows;

	cache_get_row_count(rows);

	if(!rows)
	{
	    SendClientMessage(playerid, COLOR_RED, "[ ! ] {FFFFFF}ขณะนี้ระบบมีปัญหา กรุณาติดต่อแอดมิน...");
	}
	else
	{
	    for(new i = 0; i < MAX_VEHICLES; i ++)
	    {
			new vid;
			cache_get_value_name_int(0, "carID", vid);
	        if(IsValidVehicle(i) && carData[i][carID] == vid)
	        {
         	   return SendClientMessage(playerid, COLOR_RED, "[ ! ] {FFFFFF}รถคันนี้ถูกเรียกมาไว้อยู่แล้ว !");
	    	}
	    }

        if (playerData[playerid][pVip] == 0)
		{
		    if(GetSpawnedVehicles(playerid) >= MAX_SPAWNED_VEHICLES)
		    {
		        return SendClientMessageEx(playerid, COLOR_RED, "[ ! ] {FFFFFF}รถส่วนตัวของคุณจอดครบ %d คันแล้ว กรุณาเก็บคันใดคันนึง", MAX_SPAWNED_VEHICLES);
		    }
		}

        else if (playerData[playerid][pVip] == 1)
		{
		    if(GetSpawnedVehicles(playerid) >= 3)
		    {
		        return SendClientMessageEx(playerid, COLOR_RED, "[ ! ] {FFFFFF}รถส่วนตัวของคุณจอดครบ %d คันแล้ว กรุณาเก็บคันใดคันนึง", MAX_SPAWNED_VEHICLES);
		    }
		}

        else if (playerData[playerid][pVip] == 2)
		{
		    if(GetSpawnedVehicles(playerid) >= 5)
		    {
		        return SendClientMessageEx(playerid, COLOR_RED, "[ ! ] {FFFFFF}รถส่วนตัวของคุณจอดครบ %d คันแล้ว กรุณาเก็บคันใดคันนึง", MAX_SPAWNED_VEHICLES);
		    }
		}

        else if (playerData[playerid][pVip] == 3)
		{
		    if(GetSpawnedVehicles(playerid) >= 7)
		    {
		        return SendClientMessageEx(playerid, COLOR_RED, "[ ! ] {FFFFFF}รถส่วนตัวของคุณจอดครบ %d คันแล้ว กรุณาเก็บคันใดคันนึง", MAX_SPAWNED_VEHICLES);
		    }
		}

		new modelid, Float:x, Float:y, Float:z, Float:a, color1, color2, vehicleid;

		cache_get_value_name_int(0, "carModel", modelid);
		/*cache_get_value_name_float(0, "carPosX", x);
		cache_get_value_name_float(0, "carPosY", y);
		cache_get_value_name_float(0, "carPosZ", z);
		cache_get_value_name_float(0, "carPosA", a);*/
		cache_get_value_name_int(0, "carColor1", color1);
		cache_get_value_name_int(0, "carColor2", color2);

		//cache_get_value_name_int(0, "carFix", carfix);

		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, a);
//  เรียกรถส่วนตัว
		vehicleid = CreateVehicle(modelid, x, y+2.0, z, a, color1, color2, -1);
		PutPlayerInVehicle(playerid, vehicleid, 0);

		if(vehicleid != INVALID_VEHICLE_ID)
		{
		    ResetVehicle(vehicleid);

		    cache_get_value_name(0, "carOwner", carData[vehicleid][carOwner], MAX_PLAYER_NAME);
		    cache_get_value_name(0, "carPlate", carData[vehicleid][carPlate], 32);

		    cache_get_value_name_int(0, "carID", carData[vehicleid][carID]);
		    cache_get_value_name_int(0, "carOwnerID", carData[vehicleid][carOwnerID]);
		    cache_get_value_name_int(0, "carPrice", carData[vehicleid][carPrice]);
		    cache_get_value_name_int(0, "carTickets", carData[vehicleid][carTickets]);
		    cache_get_value_name_int(0, "carLocked", carData[vehicleid][carLocked]);
		    cache_get_value_name_float(0, "carHealth", carData[vehicleid][carHealth]);
		    cache_get_value_name_int(0, "carPaintjob", carData[vehicleid][carPaintjob]);
		    cache_get_value_name_int(0, "carInterior", carData[vehicleid][carInterior]);
	        cache_get_value_name_int(0, "carWorld", carData[vehicleid][carWorld]);
	        cache_get_value_name_int(0, "carNeon", carData[vehicleid][carNeon]);
	        cache_get_value_name_int(0, "carNeonEnabled", carData[vehicleid][carNeonEnabled]);
	        cache_get_value_name_int(0, "carTrunk", carData[vehicleid][carTrunk]);
	        cache_get_value_name_int(0, "carMod1", carData[vehicleid][carMods][0]);
	        cache_get_value_name_int(0, "carMod2", carData[vehicleid][carMods][1]);
	        cache_get_value_name_int(0, "carMod3", carData[vehicleid][carMods][2]);
	        cache_get_value_name_int(0, "carMod4", carData[vehicleid][carMods][3]);
	        cache_get_value_name_int(0, "carMod5", carData[vehicleid][carMods][4]);
	        cache_get_value_name_int(0, "carMod6", carData[vehicleid][carMods][5]);
	        cache_get_value_name_int(0, "carMod7", carData[vehicleid][carMods][6]);
	        cache_get_value_name_int(0, "carMod8", carData[vehicleid][carMods][7]);
	        cache_get_value_name_int(0, "carMod9", carData[vehicleid][carMods][8]);
	        cache_get_value_name_int(0, "carMod10", carData[vehicleid][carMods][9]);
	        cache_get_value_name_int(0, "carMod11", carData[vehicleid][carMods][10]);
	        cache_get_value_name_int(0, "carMod12", carData[vehicleid][carMods][11]);
	        cache_get_value_name_int(0, "carMod13", carData[vehicleid][carMods][12]);
	        cache_get_value_name_int(0, "carMod14", carData[vehicleid][carMods][13]);
	        cache_get_value_name_int(0, "carCash", carData[vehicleid][carCash]);
	        carData[vehicleid][carFaction] = -1;
	        carData[vehicleid][carModel] = modelid;
		    carData[vehicleid][carPosX] = x;
		    carData[vehicleid][carPosY] = y;
		    carData[vehicleid][carPosZ] = z;
		    carData[vehicleid][carPosA] = a;
		    carData[vehicleid][carColor1] = color1;
		    carData[vehicleid][carColor2] = color2;
		    carData[vehicleid][carObjects][0] = INVALID_OBJECT_ID;
		    carData[vehicleid][carObjects][1] = INVALID_OBJECT_ID;
		    carData[vehicleid][carTimer] = -1;

			cache_get_value_name_float(0, "carFuel", vehicleFuel[vehicleid]);
			adminVehicle[vehicleid] = false;

			ReloadVehicle(vehicleid);

		    if(!parked)
			{
			   // SendClientMessageEx(playerid, COLOR_PINK, "[!] คุณได้เรียกรถรุ่น %s ออกมาแล้ว /จุดจอดรถ ในการค้นหาตำแหน่งปัจจุบัน", ReturnVehicleName(vehicleid));
			    //SendClientMessageEx(playerid, COLOR_PINK, "[!] สามารถ /carinfo เพื่อดูคำสั่งรถได้");
			}
	    }
	}

	return 1;
}
Arrest_Delete(arrestid)
{
	if (arrestid != -1 && arrestData[arrestid][arrestExists])
	{
	    static
	        string[64];

        if (IsValidDynamicPickup(arrestData[arrestid][arrestPickup]))
		    DestroyDynamicPickup(arrestData[arrestid][arrestPickup]);

		if (IsValidDynamic3DTextLabel(arrestData[arrestid][arrestText3D]))
		    DestroyDynamic3DTextLabel(arrestData[arrestid][arrestText3D]);

		format(string, sizeof(string), "DELETE FROM `arrestpoints` WHERE `arrestID` = '%d'", arrestData[arrestid][arrestID]);
		mysql_tquery(g_SQL, string);

		arrestData[arrestid][arrestExists] = false;
		arrestData[arrestid][arrestID] = 0;
	}
	return 1;
}

Arrest_Create(Float:x, Float:y, Float:z, interior, world)
{
	for (new i = 0; i < MAX_ARREST; i ++) if (!arrestData[i][arrestExists])
	{
	    arrestData[i][arrestExists] = true;
	    arrestData[i][arrestPosX] = x;
	    arrestData[i][arrestPosY] = y;
	    arrestData[i][arrestPosZ] = z;
	    arrestData[i][arrestInterior] = interior;
	    arrestData[i][arrestWorld] = world;

	    mysql_tquery(g_SQL, "INSERT INTO `arrestpoints` (`arrestInterior`) VALUES(0)", "OnArrestCreated", "d", i);
		Arrest_Refresh(i);
		return i;
	}
	return -1;
}

Arrest_Save(arrestid)
{
	static
	    query[220];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `arrestpoints` SET `arrestX` = '%.4f', `arrestY` = '%.4f', `arrestZ` = '%.4f', `arrestInterior` = '%d', `arrestWorld` = '%d' WHERE `arrestID` = '%d'",
	    arrestData[arrestid][arrestPosX],
	    arrestData[arrestid][arrestPosY],
	    arrestData[arrestid][arrestPosZ],
	    arrestData[arrestid][arrestInterior],
	    arrestData[arrestid][arrestWorld],
	    arrestData[arrestid][arrestID]
	);
	return mysql_tquery(g_SQL, query);
}

Arrest_Refresh(arrestid)
{
	if (arrestid != -1 && arrestData[arrestid][arrestExists])
	{
		if (IsValidDynamicPickup(arrestData[arrestid][arrestPickup]))
		    DestroyDynamicPickup(arrestData[arrestid][arrestPickup]);

		if (IsValidDynamic3DTextLabel(arrestData[arrestid][arrestText3D]))
		    DestroyDynamic3DTextLabel(arrestData[arrestid][arrestText3D]);

		arrestData[arrestid][arrestPickup] = CreateDynamicPickup(1247, 23, arrestData[arrestid][arrestPosX], arrestData[arrestid][arrestPosY], arrestData[arrestid][arrestPosZ], arrestData[arrestid][arrestWorld], arrestData[arrestid][arrestInterior]);
  		arrestData[arrestid][arrestText3D] = CreateDynamic3DTextLabel("เรือนจำ: {FFFFFF}/arrest\nในการส่งผู้ร้ายเข้าห้องขัง", COLOR_GREEN, arrestData[arrestid][arrestPosX], arrestData[arrestid][arrestPosY], arrestData[arrestid][arrestPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0, arrestData[arrestid][arrestWorld], arrestData[arrestid][arrestInterior]);
	}
	return 1;
}

GPS_Delete(gpsid)
{
	if (gpsid != -1 && gpsData[gpsid][gpsExists])
	{
	    static
	        string[64];

		format(string, sizeof(string), "DELETE FROM `gps` WHERE `gpsID` = '%d'", gpsData[gpsid][gpsID]);
		mysql_tquery(g_SQL, string);

		gpsData[gpsid][gpsExists] = false;
		gpsData[gpsid][gpsID] = 0;
	}
	return 1;
}

GPS_Create(type, const gpsname[], Float:x, Float:y, Float:z)
{
	for (new i = 0; i < MAX_GPS; i ++) if (!gpsData[i][gpsExists])
	{
	    gpsData[i][gpsExists] = true;
	    format(gpsData[i][gpsName], 32, gpsname);
	    gpsData[i][gpsPosX] = x;
	    gpsData[i][gpsPosY] = y;
	    gpsData[i][gpsPosZ] = z;
	    gpsData[i][gpsType] = type;

	    mysql_tquery(g_SQL, "INSERT INTO `gps` (`gpsID`) VALUES(0)", "OnGPSCreated", "d", i);
		return i;
	}
	return -1;
}

GPS_Save(gpsid)
{
	static
	    query[220];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `gps` SET `gpsName` = '%e', `gpsX` = '%.4f', `gpsY` = '%.4f', `gpsZ` = '%.4f', `gpsType` = '%d' WHERE `gpsID` = '%d'",
		gpsData[gpsid][gpsName],
		gpsData[gpsid][gpsPosX],
	    gpsData[gpsid][gpsPosY],
	    gpsData[gpsid][gpsPosZ],
	    gpsData[gpsid][gpsType],
	    gpsData[gpsid][gpsID]
	);
	return mysql_tquery(g_SQL, query);
}

ATM_Delete(atmid)
{
	if (atmid != -1 && atmData[atmid][atmExists])
	{
	    new
	        string[64];

		mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `atm` WHERE `atmID` = '%d'", atmData[atmid][atmID]);
		mysql_tquery(g_SQL, string);

        if (IsValidDynamicObject(atmData[atmid][atmObject]))
	        DestroyDynamicObject(atmData[atmid][atmObject]);

	    if (IsValidDynamic3DTextLabel(atmData[atmid][atmText3D]))
	        DestroyDynamic3DTextLabel(atmData[atmid][atmText3D]);

	    atmData[atmid][atmExists] = false;
	    atmData[atmid][atmID] = 0;
	}
	return 1;
}

ATM_Nearest(playerid)
{
    for (new i = 0; i != MAX_ATM_MACHINES; i ++) if (atmData[i][atmExists] && IsPlayerInRangeOfPoint(playerid, 2.5, atmData[i][atmPosX], atmData[i][atmPosY], atmData[i][atmPosZ]))
	{
		if (GetPlayerInterior(playerid) == atmData[i][atmInterior] && GetPlayerVirtualWorld(playerid) == atmData[i][atmWorld])
			return i;
	}
	return -1;
}

ATM_Create(playerid)
{
    new
	    Float:x,
	    Float:y,
	    Float:z,
	    Float:angle;

	if (GetPlayerPos(playerid, x, y, z) && GetPlayerFacingAngle(playerid, angle))
	{
		for (new i = 0; i < MAX_ATM_MACHINES; i ++) if (!atmData[i][atmExists])
		{
		    atmData[i][atmExists] = true;

		    x += 1.0 * floatsin(-angle, degrees);
			y += 1.0 * floatcos(-angle, degrees);

            atmData[i][atmPosX] = x;
            atmData[i][atmPosY] = y;
            atmData[i][atmPosZ] = z;
            atmData[i][atmPosA] = angle;

            atmData[i][atmInterior] = GetPlayerInterior(playerid);
            atmData[i][atmWorld] = GetPlayerVirtualWorld(playerid);

			ATM_Refresh(i);
			mysql_tquery(g_SQL, "INSERT INTO `atm` (`atmInterior`) VALUES(0)", "OnATMCreated", "d", i);

			return i;
		}
	}
	return -1;
}

ATM_Refresh(atmid)
{
	if (atmid != -1 && atmData[atmid][atmExists])
	{
	    if (IsValidDynamicObject(atmData[atmid][atmObject]))
	        DestroyDynamicObject(atmData[atmid][atmObject]);

	    if (IsValidDynamic3DTextLabel(atmData[atmid][atmText3D]))
	        DestroyDynamic3DTextLabel(atmData[atmid][atmText3D]);

		atmData[atmid][atmObject] = CreateDynamicObject(2942, atmData[atmid][atmPosX], atmData[atmid][atmPosY], atmData[atmid][atmPosZ] - 0.4, 0.0, 0.0, atmData[atmid][atmPosA], atmData[atmid][atmWorld], atmData[atmid][atmInterior]);
        atmData[atmid][atmText3D] = CreateDynamic3DTextLabel("ตู้ ATM: {FFFFFF}กด N \nเพื่อใช้งาน", COLOR_GREEN, atmData[atmid][atmPosX], atmData[atmid][atmPosY], atmData[atmid][atmPosZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, atmData[atmid][atmWorld], atmData[atmid][atmInterior]);

		return 1;
	}
	return 0;
}

ATM_Save(atmid)
{
	new
	    query[200];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `atm` SET `atmX` = '%.4f', `atmY` = '%.4f', `atmZ` = '%.4f', `atmA` = '%.4f', `atmInterior` = '%d', `atmWorld` = '%d' WHERE `atmID` = '%d'",
	    atmData[atmid][atmPosX],
	    atmData[atmid][atmPosY],
	    atmData[atmid][atmPosZ],
	    atmData[atmid][atmPosA],
	    atmData[atmid][atmInterior],
	    atmData[atmid][atmWorld],
	    atmData[atmid][atmID]
	);
	return mysql_tquery(g_SQL, query);
}

Shop_Delete(shopid)
{
	if (shopid != -1 && shopData[shopid][shopExists])
	{
	    static
	        string[64];

        if (IsValidDynamicPickup(shopData[shopid][shopPickup]))
		    DestroyDynamicPickup(shopData[shopid][shopPickup]);

		if (IsValidDynamic3DTextLabel(shopData[shopid][shopText3D]))
		    DestroyDynamic3DTextLabel(shopData[shopid][shopText3D]);

		mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `shops` WHERE `shopID` = '%d'", shopData[shopid][shopID]);
		mysql_tquery(g_SQL, string);

		shopData[shopid][shopExists] = false;
		shopData[shopid][shopID] = 0;
	}
	return 1;
}

Shop_Create(Float:x, Float:y, Float:z, interior, world, type)
{
	for (new i = 0; i < MAX_SHOPS; i ++) if (!shopData[i][shopExists])
	{
	    shopData[i][shopExists] = true;
	    shopData[i][shopPosX] = x;
	    shopData[i][shopPosY] = y;
	    shopData[i][shopPosZ] = z;
	    shopData[i][shopInterior] = interior;
	    shopData[i][shopWorld] = world;
		shopData[i][shopType] = type;

	    mysql_tquery(g_SQL, "INSERT INTO `shops` (`shopInterior`) VALUES(0)", "OnShopCreated", "d", i);
		Shop_Refresh(i);
		return i;
	}
	return -1;
}

Shop_Save(shopid)
{
	static
	    query[280];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `shops` SET `shopX` = '%.4f', `shopY` = '%.4f', `shopZ` = '%.4f', `shopInterior` = '%d', `shopWorld` = '%d' , `shopType` = '%d' WHERE `shopID` = '%d'",
	    shopData[shopid][shopPosX],
	    shopData[shopid][shopPosY],
	    shopData[shopid][shopPosZ],
	    shopData[shopid][shopInterior],
	    shopData[shopid][shopWorld],
		shopData[shopid][shopType],
	    shopData[shopid][shopID]
	);
	return mysql_tquery(g_SQL, query);
}

Shop_Refresh(shopid)
{
	if (shopid != -1 && shopData[shopid][shopExists])
	{
		if (IsValidDynamicPickup(shopData[shopid][shopPickup]))
		    DestroyDynamicPickup(shopData[shopid][shopPickup]);

		if (IsValidDynamic3DTextLabel(shopData[shopid][shopText3D]))
		    DestroyDynamic3DTextLabel(shopData[shopid][shopText3D]);

		if (shopData[shopid][shopType] == 1)
		{
			shopData[shopid][shopPickup] = CreateDynamicPickup(19592, 23, shopData[shopid][shopPosX], shopData[shopid][shopPosY], shopData[shopid][shopPosZ], shopData[shopid][shopWorld], shopData[shopid][shopInterior]);
  			shopData[shopid][shopText3D] = CreateDynamic3DTextLabel("ร้านค้า: {FFFFFF}กด 'N'\nในการซื้อสินค้า", COLOR_GREEN, shopData[shopid][shopPosX], shopData[shopid][shopPosY], shopData[shopid][shopPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0, shopData[shopid][shopWorld], shopData[shopid][shopInterior]);
		}
		if (shopData[shopid][shopType] == 2)
		{
			shopData[shopid][shopPickup] = CreateDynamicPickup(1314, 23, shopData[shopid][shopPosX], shopData[shopid][shopPosY], shopData[shopid][shopPosZ], shopData[shopid][shopWorld], shopData[shopid][shopInterior]);
	  		shopData[shopid][shopText3D] = CreateDynamic3DTextLabel("{F6590B}[ ร้านขายสกินตัวละคร ]\n{ffffff}กด 'N' เพื่อเลือกซื้อสกินตัวละคร", COLOR_GREEN, shopData[shopid][shopPosX], shopData[shopid][shopPosY], shopData[shopid][shopPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0, shopData[shopid][shopWorld], shopData[shopid][shopInterior]);
		}
		else if (shopData[shopid][shopType] == 3)
		{
			shopData[shopid][shopPickup] = CreateDynamicPickup(19069, 23, shopData[shopid][shopPosX], shopData[shopid][shopPosY], shopData[shopid][shopPosZ], shopData[shopid][shopWorld], shopData[shopid][shopInterior]);
	  		shopData[shopid][shopText3D] = CreateDynamic3DTextLabel("[ หมวกกันน็อค ]\n{ffffff}กด 'N' เพื่อเลือกซื้อหมวกกันน็อค", COLOR_RED, shopData[shopid][shopPosX], shopData[shopid][shopPosY], shopData[shopid][shopPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0, shopData[shopid][shopWorld], shopData[shopid][shopInterior]);
		}
        //if (shopData[shopid][shopType] == 5)
		//{
			//shopData[shopid][shopPickup] = CreateDynamicPickup(1240, 23, shopData[shopid][shopPosX], shopData[shopid][shopPosY], shopData[shopid][shopPosZ], shopData[shopid][shopWorld], shopData[shopid][shopInterior]);
	  		//shopData[shopid][shopText3D] = CreateDynamic3DTextLabel("{15C903}[{FBE90A} แต่งงาน{15C903} ]\n{FFFFFF}พิม /แต่งงาน เพื่อส่งคำขอแต่งงานกับคู่หมั้น", COLOR_GREEN, shopData[shopid][shopPosX], shopData[shopid][shopPosY], shopData[shopid][shopPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0, shopData[shopid][shopWorld], shopData[shopid][shopInterior]);
		//}
	}
	return 1;
}

Pump_Delete(pumpid)
{
	if (pumpid != -1 && pumpData[pumpid][pumpExists])
	{
	    static
	        string[64];

        if (IsValidDynamicPickup(pumpData[pumpid][pumpPickup]))
		    DestroyDynamicPickup(pumpData[pumpid][pumpPickup]);

		if (IsValidDynamic3DTextLabel(pumpData[pumpid][pumpText3D]))
		    DestroyDynamic3DTextLabel(pumpData[pumpid][pumpText3D]);

		mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `pumps` WHERE `pumpID` = '%d'", pumpData[pumpid][pumpID]);
		mysql_tquery(g_SQL, string);

		pumpData[pumpid][pumpExists] = false;
		pumpData[pumpid][pumpID] = 0;
	}
	return 1;
}

Pump_Create(Float:x, Float:y, Float:z)
{
	for (new i = 0; i < MAX_PUMPS; i ++) if (!pumpData[i][pumpExists])
	{
	    pumpData[i][pumpExists] = true;
	    pumpData[i][pumpPosX] = x;
	    pumpData[i][pumpPosY] = y;
	    pumpData[i][pumpPosZ] = z;

	    mysql_tquery(g_SQL, "INSERT INTO `pumps` (`pumpID`) VALUES(0)", "OnPumpCreated", "d", i);
		Pump_Refresh(i);
		return i;
	}
	return -1;
}

Pump_Save(pumpid)
{
	static
	    query[220];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `pumps` SET `pumpX` = '%.4f', `pumpY` = '%.4f', `pumpZ` = '%.4f' WHERE `pumpID` = '%d'",
	    pumpData[pumpid][pumpPosX],
	    pumpData[pumpid][pumpPosY],
	    pumpData[pumpid][pumpPosZ],
	    pumpData[pumpid][pumpID]
	);
	return mysql_tquery(g_SQL, query);
}

Pump_Refresh(pumpid)
{
	if (pumpid != -1 && pumpData[pumpid][pumpExists])
	{
		if (IsValidDynamicPickup(pumpData[pumpid][pumpPickup]))
		    DestroyDynamicPickup(pumpData[pumpid][pumpPickup]);

		if (IsValidDynamic3DTextLabel(pumpData[pumpid][pumpText3D]))
		    DestroyDynamic3DTextLabel(pumpData[pumpid][pumpText3D]);

		pumpData[pumpid][pumpPickup] = CreateDynamicPickup(1650, 23, pumpData[pumpid][pumpPosX], pumpData[pumpid][pumpPosY], pumpData[pumpid][pumpPosZ]);
  		pumpData[pumpid][pumpText3D] = CreateDynamic3DTextLabel("ปั้มน้ำมัน: {FFFFFF}/refill\nในการเติมน้ำมัน\nลิตรละ {FF6347}$50", COLOR_GREEN, pumpData[pumpid][pumpPosX], pumpData[pumpid][pumpPosY], pumpData[pumpid][pumpPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0);
	}
	return 1;
}

Garage_Delete(garageid)
{
	if (garageid != -1 && garageData[garageid][garageExists])
	{
	    static
	        string[64];

        if (IsValidDynamicPickup(garageData[garageid][garagePickup]))
		    DestroyDynamicPickup(garageData[garageid][garagePickup]);

		if (IsValidDynamic3DTextLabel(garageData[garageid][garageText3D]))
		    DestroyDynamic3DTextLabel(garageData[garageid][garageText3D]);

		mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `garages` WHERE `garageID` = '%d'", garageData[garageid][garageID]);
		mysql_tquery(g_SQL, string);

		garageData[garageid][garageExists] = false;
		garageData[garageid][garageID] = 0;
	}
	return 1;
}

Garage_Create(Float:x, Float:y, Float:z)
{
	for (new i = 0; i < MAX_GARAGES; i ++) if (!garageData[i][garageExists])
	{
	    garageData[i][garageExists] = true;
	    garageData[i][garagePosX] = x;
	    garageData[i][garagePosY] = y;
	    garageData[i][garagePosZ] = z;

	    mysql_tquery(g_SQL, "INSERT INTO `garages` (`garageID`) VALUES(0)", "OnGarageCreated", "d", i);
		Garage_Refresh(i);
		return i;
	}
	return -1;
}

Garage_Save(garageid)
{
	static
	    query[220];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `garages` SET `garageX` = '%.4f', `garageY` = '%.4f', `garageZ` = '%.4f' WHERE `garageID` = '%d'",
	    garageData[garageid][garagePosX],
	    garageData[garageid][garagePosY],
	    garageData[garageid][garagePosZ],
	    garageData[garageid][garageID]
	);
	return mysql_tquery(g_SQL, query);
}

Garage_Refresh(garageid)
{
	if (garageid != -1 && garageData[garageid][garageExists])
	{
		if (IsValidDynamicPickup(garageData[garageid][garagePickup]))
		    DestroyDynamicPickup(garageData[garageid][garagePickup]);

		if (IsValidDynamic3DTextLabel(garageData[garageid][garageText3D]))
		    DestroyDynamic3DTextLabel(garageData[garageid][garageText3D]);

		garageData[garageid][garagePickup] = CreateDynamicPickup(1083, 23, garageData[garageid][garagePosX], garageData[garageid][garagePosY], garageData[garageid][garagePosZ]);
  		garageData[garageid][garageText3D] = CreateDynamic3DTextLabel("อู่ซ่อมรถ: {FFFFFF}/repair\nในการใช้งาน", COLOR_GREEN, garageData[garageid][garagePosX], garageData[garageid][garagePosY], garageData[garageid][garagePosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0);
	}
	return 1;
}

forward Entrance_Load();
public Entrance_Load()
{
    static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_ENTRANCES)
	{
	    entranceData[i][entranceExists] = true;
    	cache_get_value_name_int(i, "entranceID", entranceData[i][entranceID]);

		cache_get_value_name(i, "entranceName", entranceData[i][entranceName], 32);
		cache_get_value_name_int(i, "entrancePass", entranceData[i][entrancePass]);

	    cache_get_value_name_int(i, "entranceIcon", entranceData[i][entranceIcon]);
	    cache_get_value_name_int(i, "entranceLocked", entranceData[i][entranceLocked]);
	    cache_get_value_name_float(i, "entrancePosX", entranceData[i][entrancePosX]);
	    cache_get_value_name_float(i, "entrancePosY", entranceData[i][entrancePosY]);
	    cache_get_value_name_float(i, "entrancePosZ", entranceData[i][entrancePosZ]);
	    cache_get_value_name_float(i, "entrancePosA", entranceData[i][entrancePosA]);
	    cache_get_value_name_float(i, "entranceIntX", entranceData[i][entranceIntX]);
	    cache_get_value_name_float(i, "entranceIntY", entranceData[i][entranceIntY]);
	    cache_get_value_name_float(i, "entranceIntZ", entranceData[i][entranceIntZ]);
	    cache_get_value_name_float(i, "entranceIntA", entranceData[i][entranceIntA]);
	    cache_get_value_name_int(i, "entranceInterior", entranceData[i][entranceInterior]);
	    cache_get_value_name_int(i, "entranceExterior", entranceData[i][entranceExterior]);
	    cache_get_value_name_int(i, "entranceExteriorVW", entranceData[i][entranceExteriorVW]);
	    cache_get_value_name_int(i, "entranceType", entranceData[i][entranceType]);
	    cache_get_value_name_int(i, "entranceWorld", entranceData[i][entranceWorld]);
	    cache_get_value_name_int(i, "entranceFaction", entranceData[i][entranceFaction]);

	    Entrance_Refresh(i);
	}
	printf("[SERVER]: %d Entrance were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

Entrance_Delete(entranceid)
{
	if (entranceid != -1 && entranceData[entranceid][entranceExists])
	{
	    new
	        string[64];

		format(string, sizeof(string), "DELETE FROM `entrances` WHERE `entranceID` = '%d'", entranceData[entranceid][entranceID]);
		mysql_tquery(g_SQL, string);

        if (IsValidDynamic3DTextLabel(entranceData[entranceid][entranceText3D]))
		    DestroyDynamic3DTextLabel(entranceData[entranceid][entranceText3D]);

		if (IsValidDynamicPickup(entranceData[entranceid][entrancePickup]))
		    DestroyDynamicPickup(entranceData[entranceid][entrancePickup]);

		if (IsValidDynamicMapIcon(entranceData[entranceid][entranceMapIcon]))
		    DestroyDynamicMapIcon(entranceData[entranceid][entranceMapIcon]);

		if (IsValidDynamicPickup(entranceData[entranceid][entranceExPickup]))
		    DestroyDynamicPickup(entranceData[entranceid][entranceExPickup]);

        if (IsValidDynamic3DTextLabel(entranceData[entranceid][entranceExText3D]))
        	DestroyDynamic3DTextLabel(entranceData[entranceid][entranceExText3D]);

	    entranceData[entranceid][entranceExists] = false;
	    entranceData[entranceid][entranceID] = 0;
	}
	return 1;
}

Entrance_Save(entranceid)
{
	static
	    query[1024];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `entrances` SET `entranceName` = '%e', `entrancePass` = '%d', `entranceIcon` = '%d', `entranceLocked` = '%d', `entrancePosX` = '%.4f', `entrancePosY` = '%.4f', `entrancePosZ` = '%.4f', `entrancePosA` = '%.4f', `entranceIntX` = '%.4f', `entranceIntY` = '%.4f', `entranceIntZ` = '%.4f', `entranceIntA` = '%.4f', `entranceInterior` = '%d', `entranceExterior` = '%d', `entranceExteriorVW` = '%d', `entranceType` = '%d'",
	    entranceData[entranceid][entranceName],
	    entranceData[entranceid][entrancePass],
	    entranceData[entranceid][entranceIcon],
	    entranceData[entranceid][entranceLocked],
	    entranceData[entranceid][entrancePosX],
	    entranceData[entranceid][entrancePosY],
	    entranceData[entranceid][entrancePosZ],
	    entranceData[entranceid][entrancePosA],
	    entranceData[entranceid][entranceIntX],
	    entranceData[entranceid][entranceIntY],
	    entranceData[entranceid][entranceIntZ],
	    entranceData[entranceid][entranceIntA],
	    entranceData[entranceid][entranceInterior],
	    entranceData[entranceid][entranceExterior],
	    entranceData[entranceid][entranceExteriorVW],
	    entranceData[entranceid][entranceType]
	);
	mysql_format(g_SQL, query, sizeof(query), "%s, `entranceWorld` = '%d', `entranceFaction` = '%d' WHERE `entranceID` = '%d'",
	    query,
	    entranceData[entranceid][entranceWorld],
	    entranceData[entranceid][entranceFaction],
	    entranceData[entranceid][entranceID]
	);
	return mysql_tquery(g_SQL, query);
}

Entrance_Inside(playerid)
{
	if (playerData[playerid][pEntrance] != -1)
	{
	    for (new i = 0; i != MAX_ENTRANCES; i ++) if (entranceData[i][entranceExists] && entranceData[i][entranceID] == playerData[playerid][pEntrance] && GetPlayerInterior(playerid) == entranceData[i][entranceInterior] && GetPlayerVirtualWorld(playerid) == entranceData[i][entranceWorld])
	        return i;
	}
	return -1;
}

Entrance_GetLink(playerid)
{
	if (GetPlayerVirtualWorld(playerid) > 0)
	{
	    for (new i = 0; i != MAX_ENTRANCES; i ++) if (entranceData[i][entranceExists] && entranceData[i][entranceID] == GetPlayerVirtualWorld(playerid) - 7000)
			return entranceData[i][entranceID];
	}
	return -1;
}

Entrance_Nearest(playerid)
{
    for (new i = 0; i != MAX_ENTRANCES; i ++) if (entranceData[i][entranceExists] && IsPlayerInRangeOfPoint(playerid, 2.5, entranceData[i][entrancePosX], entranceData[i][entrancePosY], entranceData[i][entrancePosZ]))
	{
		if (GetPlayerInterior(playerid) == entranceData[i][entranceExterior] && GetPlayerVirtualWorld(playerid) == entranceData[i][entranceExteriorVW])
			return i;
	}
	return -1;
}

Entrance_Refresh(entranceid)
{
	new string[128];
	if (entranceid != -1 && entranceData[entranceid][entranceExists])
	{
		if (IsValidDynamic3DTextLabel(entranceData[entranceid][entranceText3D]))
		    DestroyDynamic3DTextLabel(entranceData[entranceid][entranceText3D]);

		if (IsValidDynamicPickup(entranceData[entranceid][entrancePickup]))
		    DestroyDynamicPickup(entranceData[entranceid][entrancePickup]);

		if (IsValidDynamicMapIcon(entranceData[entranceid][entranceMapIcon]))
		    DestroyDynamicMapIcon(entranceData[entranceid][entranceMapIcon]);

        if (IsValidDynamicPickup(entranceData[entranceid][entranceExPickup]))
        	DestroyDynamicPickup(entranceData[entranceid][entranceExPickup]);

        if (IsValidDynamic3DTextLabel(entranceData[entranceid][entranceExText3D]))
        	DestroyDynamic3DTextLabel(entranceData[entranceid][entranceExText3D]);

		if (entranceData[entranceid][entranceFaction] == -1)
		{
	        format(string, sizeof(string), "{55FF00}[ Entrance ]: {FFFFFF}%s\n[ ใช้ 'LMB' หรือ 'ต่อย' เพื่อเข้า ]", entranceData[entranceid][entranceName]);
			entranceData[entranceid][entranceText3D] = CreateDynamic3DTextLabel(string, COLOR_GREEN, entranceData[entranceid][entrancePosX], entranceData[entranceid][entrancePosY], entranceData[entranceid][entrancePosZ], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, entranceData[entranceid][entranceExteriorVW], entranceData[entranceid][entranceExterior]);
	        entranceData[entranceid][entrancePickup] = CreateDynamicPickup(19135, 23, entranceData[entranceid][entrancePosX], entranceData[entranceid][entrancePosY], entranceData[entranceid][entrancePosZ]-0.5, entranceData[entranceid][entranceExteriorVW], entranceData[entranceid][entranceExterior]);

			format(string, sizeof(string), "{FF0000}[ Exit ]: {FFFFFF}%s\n[ ใช้ 'LMB' หรือ 'ต่อย' เพื่อออก ]", entranceData[entranceid][entranceName]);
	        entranceData[entranceid][entranceExText3D] = CreateDynamic3DTextLabel(string, COLOR_GREEN, entranceData[entranceid][entranceIntX], entranceData[entranceid][entranceIntY], entranceData[entranceid][entranceIntZ], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, entranceData[entranceid][entranceWorld], entranceData[entranceid][entranceInterior]);
			entranceData[entranceid][entranceExPickup] = CreateDynamicPickup(19135, 23, entranceData[entranceid][entranceIntX], entranceData[entranceid][entranceIntY], entranceData[entranceid][entranceIntZ]-0.5, entranceData[entranceid][entranceWorld], entranceData[entranceid][entranceInterior]);
		}
		else
		{
	        format(string, sizeof(string), "{55FF00}[ G-Entrance ]: {FFFFFF}%s\n[ ใช้ 'LMB' หรือ 'ต่อย' เพื่อเข้า ]", entranceData[entranceid][entranceName]);
			entranceData[entranceid][entranceText3D] = CreateDynamic3DTextLabel(string, COLOR_GREEN, entranceData[entranceid][entrancePosX], entranceData[entranceid][entrancePosY], entranceData[entranceid][entrancePosZ], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, entranceData[entranceid][entranceExteriorVW], entranceData[entranceid][entranceExterior]);
	        entranceData[entranceid][entrancePickup] = CreateDynamicPickup(19135, 23, entranceData[entranceid][entrancePosX], entranceData[entranceid][entrancePosY], entranceData[entranceid][entrancePosZ]-0.5, entranceData[entranceid][entranceExteriorVW], entranceData[entranceid][entranceExterior]);

			format(string, sizeof(string), "{FF0000}[ G-Exit ]: {FFFFFF}%s\n[ ใช้ 'LMB' หรือ 'ต่อย' เพื่อออก ]", entranceData[entranceid][entranceName]);
	        entranceData[entranceid][entranceExText3D] = CreateDynamic3DTextLabel(string, COLOR_GREEN, entranceData[entranceid][entranceIntX], entranceData[entranceid][entranceIntY], entranceData[entranceid][entranceIntZ], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, entranceData[entranceid][entranceWorld], entranceData[entranceid][entranceInterior]);
			entranceData[entranceid][entranceExPickup] = CreateDynamicPickup(19135, 23, entranceData[entranceid][entranceIntX], entranceData[entranceid][entranceIntY], entranceData[entranceid][entranceIntZ]-0.5, entranceData[entranceid][entranceWorld], entranceData[entranceid][entranceInterior]);
		}
		
		if (entranceData[entranceid][entranceIcon] != 0)
			entranceData[entranceid][entranceMapIcon] = CreateDynamicMapIcon(entranceData[entranceid][entrancePosX], entranceData[entranceid][entrancePosY], entranceData[entranceid][entrancePosZ], entranceData[entranceid][entranceIcon], 0, entranceData[entranceid][entranceExteriorVW], entranceData[entranceid][entranceExterior]);
	}
	return 1;
}

Entrance_Create(playerid, const name[])
{
	static
	    Float:x,
	    Float:y,
	    Float:z,
	    Float:angle;

    if (GetPlayerPos(playerid, x, y, z) && GetPlayerFacingAngle(playerid, angle))
	{
		for (new i = 0; i != MAX_ENTRANCES; i ++)
		{
	    	if (!entranceData[i][entranceExists])
		    {
    	        entranceData[i][entranceExists] = true;
        	    entranceData[i][entranceIcon] = 0;
        	    entranceData[i][entranceType] = 0;
        	    entranceData[i][entranceLocked] = 0;

				format(entranceData[i][entranceName], 32, name);
				entranceData[i][entrancePass] = 0;

    	        entranceData[i][entrancePosX] = x;
    	        entranceData[i][entrancePosY] = y;
    	        entranceData[i][entrancePosZ] = z;
    	        entranceData[i][entrancePosA] = angle;

                entranceData[i][entranceIntX] = x;
                entranceData[i][entranceIntY] = y;
                entranceData[i][entranceIntZ] = z + 10000;
                entranceData[i][entranceIntA] = 0.0000;

				entranceData[i][entranceInterior] = 0;
				entranceData[i][entranceExterior] = GetPlayerInterior(playerid);
				entranceData[i][entranceExteriorVW] = GetPlayerVirtualWorld(playerid);
				entranceData[i][entranceFaction] = -1;

				Entrance_Refresh(i);
				mysql_tquery(g_SQL, "INSERT INTO `entrances` (`entranceType`) VALUES(0)", "OnEntranceCreated", "d", i);
				return i;
			}
		}
	}
	return -1;
}

forward OnEntranceCreated(entranceid);
public OnEntranceCreated(entranceid)
{
	if (entranceid == -1 || !entranceData[entranceid][entranceExists])
	    return 0;

	entranceData[entranceid][entranceID] = cache_insert_id();
	entranceData[entranceid][entranceWorld] = entranceData[entranceid][entranceID] + 7000;

	Entrance_Save(entranceid);

	return 1;
}

Dialog:DIALOG_BUYVEHICLE(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		if(GetPlayerMoneyEx(playerid) < vehicleArray[listitem][carPrice])
		{
			return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการเปลี่ยนสี (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(vehicleArray[listitem][carPrice]));
		}

		new
			string[256];

		playerData[playerid][pSelectedSlot] = listitem;

		format(string, sizeof(string), "{FFFFFF}ยืนยันการชำระเงิน:\nคุณแน่ใจไหมที่จะซื้อรถรุ่น {00AA00}%s{FFFFFF} ในราคา {00AA00}%s{FFFFFF}?", g_arrVehicleNames[vehicleArray[listitem][carModel] - 400], FormatMoney(vehicleArray[listitem][carPrice]));
		Dialog_Show(playerid, DIALOG_BUYVEHICLE2, DIALOG_STYLE_MSGBOX, "[ยืนยันการชำระเงิน]", string, "ยืนยัน", "ยกเลิก");
	}
	return 1;
}
Dialog:DIALOG_BUYVEHICLE2(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		new query[128];
		mysql_format(g_SQL, query, sizeof(query), "SELECT COUNT(*) FROM vehicles WHERE carOwnerID = %d", playerData[playerid][pID]);
		mysql_tquery(g_SQL, query, "OnPlayerAttemptBuyVehicle", "ii", playerid, playerData[playerid][pSelectedSlot]);
	}
	return 1;
}


Dialog:DIALOG_PICKSPAWN(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        playerData[playerid][pSpawnPoint] = 0;
				SetSpawnInfo(playerid, NO_TEAM, playerData[playerid][pSkin], 2120.0732,1482.9640,10.8203,265.6785,0,0,0,0,0,0);
				SpawnPlayer(playerid);

				TogglePlayerSpectating(playerid, 0);
				KillTimer(playerData[playerid][LoginTimer]);
				playerData[playerid][LoginTimer] = 0;
				playerData[playerid][IsLoggedIn] = true;
				SetPlayerSkin(playerid, playerData[playerid][pSkin]);
				playerData[playerid][IsLoggedIn] = true;
		    }
		    case 1:
		    {
		       /* playerData[playerid][pSpawnPoint] = 2;
				SetSpawnInfo(playerid, NO_TEAM, playerData[playerid][pSkin], playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z], playerData[playerid][pPos_A], 0, 0, 0, 0, 0, 0);
				SpawnPlayer(playerid);

				TogglePlayerSpectating(playerid, 0);
				KillTimer(playerData[playerid][LoginTimer]);
				playerData[playerid][LoginTimer] = 0;
				playerData[playerid][IsLoggedIn] = true;
				SetPlayerSkin(playerid, playerData[playerid][pSkin]);*/

				playerData[playerid][pSpawnPoint] = 2;
				SetSpawnInfo(playerid, NO_TEAM, playerData[playerid][pSkin], playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z], playerData[playerid][pPos_A], 0, 0, 0, 0, 0, 0);
				TogglePlayerSpectating(playerid, 0);
				KillTimer(playerData[playerid][LoginTimer]);
				playerData[playerid][LoginTimer] = 0;
				playerData[playerid][IsLoggedIn] = true;
				printf("DEBUG: LastPos for %s -> %f, %f, %f", playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);

		    }
		    case 2:
		    {
				new faction = playerData[playerid][pFaction]; 

				if (faction == -1)
				{
			        playerData[playerid][pSpawnPoint] = 0;
					SetSpawnInfo(playerid, NO_TEAM, playerData[playerid][pSkin], 1685.6648,-2332.9873,13.5469, 359.5448, 0, 0, 0, 0, 0, 0);
					SpawnPlayer(playerid);

					//playerData[playerid][pInjured] = 0;
					//playerData[playerid][pInjuredTime] = 0;
					//SetPlayerHealth(playerid, 100.0);

					TogglePlayerSpectating(playerid, 0);
					KillTimer(playerData[playerid][LoginTimer]);
					playerData[playerid][LoginTimer] = 0;
					playerData[playerid][IsLoggedIn] = true;
					//playerData[playerid][pInjured] = 0;
					SetPlayerSkin(playerid, playerData[playerid][pSkin]);
					//playerData[playerid][IsLoggedIn] = true;
				}
				else
				{
	 		        playerData[playerid][pSpawnPoint] = 1;
					SetSpawnInfo(playerid, NO_TEAM, playerData[playerid][pSkin], factionData[faction][SpawnX],factionData[faction][SpawnY],factionData[faction][SpawnZ], playerData[playerid][pPos_A], 0, 0, 0, 0, 0, 0);
					SpawnPlayer(playerid);

					//playerData[playerid][pInjured] = 0;
					//playerData[playerid][pInjuredTime] = 0;
					//SetPlayerHealth(playerid, 100.0);

					TogglePlayerSpectating(playerid, 0);
					KillTimer(playerData[playerid][LoginTimer]);
					playerData[playerid][LoginTimer] = 0;
					playerData[playerid][IsLoggedIn] = true;
					//playerData[playerid][pInjured] = 0;
					SetPlayerSkin(playerid, playerData[playerid][pSkin]);
					//playerData[playerid][IsLoggedIn] = true;
				}
		    } 
		}
	}
	return 1;
}

Dialog:DIALOG_SPAWNCAR(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		/*new query[128];
		mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM vehicles WHERE carOwnerID = %d LIMIT %d, 1", playerData[playerid][pID], listitem);
		mysql_tquery(g_SQL, query, "OnPlayerSpawnVehicle", "ii", playerid, false);*/

		isPlayerCallCar[playerid] = 1;
		isPlayerListitem[playerid] = listitem;
		StartProgress(playerid, 25, 0, INVALID_OBJECT_ID);
		TogglePlayerControllable(playerid, false);
	}
	return 1;
}

Dialog:DIALOG_DESPAWNCAR(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		new count;

		for(new i = 1; i < MAX_VEHICLES; i ++)
		{
			if((carData[i][carID] > 0 && IsVehicleOwner(playerid, i)) && (count++ == listitem))
   {
				/*if(IsVehicleOccupied(i) && GetVehicleDriver(i) != playerid)
				{
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ยังถูกใช้งานอยู่");
				}*/
				SendClientMessageEx(playerid, COLOR_WHITE, "รถรุ่น {FF6347}%s{FFFFFF} ถูกจัดเก็บเรียบร้อย", ReturnVehicleName(i));
				KillTimer(playerData[playerid][pSpeedoTimer]);
				DespawnVehicle(i);
				return 1;
			}
		}
	}
	return 1;
}

Dialog:DIALOG_FINDCAR(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		new count;

		for(new i = 1; i < MAX_VEHICLES; i ++)
		{
			if((carData[i][carID] > 0 && IsVehicleOwner(playerid, i)) && (count++ == listitem))
			{
				new
					Float:x,
					Float:y,
					Float:z;

				GetVehiclePos(i, x, y, z);
				SetPlayerCheckpoint(playerid, x, y, z, 3.0);
				SendClientMessageEx(playerid, COLOR_YELLOW, "** ระบบ GPS ได้สร้างจุดแดงบน Minimap ให้คุณติดตามแล้ว", ReturnVehicleName(i));

				return 1;
			}
		}
	}
	return 1;
}

Dialog:DIALOG_VEHICLELOOKUP1(playerid, response, listitem, inputtext[])
{
	if((response) && GetFactionType(playerid) == FACTION_POLICE)
	{
		new vehicleid, string[512];

		if(sscanf(inputtext, "d", vehicleid))
		{
			return Dialog_Show(playerid, DIALOG_VEHICLELOOKUP1, DIALOG_STYLE_INPUT, "[เครื่องติดตามยานพาหนะ]", "ใส่ไอดียานพาหนะที่ต้องการจะติดตาม\n(( ดูไอดีได้โดยการพิมพ์ /dl ))", "ตกลง", "ยกเลิก");
		}
		if(!IsValidVehicle(vehicleid) || !carData[vehicleid][carOwnerID])
		{
			SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ต้องเป็นรถส่วนตัวเท่านั้น");
			return Dialog_Show(playerid, DIALOG_VEHICLELOOKUP1, DIALOG_STYLE_INPUT, "[เครื่องติดตามยานพาหนะ]", "ใส่ไอดียานพาหนะที่ต้องการจะติดตาม\n(( ดูไอดีได้โดยการพิมพ์ /dl ))", "ตกลง", "ยกเลิก");
		}

		playerData[playerid][pSelectedSlot] = vehicleid;

		format(string, sizeof(string), "ชื่อรุ่น: %s\nเจ้าของ: %s\nใบสั่ง: %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], FormatMoney(carData[vehicleid][carTickets]));
		Dialog_Show(playerid, DIALOG_VEHICLELOOKUP2, DIALOG_STYLE_MSGBOX, "[เครื่องติดตามยานพาหนะ]", string, "ติดตาม", "ปิด");
	}
	return 1;
}
Dialog:DIALOG_VEHICLELOOKUP2(playerid, response, listitem, inputtext[])
{
	if((response) && GetFactionType(playerid) == FACTION_POLICE)
	{
		new vehicleid = playerData[playerid][pSelectedSlot];
		new
			Float:x,
			Float:y,
			Float:z;

		SendClientMessage(playerid, COLOR_WHITE, "** ระบบนำทางได้ติดตั้งไว้บนแผนที่แล้ว ตามจุดสีแดงไป");

		GetVehiclePos(vehicleid, x, y, z);
		SetPlayerCheckpoint(playerid, x, y, z, 3.0);
	}
	return 1;
}

Dialog:DIALOG_LEAVETEST(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    CancelDrivingTest(playerid);

	    SendClientMessage(playerid, COLOR_LIGHTRED, "[กรมขนส่ง] {FFFFFF}คุณได้ออกจากการสอบใบขับขี่");
	}
	else
	{
	    PutPlayerInVehicle(playerid, playerData[playerid][pTestCar], 0);
	}
	return 1;
}

Dialog:DIALOG_REPAIR(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				if (!IsPlayerInAnyVehicle(playerid))
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัว");

				if (GetPlayerMoneyEx(playerid) < 1000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการเปลี่ยนสี (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(1000));
				Dialog_Show(playerid, DIALOG_COLOR1, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 1)", "ตกลง", "กลับ");
			}
		    case 1:
		    {
				if (!IsPlayerInAnyVehicle(playerid))
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัว");

				if (GetPlayerMoneyEx(playerid) < 1000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(1000));

				RepairVehicle(GetPlayerVehicleID(playerid));
				GivePlayerMoneyEx(playerid, -1000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}รถของคุณถูกซ่อมเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(1000));
			}
			case 2:
			{
		        if (GetPlayerMoneyEx(playerid) < 1000)
		            return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(1000));

				new id = Inventory_Add(playerid, "เครื่องมือซ่อมรถ", 1);

				if (id == -1)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				GivePlayerMoneyEx(playerid, -1000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ซื้อเครื่องมือซ่อมรถเรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(1000));
			}
			case 3:
			{
				Dialog_Show(playerid, DIALOG_NEON, DIALOG_STYLE_LIST, "[เลือกสี Neon]", "{FFFFFF}สีแดง\nสีน้ำเงิน\nสีเขียว\nสีเหลือง\nสีชมพู\nสีขาว\nถอด", "ยืนยัน", "ปิด");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_MECHANIC(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	new string[256];
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				Dialog_Show(playerid, DIALOG_COLOR11, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 1)", "ตกลง", "กลับ");
			}
		    case 1:
		    {
				if (!IsPlayerInAnyVehicle(userid) && GetPlayerState(userid) != PLAYER_STATE_DRIVER)
				{
					playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
					playerData[userid][pMecOfferPrice] = 0;
					playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
					playerData[playerid][pMecOfferPrice] = 0;
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นต้องอยู่ในรถ สถานะคนขับ");
					return 1;
				}
				format(string, sizeof string, "{FFFFFF}ตอบรับการซ่อมรถจากช่าง %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
		        Dialog_Show(userid, DIALOG_ACCEPT22, DIALOG_STYLE_INPUT, "[ยืนยัน]", string, "ยืนยัน", "ปิด");
			}
		}
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_PAINTJOB11(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	new string[256];
	if (response)
	{
		new paintjobid;
//		new query[256];
		if (!IsPlayerInAnyVehicle(userid) && GetPlayerState(userid) != PLAYER_STATE_DRIVER)
		{
			playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[userid][pMecOfferPrice] = 0;
			playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[playerid][pMecOfferPrice] = 0;
			SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นต้องอยู่ในรถ สถานะคนขับ");
			return 1;
		}
		new vehicleid = GetPlayerVehicleID(userid);
		if(carData[vehicleid][carOwnerID] > 0 && !IsVehicleOwner(userid, vehicleid))
		{
			playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[userid][pMecOfferPrice] = 0;
			playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[playerid][pMecOfferPrice] = 0;
			SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ต้องเป็นรถส่วนตัวเท่านั้น");
			return 1;
		}
		if(sscanf(inputtext, "d", paintjobid))
			return Dialog_Show(playerid, DIALOG_PAINTJOB, DIALOG_STYLE_INPUT, "[เลือกลาย]", "{FFFFFF}เลือกลายได้ 0-5 หากต้องการลบให้ใส่ -1", "ยืนยัน", "ปิด");

		if(paintjobid <= -1 || paintjobid >= 5)
			Dialog_Show(playerid, DIALOG_PAINTJOB, DIALOG_STYLE_INPUT, "[เลือกลาย]", "{FFFFFF}เลือกลายได้ 0-5 หากต้องการลบให้ใส่ -1", "ยืนยัน", "ปิด");

		playerData[playerid][pPaintjob] = paintjobid;
		format(string, sizeof string, "{FFFFFF}ตอบรับการเปลี่ยนลายจากช่าง %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
        Dialog_Show(userid, DIALOG_ACCEPT33, DIALOG_STYLE_INPUT, "[ยืนยัน]", string, "ยืนยัน", "ปิด");
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_COLOR11(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
//	new price = playerData[playerid][pMecOfferPrice];
	if (response)
	{
	    new color;
		if (sscanf(inputtext, "d", color))
		    return Dialog_Show(playerid, DIALOG_COLOR11, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 1)", "ตกลง", "กลับ");

		if (color < 0 || color > 255)
		    return Dialog_Show(playerid, DIALOG_COLOR11, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ {FF0000}0-255 {FFFFFF}(สีที่ 1)", "ตกลง", "กลับ");

		playerData[userid][pColor1] = color;
		Dialog_Show(playerid, DIALOG_COLOR22, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 2)", "ตกลง", "กลับ");
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_COLOR22(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	new string[256];
	if (response)
	{
	    new color;
		if (sscanf(inputtext, "d", color))
		    return Dialog_Show(playerid, DIALOG_COLOR22, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 2)", "ตกลง", "กลับ");

		if (color < 0 || color > 255)
		    return Dialog_Show(playerid, DIALOG_COLOR22, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ {FF0000}0-255 {FFFFFF}(สีที่ 2)", "ตกลง", "กลับ");

		playerData[userid][pColor2] = color;

		format(string, sizeof string, "{FFFFFF}ตอบรับการเปลี่ยนสีจากช่าง %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
	    Dialog_Show(userid, DIALOG_ACCEPT11, DIALOG_STYLE_INPUT, "[ยืนยัน]", string, "ยืนยัน", "ปิด");
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_ACCEPT11(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	if (response)
	{
	    new vehicleid = GetPlayerVehicleID(playerid), query[128];
		ChangeVehicleColor(vehicleid, playerData[playerid][pColor1], playerData[playerid][pColor2]);

		if(IsVehicleOwner(playerid, vehicleid))
		{
			carData[vehicleid][carColor1] = playerData[playerid][pColor1];
			carData[vehicleid][carColor2] = playerData[playerid][pColor2];

			mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carColor1 = %d, carColor2 = %d WHERE carID = %d", playerData[playerid][pColor1], playerData[playerid][pColor2], carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}

		GivePlayerMoneyEx(playerid, -price);
		GivePlayerMoneyEx(userid, price);
		SendClientMessageEx(playerid, COLOR_GREEN, "[ช่าง] {FFFFFF}รถของคุณถูกเปลี่ยนสีเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
		SendClientMessageEx(userid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้รับเงินจากการเปลี่ยนสีรถจำนวน: {FF0000}-%s", FormatMoney(price));
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_ACCEPT22(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	if (response)
	{
		RepairVehicle(GetPlayerVehicleID(playerid));
		GivePlayerMoneyEx(playerid, -price);
		GivePlayerMoneyEx(userid, price);
		SendClientMessageEx(playerid, COLOR_GREEN, "[ช่าง] {FFFFFF}รถของคุณถูกซ่อมเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
		SendClientMessageEx(userid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้รับเงินจากการซ่อมรถจำนวน: {00FF00}-%s", FormatMoney(price));
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_ACCEPT33(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	new paintjobid = playerData[playerid][pPaintjob];
	new query[128];
	if (response)
	{
		if (!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
			playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[userid][pMecOfferPrice] = 0;
			playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[playerid][pMecOfferPrice] = 0;
			SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถสถานะคนขับ");
			return 1;
		}
        new vehicleid = GetPlayerVehicleID(playerid);
		if(paintjobid == -1)
		{
			ChangeVehiclePaintjob(vehicleid, paintjobid);
			SendClientMessageEx(userid, COLOR_GREEN, "[ช่าง] {FFFFFF}ได้ลบลายออกจากรถเรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
			SendClientMessageEx(playerid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้ลบลายออกจากรถเรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
			GivePlayerMoneyEx(playerid, -price);
			GivePlayerMoneyEx(userid, price);
			carData[vehicleid][carPaintjob] = -1;

			format(query, sizeof(query), "UPDATE vehicles SET carPaintjob = -1 WHERE carID = %d", carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}
		else
		{
			ChangeVehiclePaintjob(vehicleid, paintjobid);
			SendClientMessageEx(userid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้ติดตั้งลายใหม่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
			SendClientMessageEx(playerid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้ติดตั้งลายใหม่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
			GivePlayerMoneyEx(playerid, -price);
			GivePlayerMoneyEx(userid, price);
			carData[vehicleid][carPaintjob] = paintjobid;

			format(query, sizeof(query), "UPDATE vehicles SET carPaintjob = %d WHERE carID = %d", carData[vehicleid][carPaintjob], carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}
		PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_VIPREPAIR(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				if (playerData[playerid][pVip] < 2)
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ {00FFFF}PR{FFFFFF}EMI{00FFFF}UM");

				if (!IsPlayerInAnyVehicle(playerid))
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัว");

				if (GetPlayerMoneyEx(playerid) < 1000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(1000));

				new vehicleid = GetPlayerVehicleID(playerid);
				RepairVehicle(vehicleid);
				GivePlayerMoneyEx(playerid, -1000);
				SendClientMessage(playerid, COLOR_VIP2, "{00FFFF}PR{FFFFFF}EMI{00FFFF}UM {FFFFFF}ซ่อมรถในราคา $1000 สำเร็จ");
			}
		    case 1:
		    {
				if (playerData[playerid][pVip] < 3)
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ {FF0000}SU{FFFFFF}PER{FF0000}ME");

				if (!IsPlayerInAnyVehicle(playerid))
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัว");

				new vehicleid = GetPlayerVehicleID(playerid);
				new modelid = GetVehicleModel(vehicleid);
				new Float:maxfuel = vehicleData[modelid - 400][vFuel];

				new Float:fuel = vehicleData[modelid - 400][vFuel] - vehicleFuel[vehicleid];
				new Float:valuefloat = fuel*26;
				new value = floatround(valuefloat);

				if (GetPlayerMoneyEx(playerid) < value)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการเติมน้ำมัน (%s/%s) ลิตรละ 26", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(value));

				if (vehicleFuel[vehicleid] >= maxfuel)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถเติมน้ำมันมากกว่านี้ได้ (%.2f/%.2f)", vehicleFuel[vehicleid], maxfuel);

				vehicleFuel[vehicleid] += fuel;
				GivePlayerMoneyEx(playerid, -value);

				SendClientMessageEx(playerid, COLOR_VIP3, "{FF0000}SU{FFFFFF}PER{FF0000}ME {FFFFFF}คุณได้เติมน้ำมัน %.1f ลิตร ในราคา %s", fuel, FormatMoney(value));
			}
		}
	}
	return 1;
}

Dialog:DIALOG_PAINTJOB(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new paintjobid;
		new query[256];
		new vehicleid = GetPlayerVehicleID(playerid);
		if(!vehicleid)
		{
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");
		}
		if(carData[vehicleid][carOwnerID] > 0 && !IsVehicleOwner(playerid, vehicleid))
		{
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
		}
		if(sscanf(inputtext, "d", paintjobid))
			return Dialog_Show(playerid, DIALOG_PAINTJOB, DIALOG_STYLE_INPUT, "[เลือกลาย]", "{FFFFFF}เลือกลายได้ 0-5 หากต้องการลบให้ใส่ -1", "ยืนยัน", "ปิด");

		if(paintjobid <= -1 || paintjobid >= 5)
			Dialog_Show(playerid, DIALOG_PAINTJOB, DIALOG_STYLE_INPUT, "[เลือกลาย]", "{FFFFFF}เลือกลายได้ 0-5 หากต้องการลบให้ใส่ -1", "ยืนยัน", "ปิด");

		if(paintjobid == -1)
		{
			ChangeVehiclePaintjob(vehicleid, paintjobid);
			SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ลบลายออกจากรถเรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(1000));
			GivePlayerMoneyEx(playerid, -1000);
			carData[vehicleid][carPaintjob] = -1;

			format(query, sizeof(query), "UPDATE vehicles SET carPaintjob = -1 WHERE carID = %d", carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}
		else
		{
			ChangeVehiclePaintjob(vehicleid, paintjobid);
			SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้งลายใหม่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(20000));
			GivePlayerMoneyEx(playerid, -20000);
			carData[vehicleid][carPaintjob] = paintjobid;

			format(query, sizeof(query), "UPDATE vehicles SET carPaintjob = %d WHERE carID = %d", carData[vehicleid][carPaintjob], carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}
		SendClientMessageEx(playerid, -1, "%d %d", carData[vehicleid][carPaintjob], carData[vehicleid][carID]);
		PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
	}
	return 1;
}

Dialog:DIALOG_NEON(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		switch(listitem)
		{
			case 0:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 10000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(10000));

				GivePlayerMoneyEx(playerid, -10000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(10000));
				SetVehicleNeon(vehicleid, 18647);
			}
			case 1:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 10000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(10000));

				GivePlayerMoneyEx(playerid, -10000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(10000));
				SetVehicleNeon(vehicleid, 18648);
			}
			case 2:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 10000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(10000));

				GivePlayerMoneyEx(playerid, -10000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(10000));
				SetVehicleNeon(vehicleid, 18649);
			}
			case 3:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 10000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(10000));

				GivePlayerMoneyEx(playerid, -10000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(10000));
				SetVehicleNeon(vehicleid, 18650);
			}
			case 4:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 10000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(10000));

				GivePlayerMoneyEx(playerid, -10000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(10000));
				SetVehicleNeon(vehicleid, 18651);
			}
			case 5:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 10000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(10000));

				GivePlayerMoneyEx(playerid, -10000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(10000));
				SetVehicleNeon(vehicleid, 18652);
			}
			case 6:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 1000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(1000));

				GivePlayerMoneyEx(playerid, -1000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ถอนการติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(1000));
				SetVehicleNeon(vehicleid, 0);
			}
		}
	}
	return 1;
}

Dialog:DIALOG_COLOR1(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new color;
		if (sscanf(inputtext, "d", color))
		    return Dialog_Show(playerid, DIALOG_COLOR1, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 1)", "ตกลง", "กลับ");

		if (color < 0 || color > 255)
		    return Dialog_Show(playerid, DIALOG_COLOR1, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ {FF0000}0-255 {FFFFFF}(สีที่ 1)", "ตกลง", "กลับ");

		playerData[playerid][pColor1] = color;
		Dialog_Show(playerid, DIALOG_COLOR2, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 2)", "ตกลง", "กลับ");
	}
	else
	{
	    Dialog_Show(playerid, DIALOG_REPAIR, DIALOG_STYLE_TABLIST_HEADERS, "[รายการซ่อม]", "เปลี่ยนสี\t$1,000\nซ่อมรถ\t$2,500\nเครื่องมือซ่อมรถ\t$1,000\nแต่งไฟใต้ท้องรถ\t$10,000", "ตกลง", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_COLOR2(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new color, vehicleid = GetPlayerVehicleID(playerid), query[128];
		if (sscanf(inputtext, "d", color))
		    return Dialog_Show(playerid, DIALOG_COLOR2, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 2)", "ตกลง", "กลับ");

		if (color < 0 || color > 255)
		    return Dialog_Show(playerid, DIALOG_COLOR2, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ {FF0000}0-255 {FFFFFF}(สีที่ 2)", "ตกลง", "กลับ");

		playerData[playerid][pColor2] = color;
		ChangeVehicleColor(vehicleid, playerData[playerid][pColor1], playerData[playerid][pColor2]);

		if(IsVehicleOwner(playerid, vehicleid))
		{
			carData[vehicleid][carColor1] = playerData[playerid][pColor1];
			carData[vehicleid][carColor2] = playerData[playerid][pColor2];

			mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carColor1 = %d, carColor2 = %d WHERE carID = %d", playerData[playerid][pColor1], playerData[playerid][pColor2], carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}

		GivePlayerMoneyEx(playerid, -1000);
		SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}รถของคุณถูกเปลี่ยนสีเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(1000));
	}
	else
	{
	    Dialog_Show(playerid, DIALOG_COLOR1, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 1)", "ตกลง", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_BANKACCOUNT(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    switch (listitem)
	    {
	        case 0:
	        {
				Dialog_Show(playerid, DIALOG_WITHDRAW, DIALOG_STYLE_INPUT, "[ถอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะถอน", "ถอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));
			}
	        case 1:
	        {
				Dialog_Show(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "[ฝากเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะฝาก", "ฝาก", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));
			}
			case 2:
			{
			    Dialog_Show(playerid, DIALOG_TRANSFER, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่ไอดีหรือชื่อผู้รับเงิน", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));
			}
	    }
	}
	else
	{
	    Dialog_Show(playerid, DIALOG_BANK, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ยอดเงินปัจจุบัน: %s", "เลือก", "ปิด", FormatMoney(playerData[playerid][pBankMoney]));
	}
	return 1;
}

/*Dialog:DIALOG_TRANSFER(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    static
	        userid;

		if (playerData[playerid][pHours] < 0)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องมีชั่วโมงการเล่นมากกว่า 15 ขึ้นไป");

		if (sscanf(inputtext, "u", userid))
		    return Dialog_Show(playerid, DIALOG_TRANSFER, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่ไอดีหรือชื่อผู้รับเงิน", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		if (userid == INVALID_PLAYER_ID)
		    return Dialog_Show(playerid, DIALOG_TRANSFER, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่ไอดีหรือชื่อผู้รับเงิน\n\n{FF0000}*** ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		if (userid == playerid)
		    return Dialog_Show(playerid, DIALOG_TRANSFER, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่ไอดีหรือชื่อผู้รับเงิน\n\n{FF0000}*** โอนเงินเข้าบัญชีตัวเองไม่ได้", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		playerData[playerid][pTransfer] = userid;
		Dialog_Show(playerid, DIALOG_TRANSFERCASH, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะโอนให้กับ %s", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]), GetPlayerNameEx(userid));
	}
    else {
	    Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");
		
	}
	return 1;
}

Dialog:DIALOG_TRANSFERCASH(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    new amount = strval(inputtext);

	    if (isnull(inputtext))
	        return Dialog_Show(playerid, DIALOG_TRANSFERCASH, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะโอนให้กับ %s", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]), GetPlayerNameEx(playerData[playerid][pTransfer]));

		if (amount < 1 || amount > playerData[playerid][pBankMoney])
			return Dialog_Show(playerid, DIALOG_TRANSFERCASH, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะโอนให้กับ %s\n\n{FF0000}*** เงินในบัญชีของคุณไม่พอที่จะโอน", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]), GetPlayerNameEx(playerData[playerid][pTransfer]));

		playerData[playerid][pBankMoney] -= amount;
		playerData[playerData[playerid][pTransfer]][pBankMoney] += amount;

	    SendClientMessageEx(playerid, COLOR_YELLOW, "[ธนาคาร] {FFFFFF}คุณได้โอนเงินจำนวน %s ให้กับ %s สำเร็จ", FormatMoney(amount), GetPlayerNameEx(playerData[playerid][pTransfer]));
	    SendClientMessageEx(playerData[playerid][pTransfer], COLOR_YELLOW, "[ธนาคาร] {FFFFFF}ผู้เล่น %s ได้โอนเงินให้คุณจำนวน %s สำเร็จ", GetPlayerNameEx(playerid), FormatMoney(amount));
		URLogAtmTRANSFER(playerid, amount);
        Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");
	}
	else {
	    Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_WITHDRAW(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    new amount = strval(inputtext);

	    if (isnull(inputtext))
	        return Dialog_Show(playerid, DIALOG_WITHDRAW, DIALOG_STYLE_INPUT, "[ถอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะถอน", "ถอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		if (amount < 1 || amount > playerData[playerid][pBankMoney])
			return Dialog_Show(playerid, DIALOG_WITHDRAW, DIALOG_STYLE_INPUT, "[ถอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะถอน\n\n{FF0000}*** ยอดเงินที่คุณต้องการจะถอนไม่เพียงพอ", "ถอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		playerData[playerid][pBankMoney] -= amount;
	    GivePlayerMoneyEx(playerid, amount);

	    SendClientMessageEx(playerid, COLOR_YELLOW, "[ธนาคาร] {FFFFFF}คุณได้ถอนเงินจำนวน %s ออกจากบัญชีสำเร็จ", FormatMoney(amount));
        Dialog_Show(playerid, DIALOG_WITHDRAW, DIALOG_STYLE_INPUT, "[ถอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะถอน", "ถอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));
		URLogAtmWITHDRAW(playerid,amount);
	}
	else {
	    Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_DEPOSIT(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    new amount = strval(inputtext);

	    if (isnull(inputtext))
	        return Dialog_Show(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "[ฝากเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะฝาก", "ฝาก", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		if (amount < 1 || amount > GetPlayerMoneyEx(playerid))
			return Dialog_Show(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "[ฝากเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะฝาก\n\n{FF0000}*** ยอดเงินที่คุณต้องการจะฝากไม่เพียงพอ", "ฝาก", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		playerData[playerid][pBankMoney] += amount;
	    GivePlayerMoneyEx(playerid, -amount);

	    SendClientMessageEx(playerid, COLOR_YELLOW, "[ธนาคาร] {FFFFFF}คุณได้ฝากเงินจำนวน %s เข้าธนาคารสำเร็จ", FormatMoney(amount));
        Dialog_Show(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "[ฝากเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะฝาก", "ฝาก", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));
		URLogAtmDEPOSIT(playerid,amount);
	}
	else {
	    Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");  
	}
	return 1;
}*/

Dialog:DIALOG_BANK(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    switch (listitem)
	    {
	        case 0:
	        {
				Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");
			}
		}
	}
	return 1;
}


Dialog:DIALOG_ENTERNUMBER(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    static
	        name[32],
			string[128];

		strunpack(name, playerData[playerid][pEditingItem]);

	    if (isnull(inputtext) || !IsNumeric(inputtext))
	        return Dialog_Show(playerid, DIALOG_ENTERNUMBER, DIALOG_STYLE_INPUT, "[เพิ่มเบอร์]", "{FFFFFF}ชื่อ: %s\nใส่เบอร์ที่คุณต้องการจะบันทึก", "ตกลง", "กลับ", name);

		for (new i = 0; i != MAX_CONTACTS; i ++)
		{
			if (!contactData[playerid][i][contactExists])
			{
            	contactData[playerid][i][contactExists] = true;
            	contactData[playerid][i][contactNumber] = strval(inputtext);

				format(contactData[playerid][i][contactName], 32, name);

				mysql_format(g_SQL, string, sizeof(string), "INSERT INTO `contacts` (`ID`, `contactName`, `contactNumber`) VALUES ('%d', '%e', '%d')", playerData[playerid][pID], name, contactData[playerid][i][contactNumber]);
				mysql_tquery(g_SQL, string, "OnContactAdd", "dd", playerid, i);

				SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้เพิ่ม \"%s\" ไปในรายชื่อผู้ติดต่อ", name);
                return 1;
			}
	    }
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รายชื่อผู้ติดต่อของคุณเต็มแล้ว");
	}
	else {
		ShowContacts(playerid);
	}
	return 1;
}

Dialog:DIALOG_NEWCONTACTS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    if (isnull(inputtext))
			return Dialog_Show(playerid, DIALOG_NEWCONTACTS, DIALOG_STYLE_INPUT, "[เพิ่มเบอร์]", "{FFFFFF}ใส่ชื่อผู้ติดต่อที่คุณต้องการจะบันทึก\n{FF0000}*** ใส่ชื่อผู้ติดต่อ", "ตกลง", "กลับ");

	    if (strlen(inputtext) > 32)
	        return Dialog_Show(playerid, DIALOG_NEWCONTACTS, DIALOG_STYLE_INPUT, "[เพิ่มเบอร์]", "{FFFFFF}ใส่ชื่อผู้ติดต่อที่คุณต้องการจะบันทึก\n{FF0000}*** ชื่อผู้ติดต่อต้องไม่เกิน 32 ตัวอักษร", "ตกลง", "กลับ");

		strpack(playerData[playerid][pEditingItem], inputtext, 32);

	    Dialog_Show(playerid, DIALOG_ENTERNUMBER, DIALOG_STYLE_INPUT, "[เพิ่มเบอร์]", "{FFFFFF}ชื่อ: %s\nใส่เบอร์ที่คุณต้องการจะบันทึก", "ตกลง", "กลับ", inputtext);
	}
	else {
		ShowContacts(playerid);
	}
	return 1;
}

Dialog:DIALOG_CONINFO(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new
			id = playerData[playerid][pContact],
			string[72];

		switch (listitem)
		{
		    case 0:
		    {
		        format(string, 16, "%d", contactData[playerid][id][contactNumber]);
				callcmd::call(playerid, string);
		    }
		    case 1:
		    {
		        mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `contacts` WHERE `ID` = '%d' AND `contactID` = '%d'", playerData[playerid][pID], contactData[playerid][id][contactID]);
		        mysql_tquery(g_SQL, string);

		        SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบ \"%s\" ออกจากรายชื่อผู้ติดต่อ", contactData[playerid][id][contactName]);

		        contactData[playerid][id][contactExists] = false;
		        contactData[playerid][id][contactNumber] = 0;
		        contactData[playerid][id][contactID] = 0;

		        ShowContacts(playerid);
		    }
		}
	}
	else {
	    ShowContacts(playerid);
	}
	return 1;
}

Dialog:DIALOG_CONTACTS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    if (!listitem)
		{
	        Dialog_Show(playerid, DIALOG_NEWCONTACTS, DIALOG_STYLE_INPUT, "[เพิ่มเบอร์]", "{FFFFFF}ใส่ชื่อผู้ติดต่อที่คุณต้องการจะบันทึก", "ตกลง", "กลับ");
	    }
	    else {
		    playerData[playerid][pContact] = ListedContacts[playerid][listitem - 1];

	        Dialog_Show(playerid, DIALOG_CONINFO, DIALOG_STYLE_LIST, contactData[playerid][playerData[playerid][pContact]][contactName], "โทร\nลบเบอร์", "ตกลง", "กลับ");
	    }
	}
	else {
		callcmd::phone(playerid, "\1");
	}
	for (new i = 0; i != MAX_CONTACTS; i ++)
	{
	    ListedContacts[playerid][i] = -1;
	}
	return 1;
}
Dialog:DIALOG_DIALNUMBER(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new
	        string[16];

	    if (isnull(inputtext) || !IsNumeric(inputtext))
	        return Dialog_Show(playerid, DIALOG_DIALNUMBER, DIALOG_STYLE_INPUT, "[หมายเลขที่ต้องการโทร]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะติดต่อ", "โทร", "กลับ");

        format(string, 16, "%d", strval(inputtext));
		callcmd::call(playerid, string);
	}
	else {
		callcmd::phone(playerid, "\1");
	}
	return 1;
}

Dialog:DIALOG_SENDTEXT(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new number = strval(inputtext);

	    if (isnull(inputtext) || !IsNumeric(inputtext))
	        return Dialog_Show(playerid, DIALOG_SENDTEXT, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะส่งข้อความ", "โทร", "กลับ");

        if (GetNumberOwner(number) == INVALID_PLAYER_ID)
            return Dialog_Show(playerid, DIALOG_SENDTEXT, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะส่งข้อความ\n{FF0000}*** เบอร์นี้ไม่ได้ออนไลน์อยู่", "โทร", "กลับ");

		playerData[playerid][pContact] = GetNumberOwner(number);
		Dialog_Show(playerid, DIALOG_TEXTMESSAGE, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่ข้อความที่คุณต้องการจะส่งหา %s", "ส่ง", "กลับ", GetPlayerNameEx(playerData[playerid][pContact]));
	}
	else {
		callcmd::phone(playerid, "\1");
	}
	return 1;
}

Dialog:DIALOG_TEXTMESSAGE(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		if (isnull(inputtext))
			return Dialog_Show(playerid, DIALOG_TEXTMESSAGE, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่ข้อความที่คุณต้องการจะส่งหา %s", "ส่ง", "กลับ", GetPlayerNameEx(playerData[playerid][pContact]));

		new targetid = playerData[playerid][pContact];

		if (!IsPlayerConnected(targetid) || !playerData[targetid][pPhone])
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}หมายเลขที่ระบุไม่ถูกต้อง/ออฟไลน์");

		GivePlayerMoneyEx(playerid, -1);
		GameTextForPlayer(playerid, "You've been ~r~charged~w~ $1 to send a text.", 5000, 1);

		SendClientMessageEx(targetid, COLOR_YELLOW, "[ข้อความ]: %s - %s (%d)", inputtext, GetPlayerNameEx(playerid), playerData[playerid][pPhone]);
		SendClientMessageEx(playerid, COLOR_YELLOW, "[ข้อความ]: %s - %s (%d)", inputtext, GetPlayerNameEx(playerid), playerData[playerid][pPhone]);

        PlayerPlaySoundEx(targetid, 21001);
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบมือถือขึ้นมาและกดส่งข้อความ", GetPlayerNameEx(playerid));
	}
	else {
        Dialog_Show(playerid, DIALOG_SENDTEXT, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะส่งข้อความ", "โทร", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_MYPHONE(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch (listitem)
		{
		    case 0:
		    {
		        if (playerData[playerid][pPhoneOff])
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

				Dialog_Show(playerid, DIALOG_DIALNUMBER, DIALOG_STYLE_INPUT, "[หมายเลขที่ต้องการโทร]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะติดต่อ", "โทร", "กลับ");
			}
			case 1:
			{
			    if (playerData[playerid][pPhoneOff])
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

			    ShowContacts(playerid);
			}
		    case 2:
		    {
		        if (playerData[playerid][pPhoneOff])
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

		        Dialog_Show(playerid, DIALOG_SENDTEXT, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะส่งข้อความ", "โทร", "กลับ");
			}
			case 3:
			{
				//ว่าง
			}
			case 4:
			{			
			    if (!playerData[playerid][pPhoneOff])
			    {
           			if (playerData[playerid][pCallLine] != INVALID_PLAYER_ID)
					   {
			        	CancelCall(playerid);
					}
					playerData[playerid][pPhoneOff] = 1;
			        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้กดปุ่มเพื่อปิดมือถือของเขา", GetPlayerNameEx(playerid));
				}
				else
				{
				    playerData[playerid][pPhoneOff] = 0;
			        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้กดปุ่มเพื่อเปิดมือถือของเขา", GetPlayerNameEx(playerid));
				}
			}
		}
	}
	return 1;
}

Dialog:DIALOG_TELEPORT(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    SetPlayerInterior(playerid, g_arrInteriorData[listitem][e_InteriorID]);
	    SetPlayerPos(playerid, g_arrInteriorData[listitem][e_InteriorX], g_arrInteriorData[listitem][e_InteriorY], g_arrInteriorData[listitem][e_InteriorZ]);
	}
	return 1;
}

Dialog:DIALOG_ENTRANCEPASS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new id = (Entrance_Inside(playerid) == -1) ? (Entrance_Nearest(playerid)) : (Entrance_Inside(playerid));
		new password;

		if (id == -1)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ใกล้กับประตูใด ๆ");

		if (sscanf(inputtext, "d", password))
			return Dialog_Show(playerid, DIALOG_ENTRANCEPASS, DIALOG_STYLE_INPUT, "[รหัสผ่านประตู]", "รหัสผ่านต้องเป็นตัวเลขเท่านั้น!\nใส่รหัสผ่านให้ประตูเพื่อความปลอดภัย:", "ยืนยัน", "ออก");

		if (entranceData[id][entrancePass] != password)
            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รหัสผ่านไม่ถูกต้อง");

	    if (!entranceData[id][entranceLocked])
		{
			entranceData[id][entranceLocked] = true;
			Entrance_Save(id);

			GameTextForPlayer(playerid, "You have ~r~locked~w~ the entrance!", 5000, 1);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		}
		else
		{
			entranceData[id][entranceLocked] = false;
			Entrance_Save(id);

			GameTextForPlayer(playerid, "You have ~g~unlocked~w~ the entrance!", 5000, 1);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		}
	}
	return 1;
}

forward OnQueryFinished(playerid, threadid);
public OnQueryFinished(playerid, threadid)
{
	if (!IsPlayerConnected(playerid))
	    return 0;

	static
		rows;

	cache_get_row_count(rows);

	switch (threadid)
	{
    	case THREAD_LOGIN:
   		{
    	    if (!rows)
    	    {
				playerData[playerid][LoginAttempts]++;
				if (playerData[playerid][LoginAttempts] >= 3)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณใส่รหัสผ่านผิดพลาดครบ 3/3 ครั้ง ระบบจึงเตะคุณออกจากเกม");
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
					DelayedKick(playerid);
				}
				else
				{
					ShowDialog_Login(playerid);
				}
			}
			else
			{
				AssignplayerData(playerid);
				ClearPlayerChat(playerid, 20);

				if (playerData[playerid][pBan] == 1)
				{
					SendClientMessage(playerid, COLOR_RED, "ไอดีนี้ไม่สามารถเข้าเล่นในเซิร์ฟเวอร์นี้ได้เพราะถูกแบน!");
					SendClientMessageEx(playerid, COLOR_WHITE, "ชื่อตัวละคร: %s", GetPlayerNameEx(playerid));
					SendClientMessageEx(playerid, COLOR_WHITE, "สาเหตุการโดนแบน: %s", playerData[playerid][pBanReason]);
					DelayedKick(playerid);
					return 1;
				}

				if (playerData[playerid][pFaction] == -1)
				{
					SetPlayerColor(playerid, DEFAULT_COLOR);
				}
				else
				{
					SetFactionColor(playerid);
				}

				if(playerData[playerid][pTutorial] == 0)
				{
					KillTimer(playerData[playerid][LoginTimer]);
					playerData[playerid][LoginTimer] = 0;

					UpdatePlayerRegister(playerid);

					ShowDialog_Tutorial(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Welcome to "SERVER_NAME" version: "SERVER_VERSION"");
					SendClientMessageEx(playerid, COLOR_PINK, "[เซิร์ฟเวอร์] {FFFFFF}คุณล็อคอินเข้าเกมสำเร็จ (%s)", ReturnDate());
					SendClientMessage(playerid, COLOR_PINK, "[เซิร์ฟเวอร์] {FFFFFF}ปุ่ม {FFFF00}Y{FFFFFF} ใช้ในการเปิดกระเป๋าเก็บของ");

					Dialog_Show(playerid, DIALOG_PICKSPAWN, DIALOG_STYLE_LIST, "[เลือกจุดเกิดผู้เล่น]", "เกิดเด็กใหม่\nเกิดออกเกมล่าสุด", "เลือก", "ออกเกม");
				}
			}
		}
		case THREAD_LIST_VEHICLES:
		{
		    if(!rows)
		    {
		        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีรถส่วนตัวเลย");
		    }
		    else
		    {
		        new string[1024],
					modelid,
					Float:fuel;

		        string = "ชื่อรุ่น\tน้ำมัน";

		        for(new i = 0; i < rows; i ++)
		        {
					cache_get_value_name_int(i, "carModel", modelid);
					cache_get_value_name_float(i, "carFuel", fuel);
		            format(string, sizeof(string), "%s\n%s\t(%.2f) ลิตร", string, g_arrVehicleNames[modelid - 400], fuel);
				}

				Dialog_Show(playerid, DIALOG_SPAWNCAR, DIALOG_STYLE_TABLIST_HEADERS, "[เรียกรถส่วนตัว]", string, "เรียก", "ปิด");
		    }
		}
	}
	return 1;
}


/*forward OnQueryFinished(playerid, threadid);
public OnQueryFinished(playerid, threadid)
{
    if (!IsPlayerConnected(playerid))
        return 0;

    static rows;

    cache_get_row_count(rows);

    switch (threadid)
    {
        case THREAD_LOGIN:
   		{
    	    if (!rows)
    	    {
				playerData[playerid][LoginAttempts]++;
				if (playerData[playerid][LoginAttempts] >= 3)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณใส่รหัสผ่านผิดพลาดครบ 3/3 ครั้ง ระบบจึงเตะคุณออกจากเกม");
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
					DelayedKick(playerid);
				}
				else
				{
					ShowDialog_Login(playerid);
				}
			}
			else
			{
				AssignplayerData(playerid);
				ClearPlayerChat(playerid, 20);

				if (playerData[playerid][pBan] == 1)
				{
					SendClientMessage(playerid, COLOR_RED, "ไอดีนี้ไม่สามารถเข้าเล่นในเซิร์ฟเวอร์นี้ได้เพราะถูกแบน!");
					SendClientMessageEx(playerid, COLOR_WHITE, "ชื่อตัวละคร: %s", GetPlayerNameEx(playerid));
					SendClientMessageEx(playerid, COLOR_WHITE, "สาเหตุการโดนแบน: %s", playerData[playerid][pBanReason]);
					DelayedKick(playerid);
					return 1;
				}


                if (playerData[playerid][pFaction] == -1)
                {
                    SetPlayerColor(playerid, DEFAULT_COLOR);
                }
                else
                {
                    SetFactionColor(playerid);
                }

                if (playerData[playerid][pTutorial] == 0)
                {
                    KillTimer(playerData[playerid][LoginTimer]);
                    playerData[playerid][LoginTimer] = 0;

                    UpdatePlayerRegister(playerid);

                    ShowDialog_Tutorial(playerid);
                }
                else
                {

					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Welcome to "SERVER_NAME" version: "SERVER_VERSION"");
					SendClientMessageEx(playerid, COLOR_PINK, "[เซิร์ฟเวอร์] {FFFFFF}คุณล็อคอินเข้าเกมสำเร็จ (%s)", ReturnDate());
					SendClientMessage(playerid, COLOR_PINK, "[เซิร์ฟเวอร์] {FFFFFF}ปุ่ม {FFFF00}Y{FFFFFF} ใช้ในการเปิดกระเป๋าเก็บของ");

					playerData[playerid][pSpawnPoint] = 2;
					SetSpawnInfo(playerid, NO_TEAM, playerData[playerid][pSkin], playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z], playerData[playerid][pPos_A], 0, 0, 0, 0, 0, 0);
					TogglePlayerSpectating(playerid, 0);
					KillTimer(playerData[playerid][LoginTimer]);
					playerData[playerid][LoginTimer] = 0;
					playerData[playerid][IsLoggedIn] = true;
				}
			}
		}
		case THREAD_LIST_VEHICLES:
		{
		    if(!rows)
		    {
		        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีรถส่วนตัวเลย");
		    }
		    else
		    {
		        new string[1024],
					modelid,
					Float:fuel;

		        string = "ชื่อรุ่น\tน้ำมัน";

		        for(new i = 0; i < rows; i ++)
		        {
					cache_get_value_name_int(i, "carModel", modelid);
					cache_get_value_name_float(i, "carFuel", fuel);
		            format(string, sizeof(string), "%s\n%s\t(%.2f) ลิตร", string, g_arrVehicleNames[modelid - 400], fuel);
				}

				Dialog_Show(playerid, DIALOG_SPAWNCAR, DIALOG_STYLE_TABLIST_HEADERS, "[เรียกรถส่วนตัว]", string, "เรียก", "ปิด");
		    }
		}
	}
	return 1;
}*/

SQL_AttemptLogin(playerid, const password[])
{
	new
		query[300],
		buffer[129];

	WP_Hash(buffer, sizeof(buffer), password);

	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `players` WHERE `playerName` = '%e' AND `playerPassword` = '%e'", GetPlayerNameEx(playerid), buffer);
	mysql_tquery(g_SQL, query, "OnQueryFinished", "dd", playerid, THREAD_LOGIN);
}

Dialog:DIALOG_LOGIN(playerid, response, listitem, inputtext[])
{
	if (!response)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณออกเกมสำเร็จ...");
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
		DelayedKick(playerid);
	}
	else
	{
	    SQL_AttemptLogin(playerid, inputtext);
	}
	return 1;
}

Dialog:DIALOG_REGISTER(playerid, response, listitem, inputtext[])
{
	if (!response)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณออกเกมสำเร็จ...");
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
		DelayedKick(playerid);
	}
	else
	{
		if (strlen(inputtext) <= 4)
		{
			ShowDialog_Register(playerid);
			return 1;
		}
		new buffer[129];
		WP_Hash(buffer, sizeof(buffer), inputtext);

		new query[321];
		mysql_format(g_SQL, query, sizeof query, "INSERT INTO `players` (`playerName`, `playerPassword`, `playerRegDate`) VALUES ('%e', '%s', '%e')", GetPlayerNameEx(playerid), buffer, ReturnDate());
		mysql_tquery(g_SQL, query, "OnPlayerRegister", "d", playerid);
	}
	return 1;
}

Dialog:DIALOG_TUTORIAL(playerid, response, listitem, inputtext[])
{
    if (!response)
	{
	    Dialog_Show(playerid, DIALOG_TUTORIALCONFIRM3, DIALOG_STYLE_MSGBOX, "[ยืนยันการออกเกม]", "{FFFFFF}คุณยืนยันที่จะออกจากเกมใช่ไหม?\n{00FF00}** หมายเหตุ: หากคุณยังให้ข้อมูลไม่ครบคุณสามารถกลับมาแก้ไขได้ใหม่ในการเข้าเล่นครั้งต่อไป!", "ยืนยัน", "กลับ");
	}
    else
	{
		switch(listitem)
		{
			case 0:
			{
				ShowDialog_Tutorial(playerid);
			}
			case 1:
			{
				ShowDialog_Tutorial(playerid);
			}
			case 2:
			{
				ShowDialog_Tutorial(playerid);
			}
			case 3: Dialog_Show(playerid, DIALOG_TUTORIALGENDER, DIALOG_STYLE_LIST, "[ข้อมูลตัวละคร]", "ชาย\nหญิง", "แก้ไข", "กลับ");
			case 4: Dialog_Show(playerid, DIALOG_TUTORIALBIRTHDAY, DIALOG_STYLE_INPUT, "[ข้อมูลตัวละคร]", "{FFFFFF}ใส่วันเดือนปีเกิด {FF0000}ตัวอย่าง: 1/1/1991", "แก้ไข", "กลับ");
			case 5:
			{
				static const aGender[3][10] = {"แก้ไข", "ชาย", "หญิง"};
				new string[400];
				if(playerData[playerid][pGender] == 0)
				{
					Dialog_Show(playerid, DIALOG_TUTORIALCONFIRM2, DIALOG_STYLE_MSGBOX, "[ข้อมูลตัวละคร]", "{FFFFFF}เกิดข้อผิดพลาดจากระบบ...\n{FF0000}** คุณยังไม่ได้แก้ไขเพศตัวละคร!", "กลับ", "");
					return 1;
				}
				if(!strcmp(playerData[playerid][pBirthday], "แก้ไข", true))
				{
					Dialog_Show(playerid, DIALOG_TUTORIALCONFIRM2, DIALOG_STYLE_MSGBOX, "[ข้อมูลตัวละคร]", "{FFFFFF}เกิดข้อผิดพลาดจากระบบ...\n{FF0000}** คุณยังไม่ได้แก้ไขวันเดือนปีเกิดตัวละคร!", "กลับ", "");
					return 1;
				}
				format(string, sizeof(string), "\
					{FFFFFF}คุณต้องการที่จะยืนยันจริง ๆ ใช่ไหม?\n\
					{FF0000}*** คุณไม่สามารถกลับไปแก้ไขข้อมูลเหล่านี้ได้อีก หากคุณกดยืนยัน!\n\n\
					{FFFFFF}ลำดับไอดี:\t{00FF00}%d\n\
					{FFFFFF}วันที่ลงทะเบียน:\t{00FF00}%s\n\
					{FFFFFF}ชื่อ:\t\t\t{00FF00}%s\n\
					{FFFFFF}เพศ:\t\t\t{00FF00}%s\n\
					{FFFFFF}วันเดือนปีเกิด:\t{00FF00}%s",
				playerData[playerid][pID], playerData[playerid][pRegisterDate], GetPlayerNameEx(playerid), aGender[playerData[playerid][pGender]], playerData[playerid][pBirthday]);
				Dialog_Show(playerid, DIALOG_TUTORIALCONFIRM, DIALOG_STYLE_MSGBOX, "[ข้อมูลตัวละคร]", string, "ยืนยัน", "กลับ");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_TUTORIALGENDER(playerid, response, listitem, inputtext[])
{
    if (!response)
    {
		ShowDialog_Tutorial(playerid);
    }
	else
	{
		switch(listitem)
		{
			case 0:
			{
				playerData[playerid][pGender] = 1;
				ShowDialog_Tutorial(playerid);
			}
			case 1:
			{
				playerData[playerid][pGender] = 2;
				ShowDialog_Tutorial(playerid);
			}
		}
	}
	return 1;
}

Dialog:DIALOG_TUTORIALBIRTHDAY(playerid, response, listitem, inputtext[])
{
    if (!response)
    {
		ShowDialog_Tutorial(playerid);
    }
	else
	{
		new
			iDay,
			iMonth,
			iYear;

		static const
			arrMonthDays[] = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

		if (sscanf(inputtext, "p</>ddd", iDay, iMonth, iYear))
		{
			Dialog_Show(playerid, DIALOG_TUTORIALBIRTHDAY, DIALOG_STYLE_INPUT, "[ข้อมูลตัวละคร]", "{FFFFFF}ใส่วันเดือนปีเกิด {FF0000}ตัวอย่าง: 1/1/1991", "แก้ไข", "กลับ");
		}
		else if (iYear < 1900 || iYear > 2019)
		{
			Dialog_Show(playerid, DIALOG_TUTORIALBIRTHDAY, DIALOG_STYLE_INPUT, "[ข้อมูลตัวละคร]", "{FFFFFF}ใส่วันเดือนปีเกิด {FF0000}ตัวอย่างปี: 1900-2020", "แก้ไข", "กลับ");
		}
		else if (iMonth < 1 || iMonth > 12)
		{
			Dialog_Show(playerid, DIALOG_TUTORIALBIRTHDAY, DIALOG_STYLE_INPUT, "[ข้อมูลตัวละคร]", "{FFFFFF}ใส่วันเดือนปีเกิด {FF0000}ตัวอย่างเดือน: 1-12", "แก้ไข", "กลับ");
		}
		else if (iDay < 1 || iDay > arrMonthDays[iMonth - 1])
		{
			Dialog_Show(playerid, DIALOG_TUTORIALBIRTHDAY, DIALOG_STYLE_INPUT, "[ข้อมูลตัวละคร]", "{FFFFFF}ใส่วันเดือนปีเกิด {FF0000}ตัวอย่างวัน: 1-31", "แก้ไข", "กลับ");
		}
		else {
			format(playerData[playerid][pBirthday], 24, inputtext);
			ShowDialog_Tutorial(playerid);
		}
	}
	return 1;
}

Dialog:DIALOG_TUTORIALCONFIRM(playerid, response, listitem, inputtext[])
{
    if (!response)
    {
		ShowDialog_Tutorial(playerid);
    }
	else
	{
		playerData[playerid][IsLoggedIn] = true;

		switch(playerData[playerid][pGender])
		{
			case 1: playerData[playerid][pSkin] = 299;
			case 2: playerData[playerid][pSkin] = 298;
		}
		playerData[playerid][pInterior] = 0;
		playerData[playerid][pWorld] = 0;

		playerData[playerid][pTutorial] = 1;

		playerData[playerid][pThirsty] = 100;
		playerData[playerid][pHungry] = 100;

		playerData[playerid][pLevel] = 1;

		playerData[playerid][pHealth] = 100.0;
		playerData[playerid][pPhone] = random(900000) + 100000;

		ClearPlayerChat(playerid, 20);

		SendClientMessage(playerid, COLOR_TG, "Welcome to "SERVER_NAME" version: "SERVER_VERSION"");
		SendClientMessage(playerid, COLOR_PINK, "[เซิร์ฟเวอร์] {FFFFFF}คุณได้รับของเริ่มต้นดังนี้");
		SendClientMessage(playerid, COLOR_PINK, "[เซิร์ฟเวอร์] {FFFFFF}น้ำเปล่า {00FF00}5 {FFFFFF}ขวด");
		SendClientMessage(playerid, COLOR_PINK, "[เซิร์ฟเวอร์] {FFFFFF}พิซซ่า {00FF00}3 {FFFFFF}ชิ้น");
		SendClientMessage(playerid, COLOR_PINK, "[เซิร์ฟเวอร์] {FFFFFF}เงินสด {00FF00}$5000");
		SendClientMessageEx(playerid, COLOR_PINK, "[เซิร์ฟเวอร์] {FFFFFF}มือถือ {00FF00}1 {FFFFFF}เครื่อง เบอร์: {00FF00}%d", playerData[playerid][pPhone]);
		SendClientMessage(playerid, COLOR_PINK, "[เซิร์ฟเวอร์] {FFFFFF}คุณสามารถเปิดช่องเก็บของได้โดยการกดปุ่ม {FFFF00}Y");

		GivePlayerMoneyEx(playerid, 5000); // 5000
		Inventory_Add(playerid, "น้ำเปล่า", 5);
		Inventory_Add(playerid, "พิซซ่า", 5);
		Inventory_Add(playerid, "มือถือ", 1);

		UpdatePlayerRegister(playerid);

		SetSpawnInfo(playerid, NO_TEAM, playerData[playerid][pSkin], playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z], playerData[playerid][pPos_A], 0, 0, 0, 0, 0, 0);
		TogglePlayerSpectating(playerid, 0);
	}
	return 1;
}

Dialog:DIALOG_TUTORIALCONFIRM2(playerid, response, listitem, inputtext[])
{
	ShowDialog_Tutorial(playerid);
	return 1;
}

Dialog:DIALOG_TUTORIALCONFIRM3(playerid, response, listitem, inputtext[])
{
    if (!response)
    {
		ShowDialog_Tutorial(playerid);
    }
	else
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณออกเกมสำเร็จ...");
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
		DelayedKick(playerid);
	}
	return 1;
}

Dialog:DIALOG_EDITRANKS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    if (!factionData[playerData[playerid][pFactionEdit]][factionExists])
			return 0;

		playerData[playerid][pSelectedSlot] = listitem;
		Dialog_Show(playerid, DIALOG_SETRANKNAME, DIALOG_STYLE_INPUT, "[แก้ไขชื่อยศ]", "ยศ : %s (%d)\nใส่ชื่อยศลงด้านล่างเพื่อแก้ไข", "แก้ไข", "กลับ", FactionRanks[playerData[playerid][pFactionEdit]][playerData[playerid][pSelectedSlot]], playerData[playerid][pSelectedSlot] + 1);
	}
	return 1;
}

Dialog:DIALOG_SETRANKNAME(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    if (isnull(inputtext))
			return Dialog_Show(playerid, DIALOG_SETRANKNAME, DIALOG_STYLE_INPUT, "[แก้ไขชื่อยศ]", "ยศ : %s (%d)\nใส่ชื่อยศลงด้านล่างเพื่อแก้ไข", "แก้ไข", "กลับ", FactionRanks[playerData[playerid][pFactionEdit]][playerData[playerid][pSelectedSlot]], playerData[playerid][pSelectedSlot] + 1);

	    if (strlen(inputtext) > 32)
	        return Dialog_Show(playerid, DIALOG_SETRANKNAME, DIALOG_STYLE_INPUT, "[แก้ไขชื่อยศ]", "ชื่อยศต้องไม่เกิน 32 ตัวอักษร\nยศ : %s (%d)\nใส่ชื่อยศลงด้านล่างเพื่อแก้ไข", "แก้ไข", "กลับ", FactionRanks[playerData[playerid][pFactionEdit]][playerData[playerid][pSelectedSlot]], playerData[playerid][pSelectedSlot] + 1);

		format(FactionRanks[playerData[playerid][pFactionEdit]][playerData[playerid][pSelectedSlot]], 32, inputtext);
		Faction_SaveRanks(playerData[playerid][pFactionEdit]);

		Faction_ShowRanks(playerid, playerData[playerid][pFactionEdit]);
		SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ตั้งชื่อให้กับยศ %d ชื่อยศ \"%s\"", playerData[playerid][pSelectedSlot] + 1, inputtext);
	}
	else Faction_ShowRanks(playerid, playerData[playerid][pFactionEdit]);
	return 1;
}

Dialog:DIALOG_LOCKER(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFaction];

	if (factionid == -1 || !IsNearFactionLocker(playerid))
		return 0;

	if (response)
	{
	    static
	        string[512];

		string[0] = 0;

	    if (factionData[factionid][factionType] == FACTION_POLICE)
	    {
	        switch (listitem)
	        {
	            case 0:
	            {
	                if (!playerData[playerid][pOnDuty])
	                {
	                    playerData[playerid][pOnDuty] = true;
	                    playerData[playerid][pArmorOn] = true;
	                    SetPlayerArmour(playerid, 100.0);
	                    SetPlayerAttachedObject(playerid, 9,19142,1,0.106999,0.040999,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);

						SendClientMessageToAllEx(COLOR_LIGHTBLUE, "[ตำรวจ]: {FFFFFF}%s ได้เริ่มต้นการปฏิบัติหน้าที่แล้ว", GetPlayerNameEx(playerid));
                        SendClientMessageToAllEx(COLOR_LIGHTBLUE, "จำนวนเจ้าหน้าที่ตำรวจที่ออนไลน์ : {FFFFFF}%d คน", CopOnline());

	                    SetFactionColor(playerid);
	                }
	                else
	                {
	                    playerData[playerid][pOnDuty] = false;
	                    playerData[playerid][pArmorOn] = false;
	                    SetPlayerArmour(playerid, 0.0);
	                    ResetPlayerWeaponsEx(playerid);
	                    RemovePlayerAttachedObject(playerid, 9);

						SendClientMessageToAllEx(COLOR_LIGHTBLUE, "[ตำรวจ]: {FFFFFF}%s ได้ออกจากการปฏิบัติหน้าที่แล้ว", GetPlayerNameEx(playerid));
                        SendClientMessageToAllEx(COLOR_LIGHTBLUE, "จำนวนเจ้าหน้าที่ตำรวจที่ออนไลน์ : {FFFFFF}%d คน", CopOnline());

	                    SetPlayerColor(playerid, DEFAULT_COLOR);
	                    SetPlayerSkin(playerid, playerData[playerid][pSkin]);
	                }
				}
				case 1:
				{
                    Dialog_Show(playerid, DIALOG_LOCKERSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
					factionData[factionid][factionSkins][0],
					factionData[factionid][factionSkins][1],
					factionData[factionid][factionSkins][2],
					factionData[factionid][factionSkins][3],
					factionData[factionid][factionSkins][4],
					factionData[factionid][factionSkins][5],
					factionData[factionid][factionSkins][6],
					factionData[factionid][factionSkins][7]);
				}
				case 2:
				{
				    ResetPlayerWeaponsEx(playerid);
				    GivePlayerWeaponEx(playerid, 3, 1);
				    GivePlayerWeaponEx(playerid, 41, 1500);
				    GivePlayerWeaponEx(playerid, 23, 150);
				    GivePlayerWeaponEx(playerid, WEAPON_SHOTGUN, 50);
				}
			}
	    }
	    else if (factionData[factionid][factionType] == FACTION_GOV)
	    {
	        switch (listitem)
	        {
	            case 0:
	            {
	                if (!playerData[playerid][pOnDuty])
	                {
	                    playerData[playerid][pOnDuty] = true;
	                    SetPlayerArmour(playerid, 100.0);

						SendClientMessageToAllEx(COLOR_ORANGE, "[นายก]: {FFFFFF}%s ได้เริ่มต้นการปฏิบัติหน้าที่แล้ว", GetPlayerNameEx(playerid));
                        SendClientMessageToAllEx(COLOR_ORANGE, "จำนวนรัฐบาลที่ออนไลน์ : {FFFFFF}%d คน", GovOnline());

	                    SetFactionColor(playerid);
	                }
	                else
	                {
	                    playerData[playerid][pOnDuty] = false;
	                    SetPlayerArmour(playerid, 0.0);
	                    ResetPlayerWeaponsEx(playerid);

						SendClientMessageToAllEx(COLOR_ORANGE, "[นายก]: {FFFFFF}%s ได้ออกจากการปฏิบัติหน้าที่แล้ว", GetPlayerNameEx(playerid));
                        SendClientMessageToAllEx(COLOR_ORANGE, "จำนวนรัฐบาลที่ออนไลน์ : {FFFFFF}%d คน", GovOnline());

	                    SetPlayerColor(playerid, DEFAULT_COLOR);
	                    SetPlayerSkin(playerid, playerData[playerid][pSkin]);
	                }
				}
				case 1:
				{
                    Dialog_Show(playerid, DIALOG_LOCKERSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
					factionData[factionid][factionSkins][0],
					factionData[factionid][factionSkins][1],
					factionData[factionid][factionSkins][2],
					factionData[factionid][factionSkins][3],
					factionData[factionid][factionSkins][4],
					factionData[factionid][factionSkins][5],
					factionData[factionid][factionSkins][6],
					factionData[factionid][factionSkins][7]);
				}
				case 2:
				{
				    ResetPlayerWeaponsEx(playerid);
				    GivePlayerWeaponEx(playerid, 3, 1);
				    GivePlayerWeaponEx(playerid, 41, 1500);
				    GivePlayerWeaponEx(playerid, 23, 150);
				    GivePlayerWeaponEx(playerid, WEAPON_SHOTGUN, 50);
				}
			}
	    }
	    else if (factionData[factionid][factionType] == FACTION_MEDIC)
	    {
	        switch (listitem)
	        {
	            case 0:
	            {
	                if (!playerData[playerid][pOnDuty])
	                {
	                    playerData[playerid][pOnDuty] = true;
	                    SetPlayerArmour(playerid, 100.0);

						SendClientMessageToAllEx(COLOR_LIGHTRED, "[แพทย์]: {FFFFFF}%s ได้เริ่มต้นการปฏิบัติหน้าที่แล้ว", GetPlayerNameEx(playerid));
                        SendClientMessageToAllEx(COLOR_LIGHTRED, "จำนวนหมอที่ออนไลน์ : {FFFFFF}%d คน", MedicOnline());

	                    SetFactionColor(playerid);
	                }
	                else
	                {
	                    playerData[playerid][pOnDuty] = false;
	                    SetPlayerArmour(playerid, 0.0);
	                    ResetPlayerWeaponsEx(playerid);

						SendClientMessageToAllEx(COLOR_LIGHTRED, "[แพทย์]: {FFFFFF}%s ได้ออกจากการปฏิบัติหน้าที่แล้ว", GetPlayerNameEx(playerid));
                        SendClientMessageToAllEx(COLOR_LIGHTRED, "จำนวนหมอที่ออนไลน์ : {FFFFFF}%d คน", MedicOnline());

	                    SetPlayerColor(playerid, DEFAULT_COLOR);
	                    SetPlayerSkin(playerid, playerData[playerid][pSkin]);
	                }
				}
				case 1:
				{
                    Dialog_Show(playerid, DIALOG_LOCKERSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
					factionData[factionid][factionSkins][0],
					factionData[factionid][factionSkins][1],
					factionData[factionid][factionSkins][2],
					factionData[factionid][factionSkins][3],
					factionData[factionid][factionSkins][4],
					factionData[factionid][factionSkins][5],
					factionData[factionid][factionSkins][6],
					factionData[factionid][factionSkins][7]);
				}
				case 2:
				{
				    ResetPlayerWeaponsEx(playerid);
				    GivePlayerWeaponEx(playerid, WEAPON_NITESTICK, 1);
				    GivePlayerWeaponEx(playerid, WEAPON_SPRAYCAN, 500);
				}
			}
	    }
	    else if (factionData[factionid][factionType] == FACTION_GANG)
	    {
	        switch (listitem)
	        {
				case 0:
				{
                    Dialog_Show(playerid, DIALOG_LOCKERSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
					factionData[factionid][factionSkins][0],
					factionData[factionid][factionSkins][1],
					factionData[factionid][factionSkins][2],
					factionData[factionid][factionSkins][3],
					factionData[factionid][factionSkins][4],
					factionData[factionid][factionSkins][5],
					factionData[factionid][factionSkins][6],
					factionData[factionid][factionSkins][7]);
				}
				case 1:
				{
				    ResetPlayerWeaponsEx(playerid);
				    GivePlayerWeaponEx(playerid, 15, 1);
				}
			}
	    }
	    else if (factionData[factionid][factionType] == FACTION_MEC)
	    {
	        switch (listitem)
	        {
	            case 0:
	            {
	                if (!playerData[playerid][pOnDuty])
	                {
	                    playerData[playerid][pOnDuty] = true;

						SendClientMessageToAllEx(COLOR_ORANGE, "[ช่างซ่อมรถ]: {FFFFFF}%s ได้เริ่มต้นการปฏิบัติหน้าที่แล้ว", GetPlayerNameEx(playerid));
                        SendClientMessageToAllEx(COLOR_ORANGE, "จำนวนช่างที่ออนไลน์ : {FFFFFF}%d คน", MechanicOnline());

	                    SetFactionColor(playerid);
	                }
	                else
	                {
	                    playerData[playerid][pOnDuty] = false;
	                    SetPlayerArmour(playerid, 0.0);
	                    ResetPlayerWeaponsEx(playerid);

						SendClientMessageToAllEx(COLOR_ORANGE, "[ช่างซ่อมรถ]: {FFFFFF}%s ได้ออกจากการปฏิบัติหน้าที่แล้ว", GetPlayerNameEx(playerid));
                        SendClientMessageToAllEx(COLOR_ORANGE, "จำนวนช่างที่ออนไลน์ : {FFFFFF}%d คน", MechanicOnline());

	                    SetPlayerColor(playerid, DEFAULT_COLOR);
	                    SetPlayerSkin(playerid, playerData[playerid][pSkin]);
	                }
				}
				case 1:
				{
                    Dialog_Show(playerid, DIALOG_LOCKERSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
					factionData[factionid][factionSkins][0],
					factionData[factionid][factionSkins][1],
					factionData[factionid][factionSkins][2],
					factionData[factionid][factionSkins][3],
					factionData[factionid][factionSkins][4],
					factionData[factionid][factionSkins][5],
					factionData[factionid][factionSkins][6],
					factionData[factionid][factionSkins][7]);
				}
				case 2:
				{
				    ResetPlayerWeaponsEx(playerid);
				    GivePlayerWeaponEx(playerid, 15, 1);
				}
			}
	    }
	}
	return 1;
}

Dialog:DIALOG_LOCKERSKIN(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFaction];

	if (factionid == -1 || !IsNearFactionLocker(playerid))
		return 0;

	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        if(factionData[factionid][factionSkins][0] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        playerData[playerid][pSkin] = factionData[factionid][factionSkins][0];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][0]);
		    }
		    case 1:
		    {
		        if(factionData[factionid][factionSkins][1] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        playerData[playerid][pSkin] = factionData[factionid][factionSkins][1];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][1]);
		    }
		    case 2:
		    {
		        if(factionData[factionid][factionSkins][2] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        playerData[playerid][pSkin] = factionData[factionid][factionSkins][2];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][2]);
		    }
		    case 3:
		    {
		        if(factionData[factionid][factionSkins][3] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        playerData[playerid][pSkin] = factionData[factionid][factionSkins][3];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][3]);
		    }
		    case 4:
		    {
		        if(factionData[factionid][factionSkins][4] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        playerData[playerid][pSkin] = factionData[factionid][factionSkins][4];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][4]);
		    }
		    case 5:
		    {
		        if(factionData[factionid][factionSkins][5] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        playerData[playerid][pSkin] = factionData[factionid][factionSkins][5];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][5]);
		    }
		    case 6:
		    {
		        if(factionData[factionid][factionSkins][6] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        playerData[playerid][pSkin] = factionData[factionid][factionSkins][6];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][6]);
		    }
		    case 7:
		    {
		        if(factionData[factionid][factionSkins][7] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        playerData[playerid][pSkin] = factionData[factionid][factionSkins][7];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][7]);
		    }
		}
	}
	return 1;
}

Dialog:DIALOG_FACTIONSKIN(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];

	if (factionid == -1)
	    return 0;

	if (response)
	{
	    switch (listitem)
	    {
	        case 0:
	        {
				Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
				factionData[factionid][factionSkins][0],
				factionData[factionid][factionSkins][1],
				factionData[factionid][factionSkins][2],
				factionData[factionid][factionSkins][3],
				factionData[factionid][factionSkins][4],
				factionData[factionid][factionSkins][5],
				factionData[factionid][factionSkins][6],
				factionData[factionid][factionSkins][7]);
			}
		}
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];

	if (factionid == -1)
	    return 0;

	if (response)
	{
	    switch (listitem)
	    {
	        case 0:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN1, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 1:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN2, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 2:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN3, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 3:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN4, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 4:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN5, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 5:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN6, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 6:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN7, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 7:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN8, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN1(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN1, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN1, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][0] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN2(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN2, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN2, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][1] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN3(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN3, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN3, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][2] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN4(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN4, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN4, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][3] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN5(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN5, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN5, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][4] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN6(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN6, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN6, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][5] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN7(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN7, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN7, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][6] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN8(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN8, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN8, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][7] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_FACTIONLOCKER(playerid, response, listitem, inputtext[])
{
	if (playerData[playerid][pFactionEdit] == -1)
	    return 0;

	if (response)
	{
	    switch (listitem)
	    {
	        case 0:
	        {
			    static
			        Float:x,
			        Float:y,
			        Float:z;

				GetPlayerPos(playerid, x, y, z);

				factionData[playerData[playerid][pFactionEdit]][factionLockerPosX] = x;
				factionData[playerData[playerid][pFactionEdit]][factionLockerPosY] = y;
				factionData[playerData[playerid][pFactionEdit]][factionLockerPosZ] = z;

				factionData[playerData[playerid][pFactionEdit]][factionLockerInt] = GetPlayerInterior(playerid);
				factionData[playerData[playerid][pFactionEdit]][factionLockerWorld] = GetPlayerVirtualWorld(playerid);

				Faction_Refresh(playerData[playerid][pFactionEdit]);
				Faction_Save(playerData[playerid][pFactionEdit]);
				SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ปรับตำแหน่งตู้เซฟให้กลุ่ม %d", playerData[playerid][pFactionEdit]);
			}
		}
	}
	return 1;
}

stock SQL_ReturnEscaped(const string[])
{
	new
	    entry[256];

	mysql_escape_string(string, entry);
	return entry;
}

CMD:painkiller(playerid, params[])
{
    return UseBandageItem(playerid);
}

CMD:inventory(playerid, params[])
{
    if(INVENTORY_PLAYING[playerid] == 1)
    {
        SendClientMessage(playerid, -1, "[ระบบ] คุณเปิดกระเป๋าอยู่แล้ว");
        return 1;
    }

    INVENTORY_PLAYING[playerid] = 1;
    INVENTORY_INTERFACE(playerid, true);
    ShowPlayerStats (playerid, false);

    return 1;
}

// --> ระบบแต่งรถ
alias:car_tune("ช่าง")
CMD:car_tune(playerid)
{
    if (GetFactionType(playerid) != FACTION_MEC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ช่าง!");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มียศในการแต่ง");

	new ModelVehicle = GetVehicleModel(GetPlayerVehicleID(playerid));

	if(GetModel(ModelVehicle))
		return SendClientMessage(playerid, C_AVISO, "รถของคุณไม่สามารถแต่งได้");

	SelectTextDraw(playerid,0x708090FF);
	for(new i = 0; i < sizeof(wTuning1); i++){TextDrawShowForPlayer(playerid, wTuning1[i]);}

	return 1;
}

CMD:banip(playerid, params[])
{
    new targetid;
    if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, -1, "ใช้: /banip [playerid]");

    if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, -1, "ผู้เล่นนี้ไม่ได้ออนไลน์");

    new ip[16];
    GetPlayerIp(targetid, ip, sizeof(ip));

    BanIP(ip); // ตรวจสอบให้แน่ใจว่าคุณได้มีฟังก์ชันนี้ในระบบเอง หรือเปลี่ยนชื่อให้ตรงกับระบบของคุณ

    Kick(targetid);

    new name[MAX_PLAYER_NAME];
    GetPlayerName(targetid, name, sizeof(name));

    new msg[128];
    format(msg, sizeof(msg), "ผู้เล่น %s ถูกแบน IP (%s)", name, ip);
    SendClientMessageToAll(0xFF0000FF, msg);
    return 1;
}

stock BanIP(ip[])
{
    new cmd[32];
    format(cmd, sizeof(cmd), "banip %s", ip);
    SendRconCommand(cmd);
}

alias:ModVeg("แต่งรถ")
CMD:ModVeg(playerid)
{
	if (playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, -1, "คุณไม่ได้รับอนุญาติ");

    if (GetFactionType(playerid) != FACTION_MEC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ช่าง!");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มียศในการแต่ง");

	return 1;
}

alias:savedata("เชฟ")
CMD:savedata(playerid, params[])
{

	if(playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, -1, "คุณไม่ได้รับอนุญาติ");


	foreach (new i : Player){
		if(playerData[i][IsLoggedIn]){
            UpdateplayerData(i);
		}
	}

	SendClientMessage(playerid, -1, "คุณได้ save ข้อมูลเซิฟเวอร์เรียบร้อยแล้ว!");

	return 1;
}


//SendClientMessage(playerid, COLOR, "ข้อความ");
// string = ข้อความ

//Addwhitelist
alias:whitelist("ให้ไวริส")
CMD:whitelist(playerid, params[]){ //  /addpc [nameplayer] \\ /addpc Justinz

	if(playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, -1, "คุณไม่ได้รับอนุญาติให้ใช้คำสั่งนี้");

	//params รับชื่อผู้เล่นเข้ามา
	if(isnull(params))
	    return SendClientMessage(playerid, -1, "คุณจำเป็นต้องกรอกชื่อผู้เล่นที่จะให้ไวริส");

	new string[128];

	format(string, sizeof(string), "UPDATE `players` SET `playerWhitelist` = %d WHERE `playerName` = '%s'", 1, SQL_ReturnEscaped(params));
	mysql_tquery(g_SQL, string);

	new string2[128];

	format(string2, sizeof(string2), "คุณได้ให้ไวริสคอมกับผู้เล่น %s เรียบร้อยแล้ว", params);
	SendClientMessage(playerid, COLOR_LIGHTRED, string2);
	return 1;
}

CMD:near(playerid, params[])
{
	static
	    id = -1;

    if (playerData[playerid][pAdmin] < 3)
	    return SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้.");

	if ((id = Pickcar_Nearest(playerid)) != -1)
	    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณกำลังยืนอยู่ ใกล้ ๆ เก็บรถ ID: %d.", id);

	if ((id = House_Nearest(playerid)) != -1)
	    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณกำลังยืนอยู่ ใกล้ ๆ บ้าน ID: %d.", id);

    if ((id = Callcar_Nearest(playerid)) != -1)
	    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณกำลังยืนอยู่ ใกล้ ๆ การาจ ID: %d.", id);

    if ((id = ATM_Nearest(playerid)) != -1)
        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณกำลังยืนอยู่ ใกล้ ๆ ATM ID: %d.", id);

    if ((id = Arrest_Nearest(playerid)) != -1)
    	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณกำลังยืนอยู่ ใกล้ ๆ คุก ID: %d.", id);

    if ((id = Pump_Nearest(playerid)) != -1)
  	 	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณกำลังยืนอยู่ ใกล้ ๆ ปั้ม ID: %d.", id);

    if ((id = Entrance_Nearest(playerid)) != -1)
  	 	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณกำลังยืนอยู่ ใกล้ ๆ ประตู ID: %d.", id);

	if ((id = Shop_Nearest(playerid)) != -1)
  	 	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณกำลังยืนอยู่ ใกล้ ๆ ร้านค้า ID: %d.", id);

	return 1;
}

CMD:createhouse(playerid, params[])
{
	static
	    price,
	    id,
	    address[32];

    if (playerData[playerid][pAdmin] < 6)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "ds[32]", price, address))
	    return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /createhouse [ราคา] [ชื่อบ้าน]");

	for (new i = 0; i != MAX_HOUSES; i ++) if (HouseData[i][houseExists] && !strcmp(HouseData[i][houseAddress], address, true)) {
	    return SendClientMessageEx(playerid, COLOR_GREY, "ที่อยู่ \"%s\" ถูกใช้งานแล้ว (ไอดี : %d)", address, i);
	}
	id = House_Create(playerid, address, price);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_GREY, "เซิร์ฟเวอร์มีจำนวนบ้านถึงขีด จำกัด แล้ว");

	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณได้ทำการสร้างบ้านไอดี %d เรียบร้อยแล้ว", id);
	return 1;
}

CMD:destroyhouse(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /destroyhouse [house id]");

	if ((id < 0 || id >= MAX_HOUSES) || !HouseData[id][houseExists])
	    return SendClientMessage(playerid, COLOR_GREY, "คุณระบุบ้านที่ไม่ถูกต้อง ID");

	House_Delete(id);
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณได้ทำการลบบ้านไอดี %d ออกจากฐานข้อมูลแล้ว", id);
	return 1;
}

CMD:checkhouse(playerid, params[])
{
	static
	    id = -1;

	if ((id = House_Nearest(playerid)) != -1)
	    SendClientMessageEx(playerid, COLOR_GREY, "คุณกำลังยืนอยู่ ใกล้ ๆ กับบ้านไอดี : %d", id);

	return 1;
}

CMD:buyhouse(playerid, params[])
{
	new
		id = -1;

	if ((id = House_Nearest(playerid)) != -1)
	{
		if (House_GetCount(playerid) >= MAX_OWNABLE_HOUSES)
			return SendClientMessageEx(playerid, COLOR_GREY, "คุณมีบ้าน %d แห่งแล้วตอนนี้", MAX_OWNABLE_HOUSES);

		if (HouseData[id][houseOwner] != 0)
			return SendClientMessage(playerid, COLOR_GREY, "บ้านแห่งนี้มีเจ้าของแล้ว");

		if (HouseData[id][housePrice] > GetPlayerMoneyEx(playerid))
			return SendClientMessage(playerid, COLOR_GREY, "คุณมีเงินไม่เพียงพอที่จะซื้อ");

		HouseData[id][houseOwner] = GetPlayerSQLID(playerid);

		House_Refresh(id);
		House_Save(id);

		GivePlayerMoneyEx(playerid, -HouseData[id][housePrice]);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณได้ซื้อ \"%s\" เป็นจำนวน %s!", HouseData[id][houseAddress], FormatNumber(HouseData[id][housePrice]));
	}

	return 1;
}

CMD:edithouse(playerid, params[])
{
	static
	    id,
	    type[24],
	    string[128];

	if (playerData[playerid][pAdmin] < 6)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "ds[24]S()[128]", id, type, string))
 	{
	 	SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /edithouse [id] [name]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[NAMES]:{FFFFFF} location, interior, price, address, type");
		return 1;
	}
	if ((id < 0 || id >= MAX_HOUSES) || !HouseData[id][houseExists])
	    return SendClientMessage(playerid, COLOR_GREY, "เกิดข้อผิดพลาดเกี่ยวกับบ้าน");

	if (!strcmp(type, "location", true))
	{
		GetPlayerPos(playerid, HouseData[id][housePos][0], HouseData[id][housePos][1], HouseData[id][housePos][2]);
		GetPlayerFacingAngle(playerid, HouseData[id][housePos][3]);

		HouseData[id][houseExterior] = GetPlayerInterior(playerid);
		HouseData[id][houseExteriorVW] = GetPlayerVirtualWorld(playerid);

		House_Refresh(id);
		House_Save(id);

		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s ได้ปรับตำแหน่งบ้านไอดี : %d", GetPlayerNameEx(playerid), id);
	}
	else if (!strcmp(type, "interior", true))
	{
	    GetPlayerPos(playerid, HouseData[id][houseInt][0], HouseData[id][houseInt][1], HouseData[id][houseInt][2]);
		GetPlayerFacingAngle(playerid, HouseData[id][houseInt][3]);

		HouseData[id][houseInterior] = GetPlayerInterior(playerid);

        foreach (new i : Player)
		{
			if (playerData[i][pHouse] == HouseData[id][houseID])
			{
				SetPlayerPos(i, HouseData[id][houseInt][0], HouseData[id][houseInt][1], HouseData[id][houseInt][2]);
				SetPlayerFacingAngle(i, HouseData[id][houseInt][3]);

				SetPlayerInterior(i, HouseData[id][houseInterior]);
				SetCameraBehindPlayer(i);
			}
		}
		House_Save(id);
		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s ได้ปรับแต่งภายในบ้านไอดี : %d", GetPlayerNameEx(playerid), id);
	}
	else if (!strcmp(type, "price", true))
	{
	    new price;

	    if (sscanf(string, "d", price))
	        return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /edithouse [id] [price] [new price]");

	    HouseData[id][housePrice] = price;

	    House_Refresh(id);
	    House_Save(id);

		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s ได้ปรับแต่งราคาบ้านไอดี %d เป็น %s", GetPlayerNameEx(playerid), id, FormatNumber(price));
	}
	else if (!strcmp(type, "address", true))
	{
	    new address[32];

	    if (sscanf(string, "s[32]", address))
	        return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /edithouse [id] [address] [new address]");

	    format(HouseData[id][houseAddress], 32, address);

	    House_Refresh(id);
	    House_Save(id);

		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s ได้ปรับแต่งชื่อบ้านไอดี %d เป็น \"%s\"", GetPlayerNameEx(playerid), id, address);
	}
	else if (!strcmp(type, "type", true))
	{
	    new typeint;

	    if (sscanf(string, "d", typeint))
	        return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /edithouse [id] [type] [interior type]");

		if (typeint < 1 || typeint > sizeof(arrHouseInteriors))
			return SendClientMessageEx(playerid, COLOR_GREY, "เกิดข้อผิอพลาด (1-%d)", sizeof(arrHouseInteriors));

	    HouseData[id][houseInt][0] = arrHouseInteriors[typeint][eHouseX];
	    HouseData[id][houseInt][1] = arrHouseInteriors[typeint][eHouseY];
	    HouseData[id][houseInt][2] = arrHouseInteriors[typeint][eHouseZ];
	    HouseData[id][houseInt][3] = arrHouseInteriors[typeint][eHouseAngle];
        HouseData[id][houseInterior] = arrHouseInteriors[typeint][eHouseInterior];

		foreach (new i : Player)
		{
			if (playerData[i][pHouse] == HouseData[id][houseID])
			{
				SetPlayerPos(i, HouseData[id][houseInt][0], HouseData[id][houseInt][1], HouseData[id][houseInt][2]);
				SetPlayerFacingAngle(i, HouseData[id][houseInt][3]);

				SetPlayerInterior(i, HouseData[id][houseInterior]);
				SetCameraBehindPlayer(i);
			}
		}
	    House_Save(id);
		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s ได้ปรับเปลี่ยนภายในบ้านไอดี : %d เป็นแบบ %d", GetPlayerNameEx(playerid), id, typeint);
	}
	return 1;
}


// --> ระบบ Animation ส่วนตัว
alias:ai("ท่าทาง")
CMD:ai(playerid, params[])
{
	Dialog_Show(playerid, D_Animlist, DIALOG_STYLE_TABLIST, "ท่าทาง", "{FFFFFF}ยกเลิกท่าทาง\n>> ยกมือ\n>> เอามือกุมหัว\n>> บาดเจ็บ\n>> เยี่ยว\n>> นอนหงายหน้า\n>> นอนคว้ำหน้า\n>> กอดอก\n>> ตบตูด\n>> นั่งเก้าอี้\n>> โบกรถ(ซ้าย)\n>> โบกรถ(ขวา)\n>> ดูดบุหรี่\n>> พิงกำแพง\n>> ท้าทาย", "เลือก", "ออก");
	return 1;
}

// --> ระบบค้นหาตัวผู้ร้าย
CMD:chm(playerid, params[])
{
    static userid;

    if (GetFactionType(playerid) != FACTION_POLICE &&
        GetFactionType(playerid) != FACTION_MEDIC &&
        GetFactionType(playerid) != FACTION_GOV)
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับรัฐบาลเท่านั้น!");

    if (sscanf(params, "u", userid))
        return SendClientMessage(playerid, COLOR_WHITE, "/chm [ไอดี/ชื่อ]");

    if (!IsPlayerConnected(userid))
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

    if (userid == playerid)
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถค้นหาตัวเองได้");

    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(userid, X, Y, Z);

    targetonname[playerid] = userid;
    SetPlayerCheckpoint(playerid, X, Y, Z, 5);

    targeton[playerid] = 1;
    SendClientMessage(playerid, COLOR_GREY, "คุณได้ใช้เครื่อง GPS ค้นหาผู้เล่นนี้ /offchm เพื่อหยุดค้นหา !");

    return 1;
}
alias:chm("cgps")

CMD:roadblock(playerid, params[])
{
	if (GetFactionType(playerid) != FACTION_POLICE)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับตำรวจเท่านั้น!");

	if (playerData[playerid][pRoadblock] != -1)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องเก็บด่านเก่าออกก่อน ถึงสร้างใหม่ได้ /rrb ในการเก็บ");

	new Float:X, Float:Y, Float:Z, Float:A;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);
	playerData[playerid][pRoadblock] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
	SetPlayerPos(playerid, X, Y, Z+4);
	GameTextForPlayer(playerid, "~w~Roadblock ~r~Placed", 5000, 5);
	SendClientMessage(playerid, COLOR_SERVER, "คุณได้ทำการตั้งด่านสำเร็จ");
	SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "HQ: เจ้าหน้าที่ %s ได้ตั้งด่านอยู่ที่พิกัด (%.4f, %.4f, %.4f)", GetPlayerNameEx(playerid), X, Y, Z);
	return 1;
}
alias:roadblock("rb")

CMD:roadunblock(playerid, params[])
{
	if (GetFactionType(playerid) != FACTION_POLICE)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับตำรวจเท่านั้น!");

	if (playerData[playerid][pRoadblock] == -1)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยังไม่มีการตั้งด่านเกิดขึ้น");

	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	DestroyDynamicObject(playerData[playerid][pRoadblock]);
	playerData[playerid][pRoadblock] = -1;
	SendClientMessage(playerid, COLOR_SERVER, "คุณได้ทำการเก็บด่านสำเร็จ");
	SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "HQ: เจ้าหน้าที่ %s ได้ทำการเก็บด่านที่พิกัด (%.4f, %.4f, %.4f)", GetPlayerNameEx(playerid), X, Y, Z);
	return 1;
}
alias:roadunblock("rrb")

CMD:roadunblockall(playerid, params[])
{
	if (GetFactionType(playerid) != FACTION_POLICE)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับตำรวจเท่านั้น!");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีอำนาจในการเก็บด่านทั้งหมด");

	foreach(new i : Player)
	{
	    if (playerData[i][pRoadblock] != -1)
	    {
			DestroyDynamicObject(playerData[i][pRoadblock]);
			playerData[i][pRoadblock] = -1;
		}
	}
	SendClientMessage(playerid, COLOR_SERVER, "คุณได้ทำการเก็บด่านทั้งหมดสำเร็จ");
	SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "HQ: เจ้าหน้าที่ %s ได้ทำการเก็บด่านทั้งหมด", GetPlayerNameEx(playerid));
	return 1;
}
alias:roadunblockall("rrball")

/*CMD:tazer(playerid, params[])
{
	if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT || !IsPlayerSpawnedEx(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใช้งานได้ ต้องอยู่บนพื้นเท่านั้น");

	if (GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับรัฐบาลเท่านั้น!");

	if (!playerData[playerid][pTazer])
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 23, 20000);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบปืนช็อตไฟฟ้าออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}
	else
	{
	    playerData[playerid][pTazer] = 0;
	    SetPlayerAmmo(playerid, 23, 0);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บปืนช็อตไฟฟ้าลงในกระเป๋า", GetPlayerNameEx(playerid));
	}
	return 1;
}*/

// --> ระบบค้นตัวผู้ต้องหา
CMD:frisk(playerid, params[])
{
    new
	    userid;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/frisk [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถค้นหาของผิดกฎหมายของตัวเองได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerState(userid) != PLAYER_STATE_ONFOOT)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในยานพาหนะ");

	FriskInventory3(playerid, userid);

	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "* คุณถูกค้นหาของผิดกฎหมายโดย %s", GetPlayerNameEx(playerid));
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้ทำการค้นหาของผิดกฎหมายของ %s", GetPlayerNameEx(userid));

    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ค้นหาของผิดกฎหมายของ %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));

	
	return 1;
}
alias:frisk("7")

forward FriskInventory3(playerid, userid);
public FriskInventory3(playerid, userid)
{
    if (playerData[userid][IsLoggedIn] == false)
	    return 0;

	new
		string[2048],
		string2[2048],
		count,
		var[32];

    for (new i = 0; i < playerData[userid][pMaxItem]; i ++)
	{
 		if (invData[userid][i][invExists]) {
   			format(string, sizeof(string), "%s\t{D0AEEB}({FFFFFF}%d{D0AEEB})\n", invData[userid][i][invItem], invData[userid][i][invQuantity]);
   			strcat(string2, string);
   			format(var, sizeof(var), "itemlistza%d", count);
   			SetPVarInt(playerid, var, i);
   			count++;
		}
	}
	if (!count) {
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นไม่มีไอเท็มอยู่ในตัวเลย");
		return 1;
	}
	playerData[playerid][pTargetFrisk] = userid;
	format(string, sizeof(string), "ชื่อ\tความจุ (%d/%d)\n%s", Inventory_Items(userid), playerData[userid][pMaxItem], string2);
	return Dialog_Show(playerid, DIALOG_INVENTORY234, DIALOG_STYLE_TABLIST_HEADERS, "[กระเป๋า]", string, "เลือก", "ปิด");
}

Dialog:DIALOG_INVENTORY234(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new userid = playerData[playerid][pTargetFrisk];
		new var[32];
		format(var, sizeof(var), "itemlistza%d", listitem);
		new item = GetPVarInt(playerid, var);

        FriskItemInventory(playerid, item, invData[userid][item][invItem]);
	}
	return 1;
}

forward FriskItemInventory(playerid, itemid, name[]);
public FriskItemInventory(playerid, itemid, name[])
{
	if (playerData[playerid][pTargetFrisk] == -1)
	    return 1;

	if (!strcmp(name, "กัญชา", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU_12, DIALOG_STYLE_LIST, name, "ยึด", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

	if (!strcmp(name, "เงินแดง", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU_12, DIALOG_STYLE_LIST, name, "ยึด", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

	if (!strcmp(name, "โคเคน", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU_12, DIALOG_STYLE_LIST, name, "ยึด", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

	if (!strcmp(name, "ปูน", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU_12, DIALOG_STYLE_LIST, name, "ยึด", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

	if (!strcmp(name, "สายไฟ", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU_12, DIALOG_STYLE_LIST, name, "ยึด", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

	if (!strcmp(name, "แคปซูล", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU_12, DIALOG_STYLE_LIST, name, "ยึด", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

	if (!strcmp(name, "น็อต A", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU_12, DIALOG_STYLE_LIST, name, "ยึด", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

	if (!strcmp(name, "น็อต B", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU_12, DIALOG_STYLE_LIST, name, "ยึด", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

	if (!strcmp(name, "น็อต C", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU_12, DIALOG_STYLE_LIST, name, "ยึด", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

	else return SendClientMessage(playerid, COLOR_LIGHTRED, "+ {FFFFFF}คุณต้องยึดของผิดกฎหมายเท่านั้น!");
}

Dialog:DIALOG_INVENTORYMENU_12(playerid, response, listitem, inputtext[])
{
    if (playerData[playerid][pTargetFrisk] == -1)
        return 1;

    new userid = playerData[playerid][pTargetFrisk];
    if (response)
    {
        switch(listitem)
        {
            case 0:
            {
                new stringz[64];
                new itemid = playerData[playerid][pItemSelect];
                strunpack(stringz, invData[userid][itemid][invItem]); 

            
                SendClientMessageEx(playerid, COLOR_LIGHTRED, "* คุณได้ยึดของ '%s' ออกมาจากตัว '%s' จำนวน '%d'",stringz, GetPlayerNameEx(userid), invData[userid][itemid][invQuantity]);
                SendClientMessageEx(userid, COLOR_LIGHTRED,"* คุณถูกยึดของ '%s' ออกมาโดย '%s' จำนวน '%d'",stringz, GetPlayerNameEx(playerid), invData[userid][itemid][invQuantity]);

                new strd[256];
                new DCC_Embed:embed = DCC_CreateEmbed();
                DCC_SetEmbedTitle(embed, "Log ยึดของ");

                printf("[DEBUG] itemid=%d, userid=%d, itemName=%s, qty=%d", itemid, userid, stringz, invData[userid][itemid][invQuantity]);

                format(strd, sizeof(strd),"[POLICE] %s ได้ยึด %s จากตัว '%s' จำนวน %d \n `วัน/เวลา %s`", GetPlayerNameEx(playerid), stringz, GetPlayerNameEx(userid),invData[userid][itemid][invQuantity], ReturnDate());

                DCC_SetEmbedDescription(embed, strd);
                DCC_SetEmbedColor(embed, 0x006EFF);
                DCC_SetEmbedThumbnail(embed, "https://img2.pic.in.th/pic/LOGO0f2189a16b0f7ee0.th.png");
                DCC_SendChannelEmbedMessage(DCC_FindChannelById("1413874171875688550"), embed);

                Inventory_Add(playerid, invData[userid][itemid][invItem], invData[userid][itemid][invQuantity]);
                Inventory_Remove(userid, invData[userid][itemid][invItem], invData[userid][itemid][invQuantity]);

                playerData[playerid][pTargetFrisk] = -1;
            }
        }
    }
    return 1;
}


// --> ระบบยึดของผิดกฎหมาย
CMD:takecannabis(playerid, params[])
{
    new
	    userid;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/takecannabis [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถยึดของผิดกฎหมายของตัวเองได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerState(userid) != PLAYER_STATE_ONFOOT)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในยานพาหนะ");

    if (!playerData[userid][pCuffed])
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้ถูกใส่กุญแจมืออยู่");

    if (!Inventory_HasItem(userid, "โคเคน"))
		return SendClientMessageEx(playerid, COLOR_GREY, "ผู้เล่นนี้ไม่ของผิดกฎหมายภายในตัว");

    if (!Inventory_HasItem(userid, "กัญชา"))
		return SendClientMessageEx(playerid, COLOR_GREY, "ผู้เล่นนี้ไม่ของผิดกฎหมายภายในตัว");

	new weedammo = Inventory_Count(userid, "กัญชา");
	new cocainammo = Inventory_Count(userid, "โคเคน");

	Inventory_Add(playerid, "โคเคน", cocainammo);
	Inventory_Remove(userid, "โคเคน", cocainammo);

	Inventory_Add(playerid, "กัญชา", weedammo);
	Inventory_Remove(userid, "กัญชา", weedammo);

	SendClientMessageEx(playerid, COLOR_LIGHTRED, "คุณได้ยึดของผิดกฎหมาย %s ที่อยู่ในตัวทั้งหมดจำนวน : %d", GetPlayerNameEx(userid), Inventory_Count(userid, "กัญชา"));
	SendClientMessageEx(userid, COLOR_LIGHTRED, "คุณได้ยึดของผิดกฎหมาย %s ที่อยู่ในตัวทั้งหมดจำนวน %d", GetPlayerNameEx(playerid), Inventory_Count(userid, "กัญชา"));
    
	return 1;
}
alias:takecannabis("8")

// --> ระบบค้นหาตัวผู้ร้าย
CMD:offchm(playerid, params[])
{

	targeton[playerid] = 0;
	DisablePlayerCheckpoint(playerid);
	SendClientMessage(playerid, COLOR_GREY, "คุณได้ปิดเครื่อง CHM แล้ว !");

	return 1;
}
alias:offchm("ccgps")

alias:accept("ยอมรับ")
CMD:accept(playerid, params[])
{
	if (isnull(params))
 	{
	 	SendClientMessage(playerid, COLOR_WHITE, "/ยอมรับ [ชื่อรายการ]");
		SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} เข้าแก็ง, ซื้อรถ");
		return 1;
	}
	if (!strcmp(params, "เข้าแก็ง", true) && playerData[playerid][pFactionOffer] != INVALID_PLAYER_ID)
	{
	    new
	        targetid = playerData[playerid][pFactionOffer],
	        factionid = playerData[playerid][pFactionOffered];

		if (!factionData[factionid][factionExists] || playerData[targetid][pFactionRank] < factionData[playerData[targetid][pFaction]][factionRanks] - 1)
	   	 	return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ข้อเสนอถูกยกเลิก");

		SetFaction(playerid, factionid);
		playerData[playerid][pFactionRank] = 1;

		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ยอมรับข้อเสนอจากคุณ {33CCFF}%s {FFFFFF}ที่เสนอให้เข้าร่วมกลุ่ม \"%s\" ยินดีด้วย!", GetPlayerNameEx(targetid), Faction_GetName(targetid));
		SendClientMessageEx(targetid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ยืนยันข้อเสนอในการเข้าร่วมกลุ่ม \"%s\"", GetPlayerNameEx(playerid), Faction_GetName(targetid));

        playerData[playerid][pFactionOffer] = INVALID_PLAYER_ID;
        playerData[playerid][pFactionOffered] = -1;
	}
	else if(!strcmp(params, "ซื้อรถ", true))
	{
		new
		    offeredby = playerData[playerid][pCarSeller],
		    vehicleid = playerData[playerid][pCarOffered],
		    price = playerData[playerid][pCarValue];

	    if(offeredby == INVALID_PLAYER_ID)
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครเสนอขายรถให้คุณ");
	    }
	    if(!IsPlayerNearPlayer(playerid, offeredby, 5.0))
		{
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องอยู่ในระยะใกล้กัน");
	    }
	    if(!IsVehicleOwner(offeredby, vehicleid))
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นคนนั้นไม่ได้เป็นเจ้าของรถคันนี้อีกต่อไปแล้ว");
	    }
	    if(GetPlayerMoneyEx(playerid) < price)
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอ");
	    }

	    GetPlayerName(playerid, carData[vehicleid][carOwner], MAX_PLAYER_NAME);
	    carData[vehicleid][carOwnerID] = playerData[playerid][pID];
		new query[128];
	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carOwnerID = %d, carOwner = '%s' WHERE carID = %d", carData[vehicleid][carOwnerID], carData[vehicleid][carOwner], carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);

	    GivePlayerMoneyEx(offeredby, price);
	    GivePlayerMoneyEx(playerid, -price);

	    SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ตอบรับข้อเสนอ %s ในการซื้อรถรุ่น %s ราคา %s", GetPlayerNameEx(offeredby), ReturnVehicleName(vehicleid), FormatMoney(price));
	    SendClientMessageEx(offeredby, COLOR_SERVER, "** %s ได้ตอบรับข้อเสนอของคุณในการขายรถรุ่น %s ราคา %s", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid), FormatMoney(price));

	    playerData[playerid][pCarSeller] = INVALID_PLAYER_ID;
	}
	return 1;
}


CMD:fightstyle0(playerid, params[])
{
	SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
	SendClientMessage(playerid, 0xFFFFFFAA, "คุณได้เปลี่ยนท่าต่อสู้เป็นธรรมดา !");
    return 1;
}
CMD:fightstyle1(playerid, params[])
{
	SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
	SendClientMessage(playerid, 0xFFFFFFAA, "คุณได้เปลี่ยนท่าต่อสู้เป็นมวย !");
	return 1;
}
CMD:fightstyle2(playerid, params[])
{
	SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
	SendClientMessage(playerid, 0xFFFFFFAA, "คุณได้เปลี่ยนท่าต่อสู้เป็นกังฟู!");
	return 1;
}

CMD:neon(playerid, params[])
{
    new vehicleid = GetPlayerVehicleID(playerid);

	if(!vehicleid || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถโดยต้องเป็นสถานะคนขับเท่านั้น");
	}
	if(!IsVehicleOwner(playerid, vehicleid) && playerData[playerid][pVehicleKeys] != vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(!carData[vehicleid][carNeon])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มี Neon");
	}

	if(!carData[vehicleid][carNeonEnabled])
	{
	    carData[vehicleid][carNeonEnabled] = 1;
	    GameTextForPlayer(playerid, "~g~Neon activated", 3000, 3);

	    SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้กดปุ่มเพื่อเปิด Neon", GetPlayerNameEx(playerid));
	}
	else
	{
	    carData[vehicleid][carNeonEnabled] = 0;
	    GameTextForPlayer(playerid, "~r~Neon deactivated", 3000, 3);

	    SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้กดปุ่มเพื่อปิด Neon", GetPlayerNameEx(playerid));
	}
	new query[128];
	mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carNeonEnabled = %d WHERE carID = %d", carData[vehicleid][carNeonEnabled], carData[vehicleid][carID]);
	mysql_tquery(g_SQL, query);

	ReloadVehicleNeon(vehicleid);
	return 1;
}

CMD:unmod(playerid, params[])
{
    new vehicleid = GetPlayerVehicleID(playerid), query[200];

	if(!vehicleid || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถโดยต้องเป็นสถานะคนขับเท่านั้น");
	}
	if(!IsVehicleOwner(playerid, vehicleid) && playerData[playerid][pVehicleKeys] != vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(isnull(params))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/unmod [color | paintjob | mods | neon]");
	}

	if(!strcmp(params, "color", true))
	{
	    carData[vehicleid][carColor1] = 0;
	    carData[vehicleid][carColor2] = 0;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carColor1 = 0, carColor2 = 0 WHERE carID = %d", carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);

	    ChangeVehicleColor(vehicleid, 0, 0);
	    SendClientMessage(playerid, COLOR_WHITE, "** สีรถของคุณได้กลับมาเป็นสีปกติ");
	}
	else if(!strcmp(params, "paintjob", true))
	{
	    carData[vehicleid][carPaintjob] = -1;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPaintjob = -1 WHERE carID = %d", carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);

	    ChangeVehiclePaintjob(vehicleid, -1);
	    SendClientMessage(playerid, COLOR_WHITE, "** ลายรถของคุณได้กลับมาเป็นปกติ");
	}
	else if(!strcmp(params, "mods", true))
	{
	    for(new i = 0; i < 14; i ++)
	    {
	        if(carData[vehicleid][carMods][i] >= 1000)
	        {
	            RemoveVehicleComponent(vehicleid, carData[vehicleid][carMods][i]);
	        }
	    }

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carMod1 = 0, carMod2 = 0, carMod3 = 0, carMod4 = 0, carMod5 = 0, carMod6 = 0, carMod7 = 0, carMod8 = 0, carMod9 = 0, carMod10 = 0, carMod11 = 0, carMod12 = 0, carMod13 = 0, carMod14 = 0 WHERE carID = %d", carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);

	    SendClientMessage(playerid, COLOR_WHITE, "** ของแต่งรถถูกถอดออกทั้งหมด");
	}
	else if(!strcmp(params, "neon", true))
	{
	    if(!carData[vehicleid][carNeon])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มี Neon");
		}

		if(carData[vehicleid][carNeonEnabled])
		{
		    DestroyDynamicObject(carData[vehicleid][carObjects][0]);
		    DestroyDynamicObject(carData[vehicleid][carObjects][1]);
		}

		carData[vehicleid][carNeon] = 0;
		carData[vehicleid][carNeonEnabled] = 0;
		carData[vehicleid][carObjects][0] = INVALID_OBJECT_ID;
		carData[vehicleid][carObjects][1] = INVALID_OBJECT_ID;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carNeon = 0, carNeonEnabled = 0 WHERE id = %d", carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);

	    SendClientMessage(playerid, COLOR_WHITE, "** Neon ถูกถอดออกจากรถ");
	}

	return 1;
}

/*CMD:colorcar(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid), color1, color2;

	if(sscanf(params, "ii", color1, color2))
	{
	    return SendClientMessage(playerid, COLOR_GREY3, "[Usage]: /colorcar [color1] [color2]");
	}
	if(playerData[playerid][pSpraycans] <= 0)
	{
	    return SendClientMessage(playerid, COLOR_GREY, "You have no spraycans left.");
	}
	if(!vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_GREY, "You are not sitting inside any vehicle.");
	}
	if(carData[vehicleid][vOwnerID] > 0 && !IsVehicleOwner(playerid, vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_GREY, "This vehicle doesn't belong to you, therefore you can't respray it.");
	}
	if(!(0 <= color1 <= 255) || !(0 <= color2 <= 255))
	{
	    return SendClientMessage(playerid, COLOR_GREY, "The color specified must range between 0 and 255.");
	}

    if(carData[vehicleid][vOwnerID] > 0 || carData[vehicleid][vGang] >= 0)
	{
	    carData[vehicleid][vColor1] = color1;
	    carData[vehicleid][vColor2] = color2;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET color1 = %d, color2 = %d WHERE id = %d", color1, color2, carData[vehicleid][vID]);
	    mysql_tquery(g_SQL, query);
	}

	playerData[playerid][pSpraycans]--;

	mysql_format(g_SQL, query, sizeof(query), "UPDATE users SET spraycans = %d WHERE uid = %d", playerData[playerid][pSpraycans], playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);

	ChangeVehicleColor(vehicleid, color1, color2);
	SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s uses their spraycan to spray their vehicle a different color.", GetPlayerNameEx(playerid));

	PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
	SendClientMessageEx(playerid, COLOR_WHITE, "** Vehicle resprayed. You have %d spraycans left.", playerData[playerid][pSpraycans]);
	return 1;
}*/

/*CMD:paintcar(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid), paintjobid;

	if(sscanf(params, "i", paintjobid))
	{
	    return SendClientMessage(playerid, COLOR_GREY3, "[Usage]: /paintcar [paintjobid (-1 = none)]");
	}
	if(playerData[playerid][pSpraycans] <= 0)
	{
	    return SendClientMessage(playerid, COLOR_GREY, "You have no spraycans left.");
	}
	if(!vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_GREY, "You are not sitting inside any vehicle.");
	}
	if(carData[vehicleid][vOwnerID] > 0 && !IsVehicleOwner(playerid, vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_GREY, "This vehicle doesn't belong to you, therefore you can't respray it.");
	}
	if(!(-1 <= paintjobid <= 5))
	{
	    return SendClientMessage(playerid, COLOR_GREY, "The paintjob specified must range between -1 and 5.");
	}

    if(carData[vehicleid][vOwnerID] > 0 || carData[vehicleid][vGang] >= 0)
	{
	    carData[vehicleid][vPaintjob] = paintjobid;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET paintjob = %d WHERE id = %d", paintjobid, carData[vehicleid][vID]);
	    mysql_tquery(g_SQL, query);
	}

    playerData[playerid][pSpraycans]--;

	mysql_format(g_SQL, query, sizeof(query), "UPDATE users SET spraycans = %d WHERE uid = %d", playerData[playerid][pSpraycans], playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);

	ChangeVehiclePaintjob(vehicleid, paintjobid);
	SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s uses their spraycan to paint their vehicle a different color.", GetPlayerNameEx(playerid));

	PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
	SendClientMessageEx(playerid, COLOR_WHITE, "** Vehicle painted. You have %d spraycans left.", playerData[playerid][pSpraycans]);
	return 1;
}*/

CMD:listpvehs(playerid, params[])
{
	new targetid;

    if(playerData[playerid][pAdmin] < 3)
	{
		return 1;
	}
	if(sscanf(params, "u", targetid))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/listpvehs [ไอดี/ชื่อ]");
	}
	if(!IsPlayerConnected(targetid))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");
	}

	SendClientMessageEx(playerid, COLOR_GREEN, "|____ %s's Vehicles ____|", GetPlayerNameEx(targetid));

    for(new i = 1; i < MAX_VEHICLES; i ++)
    {
        if(IsValidVehicle(i) && carData[i][carID] > 0 && IsVehicleOwner(targetid, i))
        {
            SendClientMessageEx(playerid, COLOR_GREY2, "ไอดี: %d | รุ่น: %s", i, ReturnVehicleName(i));
		}
	}

	return 1;
}

CMD:despawnpveh(playerid, params[])
{
	new vehicleid;

    if(playerData[playerid][pAdmin] < 3)
	{
	    return 1;
	}
	if(sscanf(params, "i", vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/despawnpveh [vehicleid]");
	}
	if(!IsValidVehicle(vehicleid) || !carData[vehicleid][carOwnerID])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ต้องเป็นรถส่วนตัวเท่านั้น");
	}

	SendClientMessageEx(playerid, COLOR_WHITE, "** คุณได้ลบรถรุ่น %s ของ %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner]);
	DespawnVehicle(vehicleid);
	return 1;
}

CMD:veh(playerid, params[])
{
	new model[20], modelid, color1, color2, Float:x, Float:y, Float:z, Float:a, vehicleid;

	if(playerData[playerid][pAdmin] < 3)
	{
	    return 1;
	}
	if(sscanf(params, "s[20]I(-1)I(-1)", model, color1, color2))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/veh [ไอดียานพาหนะ/ชื่อยานพาหนะ] [สีที่ 1] [สีที่ 2]");
	}
	if((modelid = GetVehicleModelByName(model)) == 0)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ชื่อยานพาหนะ / ไอดียานพาหนะ ไม่ถูกต้อง");
	}
	if(!(-1 <= color1 <= 255) || !(-1 <= color2 <= 255))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สีต้องไม่ต่ำกว่า 0 และไม่เกิน 255");
	}

	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, a);

	vehicleid = CreateVehicle(modelid, x, y, z, a, color1, color2, -1);

	if(vehicleid == INVALID_VEHICLE_ID)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถเต็มเซิร์ฟเวอร์แล้ว");
	}

	adminVehicle[vehicleid] = true;
	vehicleFuel[vehicleid] = vehicleData[modelid - 400][vFuel];
	vehicleColors[vehicleid][0] = color1;
	vehicleColors[vehicleid][1] = color2;

	SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));

	PutPlayerInVehicle(playerid, vehicleid, 0);
	SendAdminMessage(COLOR_ADMIN, "AdmCmd: %s ได้เสกรถรุ่น %s", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid));
	SendClientMessageEx(playerid, COLOR_WHITE, "** %s (ไอดี %d) ใช้ /savevehicle ในการบันทึกลงฐานข้อมูล", ReturnVehicleName(vehicleid), vehicleid);
	return 1;
}

CMD:savevehicle(playerid, params[])
{
	new factionid, Float:x, Float:y, Float:z, Float:a, query[500];

    if(playerData[playerid][pAdmin] < 6)
	{
	    return 1;
	}
	if (!IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

	if(sscanf(params, "dd", factionid))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/savevehicle [ไอดีกลุ่ม (-1 คือประชาชน)]");
	    return 1;
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!IsValidVehicle(vehicleid) || !adminVehicle[vehicleid])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะคันนี้ไม่ได้ถูกเสกมาโดยแอดมิน");
	}
    if ((factionid < -1 || factionid >= MAX_FACTIONS) || (factionid != -1 && !factionData[factionid][factionExists]))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

    SendClientMessageEx(playerid, COLOR_WHITE, "** %s คุณได้บันทึกยานพาหนะ %s ลงฐานข้อมูลสำเร็จ", ReturnVehicleName(vehicleid));

	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);

	mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carModel, carPosX, carPosY, carPosZ, carPosA, carColor1, carColor2, carFaction) VALUES(%d, '%f', '%f', '%f', '%f', %d, %d, %d)", GetVehicleModel(vehicleid), x, y, z, a, vehicleColors[vehicleid][0], vehicleColors[vehicleid][1], factionid);
	mysql_tquery(g_SQL, query);
	mysql_tquery(g_SQL, "SELECT * FROM vehicles WHERE carID = LAST_INSERT_ID()", "Vehicle_Load", "");

	adminVehicle[vehicleid] = false;
	DestroyVehicle(vehicleid);

	return 1;
}

CMD:editvehicle(playerid, params[])
{
	new option[14], param[32], value, query[500];

	if(playerData[playerid][pAdmin] < 6)
	{
	    return 1;
	}
	if(sscanf(params, "s[14]S()[32]", option, param))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [ชื่อรายการ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} spawn, price, tickets, locked, plate, color, paintjob, neon, trunk");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} faction");
	    return 1;
	}
	if (!IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

	new vehicleid = GetPlayerVehicleID(playerid);
	if(!IsValidVehicle(vehicleid) || !carData[vehicleid][carID])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}มีข้อผิดพลาดเกิดขึ้น กรุณาติดต่อทีมพัฒนา...");
	}

	if(!strcmp(option, "spawn", true))
	{
	    new id = carData[vehicleid][carID];

	    if(carData[vehicleid][carFaction] >= 0 && GetPlayerInterior(playerid) > 0)
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถบันทึกจุดเกิดในสิ่งปลูกสร้างได้");
	    }

	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        GetVehiclePos(vehicleid, carData[vehicleid][carPosX], carData[vehicleid][carPosY], carData[vehicleid][carPosZ]);
	    	GetVehicleZAngle(vehicleid, carData[vehicleid][carPosA]);
	    }
	    else
	    {
		    GetPlayerPos(playerid, carData[vehicleid][carPosX], carData[vehicleid][carPosY], carData[vehicleid][carPosZ]);
		    GetPlayerFacingAngle(playerid, carData[vehicleid][carPosA]);
	    }

	    if(carData[vehicleid][carFaction] >= 0 || carData[vehicleid][carOwnerID] > 0)
	    {
	        carData[vehicleid][carInterior] = GetPlayerInterior(playerid);
	        carData[vehicleid][carWorld] = GetPlayerVirtualWorld(playerid);
	        SaveVehicleModifications(vehicleid);
	    }
		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPosX = '%f', carPosY = '%f', carPosZ = '%f', carPosX = '%f', carInterior = %d, carWorld = %d WHERE carID = %d", carData[vehicleid][carPosX], carData[vehicleid][carPosY], carData[vehicleid][carPosZ], carData[vehicleid][carPosA], carData[vehicleid][carInterior], carData[vehicleid][carWorld], id);
		mysql_tquery(g_SQL, query);

	 	SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ย้ายจุดเกิดยานพาหนะ %s (ไอดี %d)", ReturnVehicleName(vehicleid), vehicleid);
	 	SendClientMessage(playerid, COLOR_WHITE, "คำเตือน: ไอดียานพาหนะมีโอกาสเปลี่ยนได้ตลอดเวลา");
	 	DespawnVehicle(vehicleid, false);

		mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM vehicles WHERE carID = %d", id);
		mysql_tquery(g_SQL, query, "Vehicle_Load", "");
	}
	else if(!strcmp(option, "price", true))
	{
	    if(!carData[vehicleid][carOwnerID])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สำหรับรถส่วนตัวเท่านั้น");
		}
		if(sscanf(param, "i", value))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [price] [ราคา]");
		}

		carData[vehicleid][carPrice] = value;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPrice = %d WHERE carID = %d", carData[vehicleid][carPrice], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับราคารถรุ่น %s ของ %s (ไอดีรถ %d) ราคา %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], vehicleid, FormatMoney(value));
	}
	else if(!strcmp(option, "tickets", true))
	{
	    if(!carData[vehicleid][carOwnerID])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สำหรับรถส่วนตัวเท่านั้น");
		}
		if(sscanf(param, "i", value))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [tickets] [ราคา]");
		}

		carData[vehicleid][carTickets] = value;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carTickets = %d WHERE carID = %d", carData[vehicleid][carTickets], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับใบสั่งรถรุ่น %s ของ %s (ไอดีรถ %d) ราคาใบสั่ง %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], vehicleid, FormatMoney(value));
	}
	else if(!strcmp(option, "locked", true))
	{
		if(sscanf(param, "i", value) || !(0 <= value <= 1))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [locked] [0/1]");
		}
		if(carData[vehicleid][carFaction] >= 0)
		{
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถของกลุ่มไม่สามารถล็อคได้");
		}

		carData[vehicleid][carLocked] = value;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carLocked = %d WHERE carID = %d", carData[vehicleid][carLocked], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		SetVehicleParams(vehicleid, VEHICLE_DOORS, value);
		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับสถานะล็อครถรุ่น %s (ไอดีรถ %d) เป็น %d", ReturnVehicleName(vehicleid), vehicleid, value);
	}
	else if(!strcmp(option, "plate", true))
	{
	    if(!carData[vehicleid][carOwnerID])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สำหรับรถส่วนตัวเท่านั้น");
		}
		if(isnull(param))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [plate] [ข้อความ]");
		}

		strcpy(carData[vehicleid][carPlate], param, 32);

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPlate = '%e' WHERE carID = %d", carData[vehicleid][carPlate], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		ResyncVehicle(vehicleid);
		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับป้ายทะเบียนรถรุ่น %s ของ %s (ไอดีรถ %d) เป็นป้ายทะเบียน %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], vehicleid, param);
		SendClientMessage(playerid, COLOR_WHITE, "คำเตือน: จะส่งผลต่อเมื่อรถถูกรี");
	}
    else if(!strcmp(option, "color", true))
	{
	    new color1, color2;

		if(sscanf(param, "ii", color1, color2))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [color] [สีที่ 1] [สีที่ 2]");
		}
		if(!(0 <= color1 <= 255) || !(0 <= color2 <= 255))
		{
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สีต้องไม่ต่ำกว่า 0 และไม่เกิน 255");
		}

		carData[vehicleid][carColor1] = color1;
		carData[vehicleid][carColor2] = color2;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carColor1 = %d, carColor2 = %d WHERE carID = %d", carData[vehicleid][carColor1], carData[vehicleid][carColor2], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		ChangeVehicleColor(vehicleid, color1, color2);
		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับสีรถ %s (ไอดีรถ %d) เป็นสี %d และ %d", ReturnVehicleName(vehicleid), vehicleid, color1, color2);
	}
	else if(!strcmp(option, "paintjob", true))
	{
	    new paintjobid;

		if(sscanf(param, "i", paintjobid))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [paintjobid] [-1 คือไม่มีลาย]");
		}
		if(!(-1 <= paintjobid <= 5))
		{
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ลายต้องไม่ต่ำกว่า 0 และไม่เกิน 5");
		}
		if(carData[vehicleid][carFaction] >= 0)
		{
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถของกลุ่มไม่สามารถล็อคได้");
		}

		carData[vehicleid][carPaintjob] = paintjobid;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPaintjob = %d WHERE carID = %d", carData[vehicleid][carPaintjob], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		ChangeVehiclePaintjob(vehicleid, paintjobid);
		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับลายรถ %s (ไอดีรถ %d) เป็นลายที่ %d", ReturnVehicleName(vehicleid), vehicleid, paintjobid);
	}
	else if(!strcmp(option, "neon", true))
	{
	    if(!carData[vehicleid][carOwnerID])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สำหรับรถส่วนตัวเท่านั้น");
		}
		if(isnull(param))
		{
		    SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [neon] [ชื่อรายการ]");
		    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} none, red, blue, green, yellow, pink, white");
		    return 1;
		}

		if(!strcmp(param, "neon", true))
		{
		    SetVehicleNeon(vehicleid, 0);
		} else if(!strcmp(param, "red", true))
		{
			SetVehicleNeon(vehicleid, 18647);
		} else if(!strcmp(param, "blue", true))
		{
			SetVehicleNeon(vehicleid, 18648);
		} else if(!strcmp(param, "green", true))
		{
			SetVehicleNeon(vehicleid, 18649);
		} else if(!strcmp(param, "yellow", true))
		{
			SetVehicleNeon(vehicleid, 18650);
		} else if(!strcmp(param, "pink", true))
		{
			SetVehicleNeon(vehicleid, 18651);
		} else if(!strcmp(param, "white", true))
		{
			SetVehicleNeon(vehicleid, 18652);
		} else {
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สีไม่ถูกต้อง");
		}

		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับ Neon ให้รถรุ่น %s ของ %s (ไอดีรถ %d) เป็นสี %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], vehicleid, param);
	}
	else if(!strcmp(option, "trunk", true))
	{
	    if(!carData[vehicleid][carOwnerID])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สำหรับรถส่วนตัวเท่านั้น");
		}
		if(sscanf(param, "i", value) || !(0 <= value <= 3))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [trunk] [เลเวล (0-3)]");
		}

		carData[vehicleid][carTrunk] = value;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carTrunk = %d WHERE carID = %d", carData[vehicleid][carTrunk], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับช่องเก็บของให้รถ %s ของ %s (ไอดีรถ %d) เป็นเลเวล %d/3", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], vehicleid, value);
	}
 	else if(!strcmp(option, "faction", true))
	{
	    new factionid;

        if(carData[vehicleid][carOwnerID] > 0)
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใช้กับรถส่วนตัวได้");
		}
	    if(sscanf(param, "i", factionid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [faction] [ไอดีกลุ่ม (-1 คือไม่มีกลุ่ม)]");
	        return 1;
		}
		if ((factionid < -1 || factionid >= MAX_FACTIONS) || (factionid != -1 && !factionData[factionid][factionExists]))
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

		carData[vehicleid][carFaction] = factionid;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carFaction = %d WHERE carID = %d", carData[vehicleid][carFaction], carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);
	}
	return 1;
}

alias:removevehicle("ลบรถ")
CMD:removevehicle(playerid, params[])
{
	new query[128];

    if(playerData[playerid][pAdmin] < 6)
	{
	    return 1;
	}
	if (!IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

	new vehicleid = GetPlayerVehicleID(playerid);
	if(!IsValidVehicle(vehicleid) || !carData[vehicleid][carID])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}มีข้อผิดพลาดเกิดขึ้น กรุณาติดต่อทีมพัฒนา...");
	}

	if(carData[vehicleid][carOwnerID])
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "** คุณได้ลบรถของ %s รถรุ่น %s", carData[vehicleid][carOwner], ReturnVehicleName(vehicleid));
	} else {
		SendClientMessageEx(playerid, COLOR_WHITE, "** รถรุ่น %s (ไอดีรถ %d) ถูกลบเป็นที่เรียบร้อย", ReturnVehicleName(vehicleid), vehicleid);
	}

    mysql_format(g_SQL, query, sizeof(query), "DELETE FROM vehicles WHERE carID = %d", carData[vehicleid][carID]);
	mysql_tquery(g_SQL, query);

	DespawnVehicle(vehicleid, false);
	return 1;
}

alias:destroyveh("รีรถเสก")
CMD:destroyveh(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);

    if(playerData[playerid][pAdmin] < 3)
	{
	    return 1;
	}
	if(adminVehicle[vehicleid])
	{
	    DestroyVehicle(vehicleid);
	    adminVehicle[vehicleid] = false;
	    return SendClientMessage(playerid, COLOR_WHITE, "คุณได้ลบยานพาหนะคันนี้ออกสำเร็จ");
	}

	for(new i = 1; i < MAX_VEHICLES; i ++)
	{
	    if(adminVehicle[i])
	    {
	        DestroyVehicle(i);
	        adminVehicle[i] = false;
		}
	}

	SendAdminMessage(COLOR_ADMIN, "AdmCmd: %s ได้ลบยานพาหนะที่เสกมาออกทั้งหมด", GetPlayerNameEx(playerid));
	return 1;
}

alias:vticket("ใบสั่ง")
CMD:vticket(playerid, params[])
{
 	new amount, vehicleid;

    if(GetFactionType(playerid) != FACTION_POLICE)
    {
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่เจ้าหน้าที่ตำรวจ");
	}
	if(sscanf(params, "d", amount))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/ใบสั่ง [ราคา]");
	}
	if((vehicleid = GetNearbyVehicle(playerid)) == INVALID_VEHICLE_ID)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ภายในระยะของรถ");
	}
	if(!carData[vehicleid][carOwnerID])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มีเจ้าของ");
	}
	if(!(1000 <= amount <= 5000))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาต้องไม่ต่ำกว่า $1,000 และไม่เกิน $5,000");
	}
	if(carData[vehicleid][carTickets] >= 50000)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้โดนใบสั่งมากกว่า $50,000 แล้ว ไม่สามารถเพิ่มอีกได้");
	}

	carData[vehicleid][carTickets] += amount;
	new query[128];
	mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carTickets = %d WHERE carID = %d", carData[vehicleid][carTickets], carData[vehicleid][carID]);
	mysql_tquery(g_SQL, query);

	SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้ให้ใบสั่งรถ %s ราคา %s", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid), FormatMoney(amount));
	return 1;
}

alias:vfrisk("ตรวจค้นรถ")
CMD:vfrisk(playerid, params[])
{
    new vehicleid;

    if(GetFactionType(playerid) != FACTION_POLICE)
    {
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่เจ้าหน้าที่ตำรวจ");
	}
	if((vehicleid = GetNearbyVehicle(playerid)) == INVALID_VEHICLE_ID)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ภายในระยะของรถ");
	}
	if(!carData[vehicleid][carOwnerID])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มีเจ้าของ");
	}

    SendClientMessage(playerid, COLOR_GREEN, "|_____ ช่องเก็บของในรถ _____|");
    SendClientMessageEx(playerid, COLOR_GREY2, "เงินสด: %s/%s", FormatMoney(carData[vehicleid][carCash]), FormatMoney(GetVehicleStashCapacity(vehicleid, STASH_CAPACITY_CASH)));

	SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** เจ้าหน้าที่ %s ได้เปิดกระโปรงรถรุ่น %s เพื่อดูสิ่งของข้างใน", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid));
	return 1;
}

alias:paytickets("จ่ายค่าปรับ")
CMD:paytickets(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid), amount;
	new query[128];
	if(!vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");
	}
	if(!IsVehicleOwner(playerid, vehicleid) && playerData[playerid][pVehicleKeys] != vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(sscanf(params, "d", amount))
	{
	    return SendClientMessageEx(playerid, COLOR_WHITE, "/จ่ายค่าปรับ [ราคา] (ตอนนี้ยังค้างอยู่ %s)", FormatMoney(carData[vehicleid][carTickets]));
	}
	if(amount < 1 || amount > GetPlayerMoneyEx(playerid))
	{
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอ");
	}
	if(amount > carData[vehicleid][carTickets])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาใบสั่งไม่ถูกต้อง (ไม่แพงกว่าราคาที่ใส่)");
	}

    carData[vehicleid][carTickets] -= amount;
	GivePlayerMoneyEx(playerid, -amount);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carTickets = %d WHERE carID = %d", carData[vehicleid][carTickets], carData[vehicleid][carID]);
	mysql_tquery(g_SQL, query);

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้จ่ายค่าใบสั่งจำนวน %s ปัจจุบันเหลือ %s ที่ต้องจ่าย", FormatMoney(amount), FormatMoney(carData[vehicleid][carTickets]));
	return 1;
}

CMD:b(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/b [ข้อความ]");
	if (strlen(params) > 64)
	{
	    SendNearbyMessage(playerid, 20.0, COLOR_WHITE, "%s [%d]: (( %.64s", GetPlayerNameEx(playerid), playerid, params);
	    SendNearbyMessage(playerid, 20.0, COLOR_WHITE, "...%s ))", params[64]);
	}
	else
	{
	    SendNearbyMessage(playerid, 20.0, COLOR_WHITE, "%s [%d]: (( %s ))", GetPlayerNameEx(playerid), playerid, params);
	}
	return 1;
}

CMD:me(playerid, params[])
{

	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/me [ข้อความ]");

	if (strlen(params) > 64) {
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s %.64s", GetPlayerNameEx(playerid), params);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "...%s", params[64]);
	}
	else {
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s %s", GetPlayerNameEx(playerid), params);
	}
	return 1;
}

CMD:do(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/do [ข้อความ]");

	if (strlen(params) > 64) {
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %.64s", params);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "...%s (( %s ))", params[64], GetPlayerNameEx(playerid));
	}
	else {
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s (( %s ))", params, GetPlayerNameEx(playerid));
	}
	return 1;
}

CMD:s(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/s [ข้อความ]");

	if (strlen(params) > 64) {
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "%s ตะโกน : %.64s", GetPlayerNameEx(playerid), params);
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "...%s", params[64]);
	}
	else {
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "%s ตะโกน : %s", GetPlayerNameEx(playerid), params);
	}
	return 1;
}

CMD:m(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/m [ข้อความ]");

	if (strlen(params) > 100) {
	    SendNearbyMessage(playerid, 5.0, COLOR_YELLOW, "%s เจ้าหน้าที่ : %.100s", GetPlayerNameEx(playerid), params);
	    SendNearbyMessage(playerid, 5.0, COLOR_YELLOW, "...%s", params[100]);
	}
	else {
	    SendNearbyMessage(playerid, 5.0, COLOR_YELLOW, "%s เจ้าหน้าที่ : %s", GetPlayerNameEx(playerid), params);
	}
	return 1;
}

CMD:low(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/(l)ow [ข้อความ]");

	if (strlen(params) > 64) {
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "%s พูดเบา ๆ: %.64s", GetPlayerNameEx(playerid), params);
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "...%s", params[64]);
	}
	else {
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "%s พูดเบา ๆ: %s", GetPlayerNameEx(playerid), params);
	}
	return 1;
}

CMD:bank(playerid, params[])
{
	if (!IsPlayerInBank(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ธนาคาร");

	Dialog_Show(playerid, DIALOG_BANK, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ยอดเงินปัจจุบัน: %s", "เลือก", "ปิด", FormatMoney(playerData[playerid][pBankMoney]));
	return 1;
}


task RepeatingTimer[1000]()
{
	if (robCount > 0)
	    robCount--;

	// รัฐออนไลน์

}

CMD:robbank(playerid, params[])
{
	if (!IsPlayerInBank(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ธนาคาร");

	if (robCount > 0)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รอเวลาอีก %s วินาที ถึงปล้นได้อีกครั้ง", FormatNumber(robCount));

	new price = randomEx(1000, 3000);
	robCount = 1800;
	GivePlayerMoneyEx(playerid, price);
	GivePlayerWanted(playerid, 3);
	SendClientMessageToAllEx(COLOR_LIGHTRED, "[ปล้นธนาคาร] %s ได้ทำการปล้นธนาคารและได้รับเงินไปจำนวน %s", GetPlayerNameEx(playerid), FormatMoney(price));
	return 1;
}

CMD:agps(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	Dialog_Show(playerid, DIALOG_AGPS, DIALOG_STYLE_LIST, "[{FF00FF}รายการ GPS]", "สถานที่ทั่วไป\nงานถูกกฎหมาย\nงานผิดกฎหมาย", "เลือก", "ปิด");
	return 1;
}

CMD:gps(playerid, const params[])
{
	Dialog_Show(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "[{FF00FF}รายการ GPS]", "สถานที่ทั่วไป\nงานถูกกฎหมาย\nงานผิดกฎหมาย", "เลือก", "ปิด");
	return 1;
}
CMD:spec(playerid, params[])
{
	new userid, Float:X, Float:Y, Float:Z, Float:A;

    if (playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (!isnull(params) && !strcmp(params, "off", true))
	{
	    if (GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
			return SendClientMessage(playerid, COLOR_GREY, "คุณยังไม่ได้ส่องผู้เล่นใด ๆ");

	    PlayerSpectatePlayer(playerid, INVALID_PLAYER_ID);
	    PlayerSpectateVehicle(playerid, INVALID_VEHICLE_ID);
	    playerData[playerid][pSpawnPoint] = 2;

		SpawnPlayer(playerid);
	    TogglePlayerSpectating(playerid, false);

	    return SendClientMessage(playerid, COLOR_GREY, "คุณออกจากการส่องผู้เล่นเรียบร้อยแล้ว");
	}

	if (sscanf(params, "u", userid))
		return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /spec [playerid/name] - ตัวอย่าง \"/spec off\" เพื่อหยุดจากการส่อง");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_GREY, "ผู้เล่นที่ระบุไม่ถูกต้อง");

	GetPlayerPos(playerid, X,Y,Z);
	GetPlayerFacingAngle(playerid, A);

    playerData[playerid][pPos_X] = X;
    playerData[playerid][pPos_Y] = Y;
    playerData[playerid][pPos_Z] = Z;
    playerData[playerid][pPos_A] = A;

	SetPlayerInterior(playerid, GetPlayerInterior(userid));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(userid));

	TogglePlayerSpectating(playerid, 1);
	//UpdateplayerData(playerid);

	if (IsPlayerInAnyVehicle(userid))
	{
	    PlayerSpectateVehicle(playerid, GetPlayerVehicleID(userid));
	}
	else
	{
		PlayerSpectatePlayer(playerid, userid);
	}
	//playerData[playerid][playerid] = userid;
	SendClientMessageEx(playerid, COLOR_ADMIN, "{09F566}คุณกำลังส่องผู้เล่น %s (%d)", GetPlayerNameEx(userid), userid);
	return 1;
}

// --> ระบบอุ้ม
alias:dragged("อุ้ม")
CMD:dragged(playerid, params[])
{
	new
	    userid;

    if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/อุ้ม [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (playerData[userid][pJailTime] > 0)
	    return SendClientMessage(playerid, COLOR_RED, "* คุณไม่สามารถลากผู้เล่นที่ติดคุกอยู่ได้");

	if (GetPlayerState(userid) != PLAYER_STATE_ONFOOT)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในยานพาหนะ");

	/*if (horStats[userid] == 0)
	    return SendClientMessage(playerid, COLOR_RED, "* คุณต้องห่อศพผู้เล่นนั้นก่อน (/ห่อศพ)");*/

    if (playerData[userid][pDraggedBy] == playerid)
	{
     	SetPVarInt(userid, "DisableFPS", 1);

     	DestroyObject(CameraFirstPerson[userid]);

		SetCameraBehindPlayer(userid);
      	IsFPS[userid] = 0;

		playerData[userid][pDragged] = 0;
		playerData[userid][pDraggedBy] = INVALID_PLAYER_ID;

		SetPlayerVirtualWorld(userid, GetPlayerVirtualWorld(playerid));

		ApplyAnimation(playerid, "CARRY", "putdwn", 4.0, 0, 0, 0, 0, 0);
		RemovePlayerAttachedObject(playerid, 6);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

		//horStats[userid] = 0;

		KillTimer(playerData[userid][pDragTimer]);
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ปล่อยตัว %s วางที่พื้น", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
		return 1;
	}

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (playerData[userid][pInjured])
	{
		if (playerData[userid][pDragged])
		{
			if (playerData[userid][pDraggedBy] != playerid)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถแย่งตัวผู้เล่นที่กำลังถูกอุ้มอยู่ได้");

	     	SetPVarInt(userid, "DisableFPS", 1);

	     	DestroyObject(CameraFirstPerson[userid]);

			SetCameraBehindPlayer(userid);
	      	IsFPS[userid] = 0;

		    playerData[userid][pDragged] = 0;
		    playerData[userid][pDraggedBy] = INVALID_PLAYER_ID;

		    SetPlayerVirtualWorld(userid, GetPlayerVirtualWorld(playerid));

			ApplyAnimation(playerid, "CARRY", "putdwn", 4.0, 0, 0, 0, 0, 0);
			RemovePlayerAttachedObject(playerid, 6);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

			//horStats[userid] = 0;

		    KillTimer(playerData[userid][pDragTimer]);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ปล่อยตัว %s วางที่พื้น", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
		}
		else
		{
		    /*if (Inventory_Count(playerid, "ผ้าห่อศพ") == 0)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่มีผ้าห่อศพ");*/

		    playerData[userid][pDragged] = 1;
		    playerData[userid][pDraggedBy] = playerid;

			// --> ถือคนอุ้ม
			SetPlayerAttachedObject(playerid, 6, 3092, 6, 0.048999, 0.021000, -0.269999, -27.799999, -5.000000, 15.299999, 1.000000, 1.000000, 1.000000);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);

			ApplyAnimation(playerid, "CARRY", "liftup", 4.1, 0, 0, 0, 0, 0, 1);

			// --> ทำตัวผู้เล่นที่ถูกอุ้มให้หาย
			SetPlayerVirtualWorld(userid, userid + 1);

			// --> FPS Mode
	        SetCameraBehindPlayer(userid);
	        CameraFirstPerson[userid] = CreateDynamicObject(19300, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	    	SetPVarInt(userid, "DisableFPS", 0);
		  	SyncCamera(userid);
	      	IsFPS[userid] = 1;

	      	//Inventory_Remove(playerid, "ผ้าห่อศพ", 1);

		    playerData[userid][pDragTimer] = SetTimerEx("DragUpdate", 200, true, "dd", playerid, userid);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้อุ้มตัว %s ที่กำลังบาดเจ็บไปกับเขา", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
		}
		return 1;
	}
	else
	{
		new string100[4096];
		new string2[4096];

		format(string100, sizeof(string100), "{FFFFFF}ผู้เล่น {F8B00B}'%s' {FFFFFF}ต้องการที่จะอุ้มคุณ\nหากคุณ {F8B00B}'ยินยอม' {FFFFFF}ให้ทำการกด {F8B00B}'ตกลง'", GetPlayerNameEx(playerid));
		strcat(string2,string100);

		Dialog_Show(userid,DIALOG_DRAG,DIALOG_STYLE_MSGBOX,"{FFFFFF}[{F30768}คำขออนุญาต{FFFFFF}]",string2,"ตกลง","ยกเลิก");

		SendClientMessageEx(playerid, COLOR_YELLOW, "คุณได้ส่งคำขอ 'อุ้ม' ไปยังผู้เล่น '%s' เรียบร้อยแล้ว", GetPlayerNameEx(userid));
	}
	return 1;
}

CMD:flist(playerid, params[])
{
	new
		count,
		string[512],
		string2[512];

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	for (new i = 0; i != MAX_FACTIONS; i ++) if (factionData[i][factionExists])
	{
		format(string, sizeof(string), "%d\t{FFFFFF}({%06x}%s{FFFFFF})\n", i, factionData[i][factionColor] >>> 8, factionData[i][factionName]);
		strcat(string2, string);
		count++;
	}
	if (!count)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ไม่มีกลุ่มใด ๆ เลย");
		return 1;
	}
	format(string, sizeof(string), "ไอดี\tชื่อ\n%s", string2);
	Dialog_Show(playerid, DIALOG_UNUSED, DIALOG_STYLE_TABLIST_HEADERS, "[รายชื่อ Faction]", string, "ปิด", "");
	return 1;
}

CMD:gov(playerid, params[])
{
    new factionid = playerData[playerid][pFaction];

	if (GovCD[playerid] != 0)
		return SendClientMessageEx(playerid, COLOR_LIGHTRED, "* คุณต้องรอ %d วินาทีถึงจะใช้งานคำสั่งนี้ได้", GovCD[playerid]);

    if (playerData[playerid][pOOCSpam] > 0)
    	return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ป้องกันการ Spam ข้อความ คุณเหลือเวลาอีก %d วินาที ในการใช้คำสั่งใหม่อีกครั้ง", playerData[playerid][pOOCSpam]);

 	if (factionid == -1)
	    return SendClientMessage(playerid, COLOR_GREY, "   คุณต้องเป็นสมาชิกของฝ่ายหรือกลุ่ม");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถใช้คำสั่งนี้ได้ (Rank ขั้นต่ำ : %d)", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	if (isnull(params))
		return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/(gov)ernment (ข้อความ)");

	if (GetFactionType(playerid) == FACTION_GANG)
	{
		new string[128];

		format(string, sizeof(string), "{%s}[_____.:: ประกาศจากแก๊ง %s ::._____]", (factionid), Faction_GetName(playerid));
		SendClientMessageToAll(COLOR_WHITE, string);

		format(string, sizeof(string), "(%s) %s : %s", Faction_GetRank(playerid), GetPlayerNameEx(playerid), params);
		SendClientMessageToAll(COLOR_WHITE, string);

		playerData[playerid][pOOCSpam] = 25;

		return 1;
	}
	else
	{
		new string[128];

		format(string, sizeof(string), "{%s}[_____.:: ประกาศจากหน่วยงาน %s ::._____]", (factionid), Faction_GetName(playerid));
		SendClientMessageToAll(COLOR_WHITE, string);

		format(string, sizeof(string), "(%s) %s : %s", Faction_GetRank(playerid), GetPlayerNameEx(playerid), params);
		SendClientMessageToAll(COLOR_WHITE, string);

		playerData[playerid][pOOCSpam] = 25;

		return 1;
	}
}

alias:flocker("ตู้เซฟ")
CMD:flocker(playerid, params[])
{
	new factionid = playerData[playerid][pFaction];
	new id = FactionLocker_Nearest(playerid);

 	if (factionid == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่หน้าตู้เซฟ");

	if (id != factionid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถใช้งานตู้เซฟนี้ได้");

 	if (factionData[factionid][factionType] != FACTION_GANG)
		Dialog_Show(playerid, DIALOG_LOCKER, DIALOG_STYLE_LIST, "[ตู้เซฟ]", "คำสั่งเริ่มงาน\nตู้เสื้อผ้า\nตู้อาวุธ", "ตกลง", "ออก");

	else Dialog_Show(playerid, DIALOG_LOCKER, DIALOG_STYLE_LIST, "[ตู้เซฟ]", "ตู้เสื้อผ้า\nตู้อาวุธ", "ตกลง", "ออก");
	return 1;
}

CMD:setleader(playerid, params[])
{
	static
		userid,
		id;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ud", userid, id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/setleader [ไอดี/ชื่อ] [ไอดีกลุ่ม] (-1 คือประชาชน)");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

    if ((id < -1 || id >= MAX_FACTIONS) || (id != -1 && !factionData[id][factionExists]))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

	if (id == -1)
	{
	    ResetFaction(userid);
	    SetPlayerColor(userid, DEFAULT_COLOR);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอนผู้เล่น {33CCFF}%s {FFFFFF}ออกจากการเป็นหัวหน้ากลุ่ม", GetPlayerNameEx(userid));
    	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ถอนคุณออกจากการเป็นหัวหน้ากลุ่ม", GetPlayerNameEx(playerid));
	}
	else
	{
		SetFaction(userid, id);
		playerData[userid][pFactionRank] = factionData[id][factionRanks];
		SetFactionColor(userid);

		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้แต่งตั้งให้ผู้เล่น {33CCFF}%s {FFFFFF}เป็นหัวหน้ากลุ่ม \"%s\"", GetPlayerNameEx(userid), factionData[id][factionName]);
    	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้แต่งตั้งให้คุณเป็นหัวหน้ากลุ่ม \"%s\" ยินดีด้วย!", GetPlayerNameEx(playerid), factionData[id][factionName]);
	}
    return 1;
}

CMD:asetfaction(playerid, params[])
{
	static
		userid,
		id;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ud", userid, id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/asetfaction [ไอดี/ชื่อ] [ไอดีกลุ่ม] (-1 คือประชาชน)");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

    if ((id < -1 || id >= MAX_FACTIONS) || (id != -1 && !factionData[id][factionExists]))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

	if (id == -1)
	{
	    ResetFaction(userid);

	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอนผู้เล่น {33CCFF}%s {FFFFFF}ออกจากกลุ่มของเขา", GetPlayerNameEx(userid));
    	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ถอนคุณออกจากกลุ่มปัจจุบันของคุณ ขณะนี้คุณคือประชาชนทั่วไป!", GetPlayerNameEx(playerid));
	}
	else
	{
		SetFaction(userid, id);

		if (!playerData[userid][pFactionRank])
	    	playerData[userid][pFactionRank] = 1;

		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้แต่งตั้งให้ผู้เล่น {33CCFF}%s {FFFFFF}เป็นหนึ่งในสมาชิกของกลุ่ม \"%s\"", GetPlayerNameEx(userid), factionData[id][factionName]);
    	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้แต่งตั้งให้คุณเป็นสมาชิกของกลุ่ม \"%s\"", GetPlayerNameEx(playerid), factionData[id][factionName]);
	}
    return 1;
}

CMD:asetrank(playerid, params[])
{
	static
		userid,
		rank,
		factionid;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ud", userid, rank))
	    return SendClientMessage(playerid, COLOR_WHITE, "/asetrank [ไอดี/ชื่อ] [ยศ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if ((factionid = playerData[userid][pFaction]) == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในกลุ่มใด ๆ");

    if (rank < 1 || rank > factionData[factionid][factionRanks])
        return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยศของกลุ่มต้องไม่ต่ำกว่า 1 และไม่เกิน %d เท่านั้น", factionData[factionid][factionRanks]);

	playerData[userid][pFactionRank] = rank;

	SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ปรับยศให้ {33CCFF}%s {FFFFFF}เป็นยศ %d", GetPlayerNameEx(userid), rank);
    SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ปรับยศของคุณเป็นยศ %d", GetPlayerNameEx(playerid), rank);

    return 1;
}

CMD:toggle(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (isnull(params))
 	{
	    SendClientMessage(playerid, COLOR_WHITE, "/toggle [ชื่อรายการ]");
		SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} ooc");
		return 1;
	}
	if (!strcmp(params, "ooc", true))
	{
	    if (OOC)
	    {
			SendClientMessageToAllEx(COLOR_LIGHTRED, "แอดมิน %s ได้ปิดระบบพูดคุยผ่าน OOC ชั่วคราว", GetPlayerNameEx(playerid));
			OOC = false;
		}
		else
		{
		    SendClientMessageToAllEx(COLOR_LIGHTRED, "แอดมิน %s ได้เปิดระบบพูดคุยผ่าน OOC แล้ว", GetPlayerNameEx(playerid));
		    OOC = true;
		}
	}
	else SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} ooc");
    return 1;
}

CMD:adminvin(playerid, params[])
{
	new count;

	foreach (new i : Player) if (playerData[i][pAdmin] > 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "[ID: %d] {33CCFF}%s {00FF00}%s", i, GetPlayerNameEx(i), AdminRank(i));
		count++;
	}
	if (!count)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีแอดมินออนไลน์อยู่เลย");
		return 1;
	}
	return 1;
}

CMD:online(playerid, params[])
{
	new factionid = playerData[playerid][pFaction];

 	if (factionid == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	SendClientMessage(playerid, COLOR_SERVER, "สมาชิกที่ออนไลน์:");

	foreach (new i : Player) if (playerData[i][pFaction] == factionid)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "[ID: %d] {33CCFF}%s {FFFFFF}- %s (%d)", i, GetPlayerNameEx(i), Faction_GetRank(i), playerData[i][pFactionRank]);
	}
	return 1;
}

GetFactionOnline(type)
{
	new count;
	foreach (new i : Player) if (GetFactionType(i) == type)
	{
		count++;
	}
	return count;
}

CMD:faction(playerid, params[])
{
	new type,
		count,
		name[24];
	if (sscanf(params, "d", type))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/faction [ไอดีกลุ่ม]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ไอดีกลุ่ม]:{FFFFFF} 1. ตำรวจ 2. นักข่าว 3. แพทย์ 4. นายก");
		return 1;
	}
	if (type < 1 || type > 4)
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไอดีต้องไม่ต่ำกว่า 1 และไม่เกิน 4 เท่านั้น");
	    return 1;
	}
	switch(type)
	{
	    case 1: name = "ตำรวจ";
	    case 2: name = "นักข่าว";
	    case 3: name = "แพทย์";
	    case 4: name = "นายก";
	}
	foreach (new i : Player) if (GetFactionType(i) == type)
	{
	    count++;
		SendClientMessageEx(playerid, COLOR_WHITE, "(%s) ออนไลน์ %d", name, count);
	}
	if (!count)
	{
		SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กลุ่ม %s ไม่มีคนออนไลน์เลย", name);
		return 1;
	}
	return 1;
}

CMD:ooc(playerid, params[])
{

	if (!OOC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}OOC ถูกปิดใช้งาน");

	if (playerData[playerid][pOOCSpam] > 0)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ป้องกันการ Spam ข้อความ คุณเหลือเวลาอีก %d วินาที ในการใช้คำสั่งใหม่อีกครั้ง", playerData[playerid][pOOCSpam]);

	if (playerData[playerid][pFaction] == -1)
	{
	    if (playerData[playerid][pVip] > 0)
	    {
		    switch(playerData[playerid][pVip])
		    {
				case 1: SendClientMessageToAllEx(COLOR_VIP1, "#VIP {FFFFFF}[ประชาชน] {FFA84D}(ID:%d){FFFFFF} %s: %s", playerid, GetPlayerNameEx(playerid), params);
				case 2: SendClientMessageToAllEx(COLOR_VIP2, "#{00FFFF}PR{FFFFFF}EMI{00FFFF}UM {FFFFFF}[ประชาชน] {FFA84D}(ID:%d){FFFFFF} %s: %s", playerid, GetPlayerNameEx(playerid), params);
				case 3: SendClientMessageToAllEx(COLOR_VIP3, "#{FF0000}SU{FFFFFF}PER{FF0000}ME {FFFFFF}[ประชาชน] {FFA84D}(ID:%d){FFFFFF} %s: %s", playerid, GetPlayerNameEx(playerid), params);
				case 4: SendClientMessageToAllEx(COLOR_VIP4, "#{FF0000}You{FFFFFF}Tube {FFFFFF}[ประชาชน] {FFA84D}(ID:%d){FFFFFF} %s: %s", playerid, GetPlayerNameEx(playerid), params);
			}
			playerData[playerid][pOOCSpam] = 10;
		}
		else
		{
			SendClientMessageToAllEx(COLOR_WHITE, "[ประชาชน] {FFA84D}(ID:%d){FFFFFF} %s: %s", playerid, GetPlayerNameEx(playerid), params);
			playerData[playerid][pOOCSpam] = 10;
		}
	}
	else
	{
	    if (playerData[playerid][pVip] > 0)
	    {
		    switch(playerData[playerid][pVip])
		    {
				case 1: SendClientMessageToAllEx(COLOR_VIP1, "#VIP {%06x}[%s] {FFA84D}(ID:%d){FFFFFF} %s: %s", factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid), playerid, GetPlayerNameEx(playerid), params);
				case 2: SendClientMessageToAllEx(COLOR_VIP2, "#{00FFFF}PR{FFFFFF}EMI{00FFFF}UM {%06x}[%s] {FFA84D}(ID:%d){FFFFFF} %s: %s", factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid), playerid, GetPlayerNameEx(playerid), params);
				case 3: SendClientMessageToAllEx(COLOR_VIP3, "#{FF0000}SU{FFFFFF}PER{FF0000}ME {%06x}[%s] {FFA84D}(ID:%d){FFFFFF} %s: %s", factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid), playerid, GetPlayerNameEx(playerid), params);
				case 4: SendClientMessageToAllEx(COLOR_VIP4, "#{FF0000}You{FFFFFF}Tube {%06x}[%s] {FFA84D}(ID:%d){FFFFFF} %s: %s", factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid), playerid, GetPlayerNameEx(playerid), params);
			}
			playerData[playerid][pOOCSpam] = 10;
		}
		else
		{
			SendClientMessageToAllEx(COLOR_WHITE, "{%06x}[%s] {FFA84D}(ID:%d){FFFFFF} %s: %s", factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid), playerid, GetPlayerNameEx(playerid), params);
			playerData[playerid][pOOCSpam] = 10;
		}

	}
	playerData[playerid][pOOCSpam] = 10;
	return 1;
}
alias:ooc("o")

CMD:fac(playerid, params[])
{
    new factionid = playerData[playerid][pFaction];

 	if (factionid == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	if(GetFactionType(playerid) == FACTION_POLICE || GetFactionType(playerid) == FACTION_MEDIC || GetFactionType(playerid) == FACTION_GOV)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับกลุ่มทั่วไปเท่านั้น!");

	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "(/f)ac [ข้อความ]");

    if (playerData[playerid][pDisableFaction])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดระบบพูดคุยของกลุ่มก่อน (/tog faction)");

	SendFactionMessage(factionid, COLOR_FACTION, "(( [%s] %s {33CCFF}%s{BDF38B}: %s ))", Faction_GetName(playerid), Faction_GetRank(playerid), GetPlayerNameEx(playerid), params);
	return 1;
}
alias:fac("f")

CMD:radio(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "(/r)adio [ข้อความ]");

	if(GetFactionType(playerid) != FACTION_POLICE && GetFactionType(playerid) != FACTION_MEDIC && GetFactionType(playerid) != FACTION_GOV)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับรัฐบาลเท่านั้น!");

	if (strlen(params) > 64)
	{
		SendFactionMessageEx(GetFactionType(playerid), COLOR_SERVER, "** [วิทยุ] {33CCFF}%s{FFFF90}: %.64s", GetPlayerNameEx(playerid), params);
		SendFactionMessageEx(GetFactionType(playerid), COLOR_SERVER, "...%s **",params[64]);
	}
	else {
		SendFactionMessageEx(GetFactionType(playerid), COLOR_SERVER, "** [วิทยุ] {33CCFF}%s{FFFF90}: %s **",  GetPlayerNameEx(playerid), params);
	}
	return 1;
}
alias:radio("r")

CMD:dept(playerid, params[])
{
	if (GetFactionType(playerid) != FACTION_POLICE && GetFactionType(playerid) != FACTION_MEDIC && GetFactionType(playerid) != FACTION_GOV)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับรัฐบาลเท่านั้น!");

	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "(/d)ept [ข้อความ]");

	for (new i = 0; i != MAX_FACTIONS; i ++) if (factionData[i][factionType] == FACTION_POLICE || factionData[i][factionType] == FACTION_MEDIC || factionData[i][factionType] == FACTION_GOV)
	{
		SendFactionMessage(i, COLOR_DEPARTMENT, "[%s] %s {33CCFF}%s{F0CC00}: %s", Faction_GetName(playerid), Faction_GetRank(playerid), GetPlayerNameEx(playerid), params);
	}
	return 1;
}
alias:dept("d")

alias:fquit("ออกแก็ง")
CMD:fquit(playerid, params[])
{
	if (playerData[playerid][pFaction] == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	if (GetFactionType(playerid) == FACTION_POLICE)
	{
	    SetPlayerArmour(playerid, 0);
	    ResetPlayerWeapons(playerid);
	}
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ออกจากกลุ่ม \"%s\" (ยศล่าสุดของคุณคือ %d)", Faction_GetName(playerid), playerData[playerid][pFactionRank]);
    ResetFaction(playerid);
    return 1;
}

alias:finvite("รับคน")
CMD:finvite(playerid, params[])
{
	new
	    userid;

	if (playerData[playerid][pFaction] == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องมียศอย่างน้อยระดับ %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	if (sscanf(params, "u", userid))
	    return SendClientMessageEx(playerid, COLOR_SERVER, "/รับคน [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (playerData[userid][pFaction] == playerData[playerid][pFaction])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้เป็นส่วนหนึ่งของกลุ่มคุณอยู่แล้ว");

    if (playerData[userid][pFaction] != -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้มีกลุ่มอยู่แล้ว");

	playerData[userid][pFactionOffer] = playerid;
    playerData[userid][pFactionOffered] = playerData[playerid][pFaction];

    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ส่งคำขอให้ {33CCFF}%s {FFFFFF}ในการเข้าร่วมกลุ่ม \"%s\"", GetPlayerNameEx(userid), Faction_GetName(playerid));
    SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ส่งคำขอให้คุณในการเข้าร่วมกลุ่ม \"%s\" (พิมพ์ \"/ยอมรับ เข้าแก็ง\" ในการตอบข้อเสนอ)", GetPlayerNameEx(playerid), Faction_GetName(playerid));

	return 1;
}

alias:fremove("แตะคน")
CMD:fremove(playerid, params[])
{
    new
	    userid;

	if (playerData[playerid][pFaction] == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องมียศอย่างน้อยระดับ %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/แตะคน [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (playerData[userid][pFaction] != playerData[playerid][pFaction])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถให้ยศสมาชิกกลุ่มอื่นได้");

    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอนสมาชิก {33CCFF}%s{FFFFFF} ออกจากกลุ่ม \"%s\"", GetPlayerNameEx(userid), Faction_GetName(playerid));
    SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ถอนคุณออกจากกลุ่ม \"%s\" เสียใจด้วย!", GetPlayerNameEx(playerid), Faction_GetName(playerid));

    ResetFaction(userid);

	return 1;
}

alias:frank("เลื่อนยศ")
CMD:frank(playerid, params[])
{
    new
	    userid,
		rankid;

	if (playerData[playerid][pFaction] == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องมียศอย่างน้อยระดับ %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	if (sscanf(params, "ud", userid, rankid))
	    return SendClientMessageEx(playerid, COLOR_WHITE, "/เลื่อนยศ [ไอดี/ชื่อ] [ยศ (1-%d)]", factionData[playerData[playerid][pFaction]][factionRanks]);

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถให้ยศตัวเองได้");

	if (playerData[userid][pFaction] != playerData[playerid][pFaction])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถให้ยศสมาชิกกลุ่มอื่นได้");

	if (rankid < 0 || rankid > factionData[playerData[playerid][pFaction]][factionRanks])
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยศของกลุ่มคุณต้องไม่ต่ำกว่า 1 และไม่เกิน %d เท่านั้น", factionData[playerData[playerid][pFaction]][factionRanks]);

	playerData[userid][pFactionRank] = rankid;

    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ปรับยศให้สมาชิก {33CCFF}%s{FFFFFF} เป็นยศ %s ระดับ (%d)", GetPlayerNameEx(userid), Faction_GetRank(userid), rankid);
    SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ปรับยศให้คุณเป็นยศ %s ระดับ (%d)", GetPlayerNameEx(playerid), Faction_GetRank(userid), rankid);

	return 1;
}

CMD:fspawn(playerid, params[])
{
	new faction = playerData[playerid][pFaction];

	if (playerData[playerid][pFaction] == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หัวหน้ากลุ่ม");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1 && playerData[playerid][pAdmin] > 5)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องมียศอย่างน้อยระดับ %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	factionData[faction][SpawnX] = X;
	factionData[faction][SpawnY] = Y;
	factionData[faction][SpawnZ] = Z;
	factionData[faction][SpawnInterior] = GetPlayerInterior(playerid);
	factionData[faction][SpawnVW] = GetPlayerVirtualWorld(playerid);
	factionData[faction][factionEntrance] = playerData[playerid][pEntrance];
	Faction_Save(faction);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้บันทึกจุดเกิดของกลุ่ม %d สำเร็จ", playerData[playerid][pFaction]);
	return 1;
}

CMD:spawnpoint(playerid, params[])
{
	new point;
	new faction = playerData[playerid][pFaction];
	if(sscanf(params, "i", point)) return SendClientMessage(playerid, COLOR_WHITE, "/spawnpoint [0-2] (0 = สาธารณะ, 1 = กลุ่ม, 2 = ล่าสุดก่อนออกเกม)");

	if(point < 0 || point > 2)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}จุดเกิดมีแค่ 0-2 เท่านั้น!");

	switch(point)
	{
	    case 0:
	    {
		    SendClientMessage(playerid, COLOR_SERVER, "คุณได้เปลี่ยนจุดเกิดเป็นที่ ''สาธารณะ'' สำเร็จ");
			playerData[playerid][pSpawnPoint] = 0;
		}
	    case 1:
	    {
		    if(playerData[playerid][pFactionID] == -1)
		    {
		        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");
		        return 1;
			}
			if(factionData[faction][SpawnX] == 0 && factionData[faction][SpawnY] == 0 && factionData[faction][SpawnZ] == 0)
		    {
		        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กลุ่มของคุณไม่มีจุดเกิด");
		        return 1;
			}
			SendClientMessage(playerid, COLOR_SERVER, "คุณได้เปลี่ยนจุดเกิดเป็นที่ ''กลุ่ม'' สำเร็จ");
			playerData[playerid][pSpawnPoint] = 1;
		}
		case 2:
		{
		    SendClientMessage(playerid, COLOR_SERVER, "คุณได้เปลี่ยนจุดเกิดเป็นที่ ''ล่าสุดก่อนออกเกม'' สำเร็จ");
			playerData[playerid][pSpawnPoint] = 2;
		}
	}
	new query[90];
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerSpawn` = %d WHERE `playerID` = %d LIMIT 1",
	playerData[playerid][pSpawnPoint],
	playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);
	return 1;
}

CMD:tog(playerid, params[])
{
	if (isnull(params))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/tog [ชื่อรายการ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} faction");
	    return 1;
	}
	else if (!strcmp(params, "faction", true))
	{
	    if (playerData[playerid][pFaction] == -1)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้เป็นสมาชิกของกลุ่มใด ๆ");

	    if (!playerData[playerid][pDisableFaction])
	    {
	        playerData[playerid][pDisableFaction] = 1;
			SendClientMessage(playerid, COLOR_SERVER, "คุณได้ปิดระบบสื่อสารกลุ่มของคุณ (/tog faction อีกครั้งในการเปิดใหม่)");
		}
		else
		{
  			playerData[playerid][pDisableFaction] = 0;
     		SendClientMessage(playerid, COLOR_SERVER, "คุณได้เปิดระบบสื่อสารกลุ่มของคุณ");
		}
	}
	return 1;
}

CMD:editfaction(playerid, params[])
{
	static
	    id,
	    type[24],
	    string[128];

	if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ds[24]S()[128]", id, type, string))
 	{
	 	SendClientMessage(playerid, COLOR_WHITE, "/editfaction [ไอดีกลุ่ม] [ชื่อรายการ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} name, color, type, models, locker, ranks, maxranks");
		return 1;
	}
	if ((id < 0 || id >= MAX_FACTIONS) || !factionData[id][factionExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

    if (!strcmp(type, "name", true))
	{
	    new name[32];

	    if (sscanf(string, "s[32]", name))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editfaction [ไอดีกลุ่ม] [ชื่อรายการ] [ชื่อใหม่]");

	    format(factionData[id][factionName], 32, name);

	    Faction_Save(id);
		SendAdminMessage(COLOR_ADMIN, "[ADMIN]: %s ได้เปลี่ยนชื่อของกลุ่มไอดี %d เป็นชื่อ \"%s\"", GetPlayerNameEx(playerid), id, name);
	}
	else if (!strcmp(type, "maxranks", true))
	{
	    new ranks;

	    if (sscanf(string, "d", ranks))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editfaction [ไอดีกลุ่ม] [ชื่อรายการ] [ความจุของยศ 1-15]");

		if (ranks < 1 || ranks > 15)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของยศต้องไม่ต่ำกว่า 1 และไม่เกิน 15 เท่านั้น");

	    factionData[id][factionRanks] = ranks;

	    Faction_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับความจุของยศกลุ่มไอดี %d เป็น %d", GetPlayerNameEx(playerid), id, ranks);
	}
	else if (!strcmp(type, "ranks", true))
	{
	    Faction_ShowRanks(playerid, id);
	}
	else if (!strcmp(type, "color", true))
	{
	    new color;

	    if (sscanf(string, "h", color))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editfaction [ไอดีกลุ่ม] [ชื่อรายการ] [สีรูปแบบ hex]");

	    factionData[id][factionColor] = color;
	    Faction_Update(id);

	    Faction_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับสีเป็น {%06x}|||||{FF0080} ของกลุ่มไอดี %d", GetPlayerNameEx(playerid), color >>> 8, id);
	}
	else if (!strcmp(type, "type", true))
	{
	    new typeint;

	    if (sscanf(string, "d", typeint))
     	{
		 	SendClientMessage(playerid, COLOR_WHITE, "/editfaction [ไอดีกลุ่ม] [ชื่อรายการ] [รูปแบบกลุ่ม]");
            SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบกลุ่ม]:{FFFFFF} 1: Police | 2: News | 3: Medical | 4: Government | 5: Gang | 6: Mechanic");
            return 1;
		}
		if (typeint < 1 || typeint > 6)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบกลุ่มมีแค่ 1-5 เท่านั้น");

	    factionData[id][factionType] = typeint;

	    Faction_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับรูปแบบกลุ่มให้กลุ่มไอดี %d เป็นรูปแบบที่ %d", GetPlayerNameEx(playerid), id, typeint);
	}
	else if (!strcmp(type, "models", true))
	{
		playerData[playerid][pFactionEdit] = id;
	    Dialog_Show(playerid, DIALOG_FACTIONSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "แก้ไขสกิน", "ตกลง", "ออก");
	}
	else if (!strcmp(type, "locker", true))
	{
        playerData[playerid][pFactionEdit] = id;
		Dialog_Show(playerid, DIALOG_FACTIONLOCKER, DIALOG_STYLE_LIST, "[ตู้เซฟ]", "ปรับตำแหน่งตู้เซฟ", "ยืนยัน", "ออก");
	}
	return 1;
}

CMD:createfaction(playerid, params[])
{
	static
	    id = -1,
		type,
		name[32];

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ds[32]", type, name))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/createfaction [รูปแบบกลุ่ม] [ชื่อกลุ่ม]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบกลุ่ม]:{FFFFFF} 1: Police | 2: News | 3: Medical | 4: Government | 5: Gang | 6: Mechanic");
		return 1;
	}
	if (type < 1 || type > 6)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบกลุ่มมีแค่ 1-6 เท่านั้น");

	id = Faction_Create(name, type);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกลุ่มในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างกลุ่มรูปแบบที่ %d ชื่อกลุ่ม %s ไอดีกลุ่ม %d", type, name, id);
	return 1;
}

CMD:deletefaction(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deletefaction [ไอดีกลุ่ม]");

	if ((id < 0 || id >= MAX_FACTIONS) || !factionData[id][factionExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

	Faction_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบกลุ่มไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:createentrance(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (isnull(params) || strlen(params) > 32)
	    return SendClientMessage(playerid, COLOR_WHITE, "/createentrance [ชื่อประตู]");

	new id = Entrance_Create(playerid, params);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของประตูในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

    SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างประตูไอดี %d ชื่อ %s", id, params);
	return 1;
}

CMD:editentrance(playerid, params[])
{
	static
	    id,
	    type[24],
	    string[128];

	if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ds[24]S()[128]", id, type, string))
 	{
	 	SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} location, interior, password, name, locked, mapicon, type, virtual, faction");
		return 1;
	}
	if ((id < 0 || id >= MAX_ENTRANCES) || !entranceData[id][entranceExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีประตูนี้อยู่ในฐานข้อมูล");

	if (!strcmp(type, "location", true))
	{
	    GetPlayerPos(playerid, entranceData[id][entrancePosX], entranceData[id][entrancePosY], entranceData[id][entrancePosZ]);
		GetPlayerFacingAngle(playerid, entranceData[id][entrancePosA]);

		entranceData[id][entranceExterior] = GetPlayerInterior(playerid);
		entranceData[id][entranceExteriorVW] = GetPlayerVirtualWorld(playerid);

		Entrance_Refresh(id);
		Entrance_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ย้ายตำแหน่งประตูไอดี %d", GetPlayerNameEx(playerid), id);
	}
	else if (!strcmp(type, "interior", true))
	{
	    GetPlayerPos(playerid, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]);
		GetPlayerFacingAngle(playerid, entranceData[id][entranceIntA]);

		entranceData[id][entranceInterior] = GetPlayerInterior(playerid);

        foreach (new i : Player)
		{
			if (playerData[i][pEntrance] == entranceData[id][entranceID])
			{
				SetPlayerPos(i, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]);
				SetPlayerFacingAngle(i, entranceData[id][entranceIntA]);

				SetPlayerInterior(i, entranceData[id][entranceInterior]);
				SetCameraBehindPlayer(i);
			}
		}
		Entrance_Refresh(id);
		Entrance_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับด้านในประตูไอดี %d", GetPlayerNameEx(playerid), id);
	}
	else if (!strcmp(type, "virtual", true))
	{
	    new worldid;

	    if (sscanf(string, "d", worldid))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [ชาแนลโลก]");

	    entranceData[id][entranceWorld] = worldid;

		foreach (new i : Player) if (Entrance_Inside(i) == id)
		{
			SetPlayerVirtualWorld(i, worldid);
		}
		Entrance_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับชาแนลโลกให้ประตูไอดี %d เป็นชาแนลโลก %d", GetPlayerNameEx(playerid), id, worldid);
	}
	else if (!strcmp(type, "mapicon", true))
	{
	    new icon;

	    if (sscanf(string, "d", icon))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [ตัวเลข map icon]");

		if (icon < 0 || icon > 63)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไอดีต้องไม่ต่ำกว่า 0 และไม่เกิน 63 เท่านั้น อ่านเพิ่มเติม > \"wiki.sa-mp.com/wiki/MapIcons\".");

	    entranceData[id][entranceIcon] = icon;

	    Entrance_Refresh(id);
	    Entrance_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับไอดี Map icon ให้ประตูไอดี %d เป็น Map icon %d", GetPlayerNameEx(playerid), id, icon);
	}
	else if (!strcmp(type, "password", true))
	{
	    new password;

	    if (sscanf(string, "d", password))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [รหัสผ่าน] (ใช้ ''0'' ในการปิดใช้งานรหัสผ่าน)");

		if (password == 0)
		{
			entranceData[id][entrancePass] = 0;
		}
		else {
			if(password < 1000 || password > 9999)
			    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รหัสผ่านต้องไม่ต่ำกว่า 4 หลัก");

		    entranceData[id][entrancePass] = password;
		}
	    Entrance_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ตั้งรหัสผ่านให้ประตูไอดี %d โดยใช้รหัสผ่าน \"%d\"", GetPlayerNameEx(playerid), id, password);
	}
	else if (!strcmp(type, "locked", true))
	{
	    new locked;

	    if (sscanf(string, "d", locked))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [0/1]");

		if (locked < 0 || locked > 1)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}0. ปลดล็อค | 1. ล็อค");

	    entranceData[id][entranceLocked] = locked;
	    Entrance_Save(id);

	    if (locked)
		{
			SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ล็อคประตูไอดี %d", GetPlayerNameEx(playerid), id);
		} else {
		    SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปลดล็อคประตูไอดี %d", GetPlayerNameEx(playerid), id);
		}
	}
	else if (!strcmp(type, "name", true))
	{
	    new name[32];

	    if (sscanf(string, "s[32]", name))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [ชื่อที่ต้องการเปลี่ยน]");

	    format(entranceData[id][entranceName], 32, name);

	    Entrance_Refresh(id);
	    Entrance_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้เปลี่ยนชื่อประตูไอดี %d เป็นชื่อ \"%s\"", GetPlayerNameEx(playerid), id, name);
	}
	else if (!strcmp(type, "type", true))
	{
	    new typeint;

	    if (sscanf(string, "d", typeint))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [รูปแบบที่ต้องการ]");
			SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบที่ต้องการ]:{FFFFFF} 0: None | 1: DMV | 2: Bank | 3: Warehouse | 4: City Hall | 5: Shooting Range");
			return 1;
		}
		if (typeint < 0 || typeint > 5)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบต้องไม่ต่ำกว่า 0 และไม่เกิน 4 เท่านั้น");

        entranceData[id][entranceType] = typeint;

        switch (typeint)
		{
            case 1: {
            	entranceData[id][entranceIntX] = -2029.5531;
           		entranceData[id][entranceIntY] = -118.8003;
            	entranceData[id][entranceIntZ] = 1035.1719;
            	entranceData[id][entranceIntA] = 0.0000;
				entranceData[id][entranceInterior] = 3;
            }
			case 2: {
            	entranceData[id][entranceIntX] = 1456.1918;
           		entranceData[id][entranceIntY] = -987.9417;
            	entranceData[id][entranceIntZ] = 996.1050;
            	entranceData[id][entranceIntA] = 90.0000;
				entranceData[id][entranceInterior] = 6;
            }
            case 3: {
                entranceData[id][entranceIntX] = 1291.8246;
           		entranceData[id][entranceIntY] = 5.8714;
            	entranceData[id][entranceIntZ] = 1001.0078;
            	entranceData[id][entranceIntA] = 180.0000;
				entranceData[id][entranceInterior] = 18;
			}
			case 4: {
			    entranceData[id][entranceIntX] = 390.1687;
           		entranceData[id][entranceIntY] = 173.8072;
            	entranceData[id][entranceIntZ] = 1008.3828;
            	entranceData[id][entranceIntA] = 90.0000;
				entranceData[id][entranceInterior] = 3;
			}
			case 5: {
			    entranceData[id][entranceIntX] = 304.0165;
           		entranceData[id][entranceIntY] = -141.9894;
            	entranceData[id][entranceIntZ] = 1004.0625;
            	entranceData[id][entranceIntA] = 90.0000;
				entranceData[id][entranceInterior] = 7;
			}
		}
		foreach (new i : Player)
		{
			if (playerData[i][pEntrance] == entranceData[id][entranceID])
			{
				SetPlayerPos(i, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]);
				SetPlayerFacingAngle(i, entranceData[id][entranceIntA]);

				SetPlayerInterior(i, entranceData[id][entranceInterior]);
				SetCameraBehindPlayer(i);
			}
		}
	    Entrance_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับรูปแบบประตูไอดี %d เป็นรูปแบบ %d", GetPlayerNameEx(playerid), id, typeint);
	}
	else if (!strcmp(type, "faction", true))
	{
	    new factionid;

	    if (sscanf(string, "d", factionid))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [ไอดีกลุ่ม]");

		if ((factionid < 0 || factionid >= MAX_FACTIONS) || !factionData[factionid][factionExists])
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

	    entranceData[id][entranceFaction] = factionid;

	    Entrance_Refresh(id);
	    Entrance_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้เปลี่ยนประตู %d เป็นของกลุ่ม \"%s\"", GetPlayerNameEx(playerid), id, factionData[factionid][factionName]);
	}
	return 1;
}

CMD:deleteentrance(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deleteentrance [ไอดีประตู]");

	if ((id < 0 || id >= MAX_ENTRANCES) || !entranceData[id][entranceExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีประตูนี้อยู่ในฐานข้อมูล");

	Entrance_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบประตูไอดี %d", id);
	return 1;
}

CMD:createarrest(playerid, params[])
{
	static
	    id = -1,
		Float:x,
		Float:y,
		Float:z;

	GetPlayerPos(playerid, x, y, z);

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	id = Arrest_Create(x, y, z, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของพื้นที่จับกุมในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างพื้นที่จับกุมขึ้นมาใหม่ ไอดี: %d", id);
	return 1;
}

CMD:deletearrest(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deletearrest [ไอดี]");

	if ((id < 0 || id >= MAX_ARREST) || !arrestData[id][arrestExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีพื้นที่จับกุมนี้อยู่ในฐานข้อมูล");

	Arrest_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบพื้นที่จับกุมไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:creategps(playerid, params[])
{
	static
	    id = -1,
		Float:x,
		Float:y,
		Float:z,
		gpsname[32],
		type;

	GetPlayerPos(playerid, x, y, z);

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ds[32]", type, gpsname))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/creategps [รูปแบบ GPS] [ชื่อสถานที่]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบ GPS]:{FFFFFF} 1. สถานที่ทั่วไป 2. งานถูกกฎหมาย 3. งานผิดกฎหมาย 4. Event");
	    return 1;
	}
	if (type < 1 || type > 4)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบของ GPS ต้องไม่ต่ำกว่า 1 และไม่เกิน 4 เท่านั้น");

	id = GPS_Create(type, gpsname, x, y, z);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของ GPS ในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้าง GPS ขึ้นมาใหม่ รูปแบบ GPS: %d, ชื่อสถานที่: %s, ไอดี: %d", type, gpsname, id);
	return 1;
}

CMD:deletegps(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deletegps [ไอดี]");

	if ((id < 0 || id >= MAX_GPS) || !gpsData[id][gpsExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดี GPS นี้อยู่ในฐานข้อมูล");

	GPS_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบ GPS ไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:editgps(playerid, params[])
{
	static
	    id,
	    type[24],
	    string[128];

	if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ds[24]S()[128]", id, type, string))
 	{
	 	SendClientMessage(playerid, COLOR_WHITE, "/editgps [ไอดี] [ชื่อรายการ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} name, type, location");
		return 1;
	}
	if ((id < 0 || id >= MAX_GPS) || !gpsData[id][gpsExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดี GPS นี้อยู่ในฐานข้อมูล");

	if (!strcmp(type, "location", true))
	{
	    GetPlayerPos(playerid, gpsData[id][gpsPosX], gpsData[id][gpsPosY], gpsData[id][gpsPosZ]);

		GPS_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ย้ายตำแหน่ง GPS ไอดี %d (%s)", GetPlayerNameEx(playerid), id, gpsData[id][gpsName]);
	}
	else if (!strcmp(type, "name", true))
	{
	    new name[32];

	    if (sscanf(string, "s[32]", name))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editgps [ไอดี] [ชื่อรายการ] [ชื่อที่ต้องการเปลี่ยน]");

	    format(gpsData[id][gpsName], 32, name);

	    GPS_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้เปลี่ยนชื่อ GPS ไอดี %d เป็นชื่อ \"%s\"", GetPlayerNameEx(playerid), id, name);
	}
	else if (!strcmp(type, "type", true))
	{
	    new typeint;

	    if (sscanf(string, "d", typeint))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "/editgps [ไอดี] [ชื่อรายการ] [รูปแบบที่ต้องการ]");
			SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบที่ต้องการ]:{FFFFFF} 1: สถานที่ทั่วไป | 2: งานถูกกฎหมาย | 3: งานผิดกฎหมาย | 4: Event");
			return 1;
		}
		if (typeint < 1 || typeint > 4)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบของ GPS ต้องไม่ต่ำกว่า 1 และไม่เกิน 4 เท่านั้น");

        gpsData[id][gpsType] = typeint;

	    GPS_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับรูปแบบ GPS ไอดี %d (%s) เป็นรูปแบบ %d", GetPlayerNameEx(playerid), id, gpsData[id][gpsName], typeint);
	}
	return 1;
}

CMD:createatm(playerid, params[])
{
	static
	    id = -1;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	id = ATM_Create(playerid);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของ ATM ในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้าง ตู้ ATM  ขึ้นมาใหม่ ไอดี: %d", id);
	return 1;
}

CMD:deleteatm(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deleteatm [ไอดี]");

	if ((id < 0 || id >= MAX_ATM_MACHINES) || !atmData[id][atmExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดี ATM นี้อยู่ในฐานข้อมูล");

	ATM_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบ ตู้ ATM ไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:createshop(playerid, params[])
{
	static
		type;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", type))
		return SendClientMessage(playerid, COLOR_WHITE, "/createshop [รูปแบบ] 1 = ร้านขายของชำ 2 = ร้านขายเสื้อผ้า 3 = แฟชั่น");
    
	SendClientMessage(playerid, COLOR_WHITE, "4 = ที่แต่งงาน");

	static
	    id = -1,
		Float:x,
		Float:y,
		Float:z;

	GetPlayerPos(playerid, x, y, z);

    if (type < 1 || type > 4)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบต้องไม่ต่ำกว่า 1 และไม่มากกว่า 4 เท่านั้น");

	id = Shop_Create(x, y, z, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid), type);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของร้านค้าในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างร้านค้าขึ้นมาใหม่ ไอดี: %d", id);
	return 1;
}

CMD:deleteshop(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deleteshop [ไอดี]");

	if ((id < 0 || id >= MAX_SHOPS) || !shopData[id][shopExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีร้านค้านี้อยู่ในฐานข้อมูล");

	Shop_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบร้านค้าไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:createpump(playerid, params[])
{
	static
	    id = -1,
		Float:x,
		Float:y,
		Float:z;

	GetPlayerPos(playerid, x, y, z);

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (GetPlayerInterior(playerid) != 0)
	    return 1;

	id = Pump_Create(x, y, z);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของปั้มน้ำมันในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างปั้มน้ำมันขึ้นมาใหม่ ไอดี: %d", id);
	return 1;
}

CMD:deletepump(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deletepump [ไอดี]");

	if ((id < 0 || id >= MAX_PUMPS) || !pumpData[id][pumpExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีปั้มน้ำมันนี้อยู่ในฐานข้อมูล");

	Pump_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบปั้มน้ำมันไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:creategarage(playerid, params[])
{
	static
	    id = -1,
		Float:x,
		Float:y,
		Float:z;

	GetPlayerPos(playerid, x, y, z);

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (GetPlayerInterior(playerid) != 0)
	    return 1;

	id = Garage_Create(x, y, z);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของอู่ซ่อมรถในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างอู่ซ่อมรถขึ้นมาใหม่ ไอดี: %d", id);
	return 1;
}

CMD:deletegarage(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deletegarage [ไอดี]");

	if ((id < 0 || id >= MAX_GARAGES) || !garageData[id][garageExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีอู่ซ่อมรถนี้อยู่ในฐานข้อมูล");

	Garage_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบอู่ซ่อมรถไอดี %d ออกสำเร็จ", id);
	return 1;
}

alias:engine("สตาร์ทรถ")
CMD:en(playerid, params[])
{
    new vehicleid = GetPlayerVehicleID(playerid);
    new Float:vehiclehealth;
    GetVehicleHealth(vehicleid, vehiclehealth);

	if (!IsEngineVehicle(vehicleid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะคันนี้ไม่มีเครื่องยนต์");

	if (vehiclehealth <= 350)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะคันนี้มีความเสียหายมากเกินไป ไม่สามารถสตาร์ทได้");

	if (vehicleFuel[vehicleid] <= 0)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มีน้ำมันเลย");

	if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
		switch (GetEngineStatus(vehicleid))
		{
		    case false:
		    {
			    SetEngineStatus(vehicleid, true);
		        SendClientMessage(playerid, COLOR_WHITE, "คุณได้บิดกุญแจเพื่อ{00FF00}สตาร์ท{FFFFFF}เครื่องยนต์");
			}
			case true:
			{
			    SetEngineStatus(vehicleid, false);
		        SendClientMessage(playerid, COLOR_WHITE, "คุณได้บิดกุญแจเพื่อ{FF0000}ดับ{FFFFFF}เครื่องยนต์");
			}
		}
	}
	return 1;
}

alias:givemoney("เสกเงิน")
CMD:givemoney(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new userid, amount;
        if(sscanf(params, "ud", userid, amount))
			return SendClientMessage(playerid, COLOR_WHITE, "/givemoney [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        GivePlayerMoneyEx(userid, amount);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ให้เงินกับ %s(%d) จำนวน %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, FormatMoney(amount));
	}
    return 1;
}

CMD:setmoney(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new userid, amount;
        if(sscanf(params, "ud", userid, amount))
			return SendClientMessage(playerid, COLOR_WHITE, "/setmoney [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        SetPlayerMoneyEx(userid, amount);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเงินให้กับ %s(%d) เหลือจำนวน %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, FormatMoney(amount));
	}
    return 1;
}

CMD:hp(playerid, params[])
{
    if(playerData[playerid][pAdmin] > 0)
    {
    	new userid, Float:hp;
        if(sscanf(params, "uf", userid, hp))
			return SendClientMessage(playerid, COLOR_WHITE, "/hp [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        SetPlayerHealth(userid, hp);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเลือดให้กับ %s(%d) จำนวน %.0f", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, hp);
	}
    return 1;
}

CMD:hpall(playerid, params[])
{
    if(playerData[playerid][pAdmin] > 4)
    {
    	new Float:hp;
        if(sscanf(params, "f", hp))
			return SendClientMessage(playerid, COLOR_WHITE, "/hpall [จำนวน]");

		foreach(new i : Player)
		{
        	SetPlayerHealth(i, hp);
		}

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเลือดให้กับทุกคนในเซิร์ฟเวอร์จำนวน %.0f", GetPlayerNameEx(playerid), hp);
    }
    return 1;
}

CMD:setarmor(playerid, params[])
{
    if(playerData[playerid][pAdmin] > 0)
    {
    	new userid, Float:armor;
        if(sscanf(params, "uf", userid, armor))
			return SendClientMessage(playerid, COLOR_WHITE, "/setarmor [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        SetPlayerArmour(userid, armor);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเกราะให้กับ %s(%d) จำนวน %.0f", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, armor);
	}
    return 1;
}

CMD:setarmorall(playerid, params[])
{
    if(playerData[playerid][pAdmin] > 4)
    {
    	new Float:armor;
        if(sscanf(params, "f", armor))
			return SendClientMessage(playerid, COLOR_WHITE, "/setarmorall [จำนวน]");

		foreach(new i : Player)
		{
        	SetPlayerArmour(i, armor);
		}

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเกราะให้กับทุกคนในเซิร์ฟเวอร์จำนวน %.0f", GetPlayerNameEx(playerid), armor);
    }
    return 1;
}

CMD:setadmindev(playerid, params[])
{
    if(playerData[playerid][pAdmin] > 127)
    {
    	new userid, level;
        if(sscanf(params, "ud", userid, level))
			return SendClientMessage(playerid, COLOR_WHITE, "/setadmin [ไอดี/ชื่อ] [เลเวล]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        playerData[userid][pAdmin] = level;

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเลเวลแอดมินให้กับ %s(%d) เป็นแอดมินเลเวล %d", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, level);
	}
    return 1;
}

alias:twithdraw("เบิกเงิน")
CMD:twithdraw(playerid, params[])
{
	static
	    amount;

	if (GetFactionType(playerid) != FACTION_GOV)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "d", amount))
		return SendClientMessageEx(playerid, COLOR_WHITE, "/เบิกเงิน [จำนวน] (%s เงินปัจจุบัน)", FormatMoney(g_TaxVault));

	if (!IsPlayerInCityHall(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ทำการรัฐบาล");

	if (amount < 1 || amount > g_TaxVault)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เงินกองคลังมีไม่เพียงพอ");

    if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีความสามารถในการเบิกเงินกองคลัง ระดับที่ต้องการคือ: %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	Tax_AddMoney(-amount);

	GivePlayerMoneyEx(playerid, amount);
	SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้เบิกเงินกองคลังจำนวน %s ปัจจุบันเหลืออยู่ %s", FormatMoney(amount), FormatMoney(g_TaxVault));
	return 1;
}

alias:tdeposit("ฝากเงินเข้ากองคลัง")
CMD:tdeposit(playerid, params[])
{
	static
	    amount;

	if (GetFactionType(playerid) != FACTION_GOV)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "d", amount))
		return SendClientMessageEx(playerid, COLOR_WHITE, "/ฝากเงินเข้ากองคลัง [จำนวน] (%s เงินปัจจุบัน)", FormatMoney(g_TaxVault));

    if (!IsPlayerInCityHall(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ทำการรัฐบาล");

	if (amount < 1 || amount > GetPlayerMoneyEx(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่พอในการฝาก");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีความสามารถในการเบิกเงินกองคลัง ระดับที่ต้องการคือ: %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	Tax_AddMoney(amount);

	GivePlayerMoneyEx(playerid, -amount);
	SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ฝากเงินเข้ากองคลังจำนวน %s ปัจจุบันเหลืออยู่ %s", FormatMoney(amount), FormatMoney(g_TaxVault));

	return 1;
}

CMD:suspect(playerid, params[])
{
    new
	    userid,
		crime[32];

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "us[32]", userid, crime))
	    return SendClientMessage(playerid, COLOR_WHITE, "(/su)spect [ไอดี/ชื่อ] [ข้อหา]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถยัดดาวให้ตัวเองได้");

	if (GetFactionType(userid) == FACTION_POLICE || GetFactionType(userid) == FACTION_MEDIC || GetFactionType(userid) == FACTION_GOV)
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถยัดดาวให้กับหน่วยงานรัฐได้");

    GivePlayerWanted(userid, 1);

	SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ยัดคดีความให้กับ {33CCFF}%s {FFFFFF}ข้อหา: %s", GetPlayerNameEx(userid), crime);
	SendClientMessageEx(userid, COLOR_WHITE, "เจ้าหน้าที่ {33CCFF}%s {FFFFFF}ได้ยัดคดีให้คุณ ข้อหา: %s", GetPlayerNameEx(playerid), crime);
    return 1;
}
alias:suspect("1")

CMD:clearwd(playerid, params[])
{
    new
	    userid;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/clearwd [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถเคลียดาวให้ตัวเองได้");

	if (GetPlayerWantedLevelEx(userid) == 0)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่มีคดีติดตัวเลย");

    ResetPlayerWantedLevelEx(userid);

	SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ลบล้างคดีให้กับ {33CCFF}%s", GetPlayerNameEx(userid));
	SendClientMessageEx(userid, COLOR_WHITE, "เจ้าหน้าที่ {33CCFF}%s {FFFFFF}ได้ลบล้างคดีทั้งหมดให้คุณ", GetPlayerNameEx(playerid));
    return 1;
}
alias:clearwd("0")

CMD:wdlist(playerid, params[])
{
    new
	    count;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	foreach(new i : Player)
	{
	    if (GetPlayerWantedLevelEx(i) > 0)
	    {
	        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "ID: %d: %s {FFFFFF}%d ดาว", i, GetPlayerNameEx(i), GetPlayerWantedLevelEx(i));
	        count++;
	    }
	}
	if (!count)
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ขณะนี้ไม่มีใครมีคดีติดตัวเลย");
	    return 1;
	}
    return 1;
}
alias:wdlist("6")

CMD:detain(playerid, params[])
{
	new
		userid,
		vehicleid = GetNearestVehicle(playerid);

	if (GetFactionType(playerid) != FACTION_POLICE && GetFactionType(playerid) != FACTION_MEDIC && GetFactionType(playerid) != FACTION_GOV)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/cuff [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ ยะระ 5 เมตร์");

   /* if (!playerData[userid][pCuffed])
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้ถูกใส่กุญแจมืออยู่");*/

	if (vehicleid == INVALID_VEHICLE_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ใกล้รถคันไหนเลย");

	if (GetVehicleMaxSeats(vehicleid) < 1)
  	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถนำตัวขึ้นรถคันนี้ได้");

	if (IsPlayerInVehicle(userid, vehicleid))
	{
		TogglePlayerControllable(userid, 1);

		RemoveFromVehicle(userid);
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เปิดประตูและดึง %s ลงมาจากยานพาหนะ", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	}
	else
	{
		new seatid = GetAvailableSeat(vehicleid, 2);

		if (seatid == -1)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ที่นั่งเต็มแล้ว");

		TogglePlayerControllable(userid, 0);

		StopDragging(userid);
		PutPlayerInVehicle(userid, vehicleid, seatid);

		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เปิดประตูและดึง %s ขึ้นยานพาหนะ", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	}
	return 1;
}
alias:detain("5")

CMD:cuff(playerid, params[])
{
    new
	    userid;

	if (GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/cuff [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใส่กุญแจมือให้ตัวเองได้");

	if (GetPlayerState(userid) != PLAYER_STATE_ONFOOT)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในยานพาหนะ");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

    if (playerData[userid][pCuffed])
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ถูกใส่กุญแจมืออยู่");

	static
	    string[64];

    playerData[userid][pCuffed] = 1;

    TogglePlayerControllable(userid, false);
    SetPlayerSpecialAction(userid, SPECIAL_ACTION_CUFFED);

	format(string, sizeof(string), "You've been ~r~cuffed~w~ by %s", GetPlayerNameEx(playerid));
    GameTextForPlayer(userid, string, 5000, 1);

    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ใส่กุญแจมือผู้ต้องสงสัย %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
    return 1;
}
alias:cuff("2")

CMD:uncuff(playerid, params[])
{
    new
	    userid;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/uncuff [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถปลดกุญแจมือให้ตัวเองได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

    if (!playerData[userid][pCuffed])
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้ถูกใส่กุญแจมือ");

	static
	    string[64];

    playerData[userid][pCuffed] = 0;

    TogglePlayerControllable(userid, true);
    SetPlayerSpecialAction(userid, SPECIAL_ACTION_NONE);

	format(string, sizeof(string), "You've been ~g~uncuffed~w~ by %s", GetPlayerNameEx(playerid));
    GameTextForPlayer(userid, string, 5000, 1);

    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ถอดกุญแจมือให้ผู้ต้องสงสัย %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
    return 1;
}
alias:uncuff("3")

CMD:drag(playerid, params[])
{
	new
	    userid;

	if (GetFactionType(playerid) != FACTION_POLICE && GetFactionType(playerid) != FACTION_GOV)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

    if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/drag [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถลากตัวเองได้");

	if (GetPlayerState(userid) != PLAYER_STATE_ONFOOT)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในยานพาหนะ");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (playerData[userid][pDragged])
	{
	    playerData[userid][pDragged] = 0;
	    playerData[userid][pDraggedBy] = INVALID_PLAYER_ID;

	    KillTimer(playerData[userid][pDragTimer]);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ปล่อยตัวผู้ต้องหา %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	}
	else
	{
	    playerData[userid][pDragged] = 1;
	    playerData[userid][pDraggedBy] = playerid;

	    playerData[userid][pDragTimer] = SetTimerEx("DragUpdate", 200, true, "dd", playerid, userid);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้พาตัวผู้ต้องหา %s ไปกับเขา", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	}
	return 1;
}
alias:drag("4")

CMD:arrest(playerid, params[])
{
	static 
	    userid,
		time,
		money,
		crime[32];

	new id = Arrest_Nearest(playerid);

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "ddds[32]", userid, time, money, crime))
	    return SendClientMessage(playerid, COLOR_WHITE, "(/ar)rest [ไอดี/ชื่อ] [นาที1-365] [ค่าปรับ 500-500000] [ข้อหา]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถส่งตัวเองเข้าคุกได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (time < 1 || time > 365)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เวลาต้องไม่ต่ำกว่า 1 และไม่เกิน 200 นาที");

	if (money < 500 || money > 500000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ระบุจำนวนเงินห้ามสูงกว่า 500000 บาท");

	//if (id == -1)
	    //return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่จุดส่งผู้ต้องหาเข้าคุก");

	playerData[userid][pPrisoned] = 1;
	playerData[userid][pJailTime] = time * 60; // time * 60

	playerData[userid][pPrisonOut] = id;

	StopDragging(userid);
	SetPlayerInPrison(userid);

	ResetPlayerWeaponsEx(userid);
	ResetPlayer(userid);

	playerData[userid][pCuffed] = 0;

	GivePlayerMoneyEx(userid, -money);
	//GivePlayerMoneyEx(playerid, money);

	ResetPlayerWantedLevelEx(userid);

    SetPlayerSpecialAction(userid, SPECIAL_ACTION_NONE);

    SendClientMessageToAllEx(COLOR_LIGHTRED, "# {FFFF00}ผู้ต้องหา %s ถูกนำตัวเข้าคุกเป็นเวลา %s นาที ค่าปรับ %d [ ข้อหา: %s] {ff6600}เจ้าของคดี : %s", GetPlayerNameEx(userid), FormatNumber(time), money, crime, GetPlayerNameEx(playerid));

	new strd[256];
	new DCC_Embed:embed = DCC_CreateEmbed();
	DCC_SetEmbedTitle(embed, "Log arrest");
	format(strd, sizeof(strd), "ผู้ต้องหา %s ถูกนำตัวเข้าคุกเป็นเวลา %s นาที ค่าปรับ %d [ข้อหา: %s] เจ้าของคดี : %s\n `วัน/เวลา %s`", GetPlayerNameEx(userid), FormatNumber(time), money, crime, GetPlayerNameEx(playerid), ReturnDate());
	DCC_SetEmbedDescription(embed, strd);
    DCC_SetEmbedColor(embed, 0xFFFF00);
	DCC_SetEmbedThumbnail(embed, "https://img2.pic.in.th/pic/LOGO0f2189a16b0f7ee0.th.png");
	DCC_SendChannelEmbedMessage(DCC_FindChannelById("1413838148471095397"), embed);
    return 1;
}
alias:arrest("ar")

/*CMD:jail(playerid, params[])
{
	static
	    userid,
		time;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "ud", userid, time))
	    return SendClientMessage(playerid, COLOR_WHITE, "/jail [ไอดี/ชื่อ] [นาที]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (time < 1 || time > 1000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เวลาต้องไม่ต่ำกว่า 1 และไม่เกิน 1000 นาที");

	playerData[userid][pPrisoned] = 1;
	playerData[userid][pJailTime] = time * 60; // time * 60

	playerData[userid][pPrisonOut] = 0;

	StopDragging(userid);
	SetPlayerInPrison(userid);

	ResetPlayerWeaponsEx(userid);
	ResetPlayer(userid);

	playerData[userid][pCuffed] = 0;

    SetPlayerSpecialAction(userid, SPECIAL_ACTION_NONE);

    SendClientMessageToAllEx(COLOR_LIGHTRED, "*** แอดมิน %s ได้ส่งผู้เล่น %s เข้าคุก %s นาที", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), FormatNumber(time));
    return 1;
}*/

CMD:unjail(playerid, params[])
{
	static
	    userid;

    //if(playerData[playerid][pAdmin] < 4)
		//return 1;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/unjail [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	playerData[userid][pPrisoned] = 0;
	playerData[userid][pJailTime] = 1; // time * 60

    SendClientMessageToAllEx(COLOR_LIGHTRED, " %s ได้นำผู้เล่น %s ออกจากคุก", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
    return 1;
}

Dialog:DIALOG_BUYSKIN(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		static
			skin,
			string[256];

		if(sscanf(inputtext, "d", skin))
			return Dialog_Show(playerid, DIALOG_BUYSKIN, DIALOG_STYLE_INPUT, "[ร้านค้า]", "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ\nราคา $1000 ต่อ Skin", "ซื้อ", "ออก");

		if(skin == 0 || skin == 2 || skin == 119)
		{
			format(string, sizeof string, "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ\nราคา $1000 ต่อ Skin\nSkin %d ไม่รองรับ", skin);
			Dialog_Show(playerid, DIALOG_BUYSKIN, DIALOG_STYLE_INPUT, "[ร้านค้า]", string, "ซื้อ", "ออก");
			return 1;
		}
		if(GetPlayerMoneyEx(playerid) < 1000)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อเสื้อผ้า");

		GivePlayerMoneyEx(playerid, -1000);
		SetPlayerSkin(playerid, skin);
	}
	return 1;
}

Dialog:DIALOG_BUYFASHION(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				new itemname[24];
				itemname = "หมวกกันน็อคสีแดง";
				new price = 1500;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				if (Inventory_HasItem(playerid, itemname))
                    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องเก็บ {00FF00}%s{FFFFFF} ของคุณไม่เพียงพอ", itemname);

				new id = Inventory_Add(playerid, itemname, 1);

				if (id == -1)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		    case 1:
		    {
				new itemname[24];
				itemname = "หมวกกันน็อคสีม่วง";
				new price = 1800;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				if (Inventory_HasItem(playerid, itemname))
                    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องเก็บ {00FF00}%s{FFFFFF} ของคุณไม่เพียงพอ", itemname);

				new id = Inventory_Add(playerid, itemname, 1);

				if (id == -1)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		    case 2:
		    {
				new itemname[24];
				itemname = "หมวกกันน็อคสีน้ำเงิน";
				new price = 2000;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				if (Inventory_HasItem(playerid, itemname))
                    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องเก็บ {00FF00}%s{FFFFFF} ของคุณไม่เพียงพอ", itemname);

				new id = Inventory_Add(playerid, itemname, 1);

				if (id == -1)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		}
	}
	return 1;
}

alias:refill("เติมน้ำมัน")
CMD:refill(playerid, params[])
{
	new id = Pump_Nearest(playerid);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ปั้มน้ำมัน");

	if (!IsPlayerInAnyVehicle(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัว");

	new vehicleid = GetPlayerVehicleID(playerid);
	new modelid = GetVehicleModel(vehicleid);
	new Float:maxfuel = vehicleData[modelid - 400][vFuel];

	new Float:fuel = vehicleData[modelid - 400][vFuel] - vehicleFuel[vehicleid];
	new Float:valuefloat = fuel*26;
	new value = floatround(valuefloat);

	if (GetPlayerMoneyEx(playerid) < value)
		return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการเติมน้ำมัน (%s/%s) ลิตรละ 26", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(value));

	if (vehicleFuel[vehicleid] >= maxfuel)
		return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถเติมน้ำมันมากกว่านี้ได้ (%.2f/%.2f)", vehicleFuel[vehicleid], maxfuel);

	vehicleFuel[vehicleid] += fuel;
	GivePlayerMoneyEx(playerid, -value);

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้เติมน้ำมัน %.1f ลิตร ในราคา %s", fuel, FormatMoney(value));
    return 1;
}

alias:repair("ซ่อมรถ")
CMD:repair(playerid, params[])
{
	new id = Garage_Nearest(playerid);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่อู่ซ่อมรถ");

	Dialog_Show(playerid, DIALOG_REPAIR, DIALOG_STYLE_TABLIST_HEADERS, "[รายการซ่อม]", "เมนู\tราคา\nเปลี่ยนสี\t$1,000\nซ่อมรถ\t$2,500\nเครื่องมือซ่อมรถ\t$3,500\nแต่งไฟใต้ท้องรถ\t$10,000", "ตกลง", "กลับ");
    return 1;
}

alias:bring("ดึง")
CMD:bring(playerid, params[])
{
	static
	    userid;

	if (playerData[playerid][pAdmin] < 2)
	    return 1;

	if (sscanf(params, "u", userid))
     	return SendClientMessage(playerid, COLOR_WHITE, "/bring [ไอดี/ชื่อ]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (!IsPlayerSpawnedEx(userid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ยังไม่ได้อยู่ในสถานะปกติ");

	SendPlayerToPlayer(userid, playerid);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ดึงผู้เล่น %s มาหา", GetPlayerNameEx(userid));
	return 1;
}

CMD:gotopoint(playerid, params[])
{

    if (playerData[playerid][pAdmin] < 6)
	    return SendClientMessage(playerid, COLOR_SERVER,"( ข้อผิดพลาด ) คุณไม่ใช่แอดมินไม่สามารถใช้คำสั่งนี้ได้[!]");

    new
    	interiorID,
     	Float: coordinates[3];

	if(sscanf(params, "fffd", coordinates[0], coordinates[1], coordinates[2], interiorID))
	{
 		SendClientMessage(playerid , COLOR_SERVER,"/gotopoint [x] [y] [z] [interior]");
	}
	else
	{
 		SetPlayerInterior(playerid, interiorID);
   		SetPlayerPos(playerid, coordinates[0], coordinates[1], coordinates[2]);
	}

	return 1;
}

alias:goto("ไป")
CMD:goto(playerid, params[])
{
	static
	    id,
	    type[24],
		string[64];

	if (playerData[playerid][pAdmin] < 2)
	    return 1;

	if (sscanf(params, "u", id))
 	{
	 	SendClientMessage(playerid, COLOR_WHITE, "/goto [ไอดี/ชื่อ]");
		SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} entrance, interior");
		return 1;
	}
    if (id == INVALID_PLAYER_ID)
	{
	    if (sscanf(params, "s[24]S()[64]", type, string))
		{
		 	SendClientMessage(playerid, COLOR_WHITE, "/goto [ไอดี/ชื่อ]");
			SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} entrance, interior");
			return 1;
	    }
		else if (!strcmp(type, "entrance", true))
		{
		    if (sscanf(string, "d", id))
		        return SendClientMessage(playerid, COLOR_WHITE, "/goto [ชื่อรายการ] [ไอดีประตู]");

			if ((id < 0 || id >= MAX_ENTRANCES) || !entranceData[id][entranceExists])
			    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีประตูนี้อยู่ในฐานข้อมูล");

		    SetPlayerPos(playerid, entranceData[id][entrancePosX], entranceData[id][entrancePosY], entranceData[id][entrancePosZ]);
		    SetPlayerInterior(playerid, entranceData[id][entranceExterior]);

			SetPlayerVirtualWorld(playerid, entranceData[id][entranceExteriorVW]);
		    SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้วาร์ปมาที่ประตูไอดี: %d", id);
		    return 1;
		}
		else if (!strcmp(type, "interior", true))
		{
		    static
		        str[1536];

			str[0] = '\0';

			for (new i = 0; i < sizeof(g_arrInteriorData); i ++)
			{
			    strcat(str, g_arrInteriorData[i][e_InteriorName]);
			    strcat(str, "\n");
		    }
		    Dialog_Show(playerid, DIALOG_TELEPORT, DIALOG_STYLE_LIST, "[สถานที่ด้านในทั้งหมด]", str, "วาร์ป", "ออก");
		    return 1;
		}
	    else return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");
	}
	if (!IsPlayerSpawnedEx(id))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ยังไม่ได้อยู่ในสถานะปกติ");

	SendPlayerToPlayer(playerid, id);

	format(string, sizeof(string), "You have ~y~teleported~w~ to %s.", GetPlayerNameEx(id));
	GameTextForPlayer(playerid, string, 5000, 1);

	return 1;
}

alias:lock("ล็อค")
CMD:lock(playerid, params[])
{
	new
	    id = GetNearbyVehicle(playerid);

/*	if (!IsPlayerInAnyVehicle(playerid) && (id = (Entrance_Inside(playerid) == -1) ? (Entrance_Nearest(playerid)) : (Entrance_Inside(playerid))) != -1)
	{
		if (strlen(entranceData[id][entrancePass]))
		{
			Dialog_Show(playerid, DIALOG_ENTRANCEPASS, DIALOG_STYLE_INPUT, "[รหัสผ่านประตู]", "ใส่รหัสผ่านให้ประตูเพื่อความปลอดภัย:", "ยืนยัน", "ออก");
		}
	}*/
//	SendClientMessageEx(playerid, -1, "IsVehicleOwner: %d", IsVehicleOwner(playerid, id));
    if(IsVehicleOwner(playerid, id) || playerData[playerid][pVehicleKeys] == id || (carData[id][carFaction] >= 0 && carData[id][carFaction] == playerData[playerid][pFaction]))
	{
	    if(!carData[id][carLocked])
	    {
			carData[id][carLocked] = 1;

			GameTextForPlayer(playerid, "~r~Vehicle locked", 3000, 6);
			SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้ล็อครถ %s", GetPlayerNameEx(playerid), ReturnVehicleName(id));
		}
		else
		{
			carData[id][carLocked] = 0;

			GameTextForPlayer(playerid, "~g~Vehicle unlocked", 3000, 6);
			SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้ปลดล็อครถ %s", GetPlayerNameEx(playerid), ReturnVehicleName(id));
		}

		SetVehicleParams(id, VEHICLE_DOORS, carData[id][carLocked]);
        PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		new query[128];
		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carLocked = %d WHERE carID = %d", carData[id][carLocked], carData[id][carID]);
		mysql_tquery(g_SQL, query);
		return 1;
	}
	return 1;
}

CMD:tune(playerid, params[]){
	Dialog_Show(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics\nNitrous Oxide", "เลือก", "ยกเลิก");
	return 1;
}

alias:mechanic("ซ่อม")
CMD:mechanic(playerid, params[])
{
	static
	    userid, price;

    if (GetFactionType(playerid) != FACTION_MEC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ช่าง!");

    if (sscanf(params, "ud", userid, price))
	    return SendClientMessage(playerid, COLOR_WHITE, "/mechanic [ไอดี/ชื่อ] [จำนวนเงิน]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถซ่อมให้ตัวเองได้");

	if (price < 500 || price > 5000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาต้องไม่ต่ำกว่า $500 และไม่เกิน $5,000");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerMoneyEx(userid) < price)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นมีเงินไม่เพียงพอ");

	if (GetPlayerState(userid) != PLAYER_STATE_DRIVER)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นต้องอยู่ในสถานะคนขับ");

	playerData[playerid][pMecOfferID] = userid;
	playerData[playerid][pMecOfferPrice] = price;
	playerData[userid][pMecOfferID] = playerid;
	playerData[userid][pMecOfferPrice] = price;
	Dialog_Show(playerid, DIALOG_MECHANIC, DIALOG_STYLE_LIST, "[รายการซ่อม]", "เปลี่ยนสี\nซ่อมรถ", "ตกลง", "ปิด");
	return 1;
}

alias:heal("รักษา")
CMD:heal(playerid, params[])
{
	static
	    userid, price;

	new string[256];

    if (GetFactionType(playerid) != FACTION_MEDIC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

    if (sscanf(params, "ud", userid, price))
	    return SendClientMessage(playerid, COLOR_WHITE, "/รักษา [ไอดี/ชื่อ] [จำนวนเงิน]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถรักษาตัวเองได้");

	if (price < 0 || price > 5000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาต้องไม่ต่ำกว่า $0 และไม่เกิน $5000");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerMoneyEx(userid) < price)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นมีเงินไม่เพียงพอ");

	if (IsPlayerInAnyVehicle(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องไม่อยู่ในรถ");

	if (IsPlayerInAnyVehicle(userid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในรถ");


	new Float:hp;
	GetPlayerHealth(userid, hp);

	if (hp > 70)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในสถานะขาดเลือด");

	playerData[playerid][pMedicOfferID] = userid;
	playerData[playerid][pMedicOfferPrice] = price;
	playerData[userid][pMedicOfferID] = playerid;
	playerData[userid][pMedicOfferPrice] = price;

	format(string, sizeof string, "{FFFFFF}ตอบรับการรักษาจากหมอ (เติมเลือด) %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
    Dialog_Show(userid, DIALOG_ACCEPT44, DIALOG_STYLE_INPUT, "[ยืนยัน]", string, "ยืนยัน", "ปิด");
	return 1;
}

Dialog:DIALOG_ACCEPT44(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMedicOfferID];
	new price = playerData[playerid][pMedicOfferPrice];
	if (response)
	{
		SetPlayerHealth(playerid, 100);

		GivePlayerMoneyEx(playerid, -price);
		GivePlayerMoneyEx(userid, price);

	    SendClientMessageEx(userid, COLOR_WHITE, "คุณได้รักษา {33CCFF}%s{FFFFFF} เป็นจำนวนเงิน $%d", GetPlayerNameEx(playerid), price);
	    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้รักษาคุณ เป็นจำนวนเงิน $%d", GetPlayerNameEx(userid), price);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้รักษา %s", GetPlayerNameEx(userid), GetPlayerNameEx(playerid));
		playerData[userid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMedicOfferPrice] = 0;
		playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMedicOfferPrice] = 0;
	}
	else
	{
		playerData[userid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMedicOfferPrice] = 0;
		playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMedicOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_ACCEPT55(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMedicOfferID];
	new price = playerData[playerid][pMedicOfferPrice];
	if (response)
	{
		SetPlayerHealth(playerid, 100);
		SetPlayerWeather(playerid, globalWeather);
	    playerData[playerid][pInjured] = 0;
	    playerData[playerid][pInjuredTime] = 0;
	    ClearAnimations(playerid);
	    PlayerTextDrawHide(playerid, PlayerDeathTD[playerid]);
	    ShowPlayerStats (playerid, true);

	    GivePlayerMoneyEx(playerid, -price);
	    GivePlayerMoneyEx(userid, price);

	    SendClientMessageEx(userid, COLOR_WHITE, "คุณได้รักษาอาการบาดเจ็บให้ {33CCFF}%s{FFFFFF} เป็นจำนวนเงิน $%d", GetPlayerNameEx(playerid), price);
	    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้รักษาอาการบาดเจ็บให้คุณ เป็นจำนวนเงิน $%d", GetPlayerNameEx(userid), price);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้รักษาอาการบาดเจ็บให้ %s", GetPlayerNameEx(userid), GetPlayerNameEx(playerid));
		playerData[userid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMedicOfferPrice] = 0;
		playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMedicOfferPrice] = 0;
	}
	else
	{
		playerData[userid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMedicOfferPrice] = 0;
		playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMedicOfferPrice] = 0;
	}
	return 1;
}

alias:cpr("ชุบชีวิต")
CMD:cpr(playerid, params[])
{
	static
	    userid, price;

    new string[256];

    if (GetFactionType(playerid) != FACTION_MEDIC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

    if (sscanf(params, "ud", userid, price))
	    return SendClientMessage(playerid, COLOR_WHITE, "/ชุบชีวิต [ไอดี/ชื่อ] [จำนวนเงิน]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถรักษาตัวเองได้");

	if (price < 300 || price > 1000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาต้องไม่ต่ำกว่า $500 และไม่เกิน $1,000");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerMoneyEx(userid) < price)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นมีเงินไม่เพียงพอ");

	if (!playerData[userid][pInjured])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในสถานะบาดเจ็บ");

	if (IsPlayerInAnyVehicle(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องไม่อยู่ในรถ");

	if (IsPlayerInAnyVehicle(userid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในรถ");

	playerData[playerid][pMedicOfferID] = userid;
	playerData[playerid][pMedicOfferPrice] = price;
	playerData[userid][pMedicOfferID] = playerid;
	playerData[userid][pMedicOfferPrice] = price;

	format(string, sizeof string, "{FFFFFF}ตอบรับการรักษาจากหมอ (ชุพ CPR) %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
    Dialog_Show(userid, DIALOG_ACCEPT55, DIALOG_STYLE_INPUT, "[ยืนยัน]", string, "ยืนยัน", "ปิด");
	return 1;
}

CMD:acpr(playerid, params[])
{
	static
	    userid;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

    if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/acpr [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (!playerData[userid][pInjured])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในสถานะบาดเจ็บ");

	SetPlayerHealth(userid, 100);
	SetPlayerWeather(userid, globalWeather);
    playerData[userid][pInjured] = 0;
    playerData[userid][pInjuredTime] = 0;
    ClearAnimations(userid);
    PlayerTextDrawHide(userid, PlayerDeathTD[userid]);
    ShowPlayerStats (userid, true);

    SendClientMessageEx(playerid, COLOR_WHITE, "{00FF00}[!]{FFFF00}คุณได้ทำการชุบชีวิต {FFFFFF}%s", GetPlayerNameEx(userid));
	return 1;
}

CMD:itemlist(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	static
	    string[1024];

	if (!strlen(string))
	{
		for (new i = 0; i < sizeof(itemData); i ++)
		{
			format(string, sizeof(string), "%s%s\n", string, itemData[i][itemName]);
		}
	}
	return Dialog_Show(playerid, DIALOG_SHOW, DIALOG_STYLE_LIST, "[รายชื่อไอเท็มทั้งหมด]", string, "ปิด", "");
}

CMD:giveitem(playerid,params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new userid, item[32], amount;
	if(sscanf(params, "us[32]d", userid, item, amount)) return SendClientMessage(playerid, COLOR_WHITE, "/giveitem [ไอดี/ชื่อ] [ชื่อไอเท็ม] [จำนวน]");

	new count = Inventory_Count(userid, item)+amount;

	if (count > playerData[userid][pItemAmount])
        return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของ {00FF00}%s{FFFFFF} ของผู้เล่นนั้นเต็มแล้ว (%d/%d)", item, Inventory_Count(userid, item), playerData[userid][pItemAmount]);

	for (new i = 0; i < sizeof(itemData); i ++) if (!strcmp(itemData[i][itemName], item, true))
	{
		new id = Inventory_Add(userid, itemData[i][itemName], amount);

		if (id == -1)
		    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

//	    Inventory_Add(userid, itemData[i][itemName], amount);
	    SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ให้ไอเท็ม %s จำนวน %d กับ %s", GetPlayerNameEx(playerid), item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ให้ไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} กับ {33CCFF}%s", item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(userid, COLOR_WHITE, "คุณได้รับไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} จากแอดมิน {33CCFF}%s", item, amount, GetPlayerNameEx(userid));
		
		new strd[256];
		new DCC_Embed:embed = DCC_CreateEmbed();
		DCC_SetEmbedTitle(embed, "LogAdmin Giveitem");
		format(strd, sizeof(strd), "`Admin %s `ได้ให้ไอเท็ม %s จำนวน %d กับ %s \n `วัน/เวลา %s`", GetPlayerNameEx(playerid), item, amount, GetPlayerNameEx(userid), ReturnDate());
		DCC_SetEmbedDescription(embed, strd);
    	DCC_SetEmbedColor(embed, 0xFFFF00);
		DCC_SetEmbedThumbnail(embed, "https://img2.pic.in.th/pic/LOGO0f2189a16b0f7ee0.th.png");
		DCC_SendChannelEmbedMessage(DCC_FindChannelById("1401633532744433794"), embed);

		return 1;
	}
	SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอเท็ม %s อยู่ในระบบ (คำสั่ง /itemlist ในการเช็ครายชื่อไอเท็ม)", item);
	return 1;
}

CMD:setitem(playerid,params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new userid, item[32], amount;
	if(sscanf(params, "us[32]d", userid, item, amount)) return SendClientMessage(playerid, COLOR_WHITE, "/setitem [ไอดี/ชื่อ] [ชื่อไอเท็ม] [จำนวน]");

	for (new i = 0; i < sizeof(itemData); i ++) if (!strcmp(itemData[i][itemName], item, true))
	{
	    if (!strcmp(item, "มือถือ", true))
		{
	        playerData[userid][pPhone] = random(900000) + 100000;
	    }
	    Inventory_Set(userid, itemData[i][itemName], amount);
	    SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับไอเท็ม %s จำนวน %d ให้กับ %s", GetPlayerNameEx(playerid), item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ปรับไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} ให้กับ {33CCFF}%s", item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(userid, COLOR_WHITE, "คุณถูกปรับไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} โดยแอดมิน {33CCFF}%s", item, amount, GetPlayerNameEx(playerid));
		return 1;
	}
	SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอเท็ม %s อยู่ในระบบ (คำสั่ง /itemlist ในการเช็ครายชื่อไอเท็ม)", item);
	return 1;
}

CMD:deleteitem(playerid,params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new userid, item[32], amount;
	if(sscanf(params, "us[32]d", userid, item, amount)) return SendClientMessage(playerid, COLOR_WHITE, "/deleteitem [ไอดี/ชื่อ] [ชื่อไอเท็ม] [จำนวน]");

	for (new i = 0; i < sizeof(itemData); i ++) if (!strcmp(itemData[i][itemName], item, true))
	{
	    Inventory_Remove(userid, item, amount);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ลบไอเท็ม %s จำนวน %d ให้กับ %s", GetPlayerNameEx(playerid), item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(playerid, COLOR_WHITE, "คุณลบไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} ของ {33CCFF}%s", item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(userid, COLOR_WHITE, "คุณถูกลบไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} โดยแอดมิน {33CCFF}%s", item, amount, GetPlayerNameEx(playerid));
		return 1;
	}
	SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอเท็ม %s อยู่ในระบบ", item);
	return 1;
}

CMD:clearitem(playerid,params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new userid;
	if(sscanf(params, "u", userid)) return SendClientMessage(playerid, COLOR_WHITE, "/clearitem [ไอดี/ชื่อ]");

	Inventory_Clear(userid);

    SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ลบไอเท็มทั้งหมดของ %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	SendClientMessageEx(playerid, COLOR_WHITE, "คุณลบไอเท็มทั้งหมดของ {33CCFF}%s", GetPlayerNameEx(userid));
	SendClientMessageEx(userid, COLOR_WHITE, "คุณถูกลบไอเท็มทั้งหมดโดยแอดมิน {33CCFF}%s", GetPlayerNameEx(playerid));
	return 1;
}

alias:phone("โทรศัพ")
CMD:phone(playerid, const params[])
{
	ShowPlayerms_iPhone(playerid, true);
	return 1;
}

alias:sms("ข้อความ")
CMD:sms(playerid, params[])
	return callcmd::text(playerid, params);

alias:text("ส่งข้อความ")
CMD:text(playerid, params[])
{
    if (!Inventory_HasItem(playerid, "มือถือ"))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีมือถือ");

    if (playerData[playerid][pPhoneOff])
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

	static
	    targetid,
		number,
		text[128];

	if (sscanf(params, "ds[128]", number, text))
	    return SendClientMessage(playerid, COLOR_WHITE, "/text [เบอร์] [ข้อความ]");

	if (!number)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีหมายเลขที่ท่านเรียก");

	if ((targetid = GetNumberOwner(number)) != INVALID_PLAYER_ID)
	{
	    if (targetid == playerid)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถส่งให้ตัวเองได้");

		if (playerData[targetid][pPhoneOff])
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}หมายเลขที่ท่านเรียกไม่สามารถติดต่อได้ในขณะนี้");

        GivePlayerMoneyEx(playerid, -1);
		GameTextForPlayer(playerid, "You've been ~r~charged~w~ $1 to send a text.", 5000, 1);

		SendClientMessageEx(targetid, COLOR_YELLOW, "[ข้อความ]: %s - %s (%d)", text, GetPlayerNameEx(playerid), playerData[playerid][pPhone]);
		SendClientMessageEx(playerid, COLOR_YELLOW, "[ข้อความ]: %s - %s (%d)", text, GetPlayerNameEx(playerid), playerData[playerid][pPhone]);

        PlayerPlaySoundEx(targetid, 21001);
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบมือถือขึ้นมาและกดส่งข้อความ", GetPlayerNameEx(playerid));
	}
	else
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีหมายเลขที่ท่านเรียก");
	}
	return 1;
}

alias:answer("รับสาย")
CMD:answer(playerid, params[])
{
	if (!playerData[playerid][pIncomingCall])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสายเรียกเข้า");

	if (playerData[playerid][pCuffed])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถใช้มือถือได้ในขณะนี้");

    if (playerData[playerid][pPhoneOff])
    	return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

	new targetid = playerData[playerid][pCallLine];

	playerData[playerid][pIncomingCall] = 0;
	playerData[targetid][pIncomingCall] = 0;

	SendClientMessage(playerid, COLOR_YELLOW, "[SERVER]:{FFFFFF} คุณได้รับสายแล้ว");
	SendClientMessage(targetid, COLOR_YELLOW, "[SERVER]:{FFFFFF} สายที่คุณโทรถูกรับแล้ว");

	SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้รับสายเรียกเข้า", GetPlayerNameEx(playerid));
	return 1;
}

alias:hangup("วางสาย")
CMD:hangup(playerid, const params[])
{
	new targetid = playerData[playerid][pCallLine];

	if (playerData[playerid][pEmergency])
	{
	    playerData[playerid][pEmergency] = 0;
//	    playerData[playerid][pPlaceAd] = 0;

        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้วางสาย", GetPlayerNameEx(playerid));
        return 1;
	}
	if (targetid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสายให้วาง");

	if (playerData[playerid][pIncomingCall])
	{
	    SendClientMessage(playerid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} คุณได้ตัดสายเรียกเข้า");
	    SendClientMessage(targetid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} คุณถูกตัดสายการโทร");

		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ตัดสายเรียกเข้า", GetPlayerNameEx(playerid));
	}
	else
	{
        SendClientMessage(playerid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} คุณวางสายแล้ว");
	    SendClientMessage(targetid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} คุณถูกวางสายแล้ว");

	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s วางสายมือถือแล้ว", GetPlayerNameEx(playerid));
	    SendNearbyMessage(targetid, 30.0, COLOR_PURPLE, "** %s วางสายมือถือแล้ว", GetPlayerNameEx(targetid));
	}
	playerData[playerid][pIncomingCall] = 0;
	playerData[targetid][pIncomingCall] = 0;

	playerData[playerid][pCallLine] = INVALID_PLAYER_ID;
	playerData[targetid][pCallLine] = INVALID_PLAYER_ID;

	return 1;
}

alias:call("โทร")
CMD:call(playerid, params[])
{
    if (!Inventory_HasItem(playerid, "มือถือ"))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีมือถือ");

    if (playerData[playerid][pPhoneOff])
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

	static
	    targetid,
		number;

	if (sscanf(params, "d", number))
 	   return SendClientMessage(playerid, COLOR_WHITE, "/โทร [เบอร์] (911 สำหรับกรณีฉุกเฉิน)");

	if (!number)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีหมายเลขที่ท่านเรียก");

	if (number == 911)
	{
		playerData[playerid][pEmergency] = 1;
		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);

		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบมือถือขึ้นมาแล้วโทรออก", GetPlayerNameEx(playerid));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "[พนักงาน]:{FFFFFF} คุณต้องการติดต่อใคร: \"ตำรวจ\" หรือ \"หมอ\"?");
	}
	else if ((targetid = GetNumberOwner(number)) != INVALID_PLAYER_ID)
	{
	    if (targetid == playerid)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}โทรหาตัวเองไม่ได้");

		if (playerData[targetid][pPhoneOff])
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}หมายเลขที่ท่านเรียกไม่สามารถติดต่อได้ในขณะนี้");

		playerData[targetid][pIncomingCall] = 1;
		playerData[playerid][pIncomingCall] = 1;

		playerData[targetid][pCallLine] = playerid;
		playerData[playerid][pCallLine] = targetid;

		SendClientMessageEx(playerid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} กำลังพยายามโทรหาเบอร์ #%d, กรุณารอ...", number);
		SendClientMessageEx(targetid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} มีสายเรียกเข้าจากเบอร์ #%d (พิมพ์ \"/รับสาย \" เพื่อรับสาย)", playerData[playerid][pPhone]);

        PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
        PlayerPlaySoundEx(targetid, 23000);

		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบมือถือขึ้นมาแล้วโทรออก", GetPlayerNameEx(playerid));
	}
	else
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีหมายเลขที่ท่านเรียก");
	}
	return 1;
}

alias:keepcar("เก็บรถแก๊ง")
CMD:keepcar(playerid, params[])
{
    new vid = Callcar_Nearest(playerid);

    if (vid != -1)
    {
        new vehicleid = GetPlayerVehicleID(playerid);
        if (!IsPlayerInAnyVehicle(playerid))
            return SendClientMessage(playerid, -1, "{FF0000}[ ! ] : {FFFFFF}คุณยังไม่ได้อยู่ในรถ...");

        DestroyVehicle(vehicleid);
        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "{FF0000}[ ! ] :{FFFFFF} %s ได้เก็บรถยนต์", GetPlayerNameEx(playerid));
    }
    else
    {
        SendClientMessage(playerid, -1, "{FF0000}[ ! ] :{FFFFFF} คุณไม่ได้อยู่ที่เบิกรถ Function ตัวเอง...");
    }
    return 1;
}

alias:kick("แตะ")
CMD:kick(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 1)
	    return 1;

	new userid, reason[128];
	if(sscanf(params, "us[128]", userid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "/kick [ไอดี/ชื่อ] [สาเหตุ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (playerData[userid][pAdmin] > playerData[playerid][pAdmin])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถแบนแอดมินได้");

	SendClientMessageToAllEx(COLOR_LIGHTRED, "AdmCmd: %s ถูกเตะโดยแอดมิน %s, สาเหตุ: %s", GetPlayerNameEx(userid), GetPlayerNameEx(playerid), reason);
	DelayedKick(userid);
	return 1;
}

alias:ban("แบน")
CMD:ban(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 1)
	    return 1;

	new userid, reason[128], query[256];
	if(sscanf(params, "us[128]", userid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "/ban [ไอดี/ชื่อ] [สาเหตุ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (playerData[userid][pAdmin] > playerData[playerid][pAdmin])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถแบนแอดมินได้");

	SendClientMessageToAllEx(COLOR_LIGHTRED, "AdmCmd: %s ถูกแบนโดยแอดมิน %s, สาเหตุ: %s", GetPlayerNameEx(userid), GetPlayerNameEx(playerid), reason);
	playerData[userid][pBan] = 1;
	playerData[userid][pBanReason] = reason;
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerBan` = %d , `playerBanReason` = '%e' WHERE `playerID` = %d",
	playerData[userid][pBan],
	reason,
	playerData[userid][pID]);
	mysql_tquery(g_SQL, query);
	Ban(userid);
	DelayedKick(userid);
	return 1;
}

alias:unban("ปลดแบน")
CMD:unban(playerid, params[]){

	if(playerData[playerid][pAdmin] < 6)
	    return SendClientMessage(playerid, -1, "คุณไม่ได้รับอนุญาติให้ใช้คำสั่งนี้");

	//params รับชื่อผู้เล่นเข้ามา
	if(isnull(params))
	    return SendClientMessage(playerid, -1, "คุณจำเป็นต้องกรอกชื่อผู้เล่นที่จะปลดแบน");

	new string[128];

	format(string, sizeof(string), "UPDATE `players` SET `playerBan` = %d WHERE `playerName` = '%s'", 0, SQL_ReturnEscaped(params));
	mysql_tquery(g_SQL, string);

	new string2[128];

	format(string2, sizeof(string2), "คุณได้ปลดแบน %s เรียบร้อยแล้ว", params);
	SendClientMessage(playerid, -1, string2);
	return 1;
}

alias:drivingtest("สอบใบขับขี่")
CMD:drivingtest(playerid, params[])
{
	if (playerData[playerid][pDrivingTest])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณกำลังอยู่ในขั้นตอนการสอบใบขับขี่อยู่!");

	if (!IsPlayerInRangeOfPoint(playerid, 3.0, 595.6122,-1250.7350,18.2970))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่กรมขนส่ง");

	if (Inventory_HasItem(playerid, "ใบขับขี่รถยนต์"))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีใบขับขี่รถยนต์อยู่แล้ว");

	if (GetPlayerMoneyEx(playerid) < 500)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการเปลี่ยนสี (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(500));

    playerData[playerid][pInterior] = GetPlayerInterior(playerid);
   	playerData[playerid][pWorld] = GetPlayerVirtualWorld(playerid);

	GetPlayerHealth(playerid, playerData[playerid][pHealth]);
	GetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
 	GetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);

    playerData[playerid][pTestCar] = CreateVehicle(410, -2047.1056, -87.7183, 34.8219, 0.1447, 1, 1, -1);
    playerData[playerid][pTestWarns] = 0;

	if (playerData[playerid][pTestCar] != INVALID_VEHICLE_ID)
	{
		playerData[playerid][pDrivingTest] = true;
	    playerData[playerid][pTestStage] = 0;

	    SetPlayerVirtualWorld(playerid, (2000 + playerid));

	    SetVehicleVirtualWorld(playerData[playerid][pTestCar], (2000 + playerid));
		PutPlayerInVehicle(playerid, playerData[playerid][pTestCar], 0);

		SetPlayerCheckpoint(playerid, g_arrDrivingCheckpoints[0][0], g_arrDrivingCheckpoints[0][1], g_arrDrivingCheckpoints[0][2], 3.0);
		SendClientMessage(playerid, COLOR_SERVER, "[กรมขนส่ง] {FFFFFF}คุณได้เริ่มการสอบใบขับขี่แล้ว กรุณาขับไปตามจุดสีแดง");
		SendClientMessage(playerid, COLOR_SERVER, "[กรมขนส่ง] {FFFFFF}หากรถยนต์คุณมีความเสียหายมากเกินไป คุณจะไม่ได้รับใบขับขี่");

		SetPlayerInterior(playerid, 0);
	}
	return 1;
}

CMD:report(playerid, params[])
{
	if (isnull(params))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/report [สาเหตุ]");
	    SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน]:{FFFFFF} ใช้คำสั่งนี่เฉพาะเหตุฉุกเฉินเท่านั้น");
	    return 1;
	}

	foreach (new i : Player)
	{
		if (playerData[i][pAdmin])
		{
			SendClientMessageEx(i, COLOR_YELLOW, "[REPORT]: %s (ID: %d) สาเหตุ: %s", GetPlayerNameEx(playerid), playerid, params);
		}
	}
	SendClientMessage(playerid, COLOR_GREEN, "คุณได้ส่งข้อความถึงกลุ่มแอดมินสำเร็จ กรุณาอย่าส่งซ้ำและรอคำตอบ!");
	return 1;
}

CMD:admin(playerid, params[])
{
	if (!playerData[playerid][pAdmin])
	    return 1;

	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/a [ข้อความ]");

	if (strlen(params) > 64)
	{
	    SendAdminMessage(COLOR_YELLOW, "** %d แอดมิน %s: %.64s", playerData[playerid][pAdmin], GetPlayerNameEx(playerid), params);
	    SendAdminMessage(COLOR_YELLOW, "...%s **", params[64]);
	}
	else {
	    SendAdminMessage(COLOR_YELLOW, "** %d แอดมิน %s: %s **", playerData[playerid][pAdmin], GetPlayerNameEx(playerid), params);
	}
	return 1;
}
alias:admin("a")

CMD:ga(playerid, params[])
{
	if (playerData[playerid][pAdmin] >= 6)
	{
		SendAdminMessage(COLOR_YELLOW, "[ADMIN]: %s ได้เสกอาวุธออกมาใช้", GetPlayerNameEx(playerid));
		ResetPlayerWeaponsEx(playerid);
		GivePlayerWeaponEx(playerid, 24, 1000);
		GivePlayerWeaponEx(playerid, 32, 1000);
		GivePlayerWeaponEx(playerid, 27, 1000);
		GivePlayerWeaponEx(playerid, 31, 1000);
		GivePlayerWeaponEx(playerid, 16, 1000);
		GivePlayerWeaponEx(playerid, 41, 1000);
		GivePlayerWeaponEx(playerid, 34, 1000);
		GivePlayerWeaponEx(playerid, 37, 1000);
		GivePlayerWeaponEx(playerid, 4, 1);
		SetPlayerArmour(playerid, 100);
		SetPlayerHealth(playerid, 100);
	}
	return 1;
}

CMD:gogo(playerid, params[])
{
	if(EventOn == 0) return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กิจกรรมได้จบลงแล้ว ขอบคุณที่ร่วมสนุก");

    if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กรุณาลงจากยานพาหนะก่อนเข้าร่วมกิจกรรม!");

    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    playerData[playerid][pEventBackX] = x;
    playerData[playerid][pEventBackY] = y;
    playerData[playerid][pEventBackZ] = z;
    playerData[playerid][pEventBackInterior] = GetPlayerInterior(playerid);
    playerData[playerid][pEventBackWorld] = GetPlayerVirtualWorld(playerid);
    playerData[playerid][pEventGo] = 1;

	SetPlayerPos(playerid, EventX, EventY, EventZ+3);
	SetPlayerInterior(playerid, EventInterior);
	SetPlayerVirtualWorld(playerid, EventWorld);
	return 1;
}

CMD:event(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 5)
	    return 1;

	new a_str[60];

	if(sscanf(params, "s[60]", a_str))
	{
		SendClientMessage(playerid, COLOR_WHITE, "/event [เมนู]");
		SendClientMessage(playerid, COLOR_YELLOW, "[เมนู]: {FFFFFF}mark (มาร์คจุดจัดกิจกรรม) | on (เปิดกิจกรรม) | off (ปิดกิจกรรม) | back (ส่งผู้เล่นกลับ)");
		return 1;
	}

	if(!strcmp(a_str, "mark"))
	{
		new Float:ax;
		new Float:ay;
		new Float:az;
		GetPlayerPos(playerid, ax, ay, az);
		EventX = ax;
		EventY = ay;
		EventZ = az;
		EventInterior = GetPlayerInterior(playerid);
		EventWorld = GetPlayerVirtualWorld(playerid);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้มาร์คจุดจัดกิจกรรมสำเร็จ", GetPlayerNameEx(playerid));

		SendClientMessage(playerid, COLOR_WHITE, "คุณได้มาร์คจุดกิจกรรมสำเร็จ!");
	}
	else if(!strcmp(a_str, "on"))
	{
		if(EventOn == 1) return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กิจกรรมถูกเปิดอยู่แล้ว!");
		EventOn = 1;
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s เปิดกิจกรรมผ่านคำสั่ง ''/event on''", GetPlayerNameEx(playerid));

		SendClientMessageToAllEx(COLOR_ADMIN, "EVENT: {FFFFFF}กิจกรรมได้เริ่มขึ้นแล้ว ''/gogo'' เพื่อเข้าร่วม");
	}
	else if(!strcmp(a_str, "off"))
	{
		if(EventOn == 0) return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กิจกรรมถูกปิดอยู่แล้ว!");
		EventOn = 0;
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ปิดกิจกรรมผ่านคำสั่ง ''/event off''", GetPlayerNameEx(playerid));

		SendClientMessageToAllEx(COLOR_ADMIN, "EVENT: {FFFFFF}กิจกรรมได้จบลงแล้ว ขอบคุณที่ร่วมสนุก");
	}
	else if(!strcmp(a_str, "back"))
	{
	    if(EventOn == 1) return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กรุณาปิดกิจกรรมผ่านคำสั่ง ''/event off'' ก่อนเพื่อที่จะส่งผู้เล่นกลับ!");
		foreach(new i : Player)
		{
		    if(playerData[i][pEventGo] == 1)
		    {
			    SetPlayerPos(i, playerData[i][pEventBackX], playerData[i][pEventBackY], playerData[i][pEventBackZ]);
			    SetPlayerInterior(i, playerData[i][pEventBackInterior]);
			    SetPlayerVirtualWorld(i, playerData[i][pEventBackWorld]);
			    playerData[i][pEventGo] = 0;
			}
		}
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ส่งผู้เล่นกลับจากกิจกรรมผ่านคำสั่ง ''/event back''", GetPlayerNameEx(playerid));

		SendClientMessageToAllEx(COLOR_ADMIN, "EVENT: {FFFFFF}ผู้เล่นที่อยู่ในกิจกรรมถูกส่งกลับโดยแอดมินเรียบร้อย ขอบคุณที่ร่วมสนุก");
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "/event [เมนู]");
		SendClientMessage(playerid, COLOR_YELLOW, "[เมนู]: {FFFFFF}mark (มาร์คจุดจัดกิจกรรม) | on (เปิดกิจกรรม) | off (ปิดกิจกรรม) | back (ส่งผู้เล่นกลับ)");
	}
	return 1;
}

CMD:recar(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new count;

	for (new i = 1; i != MAX_VEHICLES; i ++)
	{
	    if (IsValidVehicle(i) && GetVehicleDriver(i) == INVALID_PLAYER_ID)
	    {
			SetVehicleToRespawn(i);
			count++;
		}

		if(carData[i][carOwnerID] > 0 && !IsVehicleOccupied(i))
		{
		    DespawnVehicle(i);
		}
	}
	if (!count)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มียานพาหนะอยู่ในเซิร์ฟเวอร์เลย");

	SendClientMessageToAllEx(COLOR_ADMIN, "*~~~ {FFFFFF}แอดมินได้รียานพาหนะกลับจุดเกิดทั้งหมด %d คัน ขออภัยในความไม่สะดวก {FF0080}~~~*", count);
	return 1;
}

alias:renewbiecar("รีรถเด็กใหม่")
CMD:renewbiecar(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new count;

	for (new i = 0; i != sizeof(NewbieCar); i ++)
	{
	    if (IsValidVehicle(i) && GetVehicleDriver(i) == INVALID_PLAYER_ID)
	    {
	        SetVehicleToRespawn(i);
			count++;
		}
	}

	SendClientMessageToAllEx(COLOR_ADMIN, "*~~~ {FFFFFF}แอดมินได้รียานพาหนะเด็กใหม่กลับจุดเกิดทั้งหมด %d คัน {FF0080}~~~*", count);
	return 1;
}

CMD:setstats(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new userid, type, amount, name[24];

	if (sscanf(params, "udd", userid, type, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "/setstats [ไอดี/ชื่อ] [รายการ] [จำนวน]");
		SendClientMessage(playerid, COLOR_YELLOW, "[รายการ]: {FFFFFF}1: เลเวล 2: ค่าประสบการณ์ 3: ค่าอาหาร 4: ค่าน้ำ 5: VIP 6: เงินแดง");
		return 1;
	}
	if (type < 1 || type > 6)
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รายการต้องไม่ต่ำกว่า 1 และไม่เกิน 6 เท่านั้น");
	    return 1;
	}
	switch(type)
	{
	    case 1:
	    {
		    if (amount < 0 || amount > 999)
		        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เลเวลต้องไม่ต่ำกว่า 0 และไม่เกิน 999 เท่านั้น");

			SetPlayerLevel(userid, amount);
			name = "เลเวล";
		}
	    case 2:
		{
			SetPlayerExp(userid, amount);
			name = "ค่าประสบการณ์";
		}
	    case 3:
	    {
		    if (amount < 0 || amount > 100)
		        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ค่าอาหารต้องไม่ต่ำกว่า 0 และไม่เกิน 100 เท่านั้น");

			playerData[userid][pHungry] = amount;
			name = "ค่าอาหาร";
		}
	    case 4:
		{
		    if (amount < 0 || amount > 100)
		        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ค่าน้ำต้องไม่ต่ำกว่า 0 และไม่เกิน 100 เท่านั้น");

			playerData[userid][pThirsty] = amount;
			name = "ค่าน้ำ";
		}
	    case 5:
		{
		    if (amount < 0 || amount > 4)
		        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ระดับ VIP ต้องไม่ต่ำกว่า 0 และไม่เกิน 3 เท่านั้น");

			switch(amount)
			{
			    case 0: playerData[userid][pMaxItem] = 8;
			    case 1: playerData[userid][pMaxItem] = 12;
			    case 2: playerData[userid][pMaxItem] = 14;
			    case 3: playerData[userid][pMaxItem] = 16;
			    case 4: playerData[userid][pMaxItem] = 16;
			}

			playerData[userid][pVip] = amount;
			name = "VIP";
		}
	    case 6:
		{
		    if (amount < 0 || amount > 1000000)
		        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ค่าน้ำต้องไม่ต่ำกว่า 0 และไม่เกิน 1,000,000 เท่านั้น");

			SetPlayerRedMoney(userid, amount);
			name = "เงินแดง";
		}
	}
	SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับค่า %s ให้ %s เป็นจำนวน %s", GetPlayerNameEx(playerid), name, GetPlayerNameEx(userid), FormatNumber(amount));
	return 1;
}

alias:pay("ให้เงิน")
CMD:pay(playerid, params[])
{
	static
	    userid,
	    amount;

	if (sscanf(params, "ud", userid, amount))
	    return SendClientMessage(playerid, COLOR_WHITE, "/pay [ไอดี/ชื่อ] [จำนวน]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในระยะ");

	if (userid == playerid)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถให้เงินตัวเองได้");

	if (amount < 1 || amount > 10000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}จำนวนเงินต้องไม่ต่ำกว่า $1 และไม่เกิน $10,000 เท่านั้น");

	if (playerData[playerid][pHours] < 0)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องมีชั่วโมงการเล่นมากกว่า 2 ขึ้นไป");

	if (amount > GetPlayerMoneyEx(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เงินของคุณไม่เพียงพอในการให้");

	static
	    string[72];

	GivePlayerMoneyEx(playerid, -amount);
	GivePlayerMoneyEx(userid, amount);

	format(string, sizeof(string), "You have received ~g~%s~w~ from %s.", FormatMoney(amount), GetPlayerNameEx(playerid));
	GameTextForPlayer(userid, string, 5000, 1);

	format(string, sizeof(string), "You have given ~r~%s~w~ to %s.", FormatMoney(amount), GetPlayerNameEx(userid));
	GameTextForPlayer(playerid, string, 5000, 1);

	SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบเงินจำนวน %s จากกระเป๋าและยื่นให้ %s", GetPlayerNameEx(playerid), FormatMoney(amount), GetPlayerNameEx(userid));
	
	new strd[256];
	new DCC_Embed:embed = DCC_CreateEmbed();
	DCC_SetEmbedTitle(embed, "Log ให้เงินเขียว");
	format(strd, sizeof(strd), " %s ได้หยิบเงินจำนวน %s จากกระเป๋าและยื่นให้ %s  \n `วัน/เวลา %s`", GetPlayerNameEx(playerid), FormatMoney(amount), GetPlayerNameEx(userid), ReturnDate());
	DCC_SetEmbedDescription(embed, strd);
	DCC_SetEmbedColor(embed, 0x006EFF);
	DCC_SetEmbedThumbnail(embed, "https://img2.pic.in.th/pic/LOGO0f2189a16b0f7ee0.th.png");
	DCC_SendChannelEmbedMessage(DCC_FindChannelById("1413837329499422790"), embed);
	return 1;
}

CMD:as(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 2)
	    return 1;

	SendClientMessageToAllEx(COLOR_ADMIN, "[แอดมิน] {FFFFFF}%s: %s", GetPlayerNameEx(playerid), params);
	return 1;
}

alias:vip("เติมเงิน")
CMD:vip(playerid, params[])
{
	new count;
	if (sscanf(params, "d", count))
	    return SendClientMessage(playerid, COLOR_WHITE, "/เติมเงิน [ระดับ 1-3]");

	if (count < 1 || count > 3)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ระดับ VIP มีแค่ 1-3 เท่านั้น");

	switch(count)
	{
	    case 1:
	    {
		    SendClientMessage(playerid, COLOR_PINK, "|======[คุณสมบัติของ VIP ]======|");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}สามารถเก็บรถส่วนตัวได้ 2 คัน");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ใช้คำสั่ง /ooc จะมี #VIP นำหน้า");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับค่าประสบการณ์เพิ่มขึ้น +1 ทุกชั่วโมง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับเงินต่อชั่วโมง +$350");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}เพิ่มความจุของกระเป๋าเป็น 12 ช่อง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ราคา 100 : ถาวร");
		}
	    case 2:
	    {
		    SendClientMessage(playerid, COLOR_PINK, "|======[คุณสมบัติของ #{00FFFF}PR{FFFFFF}EMI{00FFFF}UM ]======|");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}สามารถเก็บรถส่วนตัวได้ 3 คัน");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ใช้คำสั่ง /ooc จะมี #VIP นำหน้า");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ใช้คำสั่ง /vipr ซ่อมรถ");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับค่าประสบการณ์เพิ่มขึ้น +1 ทุกชั่วโมง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับเงินต่อชั่วโมง +$500");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}เพิ่มความจุของกระเป๋าเป็น 14 ช่อง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ราคา 150 : ถาวร");
		}
	    case 3:
	    {
		    SendClientMessage(playerid, COLOR_PINK, "|======[คุณสมบัติของ #{FF0000}SU{FFFFFF}PER{FF0000}ME ]======|");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}สามารถเก็บรถส่วนตัวได้ 4 คัน");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ใช้คำสั่ง /ooc จะมี #VIP นำหน้า");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ใช้คำสั่ง /vipr เติมน้ำมัน + ซ่อมรถ");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับค่าประสบการณ์เพิ่มขึ้น +1 ทุกชั่วโมง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับเงินต่อชั่วโมง +$750");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}เพิ่มความจุของกระเป๋าเป็น 16 ช่อง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ราคา 200 : ถาวร");
		}
    }
	return 1;
}

CMD:viprepair(playerid, params[])
{
    if (!IsPlayerInAnyVehicle(playerid))
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ต้องอยู่ในยานพาหนะที่จะซ่อมเท่านั้น");

	if (GetPlayerWantedLevelEx(playerid) > 0)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใช้คำสั่งได้หากคุณมีคดีติดตัว!");

    Dialog_Show(playerid, DIALOG_VIPREPAIR, DIALOG_STYLE_LIST, "[VIP]", "{00FFFF}PR{FFFFFF}EMI{00FFFF}UM {FFFFFF}ซ่อมรถ\n{FF0000}SU{FFFFFF}PER{FF0000}ME {FFFFFF}เติมน้ำมัน", "เลือก", "ปิด");
	return 1;
}
alias:viprepair("vipr")

CMD:help(playerid, const params[])
{
    SendClientMessage(playerid, COLOR_GREEN, "|======[ทั่วไป]======|");
    SendClientMessage(playerid, COLOR_WHITE, "/stats (ดูสถานะ) /โทรศัพ, /โทร /รับสาย /วางสาย /ข้อความ /ส่งข้อความ");
    SendClientMessage(playerid, COLOR_WHITE, "/คำสั่งรถ /ooc (พูดคุย) /gps (สถานที่) /ยอมรับ /bank (เงิน) /atm (ธนาคาร) /ให้เงิน");
    SendClientMessage(playerid, COLOR_WHITE, "/vip (พิเศษ) /report (แจ้งแอด) /gogo (กิจกรรม) /anims (ท่าทางพิเศษ)");
    SendClientMessage(playerid, COLOR_WHITE, "/สอบใบขับขี่ /ท่าทาง /vipr (สำหรับ VIP)");
	if (playerData[playerid][pFaction] != -1)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: ทั่วไป]======|");
 		SendClientMessage(playerid, COLOR_WHITE, "กลุ่ม:{FFFFFF} /online คนในแก็งออนไลน์, (/f)ac คุยในแก็ง, /ออกแก็ง, /ตู้เซฟ, /รับคน, /แตะคน, /เลื่อนยศ");

 		if (GetFactionType(playerid) == FACTION_POLICE)
		 {
 		    SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: ตำรวจ]======|");
 		    SendClientMessage(playerid, COLOR_WHITE, "/cuff กุญแจมือ, /uncuff ปลดกุญแจ, /drag ลากตัว, /arrest ส่งเข้าคุก, /suspect ยัดดาว ,/clearwd ลบดาว /detain ดึงตัวขึ้นรถ");
		    SendClientMessage(playerid, COLOR_WHITE, "/radio วิทะยุ, /wdlist ดูโจร, /chm (เปิดจุดโจร) /dept คุยในหน่วย /frisk (ค้นตัว) /takecannabis (ยึดของ)");
		}
		else if (GetFactionType(playerid) == FACTION_NEWS)
		{
			SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: นักข่าว]======|");
		    SendClientMessage(playerid, COLOR_WHITE, "/radio (วิทะยุ)");
		}
  		else if (GetFactionType(playerid) == FACTION_MEDIC)
		  {
  			SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: แพทย์]======|");
 		    SendClientMessage(playerid, COLOR_WHITE, "/chm (เปิดจุดคนตาย) /radio (วิทะยุ), /dept (พูดคุยในหน่วย), /รักษา, /ชุบชีวิต");
		}
		else if (GetFactionType(playerid) == FACTION_GOV)
		{
			SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: รัฐ]======|");
 		    SendClientMessage(playerid, COLOR_WHITE, "/radio, /dept, /เบิกเงิน, /ฝากเงินเข้ากองคลัง");
		}
		else if (GetFactionType(playerid) == FACTION_MEC)
		{
			SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: ช่าง]======|");
 		    SendClientMessage(playerid, COLOR_WHITE, "/ช่อม /แต่งลาย /ช่าง");
		}
	}
	if (playerData[playerid][pAdmin] > 0)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: แอดมิน]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "(/a)dmin, /ahelp, /as");
	}
	return 1;
}

alias:carhelp("คำสั่งรถ")
CMD:carhelp(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN, "|======[รถส่วนตัว]======|");
    SendClientMessage(playerid, COLOR_WHITE, "/เรียกรก ,/เก็บรถ,/จุดจอดรถ");
    SendClientMessage(playerid, COLOR_WHITE, "/สตาร์ทรถ,/ล็อครถ, /จอดรถ,/ซื้อรถ,/ขายรถ");
	return 1;
}

/*CMD:barp(playerid, params[]) {
	new
		Float:x,
		Float:y,
		Float:w,
		Float:h;

	sscanf(params, "ffff", x, y, w, h);

	SetPlayerProgressBarPos(playerid, barexp[playerid], x, y);
	SetPlayerProgressBarWidth(playerid, barexp[playerid], w);
	SetPlayerProgressBarHeight(playerid, barexp[playerid], h);

	return 1;
}*/

CMD:te1(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	ClearPlayerChat(playerid, 20);
	new id, int;
    sscanf(params, "dd", id, int);
	switch(id)
	{
	    case 1: SetPlayerPos(playerid, -1066.78699, -1007.05652, 128.19983 + 0.5);
	    case 2: SetPlayerPos(playerid, 1926.82983, 238.82437, 27.86994 + 0.5);
	    case 3: SetPlayerPos(playerid, -1421.45715, -951.54065, 199.91959 + 0.5);
		case 4: SetPlayerPos(playerid, -1117.64026, -1261.82129, 125.59157 + 0.5);
		case 5: SetPlayerPos(playerid, 2009.4140, 1017.8990, 994.4680);
		case 6: SetPlayerPos(playerid, -1117.64026, -1275.28125, 125.59160 + 0.5);
		case 7: SetPlayerPos(playerid, -1382.55835, -1510.91846, 101.91750 + 0.5);
		case 8: SetPlayerPos(playerid, 542.0433, -1293.5909, 17.2422);
		case 9: SetPlayerPos(playerid, -1060.78784, -1002.70428, 128.19983 + 0.5);
		case 10: SetPlayerPos(playerid, 1927.59583, 231.25336, 27.86994 + 0.5);
		case 11: SetPlayerPos(playerid, -1426.43408, -946.23291, 199.91959 + 0.5);
	}
	SetPlayerInterior(playerid, int);
	return 1;
}

CMD:te2(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new id, Float: ammo;
    sscanf(params, "df", id, ammo);
	switch(id)
	{
		case 1: playerData[playerid][pThirsty] = ammo;
		case 2: playerData[playerid][pHungry] = ammo;
	}
	return 1;
}

CMD:te3(playerid, params[])
{
	new
		animLib[32],
		animName[32];

	GetAnimationName(GetPlayerAnimationIndex(playerid), animLib, sizeof animLib, animName, sizeof animName);
	SendClientMessageEx(playerid, 0xFFFFFFFF, "Running anim: %s %s %d", animLib, animName, GetPlayerAnimationIndex(playerid));
	SendClientMessageEx(playerid, 0xFFFFFFFF, "Faction Get %d Faction pVar %d", GetFactionType(playerid), playerData[playerid][pFaction]);
	return 1;
}

Dialog:DIALOG_QUESTDONE(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(playerData[playerid][pQuest])
		{
			case 0:
			{
				if (playerData[playerid][pQuestProgress] == 1)
				{
					static exp = 100, money = 500;
					playerData[playerid][pQuest] = 1;
					playerData[playerid][pQuestProgress] = 0;
					GivePlayerExp(playerid, exp);
					GivePlayerMoneyEx(playerid, money);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "[ภารกิจ] {FFFFFF}คุณได้ส่งภารกิจสำเร็จ ได้รับรางวัลเป็น %s Exp เงินจำนวน %s", FormatNumber(exp), FormatMoney(money));
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณยังทำภารกิจไม่สำเร็จ");
				}
			}
			case 1:
			{
				if (playerData[playerid][pQuestProgress] >= 20)
				{
					static exp = 500, money = 1000;
					playerData[playerid][pQuest] = 2;
					playerData[playerid][pQuestProgress] = 0;
					GivePlayerExp(playerid, exp);
					GivePlayerMoneyEx(playerid, money);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "[ภารกิจ] {FFFFFF}คุณได้ส่งภารกิจสำเร็จ ได้รับรางวัลเป็น %s Exp เงินจำนวน %s", FormatNumber(exp), FormatMoney(money));
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณยังทำภารกิจไม่สำเร็จ");
				}
			}
			case 2:
			{
				if (playerData[playerid][pQuestProgress] == 1)
				{
					static exp = 1000, money = 3000;
					playerData[playerid][pQuest] = 3;
					playerData[playerid][pQuestProgress] = 0;
					GivePlayerExp(playerid, exp);
					GivePlayerMoneyEx(playerid, money);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "[ภารกิจ] {FFFFFF}คุณได้ส่งภารกิจสำเร็จ ได้รับรางวัลเป็น %s Exp เงินจำนวน %s", FormatNumber(exp), FormatMoney(money));
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณยังทำภารกิจไม่สำเร็จ");
				}
			}
			case 3:
			{
				if (playerData[playerid][pQuestProgress] == 1)
				{
					static exp = 1000, money = 4500;
					playerData[playerid][pQuest] = 4;
					playerData[playerid][pQuestProgress] = 0;
					GivePlayerExp(playerid, exp);
					GivePlayerMoneyEx(playerid, money);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "[ภารกิจ] {FFFFFF}คุณได้ส่งภารกิจสำเร็จ ได้รับรางวัลเป็น %s Exp เงินจำนวน %s", FormatNumber(exp), FormatMoney(money));
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณยังทำภารกิจไม่สำเร็จ");
				}
			}
		}
	}
	return 1;
}

Dialog:DIALOG_QUEST(playerid, response, listitem, inputtext[])
{
	new string[512];
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				if (playerData[playerid][pQuest] == 0)
				{
					Dialog_Show(playerid, DIALOG_QUESTDONE, DIALOG_STYLE_MSGBOX, "[รายละเอียดภารกิจ]", "\
						{33CCFF}หัวข้อ: {FFFFFF}เปิดแผนที่\n\n\
						{33CCFF}เนื้อหา: {FFFFFF}คุณจำเป็นต้องรู้เส้นทางในเมืองให้เยอะที่สุด\n\
						เปิดคำสั่ง ''/gps'' เลือก ''งานถูกกฎหมาย'' ต่อจากนั้นให้เลือก ''งานเก็บหอย''\n\
						ระบบจะนำทางคุณโดยจะมีจุดสีแดงใน Minimap ด้านซ้ายล่าง\n\n\
						{33CCFF}สิ่งที่ต้องหา: จุดงานเก็บหอย\n\
						{00FF00}รางวัล: {FFFFFF}100 Exp | เงิน $500", "ส่งภารกิจ", "ปิด");
				}
				else if (playerData[playerid][pQuest] == 1)
				{
					format(string, sizeof(string), "\
						{33CCFF}หัวข้อ: {FFFFFF}การเริ่มต้นชีวิตใหม่\n\n\
						{33CCFF}เนื้อหา: {FFFFFF}คุณจำเป็นต้องเรียนรู้การทำงานภายในเซิร์ฟเวอร์\n\
						ดังนั้นภารกิจนี้ง่ายมาก เพียงแค่ไปเก็บหอยให้ครบ 20 ฝา จากริมทะเล\n\
						โดยคุณจะสามารถเก็บและนำไปขายที่ตลาดกลางเมืองได้\n\n\
						{33CCFF}สิ่งที่ต้องหา: {FFFFFF}หอย %d/20\n\
						{00FF00}รางวัล: {FFFFFF}500 Exp | เงิน $1,000", playerData[playerid][pQuestProgress]);
					Dialog_Show(playerid, DIALOG_QUESTDONE, DIALOG_STYLE_MSGBOX, "[รายละเอียดภารกิจ]", string, "ส่งภารกิจ", "ปิด");
				}
				else if (playerData[playerid][pQuest] == 2)
				{
					format(string, sizeof(string), "\
						{33CCFF}หัวข้อ: {FFFFFF}การค้าขาย\n\n\
						{33CCFF}เนื้อหา: {FFFFFF}นำหอย 20 ฝาไปขายที่ตลาด\n\
						เปิดคำสั่ง ''/gps'' เลือก ''สถานที่ทั่วไป'' ต่อจากนั้นให้เลือก ''ตลาด''\n\
						นำหอยที่อยู่ในตัวคุณไปขายซะ หาร้านหอยให้เจอ\n\n\
						{33CCFF}สิ่งที่ต้องหา: {FFFFFF}ร้านขายหอย\n\
						{00FF00}รางวัล: {FFFFFF}1,000 Exp | เงิน $3,000", playerData[playerid][pQuestProgress]);
					Dialog_Show(playerid, DIALOG_QUESTDONE, DIALOG_STYLE_MSGBOX, "[รายละเอียดภารกิจ]", string, "ส่งภารกิจ", "ปิด");
				}
				else if (playerData[playerid][pQuest] == 3)
				{
					format(string, sizeof(string), "\
						{33CCFF}หัวข้อ: {FFFFFF}อัพเลเวล\n\n\
						{33CCFF}เนื้อหา: {FFFFFF}เมื่อ Exp คุณมีครบ 100%c\n\
						คุณสามารถอัพเลเวลได้โดยการใช้ ''/buylevel'' ในการอัพเลเวล\n\
						ซึ่งจะมีราคาการอัพในแต่ละเลเวลไม่เหมือนกัน\n\
						ยิ่งมากก็ยิ่งแพงนั่นเอง แต่อย่าลืมว่ารายได้ก็จะมากด้วยเช่นกัน\n\n\
						{33CCFF}สิ่งที่ต้องหา: {FFFFFF}-\n\
						{00FF00}รางวัล: {FFFFFF}1,000 Exp | เงิน $4,500", '%', playerData[playerid][pQuestProgress]);
					Dialog_Show(playerid, DIALOG_QUESTDONE, DIALOG_STYLE_MSGBOX, "[รายละเอียดภารกิจ]", string, "ส่งภารกิจ", "ปิด");
				}
		    }
		}
	}
	return 1;
}


/*CMD:quest(playerid, params[])
{
	new string[64];
	format(string, sizeof(string), "ภารกิจเลเวล {00FF00}%d", playerData[playerid][pQuest] + 1);
	Dialog_Show(playerid, DIALOG_QUEST, DIALOG_STYLE_TABLIST, "[ภารกิจ]", string, "เลือก", "ปิด");
	return 1;
}*/

CMD:ahelp(playerid, params[])
{
	if(playerData[playerid][pAdmin] >= 1)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 1]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/ban (แบนผู้เล่น) /baninfo (ดูข้อมูลการแบน) /jail (ขังคุก)");
        SendClientMessage(playerid, COLOR_WHITE, "/unjail (ส่งออกคุก) /kick (เตะผู้เล่น) /goto (วาร์ป)");
	}
	if(playerData[playerid][pAdmin] >= 3)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 3]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/s (ดึงผู้เล่น)");
	}
	if(playerData[playerid][pAdmin] >= 4)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 4]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/hp (ให้เลือด) /setarmor (ให้เกราะ)");
	}
	if(playerData[playerid][pAdmin] >= 5)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 5]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/hpall (ให้เลือดทั้งเซิร์ฟ) /setarmorall (ให้เกราะทั้งเซิร์ฟ)");
	}
	if(playerData[playerid][pAdmin] >= 6)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 6]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/setleader (ให้หลีด) /asetfaction (ให้ผู้เล่นเข้ากลุ่ม) /asetrank (ให้ยศผู้เล่นในกลุ่ม) /setadmin (ให้แอดมิน) /dynamichelp (คำสั่งสร้างในเกม)");
	    SendClientMessage(playerid, COLOR_WHITE, "/setitem (ปรับไอเท็มผู้เล่น) /giveitem (ให้ไอเท็มผู้เล่น) /deleteitem (ลบไอเท็มผู้เล่น /clearitem (ลบไอเท็มทั้งหมดของผู้เล่น)");
	    SendClientMessage(playerid, COLOR_WHITE, "/itemlist (ดูรายชื่อไอเท็มทั้งหมด) /fspawn (ปรับจุดเกิดของกลุ่ม) /toggle (ปิดระบบสื่อสาร)");
	    SendClientMessage(playerid, COLOR_WHITE, "/givemoney (ให้เงินผู้เล่น) /setmoney (ปรับเงินผู้เล่น) /event (จัดกิจกรรม)");
	    SendClientMessage(playerid, COLOR_WHITE, "/renewbiecar (รีจักรยานเด็กใหม่) /recar (รียานพาหนะทั้งหมด) /acpr (รักษาแอดมิน) /setstats (ปรับค่าต่าง ๆ ให้ผู้เล่น)");
	}
    return 1;
}

CMD:dynamichelp(playerid, params[])
{
	if(playerData[playerid][pAdmin] >= 6)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 6 DYNAMIC]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/createfaction (สร้างกลุ่ม) /deletefaction (ลบกลุ่ม) /editfaction (แก้ไขกลุ่ม)");
	    SendClientMessage(playerid, COLOR_WHITE, "/veh (เสกรถ) /destroyveh (ลบรถเสก) /removevehicle (ลบรถออกจากฐานข้อมูล) /editvehicle (แก้ไขรถ)");
	    SendClientMessage(playerid, COLOR_WHITE, "/createarrest (สร้างพื้นที่จับกุม) /deletearrest (ลบพื้นที่จับกุม)");
	    SendClientMessage(playerid, COLOR_WHITE, "/createentrance (สร้างประตู) /deleteentrance (ลบประตู) /editentrance (แก้ไขประตู)");
	    SendClientMessage(playerid, COLOR_WHITE, "/createpump (สร้างปั้ม) /deletepump (ลบปั้ม) /createshop (สร้างร้านค้า) /deleteshop (ลบร้านค้า)");
	    SendClientMessage(playerid, COLOR_WHITE, "/createatm (สร้าง ATM) /deleteatm (ลบ ATM) /creategarage (สร้างอู่) /deletegarage (ลบอู่)");
	    SendClientMessage(playerid, COLOR_WHITE, "/creategps (สร้าง GPS) /deletegps (ลบ GPS) /editgps (แก้ไข GPS) /agps (ดูไอดี/วาร์ป GPS)");
        SendClientMessage(playerid, COLOR_WHITE, "/createsafe (สร้าง Safe) /deletesafe (ลบ Safe) /editsafe (แก้ไข Safe)");
	}
    return 1;
}

GetElapsedTime(time, &hours, &minutes, &seconds)
{
	hours = 0;
	minutes = 0;
	seconds = 0;

	if (time >= 3600)
	{
		hours = (time / 3600);
		time -= (hours * 3600);
	}
	while (time >= 60)
	{
	    minutes++;
	    time -= 60;
	}
	return (seconds = time);
}

Float:GetVehicleSpeed(vehicleid)
{
    new Float:vx, Float:vy, Float:vz;
    GetVehicleVelocity(vehicleid, vx, vy, vz);
	new Float:vel = floatmul(floatsqroot(floatadd(floatadd(floatpower(vx, 2), floatpower(vy, 2)),  floatpower(vz, 2))), 181.5);
	return vel;
}

/*ptask PlayerUpdateInfo[250](playerid)
{
	new string[1024];

	if (IsPlayerNPC(playerid))
		return 1;

	if (IsPlayerSpawnedEx(playerid))
	{
		format(string, sizeof(string), "แก๊ง:{F9BE04}[%s]ชื่อ:{FFFFFF}[%s]ไอดีตัวละคร:{F91304}[%d]", Faction_GetName(playerid), GetPlayerNameEx(playerid), playerid);
		UpdateDynamic3DTextLabelText(cNametag[playerid], 0xFFFFFFFF, string);
	}*/
	//if (playerData[playerid][pMarryOn] == 1)
	//{
		//SetPlayerChatBubble(playerid, "[ แต่งงานแล้ว ]", 0xFA295CAA,20.0,10000);
	//}
	//return 1;
//}

ptask PlayerTimerSecond[1000](playerid)
{
	if (OpenUIMsFISHING[playerid])
	{
	RefreshFishingItem(playerid);
	} 

    if (!playerData[playerid][IsLoggedIn]) return 0;

	if(IsFPS[playerid] == 1) {
		SetPVarInt(playerid, "DisableFPS", 0);
		SyncCamera(playerid);
	}

	if (miningCD[playerid] > 0) miningCD[playerid] --;
	if (miningCD[playerid] < 0) miningCD[playerid] = 0;

	if (lazadaCD[playerid] > 0) lazadaCD[playerid] --;
	else if (lazadaCD[playerid] < 0) lazadaCD[playerid] = 0;

	//ms
	if (Inventory_Count(playerid, "เงินแดง") > 1000000) Inventory_Set(playerid, "เงินแดง", 1000000);
	if (Inventory_Count(playerid, "เหยื่อ") > 200) Inventory_Set(playerid, "เหยื่อ", 200);

	// เก็บรถเข้าการาจส่วนตัว
	if (CheckPlayerPickcar(playerid) != -1)
	{
		new i = GetPlayerVehicleID(playerid);
		if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			if(IsValidVehicle(i) && carData[i][carID] > 0 && IsVehicleOwner(playerid, i))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "รถรุ่น {FF6347}%s{FFFFFF} ถูกจัดเก็บเรียบร้อย", ReturnVehicleName(i));
				KillTimer(playerData[playerid][pSpeedoTimer]);
				DespawnVehicle(i);
			}
		}
	}
	Brian_CheckStatusWhitelist(playerid);

	// อุ้มเอ๋อ
	if (playerData[playerid][pDragStart] == 1)
	{
	    new userid = playerData[playerid][pDragID], dString[128];
	    playerData[playerid][pDragTime] ++;

		format(dString, sizeof(dString), "~b~Drag Time: ~w~%d/60", playerData[playerid][pDragTime]);
		GameTextForPlayer(playerid, dString, 2000, 3);

		format(dString, sizeof(dString), "~b~Drag Time: ~w~%d/60", playerData[playerid][pDragTime]);
		GameTextForPlayer(userid, dString, 2000, 3);

		if (playerData[userid][pInjured] == 0)
		{
	     	SetPVarInt(userid, "DisableFPS", 1);

	     	DestroyObject(CameraFirstPerson[userid]);

			SetCameraBehindPlayer(userid);
	      	IsFPS[userid] = 0;

			// ยกเลิก
		    playerData[playerid][pDragStart] = 0;
		    playerData[playerid][pDragID] = -1;
		    playerData[playerid][pDragTime] = 0;

		    playerData[userid][pDragged] = 0;
		    playerData[userid][pDraggedBy] = INVALID_PLAYER_ID;

		    SetPlayerVirtualWorld(userid, GetPlayerVirtualWorld(playerid));

			ApplyAnimation(playerid, "CARRY", "putdwn", 4.0, 0, 0, 0, 0, 0);
			RemovePlayerAttachedObject(playerid, 6);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

		    KillTimer(playerData[userid][pDragTimer]);
		}

	    if (playerData[playerid][pDragTime] >= 60)
	    {
			playerData[userid][pPrisoned] = 3;
			playerData[userid][pJailTime] = 60 * 10; // time * 60
			UpdateplayerData(userid);

			playerData[userid][pPrisonOut] = 0;

			StopDragging(userid);

	     	SetPVarInt(userid, "DisableFPS", 1);

	     	DestroyObject(CameraFirstPerson[userid]);

			SetCameraBehindPlayer(userid);
	      	IsFPS[userid] = 0;

			playerData[userid][pDragged] = 0;
			playerData[userid][pDraggedBy] = INVALID_PLAYER_ID;

			SetPlayerVirtualWorld(userid, GetPlayerVirtualWorld(playerid));

			ApplyAnimation(playerid, "CARRY", "putdwn", 4.0, 0, 0, 0, 0, 0);
			RemovePlayerAttachedObject(playerid, 6);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

			KillTimer(playerData[userid][pDragTimer]);

			SetPlayerPos(userid, 1200.0908,-1342.3706,13.3995);
			SetPlayerFacingAngle(userid, 269.3840);
			SetPlayerInterior(userid, 0);
			SetPlayerVirtualWorld(userid, 0);

	        SendClientMessage(userid, COLOR_LIGHTRED, "[+] {FFFFFF}คุณถูกส่งตัวเข้าคุก 10 นาที โดนเอ๋อ");
			SendClientMessageToAllEx(-1, "{F34C1F}[ตู้ปลา] : {ECF306}ผู้เล่น %s ถูกส่งตัวเข้าตู้ปลาเป็นเวลา 10 นาที สาเหตุเอ๋อ", GetPlayerNameEx(userid));

			playerData[userid][pInjured] = 0;
			playerData[userid][pInjuredTime] = 0;

			SetPlayerHealth(userid, 100);
			SetPlayerWeather(userid, globalWeather);

		    ClearAnimations(userid);
		    PlayerTextDrawHide(userid, PlayerDeathTD[userid]);
		    ShowPlayerStats (userid, true);

		    Injured_Remove(userid);

			// ยกเลิก
		    playerData[playerid][pDragStart] = 0;
		    playerData[playerid][pDragID] = -1;
		    playerData[playerid][pDragTime] = 0;
	    }
	}
	if (!playerData[playerid][IsLoggedIn]) return 0;

	SetPlayerScore(playerid, playerData[playerid][pLevel]);

	if(IsFPS[playerid] == 1) {
		SetPVarInt(playerid, "DisableFPS", 0);
		SyncCamera(playerid);
	}
 
	foreach (new i : Player)
    {
		new idz = -1;
		if ((idz = Boombox_Nearest(i)) != INVALID_PLAYER_ID && playerData[i][pBoombox] != idz && strlen(BoomboxData[idz][boomboxURL]) && !IsPlayerInAnyVehicle(i))
		{
		    new str[128];
		    strunpack(str, BoomboxData[idz][boomboxURL]);
		    playerData[i][pBoombox] = idz;

		    //StopAudioStreamForPlayer(i);
		    PlayAudioStreamForPlayer(i, str, BoomboxData[idz][boomboxPos][0], BoomboxData[idz][boomboxPos][1], BoomboxData[idz][boomboxPos][2], 30.0, 1);
		}
		else if (playerData[i][pBoombox] != INVALID_PLAYER_ID && !IsPlayerInRangeOfPoint(i, 30.0, BoomboxData[playerData[i][pBoombox]][boomboxPos][0], BoomboxData[playerData[i][pBoombox]][boomboxPos][1], BoomboxData[playerData[i][pBoombox]][boomboxPos][2]))
		{
		    playerData[i][pBoombox] = INVALID_PLAYER_ID;
		    StopAudioStreamForPlayer(i);
		}
	}

	//ระบบซ่อมรถใหม่

	if (isRepairVehicle[playerid] == 3)
	{
		repairPoints[playerid] += 5;
		ApplyAnimation(playerid, "BD_FIRE","wash_up", 4.1, 0, 0, 0, 1, 0, 0);
		//PlayerTextDrawShow(playerid, Loading[playerid][0]);
		//SetPlayerProgressBarValue(playerid, LoadingBar[playerid][0], repairPoints[playerid]);			
		//ShowPlayerProgressBar(playerid, LoadingBar[playerid][0]);
		//SetPlayerProgressBarValue(playerid, LoadingBar[playerid][1], repairPoints[playerid]);			
		//ShowPlayerProgressBar(playerid, LoadingBar[playerid][1]);

        //format(string, sizeof(string), "Loading_%d%", repairPoints[playerid]);
        //PlayerTextDrawSetString(playerid, Loading[playerid][0], string);		

		if (repairPoints[playerid] >= 100)
		{
            isRepairVehicle[playerid] = 0;
            repairPoints[playerid] = 0;

			for (new i = 1; i != MAX_VEHICLES; i ++) if (IsValidVehicle(i) && IsPlayerNearHood(playerid, i))
			{
			    RepairVehicle(i);
			}

			RemovePlayerAttachedObject(playerid, 7);
			RemovePlayerAttachedObject(playerid, 8);
			ClearAnimations(playerid);
			isRepairVehicle[playerid] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "> คุณได้ทำการซ่อมรถเสร็จสิ้นแล้ว");

			//PlayerTextDrawHide(playerid, Loading[playerid][0]);
			//HidePlayerProgressBar(playerid, LoadingBar[playerid][0]);	
			//HidePlayerProgressBar(playerid, LoadingBar[playerid][1]);			

			TogglePlayerControllable(playerid, 1);
		}
		return 1;
	}

	// ชื่อแก๊งบนหัว
	/*if (playerData[playerid][pFaction] != -1)
	{
		new Msg[128];
		format(Msg, sizeof(Msg), "{%06x}[%s]", factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid));
	    SetPlayerChatBubble(playerid, Msg, COLOR_WHITE, 50.0, 10000);
	}*/
	if (playerData[playerid][pFaction] != -1)
	{
	    if (playerData[playerid][pMarryOn] == 0)
	    {
			new string[256];
			format(string, sizeof(string), "{%06x} %s", factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid));
		    SetPlayerChatBubble(playerid, string, COLOR_WHITE, 15.0, 1500);
		}
		else
		{
			//new strings[256];
			//format(strings, sizeof(strings), "{F60661}แต่งงานแล้ว\n{%06x}%s", factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid));
			//SetPlayerChatBubble(playerid,string, COLOR_RED,30.0,1500);
		}
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	if (GetVehicleSpeed(vehicleid) >= 290.0)
	{
	    if (playerData[playerid][pAdmin] > 4)
    		return 1;

		SendAdminMessage(COLOR_RED, "(( [AGGUARDSPEED] (%d)%s:ขับรถเร็วมากเกินไป ถึง 290 !! ))", playerid, GetPlayerNameEx(playerid));
		SendClientMessageToAllEx(COLOR_LIGHTRED, "{FF0000}[{FFFF00}AGGUARD{FF0000}] {FFFF00}%s ถูกเตะออกจากเซิฟเวอร์ |>{00FFFF}  โปรรถบิน ", GetPlayerNameEx(playerid));
        return DelayedKick(playerid);
	}

	// AutoSave
    UpdateplayerData(playerid);

	// เก็บของได้ไม่จำกัด
	playerData[playerid][pMaxItem] = 30;
	playerData[playerid][pItemAmount] = 1000000;

	if (playerData[playerid][pInjuredTime] > 0)
	{
	    if (playerData[playerid][pInjuredTime] > 0)
	    {
		    static
		        hours,
		        minutes,
		        seconds,
				str[128];

			playerData[playerid][pInjuredTime]--;

		    GetElapsedTime(playerData[playerid][pInjuredTime], hours, minutes, seconds);

			format(str, sizeof(str), "~r~RESPAWN ~w~AVAILABLE IN ~r~%02d MINUTES %02d SECONDS", minutes, seconds);
			PlayerTextDrawSetString(playerid, PlayerDeathTD[playerid], str);

			ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.1, 0, 1, 1, 1, 0, 1);
		}
		if (!playerData[playerid][pInjuredTime])
		{
		    playerData[playerid][pHealth] = 100.0;
		    playerData[playerid][pInjured] = 0;
		    playerData[playerid][pInjuredTime] = 0;
		    playerData[playerid][pHospital] = 1;
		    SpawnPlayer(playerid);
		}
	}

    if(targeton[playerid] > 0)
	{
	    new Float:X, Float:Y, Float:Z;
		GetPlayerPos(targetonname[playerid], X, Y, Z);
	    SetPlayerCheckpoint(playerid, X,Y,Z, 5);
	}
	if (playerData[playerid][pStunned] > 0)
	{
        playerData[playerid][pStunned]--;
       	//ApplyAnimation(playerid, "CRACK", "crckdeth4", 4.0, 0, 0, 0, 1, 0, 1);
        if (!playerData[playerid][pStunned])
        {
            TogglePlayerControllable(playerid, true);
		}
	}
	if (playerData[playerid][pJailTime] > 0)
	{
	    static
	        hours,
	        minutes,
	        seconds,
			str[128];

	    playerData[playerid][pJailTime]--;

		GetElapsedTime(playerData[playerid][pJailTime], hours, minutes, seconds);

		format(str, sizeof(str), "~g~Prison Time:~w~ %02d:%02d:%02d", hours, minutes, seconds);
		GameTextForPlayer(playerid, str, 2000, 6);

		if (!playerData[playerid][pJailTime])
	    {
	        SetPlayerPosExten(playerid, 1539.3521,-1678.8779,13.5469);
	        SetPlayerInterior(playerid, 0);
	        SetPlayerVirtualWorld(playerid, 0);
			SetPlayerSkin(playerid, playerData[playerid][pSkin]);
	       	ShowPlayerStats(playerid, true);

			SendClientMessage(playerid, COLOR_WHITE, "คุณถูกปล่อยตัวจากห้องขังแล้ว");
			TogglePlayerControllable(playerid, true);
		}
	}
	if (GetPlayerWantedLevelEx(playerid) > 0)
	{
	/*    playerData[playerid][pWantedTime]++;
	    if(playerData[playerid][pWantedTime] > 0)
	    {
	        playerData[playerid][pWantedTime] = 0;
	        GivePlayerWanted(playerid, -1);*/
		new str[64];

	    playerData[playerid][pWantedTime]++;

		format(str, 32, "~b~Wanted Time:~w~ %d/300", playerData[playerid][pWantedTime]);
	    GameTextForPlayer(playerid, str, 1000, 4);

	    if(playerData[playerid][pWantedTime] > 300)
	    {
	        playerData[playerid][pWantedTime] = 0;
	        GivePlayerWanted(playerid, -1);
	        SendClientMessageEx(playerid, COLOR_GREEN, "[คดีความ] {FFFFFF}ดาวของคุณถูกลบออกไป 1 หลังจากคุณรอดนานครบ 5 นาที! ดาวทั้งหมด {00FF00}%d", GetPlayerWantedLevelEx(playerid));
	    }
	}
	/*new vehicleid = GetPlayerVehicleID(playerid);
	new Float:vehiclehealth;
	GetVehicleHealth(vehicleid, vehiclehealth);
	if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
		switch (GetEngineStatus(vehicleid))
		{
			case true:
			{
  				if (vehiclehealth < 350)
				{
				    SetVehicleHealth(vehicleid, 350);
			        SetEngineStatus(vehicleid, false);
				}
			}
		}
	}*/
	// กันรถระเบิด
	new vehicleidx = GetPlayerVehicleID(playerid);
	new Float:vehiclehealth;
	GetVehicleHealth(vehicleidx, vehiclehealth);
	if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		switch (GetEngineStatus(vehicleidx))
		{
			case true:
			{
  				if (vehiclehealth < 350)
  				{
				    SetVehicleHealth(vehicleidx, 350);
			        SetEngineStatus(vehicleidx, false);
				}
			}
			case false:
			{
			    if (vehiclehealth < 350)
  				{
				    // -----------
				    SetVehicleHealth(vehicleidx, 350);
				    SendClientMessage(playerid, COLOR_RED, "[รถยนต์] เครื่องยนต์เสียหาย ไม่สามารถสตาร์ทได้(ต้องเรียกช่างซ่อม)");
				}
			}
		}
	}

	if (playerData[playerid][pDrivingTest] && IsPlayerInVehicle(playerid, playerData[playerid][pTestCar]))
	{
	    if (!IsPlayerInRangeOfPoint(playerid, 100.0, g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][0], g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][1], g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][2]))
		{
	        CancelDrivingTest(playerid);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน]{FFFFFF} คุณขับออกนอกเขตมากเกินไป การสอบจึงถูกยกเลิก");
		}
		else if (GetVehicleSpeed(vehicleid) >= 90.0)
		{
			if (++playerData[playerid][pTestWarns] < 3)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTRED, "[คำเตือน]{FFFFFF} คุณขับเร็วมากเกินไป เตือนครั้งที่ (%d/3)", playerData[playerid][pTestWarns]);
				SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน]{FFFFFF} ความเร็วต้องไม่เกิน 90 KM/H");
    		}
       		else
			{
				CancelDrivingTest(playerid);
    			SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน]{FFFFFF} คุณขับเร็วมากเกินไป  ครบ 3 ครั้ง การสอบจึงถูกยกเลิก");
		    }
		}
	}
	if (playerData[playerid][pOOCSpam] > 0) playerData[playerid][pOOCSpam]--;
	if (playerData[playerid][pHungry] > 100) playerData[playerid][pHungry] = 100;
	if (playerData[playerid][pThirsty] > 100) playerData[playerid][pThirsty] = 100;
	if (playerData[playerid][pHungry] < 0) playerData[playerid][pHungry] = 0;
	if (playerData[playerid][pThirsty] < 0) playerData[playerid][pThirsty] = 0;
	if (playerData[playerid][pPVPFreeze] > 0)
	{
		playerData[playerid][pPVPFreeze]--;
		if (playerData[playerid][pPVPFreeze] <= 0)
		{
		    TogglePlayerControllable(playerid, true);
			playerData[playerid][pPVPFreeze] = 0;
		}
	}
	if (playerData[playerid][pPVPFreeze] < 0)
	{
	    TogglePlayerControllable(playerid, true);
		playerData[playerid][pPVPFreeze] = 0;
	}
    return 1;
}

/*ptask PlayerTimerPayday[60*1000](playerid)
{
	if (!playerData[playerid][IsLoggedIn]) return 0;

	playerData[playerid][pMinutes]++;
	if (playerData[playerid][pMinutes] >= 60)
	{
	    new morereward;
	    switch(playerData[playerid][pVip])
	    {
	        case 1: morereward = 350;
	        case 2: morereward = 500;
	        case 3: morereward = 750;
			case 4: morereward = 1000;
	    }
	    new reward = playerData[playerid][pLevel]*1100+morereward;
	    playerData[playerid][pHours]++;
	    playerData[playerid][pMinutes] = 0;
	    GivePlayerMoneyEx(playerid, reward);
	    SendClientMessageEx(playerid, COLOR_YELLOW, "** {FFFFFF}คุณได้เล่นครบ {00FF00}%d {FFFFFF}ชั่วโมงแล้ว", playerData[playerid][pHours]);
	    SendClientMessageEx(playerid, COLOR_YELLOW, "** {FFFFFF}คุณได้รับเงินจำนวน {00FF00}%s", FormatMoney(reward));

		// ออน10ชั่วโมงรับน่องไก่+กาชาปองสายฟรี
		if (playerData[playerid][pHours] == 10)
		{
		    Inventory_Add(playerid, "น่องไก่", 1);
			Inventory_Add(playerid, "กาชาปองสายฟรี", 1);
		    SendClientMessage(playerid, -1, "{454443}|------------------------------------|");
		    SendClientMessage(playerid, -1, "{FB4711}+ {FDBFAD}คุณได้รับ {ffffff}'น่องไก่' {F7D603}+ 1 {FDBFAD}จากการออนไลน์ครบ 10 ชั่วโมง");
		    SendClientMessage(playerid, -1, "{FB4711}+ {FDBFAD}คุณได้รับ {ffffff}'กาชาปองสายฟรี' {F7D603}+ 1 {FDBFAD}จากการออนไลน์ครบ 10 ชั่วโมง");
		    SendClientMessage(playerid, -1, "{F7AD03}> ไอเทมดังกล่าวถูกเพิ่มเข้ากระเป๋าเก็บของคุณแล้ว!");
		    SendClientMessage(playerid, -1, "{454443}|------------------------------------|");
		}
		// ออน10ชั่วโมงรับกล้วยพกพา,makira
		if (playerData[playerid][pHours] == 20)
		{
		    Inventory_Add(playerid, "กล้วยพกพา", 1);
			Inventory_Add(playerid, "Makira", 1);
		    SendClientMessage(playerid, -1, "{454443}|------------------------------------|");
		    SendClientMessage(playerid, -1, "{FB4711}+ {FDBFAD}คุณได้รับ {ffffff}'กล้วยพกพา' {F7D603}+ 1 {FDBFAD}จากการออนไลน์ครบ 20 ชั่วโมง");
		    SendClientMessage(playerid, -1, "{FB4711}+ {FDBFAD}คุณได้รับ {ffffff}'แฟชั่น Makira' {F7D603}+ 1 {FDBFAD}จากการออนไลน์ครบ 20 ชั่วโมง");
		    SendClientMessage(playerid, -1, "{F7AD03}> ไอเทมดังกล่าวถูกเพิ่มเข้ากระเป๋าเก็บของคุณแล้ว!");
		    SendClientMessage(playerid, -1, "{454443}|------------------------------------|");
		}		
	}
    return 1;
}*/

ptask PlayerTimerHunger[10*1000](playerid)
{
	if(!playerData[playerid][IsLoggedIn]) return 0;

	if(playerData[playerid][pJailTime]) return 0;

	if(playerData[playerid][pInjured]) return 0;

	if(playerData[playerid][pThirsty] > 0) playerData[playerid][pThirsty] -= floatdiv(float(10), floatmul(9, 36));
	if(playerData[playerid][pHungry] > 0) playerData[playerid][pHungry] -= floatdiv(float(10), floatmul(12, 36));

    if(playerData[playerid][pThirsty] < 10 && playerData[playerid][pHungry] < 10)
	{
	    new Float:hp;
	    GetPlayerHealth(playerid, hp);
	    SetPlayerHealth(playerid, hp-0.3);
	    SendClientMessage(playerid, COLOR_YELLOW, "[หิว] : {FFFFFF}คุณเริ่มรู้สึกหิวแล้ว'");
	}
	else if(playerData[playerid][pThirsty] < 10)
	{
	    new Float:hp;
	    GetPlayerHealth(playerid, hp);
	    SetPlayerHealth(playerid, hp-0.2);
	    SendClientMessage(playerid, COLOR_YELLOW, "[หิว] : {FFFFFF}คุณเริ่มรู้สึกหิวแล้ว'");
	}
	else if(playerData[playerid][pHungry] < 10)
	{
	    new Float:hp;
	    GetPlayerHealth(playerid, hp);
	    SetPlayerHealth(playerid, hp-0.2);
	    SendClientMessage(playerid, COLOR_YELLOW, "[หิว] : {FFFFFF}คุณเริ่มรู้สึกหิวแล้ว'");
	}
    return 1;
}

stock GetSeconds(seconds)
{
	seconds = seconds * 1000;
	return seconds;
}

forward OnProgressUpdate(playerid, progress, objectid);
forward OnProgressFinish(playerid, objectid);

/*StartProgress(playerid, duration, startvalue = 0, objectid)
{
	if(ProgressState[playerid] == 1)
		return 0;

	stop ProgressTimer[playerid];
	ProgressTimer[playerid] = repeat ProgressUpdate(playerid, objectid);

	ProgressLimit[playerid] = duration;
	ProgressCount[playerid] = startvalue;
	ProgressState[playerid] = 1;
	ProgressObject[playerid] = objectid;

	new string[32];
	format(string, sizeof string, "~l~CODE");
	PlayerTextDrawSetString(playerid, LoadingTextDraw[playerid][0], string);

	format(string, sizeof string, "~l~HUB");
	PlayerTextDrawSetString(playerid, LoadingTextDraw[playerid][1], string);

	PlayerTextDrawShow(playerid, LoadingTextDraw[playerid][0]);
	PlayerTextDrawShow(playerid, LoadingTextDraw[playerid][1]);
	PlayerTextDrawShow(playerid, LoadingTextDraw[playerid][2]);
	PlayerTextDrawShow(playerid, LoadingTextDraw[playerid][3]);
	PlayerTextDrawShow(playerid, LoadingTextDraw[playerid][4]);
	PlayerTextDrawShow(playerid, LoadingTextDraw[playerid][5]);
	PlayerTextDrawShow(playerid, LoadingTextDraw[playerid][6]);
	PlayerTextDrawShow(playerid, LoadingTextDraw[playerid][7]);
	PlayerTextDrawShow(playerid, LoadingTextDraw[playerid][8]);
	return 1;
}

StopProgress(playerid)
{
	if(ProgressState[playerid] == 0)
		return 0;

	stop ProgressTimer[playerid];
	ProgressLimit[playerid] = 0;
	ProgressCount[playerid] = 0;
	ProgressState[playerid] = 0;
	ProgressObject[playerid] = INVALID_STREAMER_ID;

	ClearAnimations(playerid);
	PlayerTextDrawHide(playerid, LoadingTextDraw[playerid][0]);
	PlayerTextDrawHide(playerid, LoadingTextDraw[playerid][1]);
	PlayerTextDrawHide(playerid, LoadingTextDraw[playerid][2]);
	PlayerTextDrawHide(playerid, LoadingTextDraw[playerid][3]);
	PlayerTextDrawHide(playerid, LoadingTextDraw[playerid][4]);
	PlayerTextDrawHide(playerid, LoadingTextDraw[playerid][5]);
	PlayerTextDrawHide(playerid, LoadingTextDraw[playerid][6]);
	PlayerTextDrawHide(playerid, LoadingTextDraw[playerid][7]);
	PlayerTextDrawHide(playerid, LoadingTextDraw[playerid][8]);
	return 1;
}

timer ProgressUpdate[100](playerid, objectid)
{
	if(ProgressCount[playerid] >= ProgressLimit[playerid])
	{
		StopProgress(playerid);
		CallLocalFunction("OnProgressFinish", "dd", playerid, objectid);
		return;
	}

	SetTimer("TextdrawColorChange", 100, 0);

	CallLocalFunction("OnProgressUpdate", "ddd", playerid, ProgressCount[playerid], objectid);
	ProgressCount[playerid]++;
	new Float:current_progress;
	if (ProgressLimit[playerid] == 0) { } else { current_progress = (ProgressCount[playerid]*100/ProgressLimit[playerid]); }

	new string[128];
	if (current_progress > 10 && current_progress < 20)
	{
		format(string, sizeof string, "~w~C~l~ODE");
		PlayerTextDrawSetString(playerid, LoadingTextDraw[playerid][0], string);
	}
	else if (current_progress > 20 && current_progress < 30)
	{
		format(string, sizeof string, "~w~CO~l~DE");
		PlayerTextDrawSetString(playerid, LoadingTextDraw[playerid][0], string);
	}
	else if (current_progress > 30 && current_progress < 40)
	{
		format(string, sizeof string, "~w~COD~l~E");
		PlayerTextDrawSetString(playerid, LoadingTextDraw[playerid][0], string);
	}
	else if (current_progress > 50 && current_progress < 70)
	{
		format(string, sizeof string, "~w~CODE");
		PlayerTextDrawSetString(playerid, LoadingTextDraw[playerid][0], string);
	}
	else if (current_progress > 70 && current_progress < 90)
	{
		format(string, sizeof string, "~b~~h~H~l~UB");
		PlayerTextDrawSetString(playerid, LoadingTextDraw[playerid][1], string);
	}
	else if (current_progress > 90 && current_progress < 93)
	{
		format(string, sizeof string, "~b~~h~HU~l~B");
		PlayerTextDrawSetString(playerid, LoadingTextDraw[playerid][1], string);
	}
	else if (current_progress > 97 && current_progress <= 100)
	{
		format(string, sizeof string, "~b~~h~HUB");
		PlayerTextDrawSetString(playerid, LoadingTextDraw[playerid][1], string);
	}
}*/

forward peton(playerid);
forward petoff(playerid);
forward OnPlayerUseItem(playerid, const name[]);
public OnPlayerUseItem(playerid, const name[])
{
	new isBroke = IsWeaponBroke(playerid, name);
	if (isBroke) return 1;
	if (!strcmp(name, "ผ้าพันแผล", true))
    {
        return UseBandageItem(playerid); // เรียกใช้ฟังก์ชันเพิ่มเลือด
	
    }

	if (!strcmp(name, "ผ้าพันแผลใหญ่", true))
    {
        return PlayerBandage(playerid); // เรียกใช้ฟังก์ชันเพิ่มเลือด
	
    }

	if (strfind(name, "กล่องสกิน", true) != -1)
	{
		new skinName[64];
		format(skinName, sizeof(skinName), "กล่องสกิน%d", strval(name));
		if (!strcmp(name, skinName, true))
		{
			if (!skinUse[playerid])
			{
				oldSKin[playerid] = GetPlayerSkin(playerid);
				SetPlayerSkin(playerid, strval(name));
				skinUse[playerid] = true;
				SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวมใส่สกิน {00FF00}%d", strval(name));
			}
			else
			{
				SetPlayerSkin(playerid, oldSKin[playerid]);
				skinUse[playerid] = false;
				SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอดสกิน {00FF00}%d", strval(name));
			}
		}
	}

	if (!strcmp(name, "pet", true))
	{
		if (pet_type[playerid] == 0)
		{
			peton(playerid);
			pet_type[playerid] = 1; // เปิดใช้งาน
		}
		else
		{
			petoff(playerid);
			pet_type[playerid] = 0; // ปิดใช้งาน
		}
		return 1;
	}
	for (new i=0;i!=sizeof(cl_SportsData);++i)
	{
	    if (!strcmp(name, cl_SportsData[i][e_name], true))
	    {
			new model, bone, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, Float:sx, Float:sy, Float:sz;

			model = cl_SportsData[i][e_model];
			bone = cl_SportsData[i][e_bone];
			x = cl_SportsData[i][e_x];
			y = cl_SportsData[i][e_y];
			z = cl_SportsData[i][e_z];
			rx = cl_SportsData[i][e_rx];
			ry = cl_SportsData[i][e_ry];
			rz = cl_SportsData[i][e_rz];
			sx = cl_SportsData[i][e_sx];
			sy = cl_SportsData[i][e_sy];
			sz = cl_SportsData[i][e_sz];

			SetPlayerAttachedObject(playerid, 3, model, bone, x, y, z, rx, ry, rz, sx, sy, sz);
			SendClientMessageEx(playerid, COLOR_YELLOW, "+ คุณได้สวมใส่ %s เรียบร้อยแล้ว (/ถอดชุด) เพื่อเอาชุดออก", name);
		}
	}

	// ระบบแต่งตัว
	for (new i=0;i!=sizeof(cl_ZipData);++i)
	{
	    if (!strcmp(name, cl_ZipData[i][e_name], true))
	    {
			new model, bone, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, Float:sx, Float:sy, Float:sz;

			model = cl_ZipData[i][e_model];
			bone = cl_ZipData[i][e_bone];
			x = cl_ZipData[i][e_x];
			y = cl_ZipData[i][e_y];
			z = cl_ZipData[i][e_z];
			rx = cl_ZipData[i][e_rx];
			ry = cl_ZipData[i][e_ry];
			rz = cl_ZipData[i][e_rz];
			sx = cl_ZipData[i][e_sx];
			sy = cl_ZipData[i][e_sy];
			sz = cl_ZipData[i][e_sz];

			SetPlayerAttachedObject(playerid, 3, model, bone, x, y, z, rx, ry, rz, sx, sy, sz);
			SendClientMessageEx(playerid, COLOR_YELLOW, "+ คุณได้สวมใส่ %s เรียบร้อยแล้ว (/ถอดชุด) เพื่อเอาชุดออก", name);
		}
	}
	if(!strcmp(name, "กาชาปอง", true))
	{
        if(GACHAPON_PLAYER[playerid] == 0)
        {
            GACHAPON_INTERFACE(playerid, true);
        }
	}
	
	// กล่องสุ่มงานดำ
	if (!strcmp(name, "กล่องสุ่มเงินแดง", true))
	{
	    Inventory_Remove(playerid, name);

		new blackrandom = random(8);
		switch (blackrandom)
		{
		    case 0:
		    {
                 //playerData[playerid][pRedMoney] += 30000;
				GivePlayerRedMoney(playerid, 30000);
				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 30k จากการเปิดกล่องสุ่มเงินแดง");
		    }
		    case 1:
		    {
                 //playerData[playerid][pRedMoney] += 40000;
				GivePlayerRedMoney(playerid, 40000);
				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 40k จากการเปิดกล่องสุ่มเงินแดง");
			}
			case 2:
		    {
                 //playerData[playerid][pRedMoney] += 50000;
				GivePlayerRedMoney(playerid, 50000);
				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 50k จากการเปิดกล่องสุ่มเงินแดง");
			}
		    case 3:
		    {
                 //playerData[playerid][pRedMoney] += 60000;
				GivePlayerRedMoney(playerid, 60000);
				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 60k จากการเปิดกล่องสุ่มเงินแดง");
			}
		    case 4:
		    {
                // playerData[playerid][pRedMoney] += 70000;
				GivePlayerRedMoney(playerid, 70000);
				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 70k จากการเปิดกล่องสุ่มเงินแดง");
			}
		    case 5:
		    {
                // playerData[playerid][pRedMoney] += 80000;
				GivePlayerRedMoney(playerid, 80000);
				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 80k จากการเปิดกล่องสุ่มเงินแดง");
			}
		    case 6:
		    {
                // playerData[playerid][pRedMoney] += 90000;
				GivePlayerRedMoney(playerid, 90000);
				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 90k จากการเปิดกล่องสุ่มเงินแดง");
			}
		    case 7:
		    {
                 //playerData[playerid][pRedMoney] += 100000;
				GivePlayerRedMoney(playerid, 100000);
				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 100k จากการเปิดกล่องสุ่มเงินแดง");
			}
   		}
	}
	// กล่องสุ่มงานดำ
	if (!strcmp(name, "กล่องสุ่มเงินเขียว", true))
	{
	    Inventory_Remove(playerid, name);

		new blackrandom = random(8);
		switch (blackrandom)
		{
		    case 0:
		    {
                 GivePlayerMoneyEx(playerid, 10000);

				 return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 10k จากการเปิดกล่องสุ่มเงินเขียว");
		    }
		    case 1:
		    {
                 GivePlayerMoneyEx(playerid, 20000);

				 return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 20k จากการเปิดกล่องสุ่มเงินเขียว");
		    }
		    case 2:
		    {
                 GivePlayerMoneyEx(playerid, 30000);

				 return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 30k จากการเปิดกล่องสุ่มเงินเขียว");
		    }
		    case 3:
		    {
                 GivePlayerMoneyEx(playerid, 10000);

				 return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 10k จากการเปิดกล่องสุ่มเงินเขียว");
		    }
		    case 4:
		    {
                 GivePlayerMoneyEx(playerid, 20000);

				 return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 20k จากการเปิดกล่องสุ่มเงินเขียว");
		    }
		    case 5:
		    {
                 GivePlayerMoneyEx(playerid, 30000);

				 return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เงินเขียว 30k จากการเปิดกล่องสุ่มเงินเขียว");
		    }
		    case 6:
		    {
				 return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}-{FFFFFF}][รางวัลแจ็คพอตแตก!] เสียใจด้วยคุณไม่ได้รับอะไรเลยจากการ เปิดกล่องสุ่มเงินเขียว");
		    }
		    case 7:
		    {
				 return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}-{FFFFFF}][รางวัลแจ็คพอตแตก!] เสียใจด้วยคุณไม่ได้รับอะไรเลยจากการ เปิดกล่องสุ่มเงินเขียว");
		    }
   		}
	}
	// กล่องสุ่มงานดำ
	if (!strcmp(name, "กล่องสุ่มงานดำ", true))
	{
	    Inventory_Remove(playerid, name);

		new blackrandom = random(2);
		switch (blackrandom)
		{
		    case 0: // ส้ม
		    {
				Inventory_Add(playerid, "ปูน", 10);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ ปูน +10 จากการเปิดกล่องงานดำ");
		    }
		    case 1: // หอย
		    {
				Inventory_Add(playerid, "โคเคน", 10);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ โคเคน +10 จากการเปิดกล่องงานดำ");
		    }
		}
	}
	// กล่องสุ่มงานขาว
	if (!strcmp(name, "กล่องสุ่มงานขาว", true))
	{
	    Inventory_Remove(playerid, name);

		new blackrandom = random(8);
		switch (blackrandom)
		{
		    case 0: // ส้ม
		    {
				Inventory_Add(playerid, "ส้ม", 10);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ ส้ม +10 จากการเปิดกล่องงานขาว");
		    }
		    case 1: // หอย
		    {
				Inventory_Add(playerid, "หอย", 10);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ หอย +10 จากการเปิดกล่องงานขาว");
		    }
		    case 2: // เนื้อไก่
		    {
				Inventory_Add(playerid, "เนื้อไก่", 10);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เนื้อไก่+10 จากการเปิดกล่องงานขาว");
		    }
		    case 3: // เนื้อวัว
		    {
				Inventory_Add(playerid, "เนื้อวัว", 10);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ เนื้อวัว +10จากการเปิดกล่องงานขาว");
		    }
		    case 4: // ปลาเก๋า
		    {
				Inventory_Add(playerid, "ปลาเก๋า", 10);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ ปลาเก๋า +10 จากการเปิดกล่องงานขาว");
		    }
		    case 5: // ปลาแซลม่อน
		    {
				Inventory_Add(playerid, "ปลาแซลม่อน", 10);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ ปลาแซลม่อน +10 จากการเปิดกล่องงานขาว");
		    }
		    case 6: // ปลากระเบน
		    {
				Inventory_Add(playerid, "ปลากระเบน", 10);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ ปลากระเบน +10 จากการเปิดกล่องงานขาว");
		    }
		    case 7: // ปลาฉลาม
		    {
				Inventory_Add(playerid, "ปลาฉลาม", 10);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับ ปลาฉลาม +10 จากการเปิดกล่องงานขาว");
		    }
		}
	}

	else if (!strcmp(name, "เครื่องมือซ่อมรถ", true))
	{
	    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
			return SendClientMessage(playerid, COLOR_WHITE, "คุณต้องไม่อยู่บนรถ");

		if (isRepairVehicle[playerid] != 0)
	    	return SendClientMessage(playerid, COLOR_WHITE, "คุณอยู่ระหว่างการซ่อมรถ");

		for (new i = 1; i != MAX_VEHICLES; i ++) if (IsValidVehicle(i) && IsPlayerNearHood(playerid, i))
		{
			ApplyAnimation(playerid, "BD_FIRE", "wash_up", 4.1, 0, 0, 0, 0, 0, 1);
			SetPlayerAttachedObject(playerid,7,18718,6,0.187999,0.084999,-0.882000,0.000000,0.000000,0.000000,0.811999,0.762000,0.824999);
			SetPlayerAttachedObject(playerid,8,18634,6,0.075000,0.038999,0.044000,96.899993,-102.100021,11.300000,1.000000,1.000000,1.000000);	
			SendClientMessage(playerid, COLOR_YELLOW, "[!] {FFFFFF}คุณได้เริ่มซ่อมยานพาหนะแล้ว !"); 
			TogglePlayerControllable(playerid, 0);

            Inventory_Remove(playerid, "เครื่องมือซ่อมรถ", 1);
			isRepairVehicle[playerid] = 3;
			return 1;
		}
		SendClientMessage(playerid, COLOR_GREY, "คุณต้องยืนอยู่หน้ารถ");
    	return 1;
	}

		// กาชาปองเงิน
    else if (!strcmp(name, "GACHAPON-MONEY", true))
    {
    if (!Inventory_HasItem(playerid, "GACHAPON-MONEY"))
        return ErrorMsg(playerid, "คุณไม่มี 'GACHAPON-MONEY' ทำให้ไม่สามารถใช้งานได้");

    PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][0]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][1]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][2]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][3]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][4]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][5]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][6]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][7]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][8]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][9]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][10]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][11]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][12]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][13]);
	PlayerTextDrawShow(playerid, Ms_G_MONEY[playerid][14]);
    SelectTextDraw(playerid, 0xAFAFAFFF);
    GachaponOn[playerid] = true;
    return 1;
    }

	// GACHAPON-BLACK
    else if (!strcmp(name, "GACHAPON-BLACK", true))
    {
    if (!Inventory_HasItem(playerid, "GACHAPON-BLACK"))
        return ErrorMsg(playerid, "คุณไม่มี 'GACHAPON-BLACK' ทำให้ไม่สามารถใช้งานได้");

    PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][0]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][1]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][2]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][3]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][4]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][5]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][6]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][7]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][8]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][9]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][10]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][11]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][12]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][13]);
	PlayerTextDrawShow(playerid, Ms_G_BLACK[playerid][14]);
    SelectTextDraw(playerid, 0xAFAFAFFF);
    GachaponBlackOn[playerid] = true;
    return 1;
    }

	// GACHAPON-FASHION
    else if (!strcmp(name, "GACHAPON-FASHION", true))
    {
    if (!Inventory_HasItem(playerid, "GACHAPON-FASHION"))
        return ErrorMsg(playerid, "คุณไม่มี 'GACHAPON-FASHION' ทำให้ไม่สามารถใช้งานได้");

    PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][0]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][1]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][2]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][3]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][4]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][5]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][6]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][7]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][8]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][9]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][10]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][11]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][12]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][13]);
	PlayerTextDrawShow(playerid, Ms_G_FASHION[playerid][14]);
    SelectTextDraw(playerid, 0xAFAFAFFF);
    GachaponFashOn[playerid] = true;
    return 1;
    }

	// กล่องสุ่มตีอาวุธ
	if (!strcmp(name, "กล่องตีอาวุธ", true))
	{
	    Inventory_Remove(playerid, name);

		new blackrandom = random(5);
		switch (blackrandom)
		{
		    case 0: // กล่องตีอาวุธ
		    {
				Inventory_Add(playerid, "กล่องตีอาวุธ", 1);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับกล่องตีอาวุธจากการเปิดกล่องตีอาวุธ");
		    }
		    case 1: // กล่องตีไม้เบส
		    {
				Inventory_Add(playerid, "กล่องตีไม้เบสบอล", 1);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับกล่องตีไม้เบสบอลจากการเปิดกล่องตีอาวุธ");
		    }
		    case 2: // กล่องตีไม้สนุ๊ก
		    {
				Inventory_Add(playerid, "กล่องตีไม้สนุ๊ก", 1);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับกล่องตีไม้สนุ๊กจากการเปิดกล่องตีอาวุธ");
		    }
		    case 3: // กล่องตีไม้กอล์ฟ
		    {
				Inventory_Add(playerid, "กล่องตีไม้กอล์ฟ", 1);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับกล่องตีไม้กอล์ฟจากการเปิดกล่องตีอาวุธ");
		    }
		    case 4: // กล่องตีคาตานะ
		    {
				Inventory_Add(playerid, "กล่องตีคาตานะ", 1);

				if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

				return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FFFF33}+{FFFFFF}]คุณได้รับกล่องตีคาตานะจากการเปิดกล่องตีอาวุธ");
		    }
		}
	}

	// กล่องตีอาวุธ
	else if (!strcmp(name, "กล่องตีอาวุธv1", true))
	{
	    Inventory_Remove(playerid, name);

		Inventory_Add(playerid, "ปูน", 20);
		Inventory_Add(playerid, "สายไฟ", 20);
		Inventory_Add(playerid, "แร่เหลือง", 50);
		Inventory_Add(playerid, "แร่เขียว", 50);
		Inventory_Add(playerid, "แร่ฟ้า", 50);
		Inventory_Add(playerid, "แร่แดง", 50);
		//playerData[playerid][pRedMoney] += 3000;
		GivePlayerRedMoney(playerid, 2000);

		SendClientMessage(playerid, COLOR_GREEN, "|============================|");
		SendClientMessage(playerid, -1, "คุณได้รับ 'ปูน' + 20");
		SendClientMessage(playerid, -1, "คุณได้รับ 'สายไฟ' + 20");
		SendClientMessage(playerid, -1, "คุณได้รับ 'แร่เหลือง' + 50");
		SendClientMessage(playerid, -1, "คุณได้รับ 'แร่เเขียว' + 50");
		SendClientMessage(playerid, -1, "คุณได้รับ 'แร่ฟ้า' + 50");
		SendClientMessage(playerid, -1, "คุณได้รับ 'แร่แดง' + 50");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เงินแดง' + 2000");
		SendClientMessage(playerid, COLOR_GREEN, "|============================|");
	}

	// กล่องตีไม้เบสบอล
	else if (!strcmp(name, "กล่องตีไม้เบสบอล", true))
	{
	    Inventory_Remove(playerid, name);

		Inventory_Add(playerid, "ปูน", 15);
		Inventory_Add(playerid, "เหล็ก", 15);
		Inventory_Add(playerid, "ทอง", 15);
		GivePlayerMoneyEx(playerid, 15000);
		//playerData[playerid][pRedMoney] += 15000;
		GivePlayerRedMoney(playerid, 15000);

		SendClientMessage(playerid, COLOR_GREEN, "|============================|");
		SendClientMessage(playerid, -1, "คุณได้รับ 'ปูน' + 15");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เหล็ก' + 15");
		SendClientMessage(playerid, -1, "คุณได้รับ 'ทอง' + 15");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เงินเขียว' + 15k");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เงินแดง' + 15k");
		SendClientMessage(playerid, COLOR_GREEN, "|============================|");
	}

	// กล่องตีไม้สนุ๊ก
	else if (!strcmp(name, "กล่องตีไม้สนุ๊ก", true))
	{
	    Inventory_Remove(playerid, name);

		Inventory_Add(playerid, "ปูน", 45);
		Inventory_Add(playerid, "เหล็ก", 45);
		Inventory_Add(playerid, "ทอง", 45);
		GivePlayerMoneyEx(playerid, 45000);
		//playerData[playerid][pRedMoney] += 45000;
		GivePlayerRedMoney(playerid, 45000);

		SendClientMessage(playerid, COLOR_GREEN, "|============================|");
		SendClientMessage(playerid, -1, "คุณได้รับ 'ปูน' + 45");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เหล็ก' + 45");
		SendClientMessage(playerid, -1, "คุณได้รับ 'ทอง' + 45");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เงินเขียว' + 45k");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เงินแดง' + 45k");
		SendClientMessage(playerid, COLOR_GREEN, "|============================|");
	}

	// กล่องตีไม้กอล์ฟ
	else if (!strcmp(name, "กล่องตีไม้กอล์ฟ", true))
	{
	    Inventory_Remove(playerid, name);

		Inventory_Add(playerid, "ปูน", 135);
		Inventory_Add(playerid, "เหล็ก", 135);
		Inventory_Add(playerid, "ทอง", 135);
		GivePlayerMoneyEx(playerid, 135000);
		//playerData[playerid][pRedMoney] += 135000;
		GivePlayerRedMoney(playerid, 135000);

		SendClientMessage(playerid, COLOR_GREEN, "|============================|");
		SendClientMessage(playerid, -1, "คุณได้รับ 'ปูน' + 135");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เหล็ก' + 135");
		SendClientMessage(playerid, -1, "คุณได้รับ 'ทอง' + 135");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เงินเขียว' + 135k");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เงินแดง' + 135k");
		SendClientMessage(playerid, COLOR_GREEN, "|============================|");
	}

	// กล่องตีคาตานะ
	else if (!strcmp(name, "กล่องตีคาตานะ", true))
	{
	    Inventory_Remove(playerid, name);

		Inventory_Add(playerid, "ปูน", 405);
		Inventory_Add(playerid, "เหล็ก", 405);
		Inventory_Add(playerid, "ทอง", 405);
		GivePlayerMoneyEx(playerid, 405000);
		//playerData[playerid][pRedMoney] += 405000;
		GivePlayerRedMoney(playerid, 405000);

		SendClientMessage(playerid, COLOR_GREEN, "|============================|");
		SendClientMessage(playerid, -1, "คุณได้รับ 'ปูน' + 405");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เหล็ก' + 405");
		SendClientMessage(playerid, -1, "คุณได้รับ 'ทอง' + 405");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เงินเขียว' + 405k");
		SendClientMessage(playerid, -1, "คุณได้รับ 'เงินแดง' + 405k");
		SendClientMessage(playerid, COLOR_GREEN, "|============================|");
	}
    if (!strcmp(name, "กล่องจูน", true))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
	   	if(!IsPlayerInAnyVehicle(playerid))
		    return SendClientMessage(playerid, COLOR_RED,"[!]{FFFFFF}คุณต้องอยู่บนรถ");

		new speeddf = carData[vehicleid][carEngine] + 3;
	    new speedmax = carData[vehicleid][carEngine] + 50;
		return Dialog_Show(playerid, DIALOG_RanDomTune, DIALOG_STYLE_MSGBOX, "\
		{000000}[{ffffff}จูนรถ{000000}]", "\
		{ffff00}[!]{FFFFFF}คุณต้องการจูนรถหรือไม่(เสียกล่องจูน1กล่อง)\n\
	 	มีโอกาศได้กำลังเพิ่ม %d - %d (ถ้ามากกว่า280จะไม่สามารถจูนได้อีก)\
		", "จูน", "กลับ",speeddf, speedmax);
	}

	if (!strcmp(name, "หอย", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}

	else if (!strcmp(name, "ปืนยิงล้ม", true))
	{
		if (!playerData[playerid][pTazer])
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 23, 20000);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบปืนยิงล้มออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else
		{
		    playerData[playerid][pTazer] = 0;
		    SetPlayerAmmo(playerid, 23, 0);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บปืนยิงล้มลงในกระเป๋า", GetPlayerNameEx(playerid));
		}
		return 1;
	}
	else if (!strcmp(name, "ถังเก็บน้ำมัน", true))
	{
		if(Tungon[playerid] == 0)
		{
			Tungon[playerid] = 1;
			SetPlayerAttachedObject(playerid, 1, 19812, 1, 0.129999, -0.445000, -0.024999, 0.000000, 86.299995, 0.000000, 1.000000, 1.000000, 1.000000);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[ถังเก็บน้ำมัน] : คุณได้หยิบ 'ถังเก็บน้ำมัน' มาใช้แล้ว");
		}
		else
		{
			Tungon[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 1);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[ถังเก็บน้ำมัน] : คุณได้เก็บ 'ถังเก็บน้ำมัน' แล้ว");
		}
	}
	else if (!strcmp(name, "ปืนช็อตไฟฟ้า", true))
	{
		if (!playerData[playerid][pTazer])
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 23, 20000);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบปืนช็อตไฟฟ้าออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else
		{
		    playerData[playerid][pTazer] = 0;
		    SetPlayerAmmo(playerid, 23, 0);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บปืนช็อตไฟฟ้าลงในกระเป๋า", GetPlayerNameEx(playerid));
		}
		return 1;
	}

	else if (!strcmp(name, "ไม้เบสบอลติดไฟ", true))
	{
	    if (isBaseFire[playerid] == 0)
	    {
			SendClientMessage(playerid, COLOR_YELLOW, "(( คุณได้เรียกใช้งานไม้เบสบอลติดไฟแล้ว ))");
	        GivePlayerWeaponEx(playerid, 5, 1);
	        SetPlayerAttachedObject(playerid, 4, 2045, 6, 0.047000, 0.005999, 0.286999, 94.599998, 29.000009, 0.199999, 1.514000, 1.446000, 1.64899);
	        SetPlayerAttachedObject(playerid, 5, 18718, 6, 0.044000, 0.000000, -1.845000, 0.000000, 0.000000, 0.000000, 0.055000, 0.427999, 0.976000);
	        isBaseFire[playerid] = 1;
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_LIGHTRED, "(( คุณได้เก็บไม้เบสบอลติดไฟแล้ว ))");
	        RemovePlayerAttachedObject(playerid, 4);
	        RemovePlayerAttachedObject(playerid, 5);
	        ResetPlayerWeaponsEx(playerid);
	        isBaseFire[playerid] = 0;
	    }
	    return 1;
	}

	else if (!strcmp(name, "กล้องถ่ายรูป", true))
	{
	    GivePlayerWeaponEx(playerid, 43, 100);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังใช้งาน {00FF00}%s", name);
	}

	// ปากฉลาม
    else if (!strcmp(name, "ปากฉลามเทพ", true))
    {
		if (BottleOn[playerid] == 0)
		{
		    GivePlayerWeaponEx(playerid, 4, 1);
			BottleOn[playerid] = 1;
			SetPlayerAttachedObject(playerid, 4, 1509, 6, 0.091000, 0.033000, 0.136000, 0.000000, 178.300003, 0.000000, 1.000000, 1.000000, 1.204999); // Flame99 - handfie right
			SendClientMessage(playerid, COLOR_YELLOW, "[ขวดแก้ว] : คุณได้เรียกใช้ 'ปากฉลามเทพ' แล้ว");
		}
		else
		{
		    ResetPlayerWeaponsEx(playerid);
			BottleOn[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 4);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[ขวดแก้ว] : คุณได้เก็บ 'ปากฉลามเทพ' แล้ว");
		}
		return 1;
	}
	
    else if (!strcmp(name, "กระบองมังกร", true))
    {
		if (BottleOn[playerid] == 0)
		{
		    GivePlayerWeaponEx(playerid, 5, 1);
			BottleOn[playerid] = 1;
			SetPlayerAttachedObject(playerid, 6, 3533, 6, -0.151000, 0.046999, 0.470999, -0.199999, -26.200000, -78.499977, 0.057999, 0.049000, 0.151000); // Flame99 - handfie right
			SetPlayerAttachedObject(playerid, 2, 3528, 6, -0.529999, 0.063999, 1.170000, -178.700042, 76.599998, -0.799999, 0.119999, 0.079999, 0.083999); // Flame99 - handfie right
			SetPlayerAttachedObject(playerid, 3, 3528, 6, 0.186999, 0.006999, -0.132000, -18.299999, 14.100000, 7.900002, 0.087000, 0.107000, 0.077000); // Flame99 - handfie right
			SendClientMessage(playerid, COLOR_YELLOW, "[มังกร] : คุณได้เรียกใช้ 'กระบองมังกร' แล้ว");
		}
		else
		{
		    ResetPlayerWeaponsEx(playerid);
			BottleOn[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 4);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[มังกร] : คุณได้เก็บ 'กระบองมังกร' แล้ว");
		}
		return 1;
	}
	
	else if (!strcmp(name, "PoliceBoss", true))
	{
	    if (ArmourOn[playerid] == 0)
	    {
     		SetPlayerAttachedObject(playerid, 0, 19520, 2, 0.187000, 0.018999, 0.003999, 0.000000, -0.099985, 19.399999, 1.311999, 1.295999, 1.442000);
            SetPlayerAttachedObject(playerid, 1, 19780, 15, 0.249999, 0.000000, -0.124000, -91.799972, 97.900009, -3.399999, 0.555999, 0.748999, 1.000000);
            SetPlayerAttachedObject(playerid, 2, 1247, 1, 0.241999, 0.104999, -0.136999, 0.000000, 0.000000, 0.000000, 0.186999, 0.159999, 0.158999);
            SetPlayerAttachedObject(playerid, 3, 1247, 1, 0.185000, 0.123000, -0.134000, 0.000000, 0.000000, 0.000000, 0.159999, 0.183999, 0.159999);
            SetPlayerAttachedObject(playerid, 4, 1247, 16, 0.142000, -0.015000, -0.030000, 94.799957, 0.000000, 0.000000, 0.601000, 0.377000, 0.140999);
            SetPlayerAttachedObject(playerid, 5, 1247, 15, 0.174999, 0.000000, 0.031000, -88.799987, 0.000000, 0.000000, 0.590000, 0.368000, 0.133999);
            

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวม {00FF00}%s", name);
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 0);
	        RemovePlayerAttachedObject(playerid, 1);
	        RemovePlayerAttachedObject(playerid, 2);
	        RemovePlayerAttachedObject(playerid, 3);
	        RemovePlayerAttachedObject(playerid, 4);
	        RemovePlayerAttachedObject(playerid, 5);

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอด {00FF00}%s", name);
	    }
	    return 1;
	}

    else if (!strcmp(name, "ไม้สนุ๊กศิลาจาลึก", true))
    {
		if (sira[playerid] == 0)
		{
		    GivePlayerWeaponEx(playerid, 7, 1);
			sira[playerid] = 1;
			SetPlayerAttachedObject(playerid,0, 3524, 6, 0.069000, -0.039000, 0.511000, 4.900000, 1.399999, 86.200019, 0.270999, 0.341999, 0.291000);
			SendClientMessage(playerid, COLOR_YELLOW, "[ไม้สนุ๊กศิลาจาลึก] : คุณได้เรียกใช้ 'ไม้สนุ๊กศิลาจาลึก' แล้ว");
		}
		else
		{
		    ResetPlayerWeaponsEx(playerid);
			sira[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[ไม้สนุ๊กศิลาจาลึก] : คุณได้เก็บ 'ไม้สนุ๊กศิลาจาลึก' แล้ว");
		}
		return 1;
	}
	

    else if (!strcmp(name, "กล้วยพกพา", true))
    {
		if (bananapook[playerid] == 0)
		{
		    GivePlayerWeaponEx(playerid, 4, 1);
			bananapook[playerid] = 1;
			SetPlayerAttachedObject(playerid,0, 19578, 6, 0.058999, 0.027000, 0.142000, -86.199974, 176.500015, 80.899925, 1.946000, 1.655999, 1.304000);
			SendClientMessage(playerid, COLOR_YELLOW, "[กล้วยพกพา] : คุณได้เรียกใช้ 'กล้วยพกพา' แล้ว");
		}
		else
		{
		    ResetPlayerWeaponsEx(playerid);
			bananapook[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[กล้วยพกพา] : คุณได้เก็บ 'กล้วยพกพา' แล้ว");
		}
		return 1;
	}

    else if (!strcmp(name, "น่องไก่", true))
    {
		if (Nongkai[playerid] == 0)
		{
		    GivePlayerWeaponEx(playerid, 5, 1);
			Nongkai[playerid] = 1;
			SetPlayerAttachedObject(playerid,0, 19847, 6, 0.064999, 0.036999, 0.000000, -86.599983, -4.499999, -0.699999, 1.135000, 2.098999, 1.000000);
			SendClientMessage(playerid, COLOR_YELLOW, "[น่องไก่] : คุณได้เรียกใช้ 'น่องไก่' แล้ว");
		}
		else
		{
		    ResetPlayerWeaponsEx(playerid);
			Nongkai[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[น่องไก่] : คุณได้เก็บ 'น่องไก่' แล้ว");
		}
		return 1;
	}

	else if (!strcmp(name, "เสื้อเกราะ", true))
	{
	    if (ArmourOn[playerid] == 0)
	    {
     		SetPlayerAttachedObject(playerid, 9,19142,1,0.106999,0.040999,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);

	        ArmourOn[playerid] = 1;
		    SetPlayerArmour(playerid, 100);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวม {00FF00}%s", name);
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 9);

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอด {00FF00}%s", name);
	    }
	    return 1;
	}

	else if (!strcmp(name, "เป๋าชินนาม่อน", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "เป๋าชินนาม่อน");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด เป๋าชินนาม่อน");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15219, 1, 0.1, -0.22, 0.0, 0.0, 90.0, 180.0, 1.2, 1.2, 1.2);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "เป๋าชินนาม่อน");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ เป๋าชินนาม่อน");
		}
		return 1;
	}

	else if (!strcmp(name, "ถือชินนาม่อน", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "ถือชินนาม่อน");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด ถือชินนาม่อน");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15218, 6, 0.3, 0.23, 0.0, 90.0, 0.0, 180.0, 1.2, 1.2, 1.2);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "ถือชินนาม่อน");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ ถือชินนาม่อน");
		}
		return 1;
	}

	else if (!strcmp(name, "หมวกชินนาม่อน", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "หมวกชินนาม่อน");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด หมวกชินนาม่อน");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15227, 2, -0.1, 0.0, 0.0, 90.0, 90.0, 90.0, 1.2, 1.2, 1.2);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "หมวกชินนาม่อน");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ หมวกชินนาม่อน");
		}
		return 1;
	}
	
	else if (!strcmp(name, "ปอมปอมปูริน", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "ปอมปอมปูริน");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด ปอมปอมปูริน");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15994, 2, 0.3, 0.23, 0.0, 0.0, 90.0, 0.0, 0.4, 0.4, 0.4);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "ปอมปอมปูริน");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ ปอมปอมปูริน");
		}
		return 1;
	}

	else if (!strcmp(name, "ห่วงยางหมา", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "ห่วงยางหมา");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด ห่วงยางหมา");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15172, 1, -0.30, 0.1, 0.0, 90.0, 90.0, 0.0, 1.2, 1.2, 1.2);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "ห่วงยางหมา");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ ห่วงยางหมา");
		}
		return 1;
    }

	else if (!strcmp(name, "แฟชั่นผู้เล่นใหม่", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "แฟชั่นผู้เล่นใหม่");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด แฟชั่นผู้เล่นใหม่");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15214, 2, -0.50, 0.0, 0.0, 0.0, 90.0, 180.0, 1.0, 1.0, 1.0);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "แฟชั่นผู้เล่นใหม่");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ แฟชั่นผู้เล่นใหม่");
		}
		return 1;
	}

	else if (!strcmp(name, "ห่วงยางหมา", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "ห่วงยางหมา");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด ห่วงยางหมา");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15172, 1, -0.30, 0.1, 0.0, 90.0, 90.0, 0.0, 1.2, 1.2, 1.2);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "ห่วงยางหมา");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ ห่วงยางหมา");
		}
		return 1;
    }
	else if (!strcmp(name, "รองเท้าหมา", true))
	{
		new bool:isWearing = false;
		for (new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
		{
			if (FashionUsed[playerid][i] == 1 &&
				!strcmp(FashionName[playerid][i], "รองเท้าหมา", true))
			{
				isWearing = true;
				break;
			}
		}

		if (isWearing)
		{
			// ลบทุกชิ้นที่ชื่อรองเท้าหมา
			for (new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
			{
				if (FashionUsed[playerid][i] == 1 &&
					!strcmp(FashionName[playerid][i], "รองเท้าหมา", true))
				{
					RemovePlayerAttachedObject(playerid, i);
					FashionUsed[playerid][i] = 0;
					FashionName[playerid][i][0] = EOS;
				}
			}
			SendClientMessage(playerid, -1, "คุณได้ถอด รองเท้าหมา");
	    }
	    else
	    {
			new slot1 = GetFreeFashionSlot(playerid);
			if (slot1 == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			new slot2 = -1;
			for (new i = slot1 + 1; i < MAX_PLAYER_ATTACHED_OBJECTS; i++)
			{
				if (FashionUsed[playerid][i] == 0)
				{
					slot2 = i;
					break;
				}
			}
			if (slot2 == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot1, 15176, 9, 0.0, 0.1, 0.4, 0.0, -90.0, 0.0, 1.1, 1.1, 1.1);
			FashionUsed[playerid][slot1] = 1;
			format(FashionName[playerid][slot1], 32, "รองเท้าหมา");

			SetPlayerAttachedObject(playerid, slot2, 15177, 10, 0.0, 0.1, 0.4, 0.0, -90.0, 0.0, 1.1, 1.1, 1.1);
			FashionUsed[playerid][slot2] = 1;
			format(FashionName[playerid][slot2], 32, "รองเท้าหมา");

			SendClientMessage(playerid, -1, "คุณได้สวมใส่ รองเท้าหมา");
		}
		return 1;
	}
	else if (!strcmp(name, "หมาเกาะหัว", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "หมาเกาะหัว");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด หมาเกาะหัว");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15173, 2, 0.3, 0.0, 0.0, 0.0, 90.0, 0.0, 1.8, 1.8, 1.8);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "หมาเกาะหัว");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ หมาเกาะหัว");
		}
		return 1;
	}

	else if (!strcmp(name, "เจ้าหมุน", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "เจ้าหมุน");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด เจ้าหมุน");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15102, 2, 0.3, 0.0, 0.0, 0.0, 90.0, 0.0, 0.5, 0.5, 0.5);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "เจ้าหมุน");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ เจ้าหมุน");
		}
		return 1;
	}

	else if (!strcmp(name, "เป๋าปอมปอม", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "เป๋าปอมปอม");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด เป๋าปอมปอม");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15998, 1, -0.05, -0.22, 0.0, 0.0, 90.0, 0.0, 0.7, 0.7, 0.7);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "เป๋าปอมปอม");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ เป๋าปอมปอม");
		}
		return 1;
	}

	else if (!strcmp(name, "หมวกเป็ด", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "หมวกเป็ด");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด หมวกเป็ด");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15091, 2, 0.17, 0.0, 0.0, 8.0, 90.0, 180.0, 1.0, 1.0, 1.0);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "หมวกเป็ด");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ หมวกเป็ด");
		}
		return 1;
	}

	else if (!strcmp(name, "โปเชโกะ", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "โปเชโกะ");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด โปเชโกะ");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15995, 1, -0.15, -0.22, 0.0, 0.0, 90.0, 0.0, 1.5, 1.5, 1.5);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "โปเชโกะ");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ โปเชโกะ");
		}
		return 1;
	}

	else if (!strcmp(name, "ปอมจะนั่ง", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "ปอมจะนั่ง");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด ปอมจะนั่ง");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15098, 16, 0.17, 0.0, -0.1, 8.0, 180.0, 90.0, 0.5, 0.5, 0.5);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "ปอมจะนั่ง");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ ปอมจะนั่ง");
		}
		return 1;
	}

	else if (!strcmp(name, "ไออ้วง", true))
	{
		// ถ้ามีอยู่แล้ว ? ถอดออก
		new existSlot = GetFashionSlotByName(playerid, "ไออ้วง");
		if (existSlot != -1)
		{
			RemovePlayerAttachedObject(playerid, existSlot);
			FashionUsed[playerid][existSlot] = 0;
			FashionName[playerid][existSlot][0] = EOS;
			SendClientMessage(playerid, -1, "คุณได้ถอด ไออ้วง");
		}
		else
		{
			// ถ้ายังไม่ได้ใส่ ? หาช่องว่าง แล้วใส่เพิ่ม
			new slot = GetFreeFashionSlot(playerid);
			if (slot == -1) return SendClientMessage(playerid, -1, "คุณใส่แฟชั่นครบแล้ว!");

			SetPlayerAttachedObject(playerid, slot, 15101, 15, 0.40, 0.20, 0.0, 180.0, 180.0, -180.0, 0.7, 0.7, 0.7);
			FashionUsed[playerid][slot] = 1;
			format(FashionName[playerid][slot], 32, "ไออ้วง");
			SendClientMessage(playerid, -1, "คุณได้สวมใส่ ไออ้วง");
		}
		return 1;
	}
	
	else if (!strcmp(name, "Makira", true))
	{
	    if (Makira[playerid] == 0)
	    {
     		SetPlayerAttachedObject(playerid, 0, 6865, 2, 0.078000, -0.030999, 0.008999, -139.999755, 90.399993, 0.000000, 0.123000, 0.116999, 0.097000);
			SetPlayerAttachedObject(playerid, 1, 339, 1, 0.314999, -0.165999, 0.066999, 0.000000, -118.800018, 0.000000, 1.000000, 1.000000, 1.000000);
			SetPlayerAttachedObject(playerid, 2, 339, 1, 0.257999, -0.160000, -0.179000, 0.000000, -58.099906, 0.000000, 1.000000, 1.000000, 1.000000); 
			SetPlayerAttachedObject(playerid, 3, 18729, 1, -1.444000, 0.147999, 0.238999, 127.600006, 76.299827, 55.999946, 1.000000, 1.000000, 1.000000);
	        
			Makira[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวม {00FF00}%s", name);
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 9);

	        Makira[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
			SetPlayerArmour(playerid, 1);
			SetPlayerArmour(playerid, 2);
			SetPlayerArmour(playerid, 3);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอด {00FF00}%s", name);
	    }
	    return 1;
	}
	
	else if (!strcmp(name, "Devilman", true))
	{
	    if (ArmourOn[playerid] == 0)
	    {
     		SetPlayerAttachedObject(playerid, 0, 6865, 2, 0.096999, 0.000000, 0.003999, -134.499938, 101.799926, 0.000000, 0.115999, 0.123000, 0.095000);
            SetPlayerAttachedObject(playerid, 1, 18975, 1, -0.2059, -0.3189, 0.3189, 124.5001, 10.8000, 90.7999, 3.4969, 6.8429, 0.2649, 0, 0);
            SetPlayerAttachedObject(playerid, 2, 18975, 1, -0.2059, -0.3310, -0.3050, -131.9999, -7.2999, 90.7999, 3.4969, 6.8429, 0.2649, 0, 0);

	        ArmourOn[playerid] = 1;
		    SetPlayerArmour(playerid, 45);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวม {00FF00}%s", name);
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 0);
	        RemovePlayerAttachedObject(playerid, 1);
	        RemovePlayerAttachedObject(playerid, 2);

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอด {00FF00}%s", name);
	    }
	    return 1;
	}
	
	else if (!strcmp(name, "Darkdevil", true))
	{
	    if (ArmourOn[playerid] == 0)
	    {
     		SetPlayerAttachedObject(playerid, 0, 18975, 1, -0.052000, -0.449000, -0.011000, 0.200013, -1.700001, -36.899997, 0.789999, 4.993999, 3.071001);
            SetPlayerAttachedObject(playerid, 1, 1313, 2, 0.137999, -0.028000, -0.048999, 0.000000, 83.700050, 0.000000, 1.527999, 2.390001, 1.266999);
            SetPlayerAttachedObject(playerid, 2, 1254, 2, 0.179000, -0.106999, 0.148000, 0.000000, 81.799934, 0.000000, 1.254000, 1.821001, 1.000000);

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวม {00FF00}%s", name);
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 0);
	        RemovePlayerAttachedObject(playerid, 1);
	        RemovePlayerAttachedObject(playerid, 2);

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอด {00FF00}%s", name);
	    }
	    return 1;
	}

	else if (!strcmp(name, "ชุดแมลงเทพ", true))
	{
	    if (ArmourOn[playerid] == 0)
	    {
     		SetPlayerAttachedObject(playerid, 1, 19059, 1, 0.2979, -0.2509, -0.3149, -34.3999, -28.2999, 0.0000, 0.3719, 0.1019, 1.0000, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
			SetPlayerAttachedObject(playerid, 2, 19059, 1, 0.2979, -0.2300, 0.3349, -151.1000, -28.2999, 0.0000, 0.3719, 0.1019, 1.0000, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
			SetPlayerAttachedObject(playerid, 3, 19063, 1, 0.0399, -0.2280, -0.2890, -34.1000, 0.0000, 0.0000, 0.3119, 0.0669, 0.7850, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
			SetPlayerAttachedObject(playerid, 4, 19063, 1, 0.0399, -0.2150, 0.2999, -149.2000, 0.0000, 0.0000, 0.3119, 0.0669, 0.7850, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
			SetPlayerAttachedObject(playerid, 5, 19060, 1, -0.1389, -0.1480, -0.1889, -36.4999, 27.5999, 0.0000, 0.2520, 0.0599, 0.5210, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
			SetPlayerAttachedObject(playerid, 6, 19060, 1, -0.1389, -0.1480, 0.1889, -146.0001, 27.5999, 0.0000, 0.2520, 0.0599, 0.5210, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
			SetPlayerAttachedObject(playerid, 7, 18706, 5, 0.1019, 0.0189, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
			SetPlayerAttachedObject(playerid, 8, 3790, 1, 0.0000, -0.1029, 0.0000, 0.0000, 9.0999, 0.0000, 0.3559, 0.3589, 0.3269, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
			SetPlayerAttachedObject(playerid, 9, 3790, 1, 0.0000, -0.1029, 0.0000, 0.0000, -13.5000, 0.0000, 0.3559, 0.3589, 0.3269, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวม {00FF00}%s", name);
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 9);

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอด {00FF00}%s", name);
	    }
	    return 1;
	}
	
	else if (!strcmp(name, "ชุดลูบู", true))
	{
	    if (ArmourOn[playerid] == 0)
	    {
     		SetPlayerAttachedObject(playerid, 1, 18844, 1, 0.3639, 0.0000, -0.4219, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
			SetPlayerAttachedObject(playerid, 2, 18844, 1, 0.3339, 0.0000, 0.4659, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
			SetPlayerAttachedObject(playerid, 3, 18844, 1, 0.7929, 0.0000, 0.1629, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
			SetPlayerAttachedObject(playerid, 4, 18844, 1, 0.8009, 0.0000, -0.1220, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
			SetPlayerAttachedObject(playerid, 5, 18701, 1, -1.2599, 0.0000, 0.4069, 0.0000, 87.8999, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
			SetPlayerAttachedObject(playerid, 6, 18701, 1, -1.2330, -0.0010, -0.4740, 0.0000, 87.8999, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
			SetPlayerAttachedObject(playerid, 7, 3533, 1, 0.0099, -0.1389, -0.0009, 0.0000, 106.5000, 0.0000, 0.0260, 0.0279, 0.2129, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
			SetPlayerAttachedObject(playerid, 8, 335, 1, -0.6570, -0.0509, 0.3420, 0.0000, -76.7999, -169.5999, 1.9539, 1.6839, 1.9980, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
			SetPlayerAttachedObject(playerid, 9, 3528, 1, -0.6589, -0.1129, 0.1930, 177.1000, 114.4999, 0.0000, 0.0829, 0.0779, 0.0769, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวม {00FF00}%s", name);
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 9);

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอด {00FF00}%s", name);
	    }
	    return 1;
	}

	else if (!strcmp(name, "Heart", true))
	{
	    if (ArmourOn[playerid] == 0)
	    {
			SetPlayerAttachedObject(playerid, 0, 11738, 6, 0.250999, 0.000000, 0.062999, 4.499997, -100.899948, 0.000000, 1.073999, 1.057000, 1.068000);
			SetPlayerAttachedObject(playerid, 1, 1240, 2, 0.353999, 0.000000, 0.020000, 0.000000, 89.400077, 0.000000, 1.000000, 1.000000, 1.000000);
			SetPlayerAttachedObject(playerid, 2, 1276, 1, 0.122999, -0.166999, -0.000000, 87.300079, 85.699920, 0.000000, 1.000000, 1.000000, 1.000000);
	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวม {00FF00}%s", name);
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 0);
            RemovePlayerAttachedObject(playerid, 1);
            RemovePlayerAttachedObject(playerid, 2);
            
	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอด {00FF00}%s", name);
	    }
	    return 1;
	}
	
	else if (!strcmp(name, "Dragonman", true))
	{
	    if (ArmourOn[playerid] == 0)
	    {
     		SetPlayerAttachedObject(playerid, 0, 19135, 2, 0.207000, 0.000000, 0.012000, 0.000000, -92.400100, 0.000000, 1.174000, 1.165000, 0.257000);
            SetPlayerAttachedObject(playerid, 1, 3528, 5, -0.089999, 0.019000, -0.022000, 153.500030, -53.400085, 0.000000, 0.121999, 0.080999, 0.104999);
            SetPlayerAttachedObject(playerid, 2, 339, 1, -0.022000, 0.120999, -0.162999, -83.300003, -131.899993, 5.999947, 1.000000, 1.000000, 0.842000);

	        ArmourOn[playerid] = 1;
		    SetPlayerArmour(playerid, 45);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวม {00FF00}%s", name);
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 0);
	        RemovePlayerAttachedObject(playerid, 1);
	        RemovePlayerAttachedObject(playerid, 2);

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอด {00FF00}%s", name);
	    }
	    return 1;
	}
	
	else if (!strcmp(name, "ชุดเทพปีกดำ", true))
	{
	    if (ArmourOn[playerid] == 0)
	    {
			SetPlayerAttachedObject(playerid, 1, 18975, 1, -0.2059, -0.3189, 0.3189, 124.5001, 10.8000, 90.7999, 3.4969, 6.8429, 0.2649, 0, 0); // "Object4" by @nice (Skin:108)
			SetPlayerAttachedObject(playerid, 2, 18975, 1, -0.2059, -0.3310, -0.3050, -131.9999, -7.2999, 90.7999, 3.4969, 6.8429, 0.2649, 0, 0); // "Object4" by @nice (Skin:108)
			SetPlayerAttachedObject(playerid, 3, 19347, 1, -0.1049, 0.1309, 0.1849, -68.4000, 31.8999, -10.0000, 2.3820, 2.5779, 3.0269, 0, 0); // "Object4" by @nice (Skin:108)
			SetPlayerAttachedObject(playerid, 4, 339, 1, 0.0019, 0.1000, 0.1990, 112.9000, -33.0999, 176.8000, 1.3409, 1.4010, 1.2999, 0, 0); // "Object4" by @nice (Skin:108)
			SetPlayerAttachedObject(playerid, 5, 19314, 1, 0.3079, -0.0649, -0.0020, 0.0000, 0.0000, -136.9998, 1.0000, 1.0000, 0.2409, 0, 0); // "Object4" by @nice (Skin:108)
			SetPlayerAttachedObject(playerid, 6, 19314, 1, 0.2319, -0.0649, -0.0020, 0.0000, 0.0000, -168.3997, 1.0000, 1.0000, 0.2409, 0, 0); // "Object4" by @nice (Skin:108)
			SetPlayerAttachedObject(playerid, 7, 19314, 1, 0.1620, -0.0649, -0.0020, 0.0000, 0.0000, 147.3001, 1.0000, 1.6669, 0.2409, 0, 0); // "Object4" by @nice (Skin:108)
			SetPlayerAttachedObject(playerid, 8, 18702, 1, 0.2290, -0.0689, 0.0000, -56.1999, 0.0000, 8.4000, 1.0000, 0.5030, 0.0000, 0, 0); // "Object4" by @nice (Skin:108)
			SetPlayerAttachedObject(playerid, 9, 18702, 1, 0.2290, -0.0689, -0.0649, 46.4000, 0.0000, 10.0999, 1.0000, 0.5030, 0.0000, 0, 0); // "Object4" by @nice (Skin:108)

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวม {00FF00}%s", name);
	    }
	    else
	    {
	        RemovePlayerAttachedObject(playerid, 9);

	        ArmourOn[playerid] = 0;
		    SetPlayerArmour(playerid, 0);
		    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอด {00FF00}%s", name);
	    }
	    return 1;
	}

	// หมัดสายฟ้า
	else if (!strcmp(name, "หมัดสายฟ้า", true))
	{
		if (DubOn[playerid] == 0)
		{
			DubOn[playerid] = 1;
			SetPlayerAttachedObject(playerid, 4, 15171, 6, 0.083999, -0.011999, 0.016000, -174.400115, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000);
	        SetPlayerAttachedObject(playerid, 5, 15171, 5, 0.104999, 0.007000, 0.020000, -29.800024, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000);
			SendClientMessage(playerid, COLOR_YELLOW, "(( คุณได้เรียกใช้งาน 'หมัดสายฟ้า' ออกมาแล้ว ))");
			return 1;
		}

		if (DubOn[playerid] == 1)
		{
			DubOn[playerid] = 0;
			RemovePlayerAttachedObject(playerid,4);
			RemovePlayerAttachedObject(playerid,5);
			SendClientMessage(playerid, COLOR_LIGHTRED, "(( คุณได้เก็บ 'หมัดสายฟ้า' เข้ากระเป๋าแล้ว ))");
			return 1;
		}
	}


	// หมัดเขียว
	else if (!strcmp(name, "หมัดเขียว", true))
	{
		if (GreenOn[playerid] == 0)
		{
			GreenOn[playerid] = 1;
			SetPlayerAttachedObject(playerid, 4, 18729, 6, 0.083999, -0.011999, 0.016000, -174.400115, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000);
	        SetPlayerAttachedObject(playerid, 5, 18729, 5, 0.104999, 0.007000, 0.020000, -29.800024, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000);
			SendClientMessage(playerid, COLOR_YELLOW, "(( คุณได้เรียกใช้งาน 'หมัดเขียว' ออกมาแล้ว ))");
			return 1;
		}

		if (GreenOn[playerid] == 1)
		{
			GreenOn[playerid] = 0;
			RemovePlayerAttachedObject(playerid,4);
			RemovePlayerAttachedObject(playerid,5);
			SendClientMessage(playerid, COLOR_LIGHTRED, "(( คุณได้เก็บ 'หมัดเขียว' เข้ากระเป๋าแล้ว ))");
			return 1;
		}
	}

	//ไม้สนุ๊ก
	else if (!strcmp(name, "ไม้สนุ๊กหัวมังกร", true))
	{
        GivePlayerWeaponEx(playerid, 7, 1);
	    SetPlayerAttachedObject(playerid,0, 3528, 1, -0.460999, 1.044999, -0.280000, 12.800010, 72.299995, 76.400001, 0.083999, 0.054999, 0.057000);
		return 1;
	}

	// ดาบซามูไรสายฟ้า
	else if (!strcmp(name, "ดาบมณี", true))
	{
		if (DubFah[playerid] == 0)
		{
		    DubFah[playerid] = 1;
		    GivePlayerWeaponEx(playerid, 8, 1);

			SetPlayerAttachedObject(playerid,4,18699,6,-0.092000,-0.021000,1.559999,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);
			SetPlayerAttachedObject(playerid,5,18699,6,-0.092000,-0.021000,1.773999,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);
			SetPlayerAttachedObject(playerid,6,18699,6,-0.092000,-0.021000,2.000999,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);
			SetPlayerAttachedObject(playerid,7,18699,6,-0.092000,-0.021000,2.210999,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);
			SetPlayerAttachedObject(playerid,8,18699,6,-0.092000,-0.021000,2.441000,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);
			SetPlayerAttachedObject(playerid,3,18699,6,-0.092000,-0.021000,2.675000,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);

		    SendClientMessage(playerid, COLOR_GREEN, "* คุณได้ใช้งาน 'ดาบมณี' แล้ว!");
		}
		else
		{
		    DubFah[playerid] = 0;
		    ResetPlayerWeaponsEx(playerid);

		    RemovePlayerAttachedObject(playerid, 4);
		    RemovePlayerAttachedObject(playerid, 5);
		    RemovePlayerAttachedObject(playerid, 6);
		    RemovePlayerAttachedObject(playerid, 7);
		    RemovePlayerAttachedObject(playerid, 8);
		    RemovePlayerAttachedObject(playerid, 3);

		    SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้เก็บ 'ดาบมณี' แล้ว!");
		}
		return 1;
	}

	// มีดสั้นติดไฟ
	else if (!strcmp(name, "มีดสั้นติดไฟ", true))
	{
		if (KnifeFire[playerid] == 0)
		{
		    KnifeFire[playerid] = 1;
		    GivePlayerWeaponEx(playerid, 4, 1);
		    SetPlayerAttachedObject(playerid, 4, 18693, 6, 0.100000, 0.000000, -1.923999, 0.000000, 0.000000, 0.000000, 0.262000, 0.347999, 1.162999);

		    SendClientMessage(playerid, COLOR_GREEN, "* คุณได้ใช้งาน 'มีดสั้นติดไฟ' แล้ว!");
		}
		else
		{
		    KnifeFire[playerid] = 0;
		    ResetPlayerWeaponsEx(playerid);
		    RemovePlayerAttachedObject(playerid, 4);

		    SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้เก็บ 'มีดสั้นติดไฟ' แล้ว!");
		}
		return 1;
	}

	else if (!strcmp(name, "พิซซ่า", true))
	{
	    if (playerData[playerid][pHungry] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีหิว");

		playerData[playerid][pHungry] += 15;
		playerData[playerid][pThirsty] -= 5;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
	}
	else if (!strcmp(name, "น้ำเปล่า", true))
	{
	    if (playerData[playerid][pThirsty] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

		playerData[playerid][pThirsty] += 15;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังดื่ม {00FF00}%s", name);
	}
  	else if (!strcmp(name, "เครื่องมือซ่อมรถ", true))
	{
	    if (IsPlayerInAnyVehicle(playerid))
			return SendClientMessage(playerid, COLOR_RED, "[ ! ] {FFFFFF}กรุณาลงจากยานพาหนะก่อน!");

		isFixCar[playerid] = 2;
		StartProgress(playerid, 100, 0, INVALID_OBJECT_ID);
	}
	else if (!strcmp(name, "ใบขับขี่รถยนต์", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}เป็นแค่ใบอนุญาติขับรถเท่านั้น", name);
	}
	else if (!strcmp(name, "ดอกไม้", true))
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 14, 20000);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}
	else if (!strcmp(name, "หมัดไฟ", true))
	{
		if (MudFireOn[playerid] == 0)
		{
			MudFireOn[playerid] = 1;
			SetPlayerAttachedObject(playerid, 4, 18693, 5, 1.768999, 0.011000, 0.208999, 0.000000, -96.599990, 0.000000, 1.000000, 1.000000, 1.000000); // Flame99 - handfie right
	        SetPlayerAttachedObject(playerid, 5, 18693, 6, 1.673999, 0.000000, -0.059999, 0.000000, -88.199989, 0.000000, 1.000000, 1.000000, 1.000000); // Flame99 - handfie right
			SendClientMessage(playerid, COLOR_LIGHTRED, "[หมัดไฟ] : คุณได้เรียกใช้ 'หมัดไฟ' แล้ว");
		}
		else
		{
			MudFireOn[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 4);
			RemovePlayerAttachedObject(playerid, 5);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[หมัดไฟ] : คุณได้เก็บ 'หมัดไฟ' แล้ว");
		}
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}
	//Ms
	else if (!strcmp(name, "สนับมือ", true))
	{
		if (!useitemdamas[playerid]){
			useitemdamas[playerid] = 1;
			ResetPlayerWeaponsEx(playerid);
		    //GivePlayerWeaponEx(playerid, 15, 1);
			GivePlayerWeaponEx(playerid, 1, 1);
	        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else{
			useitemdamas[playerid] = 0;
	        SendClientMessage(playerid, COLOR_LIGHTRED, "# {ffffff}คุณได้เก็บ อาวุธ แล้ว!");
	    	ResetPlayerWeaponsEx(playerid);
		}
	}
	else if (!strcmp(name, "ไม้สนุ๊ก", true))
	{
		if (!useitemdamas[playerid]){
			useitemdamas[playerid] = 1;
			ResetPlayerWeaponsEx(playerid);
		    //GivePlayerWeaponEx(playerid, 15, 1);
			GivePlayerWeaponEx(playerid, 7, 1);
	        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else{
			useitemdamas[playerid] = 0;
	        SendClientMessage(playerid, COLOR_LIGHTRED, "# {ffffff}คุณได้เก็บ อาวุธ แล้ว!");
	    	ResetPlayerWeaponsEx(playerid);
		}
	}
	else if (!strcmp(name, "ไม้เบสบอล", true))
	{
		if (!useitemdamas[playerid]){
			useitemdamas[playerid] = 1;
			ResetPlayerWeaponsEx(playerid);
		    //GivePlayerWeaponEx(playerid, 15, 1);
			GivePlayerWeaponEx(playerid, 5, 1);
	        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else{
			useitemdamas[playerid] = 0;
	        SendClientMessage(playerid, COLOR_LIGHTRED, "# {ffffff}คุณได้เก็บ อาวุธ แล้ว!");
	    	ResetPlayerWeaponsEx(playerid);
		}
	}
	else if (!strcmp(name, "ไม้กอล์ฟ", true))
	{
		if (!useitemdamas[playerid]){
			useitemdamas[playerid] = 1;
			ResetPlayerWeaponsEx(playerid);
		    //GivePlayerWeaponEx(playerid, 15, 1);
			GivePlayerWeaponEx(playerid, 2, 1);
	        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else{
			useitemdamas[playerid] = 0;
	        SendClientMessage(playerid, COLOR_LIGHTRED, "# {ffffff}คุณได้เก็บ อาวุธ แล้ว!");
	    	ResetPlayerWeaponsEx(playerid);
		}
	}
	else if (!strcmp(name, "ไอติม", true))
	{
		if (!useitemdamas[playerid]){
			useitemdamas[playerid] = 1;
			ResetPlayerWeaponsEx(playerid);
		    //GivePlayerWeaponEx(playerid, 15, 1);
			GivePlayerWeaponEx(playerid, 8, 1);
	        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else{
			useitemdamas[playerid] = 0;
	        SendClientMessage(playerid, COLOR_LIGHTRED, "# {ffffff}คุณได้เก็บ อาวุธ แล้ว!");
	    	ResetPlayerWeaponsEx(playerid);
		}
	}
	/////////////////////////////////////////////////////////////////////
	else if (!strcmp(name, "ดิลโด้", true))
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 10, 20000);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}
	/*else if (!strcmp(name, "ไม้สนุ๊ก", true))
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 7, 20000);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}*/
	/*else if (!strcmp(name, "ไม้กอล์ฟ", true))
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 2, 20000);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}*/
	else if (!strcmp(name, "มีดสั้น", true))
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 4, 20000);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}
	/*else if (!strcmp(name, "ไม้เบสบอล", true))
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 5, 1);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}*/
	else if (!strcmp(name, "พลั่ว", true))
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 6, 1);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}
	/*else if (!strcmp(name, "สนับมือ", true))
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 1, 20000);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}*/
	else if (!strcmp(name, "ดาบซามูไร", true))
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 8, 20000);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}
	else if (!strcmp(name, "M4", true))
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 31, 20000);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}
	else if (!strcmp(name, "MP5", true))
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 29, 20000);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}
	else if (!strcmp(name, "กัญชา", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "โคเคน", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "เนื้อวัว", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "เนื้อไก่", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "เหล็ก", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "ทอง", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "คอปเปอร์", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "เพรช", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "ส้ม", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "แอปเปิ้ล", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "มะนาว", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "ไม้", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "ตระกร้า", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปทำงานขุดทรายเท่านั้น", name);
	}
	else if (!strcmp(name, "เลื่อยตัดไม้", true))
	{
		if(Sawon[playerid] == 0)
		{
			Sawon[playerid] = 1;
			SetPlayerAttachedObject(playerid, 0, 341, 6, 0.101999, -0.016000, -0.134000, 0.000000, -68.400001, 0.000000, 1.000000, 1.000000, 1.000000);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[เลื่อย] : คุณได้หยิบ'เลื่อย' มาใช้แล้ว");
		}
		else
		{
			Sawon[playerid] = 0;
			RemovePlayerAttachedObject(playerid, 1);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[เลื่อย] : คุณได้เก็บ 'เลื่อย' แล้ว");
		}
	}
	else if (!strcmp(name, "เหยื่อ", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}ไปที่จุดตกปลาแต่จำเป็นต้องมีเบ็ดตกปลาและใช้งานผ่านเบ็ดตกปลาได้เลย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "ปลาเก๋า", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "ปลาแซลม่อน", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "ปลากระเบน", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "ปลาฉลาม", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "เบ็ดตกปลา", true))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}ไปที่จุดตกปลาและใช้งานได้เลย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "หมวกกันน็อคสีน้ำเงิน", true))
	{
	    if (!playerData[playerid][pHelmetOn])
	    {
	        playerData[playerid][pHelmetOn] = true;
	        SendClientMessage(playerid, COLOR_WHITE, "คุณได้สวมหมวกกันน็อค");
	    	SetPlayerAttachedObject(playerid, 8, 18976, 2, 0.071999, 0.035999, 0.000000, 97.400009, 83.900024, -4.899995, 1.133001, 0.975000, 1.180003);
		}
		else
		{
		    playerData[playerid][pHelmetOn] = false;
		    SendClientMessage(playerid, COLOR_WHITE, "คุณได้ถอดหมวกกันน็อค");
		    RemovePlayerAttachedObject(playerid, 8);
		}
	}
	else if (!strcmp(name, "หมวกกันน็อคสีม่วง", true))
	{
	    if (!playerData[playerid][pHelmetOn])
	    {
	        playerData[playerid][pHelmetOn] = true;
	        SendClientMessage(playerid, COLOR_WHITE, "คุณได้สวมหมวกกันน็อค");
	    	SetPlayerAttachedObject(playerid, 8, 18979, 2, 0.071999, 0.035999, 0.000000, 97.400009, 83.900024, -4.899995, 1.133001, 0.975000, 1.180003);
		}
		else
		{
		    playerData[playerid][pHelmetOn] = false;
		    SendClientMessage(playerid, COLOR_WHITE, "คุณได้ถอดหมวกกันน็อค");
		    RemovePlayerAttachedObject(playerid, 8);
		}
	}
	else if (!strcmp(name, "หมวกกันน็อคสีแดง", true))
	{
	    if (!playerData[playerid][pHelmetOn])
	    {
	        playerData[playerid][pHelmetOn] = true;
	        SendClientMessage(playerid, COLOR_WHITE, "คุณได้สวมหมวกกันน็อค");
	    	SetPlayerAttachedObject(playerid, 8, 18645, 2, 0.071999, 0.035999, 0.000000, 97.400009, 83.900024, -4.899995, 1.133001, 0.975000, 1.180003);
		}
		else
		{
		    playerData[playerid][pHelmetOn] = false;
		    SendClientMessage(playerid, COLOR_WHITE, "คุณได้ถอดหมวกกันน็อค");
		    RemovePlayerAttachedObject(playerid, 8);
		}
	}
	else if (!strcmp(name, "มือถือ", true))
	{
		ShowPlayerms_iPhone(playerid, true);
  	}
	return 1;
}

forward OnPlayerClickItem(playerid, itemid,  name[]);
public OnPlayerClickItem(playerid, itemid,  name[])
{
	PlayerClickItem(playerid, itemid, name);
	/*if (!strcmp(name, "มือถือ", true))
	{
		callcmd::phone(playerid, "\1");
	}*/
	
	if (!strcmp(name, "ใบขับขี่รถยนต์", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	}
	else if (!strcmp(name, "เลื่อยตัดไม้", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	}
	else if (!strcmp(name, "เบ็ดตกปลา", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	}
	// else if (!strcmp(name, "สนับมือ", true))
	// {
	// 	Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	// }
	// else if (!strcmp(name, "ไม้สนุ๊ก", true))
	// {
	// 	Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	// }
	// else if (!strcmp(name, "ไม้กอล์ฟ", true))
	// {
	// 	Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	// }
	// 	else if (!strcmp(name, "ไม้เบสบอล", true))
	// {
	// 	Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	// }
	// else if (!strcmp(name, "คาตานะ", true))
	// {
	// 	Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	// }
	else if (!strcmp(name, "กุญแจตู้เซฟ", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	}
	else if (!strcmp(name, "บลูปริ้นกุญแจตู้", true))
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	}
	else
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU, DIALOG_STYLE_LIST, name, "ใช้{FF00FF}(USE)\nให้{FF00FF}(Give)\nทิ้ง{FF00FF}(Drop)", "เลือก", "ปิด");
	}
	playerData[playerid][pItemSelect] = itemid;
 	return 1;
}

forward OpenInventory(playerid);
public OpenInventory(playerid)
{
    if (playerData[playerid][IsLoggedIn] == false)
	    return 0;

	new
		string[4096],
		string2[4096],
		count,
		var[4096];

    for (new i = 0; i < playerData[playerid][pMaxItem]; i ++)
	{
 		if (invData[playerid][i][invExists])
		 {
			new result = CheckWeapon(invData[playerid][i][invItem]);
			if (result == 1)
            {
                format(string, sizeof(string), "%s\t{D0AEEB}({FFFFFF}%d{D0AEEB})\t%.2f\n", invData[playerid][i][invItem], invData[playerid][i][invQuantity], invData[playerid][i][invBroke]);
                strcat(string2, string);
            }
            else
            {
                format(string, sizeof(string), "%s\t{D0AEEB}({FFFFFF}%d{D0AEEB})\tไม่มี\n", invData[playerid][i][invItem], invData[playerid][i][invQuantity]);
                strcat(string2, string);
            }
   			format(var, sizeof(var), "itemlist%d", count);
   			SetPVarInt(playerid, var, i);
   			count++;
		}
	}
	if (!count)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีไอเท็มอยู่ในตัวเลย");
		return 1;
	}
	format(string, sizeof(string), "ชื่อ\tความจุ (%d/%d)\tความทนทาน\n%s", Inventory_Items(playerid), playerData[playerid][pMaxItem], string2);
	return Dialog_Show(playerid, DIALOG_INVENTORY, DIALOG_STYLE_TABLIST_HEADERS, "[กระเป๋า]", string, "เลือก", "ปิด");
}
/*forward OpenInventory(playerid);
public OpenInventory(playerid)
{
    if (playerData[playerid][IsLoggedIn] == false)
	    return 0;

	new
		string[4096],
		string2[4096],
		count,
		var[4096];

    for (new i = 0; i < playerData[playerid][pMaxItem]; i ++)
	{
 		if (invData[playerid][i][invExists])
		 {
   			format(string, sizeof(string), "%s\t{8e24aa}({FFFFFF}%d{8e24aa})\n", invData[playerid][i][invItem], invData[playerid][i][invQuantity], invData[playerid][i][invWeapon]);
   			strcat(string2, string);
   			format(var, sizeof(var), "itemlist%d", count);
   			SetPVarInt(playerid, var, i);
   			count++;
		}
	}
	if (!count)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีไอเท็มอยู่ในตัวเลย");
		return 1;
	}
	format(string, sizeof(string), "ชื่อ\tความจุ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem], string2);
	return Dialog_Show(playerid, DIALOG_INVENTORY, DIALOG_STYLE_TABLIST_HEADERS, "[กระเป๋า]", string, "เลือก", "ปิด");
}*/

Inventory_Clear(playerid)
{
	static
	    string[64];

	for (new i = 0; i < MAX_INVENTORY; i ++)
	{
	    if (invData[playerid][i][invExists])
	    {
	        invData[playerid][i][invExists] = 0;
	        invData[playerid][i][invQuantity] = 0;
		}
	}
	mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `inventory` WHERE `invOwner` = '%d'", playerData[playerid][pID]);
	return mysql_tquery(g_SQL, string);
}

Inventory_Set(playerid, const item[], amount)
{
	new itemid = Inventory_GetItemID(playerid, item);

	if (itemid == -1 && amount > 0)
	{
		Inventory_Add(playerid, item, amount);
	}
	else if (amount > 0 && itemid != -1)
	{
	    Inventory_SetQuantity(playerid, item, amount);
	}
	else if (amount < 1 && itemid != -1)
	{
	    Inventory_Remove(playerid, item, -1);
	}
	return 1;
}

Inventory_GetItemID(playerid, const item[])
{
	for (new i = 0; i < MAX_INVENTORY; i ++)
	{
	    if (!invData[playerid][i][invExists])
	        continue;

		if (!strcmp(invData[playerid][i][invItem], item)) return i;
	}
	return -1;
}

Inventory_GetFreeID(playerid)
{
	if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
		return -1;

	for (new i = 0; i < MAX_INVENTORY; i ++)
	{
	    if (!invData[playerid][i][invExists])
	        return i;
	}
	return -1;
}

Inventory_Items(playerid)
{
    new count;

    for (new i = 0; i != MAX_INVENTORY; i ++) if (invData[playerid][i][invExists])
	{
        count++;
	}
	return count;
}

Inventory_Count(playerid, const item[])
{
	new itemid = Inventory_GetItemID(playerid, item);

	if (itemid != -1)
	    return invData[playerid][itemid][invQuantity];

	return 0;
}

Inventory_HasItem(playerid, const item[])
{
	return (Inventory_GetItemID(playerid, item) != -1);
}

Inventory_SetQuantity(playerid, const item[], quantity)
{
	new
	    itemid = Inventory_GetItemID(playerid, item),
	    string[128];

	if (itemid != -1)
	{
		mysql_format(g_SQL, string, sizeof(string), "UPDATE `inventory` SET `invQuantity` = %d WHERE `invOwner` = '%d' AND `invID` = '%d'", quantity, playerData[playerid][pID], invData[playerid][itemid][invID]);
	    mysql_tquery(g_SQL, string);

	    invData[playerid][itemid][invQuantity] = quantity;
	}
	return 1;
}

/*Inventory_Add(playerid, const item[], quantity = 1, weapon = 0)
{
	new
		itemid = Inventory_GetItemID(playerid, item),
		string[2048];

    if (CheckWeapon(item) == 1)
    {
		if (itemid == -1)
		{
		    itemid = Inventory_GetFreeID(playerid);

		    if (itemid != -1)
		    {
		        invData[playerid][itemid][invExists] = true;
		        invData[playerid][itemid][invQuantity] = quantity;
		        invData[playerid][itemid][invWeapon] = weapon;

		        format(invData[playerid][itemid][invItem], 32, item);

				mysql_format(g_SQL, string, sizeof(string), "INSERT INTO `inventory` (`invOwner`, `invItem`, `invQuantity`, `invWeapon`) VALUES ('%d', '%e', '%d', '%d')", playerData[playerid][pID], item, quantity, weapon);
				mysql_tquery(g_SQL, string, "OnInventoryAdd", "dd", playerid, itemid);

				//ShowInventoryAdd(playerid, item, quantity); 

		        return itemid;
			}
			return -1;
		}
		else
		{
			return -2;
		}
    }
	else
	{
		if (itemid == -1)
		{
		    itemid = Inventory_GetFreeID(playerid);

		    if (itemid != -1)
		    {
		        invData[playerid][itemid][invExists] = true;
		        invData[playerid][itemid][invQuantity] = quantity;
		        invData[playerid][itemid][invWeapon] = weapon;

		        format(invData[playerid][itemid][invItem], 32, item);

				mysql_format(g_SQL, string, sizeof(string), "INSERT INTO `inventory` (`invOwner`, `invItem`, `invQuantity`, `invWeapon`) VALUES ('%d', '%e', '%d', '%d')", playerData[playerid][pID], item, quantity, weapon);
				mysql_tquery(g_SQL, string, "OnInventoryAdd", "dd", playerid, itemid);
				NOTIFY_ADD(playerid, item, quantity);
				//ShowInventoryAdd(playerid, item, quantity); 

		        return itemid;
			}
			return -1;
		}
		else
		{
		    mysql_format(g_SQL, string, sizeof(string), "UPDATE `inventory` SET `invQuantity` = `invQuantity` + %d WHERE `invOwner` = '%d' AND `invID` = '%d'", quantity, playerData[playerid][pID], invData[playerid][itemid][invID]);
		    mysql_tquery(g_SQL, string);
			NOTIFY_ADD(playerid, item, quantity);
		    invData[playerid][itemid][invQuantity] += quantity;

			//ShowInventoryAdd(playerid, item, quantity); 
		}
	}
	return itemid;
}*/

Inventory_Add(playerid, const item[], quantity = 1, weapon = 0)
{
    new itemid = Inventory_GetItemID(playerid, item);
    new string[2048];

    if (CheckWeapon(item) == 1)
    {
        if (itemid == -1)
        {
            itemid = Inventory_GetFreeID(playerid);

            if (itemid != -1)
            {
                invData[playerid][itemid][invExists]   = true;
                invData[playerid][itemid][invQuantity] = quantity;
                invData[playerid][itemid][invWeapon]   = weapon;

                format(invData[playerid][itemid][invItem], 32, item);

                mysql_format(g_SQL, string, sizeof(string),
                    "INSERT INTO `inventory` (`invOwner`, `invItem`, `invQuantity`, `invWeapon`) VALUES ('%d', '%e', '%d', '%d', '%f')",
                    playerData[playerid][pID], item, quantity, weapon, 100);
                mysql_tquery(g_SQL, string, "OnInventoryAdd", "dd", playerid, itemid);

                return itemid;
            }
            return -1;
        }
        else return -2;
    }
    else
    {
        if (itemid == -1)
        {
            itemid = Inventory_GetFreeID(playerid);

            if (itemid != -1)
            {
                invData[playerid][itemid][invExists]   = true;
                invData[playerid][itemid][invQuantity] = quantity;
                invData[playerid][itemid][invWeapon]   = weapon;

                format(invData[playerid][itemid][invItem], 32, item);

                mysql_format(g_SQL, string, sizeof(string),
                    "INSERT INTO `inventory` (`invOwner`, `invItem`, `invQuantity`, `invWeapon`) VALUES ('%d', '%e', '%d', '%d')",
                    playerData[playerid][pID], item, quantity, weapon);
                mysql_tquery(g_SQL, string, "OnInventoryAdd", "dd", playerid, itemid);

                NOTIFY_ADD(playerid, item, quantity);


                // ? เช็คบัตร X2

                if (!strcmp(item, "บัตรฟามX2-3วัน", true))
                    AddItemExpire(playerid, item, 3);
                else if (!strcmp(item, "บัตรฟามX2-7วัน", true))
                    AddItemExpire(playerid, item, 7);

                return itemid;
            }
            return -1;
        }
        else
        {
            mysql_format(g_SQL, string, sizeof(string),
                "UPDATE `inventory` SET `invQuantity` = `invQuantity` + %d WHERE `invOwner` = '%d' AND `invID` = '%d'",
                quantity, playerData[playerid][pID], invData[playerid][itemid][invID]);
            mysql_tquery(g_SQL, string);

            NOTIFY_ADD(playerid, item, quantity);
            invData[playerid][itemid][invQuantity] += quantity;


            // ? เช็คบัตร X2

            if (!strcmp(item, "บัตรฟามX2-3วัน", true))
                AddItemExpire(playerid, item, 3);
            else if (!strcmp(item, "บัตรฟามX2-7วัน", true))
                AddItemExpire(playerid, item, 7);
        }
    }
    return itemid;
}

Inventory_Remove(playerid, const item[], quantity = 1)
{
	new
		itemid = Inventory_GetItemID(playerid, item),
		string[128];

	if (itemid != -1)
	{
	    if (invData[playerid][itemid][invQuantity] > 0)
	    {
	        invData[playerid][itemid][invQuantity] -= quantity;
		}
		if (quantity == -1 || invData[playerid][itemid][invQuantity] < 1)
		{
		    invData[playerid][itemid][invExists] = false;
		    invData[playerid][itemid][invQuantity] = 0;

		    mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `inventory` WHERE `invOwner` = '%d' AND `invID` = '%d'", playerData[playerid][pID], invData[playerid][itemid][invID]);
	        mysql_tquery(g_SQL, string);
			NOTIFY_REMOVE(playerid, item, quantity);
		}
		else if (quantity != -1 && invData[playerid][itemid][invQuantity] > 0)
		{
			mysql_format(g_SQL, string, sizeof(string), "UPDATE `inventory` SET `invQuantity` = `invQuantity` - %d WHERE `invOwner` = '%d' AND `invID` = '%d'", quantity, playerData[playerid][pID], invData[playerid][itemid][invID]);
            mysql_tquery(g_SQL, string);
			NOTIFY_REMOVE(playerid, item, quantity);
		}
		return 1;
	}
	return 0;
}

forward Inventory_Load(playerid);
public Inventory_Load(playerid)
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows && i < MAX_INVENTORY; i ++)
	{
	    invData[playerid][i][invExists] = true;
	    cache_get_value_name_int(i, "invID", invData[playerid][i][invID]);
        cache_get_value_name_int(i, "invQuantity", invData[playerid][i][invQuantity]);
        cache_get_value_name_int(i, "invWeapon", invData[playerid][i][invWeapon]);

		cache_get_value_name(i, "invItem", invData[playerid][i][invItem], 32);
		cache_get_value_name_float(i, "invBroke", invData[playerid][i][invBroke]);

	}
	return 1;
}

forward Contact_Load(playerid);
public Contact_Load(playerid)
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows && i < MAX_CONTACTS; i ++)
	{
		cache_get_value_name(i, "contactName", contactData[playerid][i][contactName], 32);

		contactData[playerid][i][contactExists] = true;
	    cache_get_value_name_int(i, "contactID", contactData[playerid][i][contactID]);
	    cache_get_value_name_int(i, "contactNumber", contactData[playerid][i][contactNumber]);
	}
	return 1;
}

GetNumberOwner(number)
{
	foreach (new i : Player) if (playerData[i][pPhone] == number && Inventory_HasItem(i, "มือถือ"))
	{
		return i;
	}
	return INVALID_PLAYER_ID;
}

ShowContacts(playerid)
{
	new
	    string[32 * MAX_CONTACTS],
		count = 0;

	string = "เพิ่มเบอร์\n";

	for (new i = 0; i != MAX_CONTACTS; i ++) if (contactData[playerid][i][contactExists])
	{
	    format(string, sizeof(string), "%s%s - #%d\n", string, contactData[playerid][i][contactName], contactData[playerid][i][contactNumber]);

		ListedContacts[playerid][count++] = i;
	}
	Dialog_Show(playerid, DIALOG_CONTACTS, DIALOG_STYLE_LIST, "[รายชื่อผู้ติดต่อ]", string, "เลือก", "กลับ");
	return 1;
}

CancelCall(playerid)
{
    if (playerData[playerid][pCallLine] != INVALID_PLAYER_ID)
	{
 		playerData[playerData[playerid][pCallLine]][pCallLine] = INVALID_PLAYER_ID;
   		playerData[playerData[playerid][pCallLine]][pIncomingCall] = 0;

		playerData[playerid][pCallLine] = INVALID_PLAYER_ID;
		playerData[playerid][pIncomingCall] = 0;
	}
	return 1;
}

PlayerPlaySoundEx(playerid, sound)
{
	new
	    Float:x,
	    Float:y,
	    Float:z;

	GetPlayerPos(playerid, x, y, z);

	foreach (new i : Player) if (IsPlayerInRangeOfPoint(i, 20.0, x, y, z))
	{
	    PlayerPlaySound(i, sound, x, y, z);
	}
	return 1;
}

IsPlayerOnPhone(playerid)
{
	if (playerData[playerid][pEmergency] > 0 || playerData[playerid][pCallLine] != INVALID_PLAYER_ID)
	    return 1;

	return 0;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if (playerData[playerid][pAdmin] >= 6)
	{
    	SetPlayerPosFindZ(playerid, fX, fY, fZ+5);
	}
	return 1;
}


CMD:stats(playerid,params[])
{
    static const aGender[3][10] = {"แก้ไข", "ชาย", "หญิง"};

	SendClientMessageEx(playerid, COLOR_GREEN, "|---------- {FFFFFF}(%d)%s %s{00FF00} ----------|", playerid, GetPlayerNameEx(playerid), ReturnDateEx());
	SendClientMessageEx(playerid, COLOR_WHITE, "เพศ: {FFFF00}[%s] {FFFFFF}เงินในตัว: {FFFF00}[%s] {FFFFFF}วันเดือนปีเกิด: {FFFF00}[%s]", aGender[playerData[playerid][pGender]], FormatMoney(GetPlayerMoneyEx(playerid)), playerData[playerid][pBirthday]);
	SendClientMessageEx(playerid, COLOR_WHITE, "ฆ่า: {FFFF00}[%s] {FFFFFF}ตาย: {FFFF00}[%s] {FFFFFF}น้ำ: {FFFF00}[%.3f] {FFFFFF}อาหาร: {FFFF00}[%.3f]", FormatNumber(playerData[playerid][pKills]), FormatNumber(playerData[playerid][pDeaths]), playerData[playerid][pThirsty], playerData[playerid][pHungry]);
    SendClientMessageEx(playerid, COLOR_WHITE, "เลเวล: {FFFF00}[%d] {FFFFFF}ค่าประสบการณ์: {FFFF00}[%d/%d] {FFFFFF}ชั่วโมงที่เล่น: {FFFF00}[%d] {FFFFFF}ครบชั่วโมง: {FFFF00}[%d/60]", GetPlayerLevel(playerid), GetPlayerExp(playerid), GetPlayerRequiredExp(playerid), playerData[playerid][pHours], playerData[playerid][pMinutes]);
	SendClientMessageEx(playerid, COLOR_WHITE, "วันที่ลงทะเบียน: {FFFF00}[%s]", playerData[playerid][pRegisterDate]);
    SendClientMessageEx(playerid, COLOR_LIGHTRED, "จำนวน Coin : [%d Coin]", playerData[playerid][pCoin]);
	return 1;
}

CMD:giveall(playerid, params[])
{
    new item[32], amount;

    if (sscanf(params, "s[32]d", item, amount)) return SendClientMessage(playerid, -1, "ใช้: /giveall [ชื่อไอเทม] [จำนวน]");
    
    for (new i = 0; i < MAX_PLAYERS; i++)
    {
        if (!IsPlayerConnected(i)) continue;

        Inventory_Add(i, item, amount); // ฟังก์ชันให้ของ
        new msg[128];
        format(msg, sizeof(msg), "คุณได้รับ %s x %d จากแอดมิน", item, amount);
        SendClientMessage(i, 0x00FF00FF, msg);
    }

    new msgadmin[128];
    format(msgadmin, sizeof(msgadmin), "คุณได้แจก %s x %d ให้กับทุกคนในเซิฟ", item, amount);
    SendClientMessage(playerid, 0xFFD700FF, msgadmin);

	new strd[256];
	new DCC_Embed:embed = DCC_CreateEmbed();
	DCC_SetEmbedTitle(embed, "LogAdmin GiveAll");
	format(strd, sizeof(strd), "`Admin %s `ได้แจกไอเท็ม %s จำนวน %d ให้กับทุกคนในเซิฟ\n `วัน/เวลา %s`", GetPlayerNameEx(playerid), item, amount, ReturnDate());
	DCC_SetEmbedDescription(embed, strd);
    DCC_SetEmbedColor(embed, 0xFFFF00);
	DCC_SetEmbedThumbnail(embed, "https://img2.pic.in.th/pic/LOGO0f2189a16b0f7ee0.th.png");
	DCC_SendChannelEmbedMessage(DCC_FindChannelById("1413837232116338768"), embed);
    return 1;
}

CMD:sattach(playerid, params[])
{
	new user,slot,slot2;
	if(sscanf(params, "ddd", user, slot, slot2))
		SendClientMessage(playerid, COLOR_GREY, "/sattach [slot] [object] [bone]");

	if(playerData[playerid][pAdmin] >= 6)
	{
        SetPlayerAttachedObject(playerid, user, slot, slot2);
	}
	return 1;
}

CMD:eattach(playerid, params[])
{
	new user;
	if(sscanf(params, "d", user))
		SendClientMessage(playerid, COLOR_GREY, "/eattach [slot]");

	if(playerData[playerid][pAdmin] >= 6)
	{
	    SetPVarInt(playerid, "ATTACH", 1);
        EditAttachedObject(playerid, user);
	}
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(response == EDIT_RESPONSE_FINAL)
    {
	   	if(GetPVarInt(playerid, "ATTACH") == 1)
	   	{
   			SetPVarInt(playerid, "ATTACH", 0);
        	SetPlayerAttachedObject(playerid, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ);
			printf("%d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f", index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ);

			SendClientMessageEx(playerid, COLOR_GREEN, "%d Attached object ถูกบันทึกแล้ว",modelid);
		}
	}
	return 1;
}

CreateVehicles()
{
	//NewbieCar[0] = AddStaticVehicle(481, 1674.1898, -2310.3252, 13.1100, 0.0000, -1, -1);

}

CreateMap()
{

	//LSPD NEW VG////////////////////////////////////////////////////////////////////////////////////////////////////////
	//new tmpobjid;
	tmpobjid = CreateDynamicObject(19355, 2521.955566, -1513.735229, 24.310598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19355, 2525.143554, -1513.696411, 24.310590, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19355, 2526.650878, -1515.199584, 24.310598, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19355, 2520.416992, -1515.244384, 24.310598, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19355, 2521.950195, -1516.785034, 24.310598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19355, 2525.155517, -1516.772827, 24.310598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19373, 2521.901123, -1515.337524, 25.975397, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19373, 2525.082275, -1515.316284, 25.975397, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2506.256347, -1513.831909, 24.310598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19355, 2511.016113, -1515.321533, 24.310598, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2506.281005, -1516.908569, 24.310598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2506.286376, -1515.362670, 26.048849, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19355, 2501.532714, -1515.323486, 24.310598, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2521.990478, -1522.000854, 24.780199, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2512.555664, -1522.043090, 24.780199, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(14387, 2518.124755, -1515.452392, 23.866270, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(14387, 2513.407226, -1515.485351, 23.866300, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(14387, 2528.037109, -1519.057250, 23.866300, -0.000138, 0.000030, 0.400364, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(14387, 2528.066406, -1523.764038, 23.866300, -0.000138, 0.000030, 0.400364, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(14387, 2527.911621, -1515.535034, 22.827638, 40.000019, 0.000180, 90.399757, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(14387, 2527.774414, -1527.416015, 22.393026, 39.999835, 0.000001, -11.599651, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18762, 2525.294433, -1515.121948, 28.027875, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2529.229980, -1530.620239, 22.243398, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2526.855712, -1530.636962, 23.031370, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2502.895996, -1522.172729, 24.780099, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19373, 2527.645019, -1527.532348, 23.888929, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19373, 2527.669189, -1530.965087, 23.888898, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19373, 2527.693603, -1534.464477, 23.888898, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(673, 2528.747558, -1538.654785, 21.525510, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2529.266601, -1535.864257, 22.243398, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2526.891357, -1535.739501, 23.031400, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19373, 2527.710937, -1537.905883, 23.888898, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2522.090087, -1532.419799, 24.780199, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2512.482666, -1532.504638, 24.780199, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2502.968505, -1532.551269, 24.780099, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1319, 2519.433837, -1513.026489, 23.363286, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1319, 2517.562500, -1513.039672, 23.363298, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1319, 2515.810791, -1513.051757, 23.363298, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1319, 2513.922607, -1513.065063, 23.363298, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1319, 2512.381591, -1513.075805, 23.363298, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(997, 2518.263183, -1516.208740, 24.380609, 0.000030, 30.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(997, 2514.421875, -1516.235473, 24.380598, 0.000030, 30.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(997, 2527.385498, -1519.269165, 24.380598, -0.000138, 30.000030, 0.400364, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(997, 2527.412597, -1523.105957, 24.380598, -0.000138, 30.000030, 0.400364, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3851, 2521.208007, -1523.785766, 26.883657, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3851, 2507.369140, -1523.885864, 26.883657, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19379, 2506.497802, -1529.131225, 24.854597, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19379, 2516.119873, -1529.059936, 24.854597, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19379, 2522.029052, -1529.050048, 24.862600, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2526.796875, -1528.582275, 26.851598, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2522.108886, -1523.836791, 30.352499, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2512.579345, -1523.903320, 30.352499, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2506.462646, -1523.946044, 30.352499, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19379, 2522.020019, -1529.023437, 31.966878, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19379, 2506.497802, -1529.131225, 31.966897, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19379, 2516.119873, -1529.059936, 31.966897, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3851, 2521.240966, -1523.106811, 31.540098, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3851, 2521.203125, -1521.796264, 35.139045, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3851, 2507.379882, -1523.066040, 31.540098, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3851, 2507.363037, -1521.781982, 35.139099, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2525.029541, -1521.617065, 36.806999, 89.999992, 173.472076, -83.071807, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2521.600097, -1521.640991, 36.806999, 89.999992, 173.472076, -83.071807, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2518.174804, -1521.665039, 36.806999, 89.999992, 173.472076, -83.071807, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2514.755615, -1521.688842, 36.806999, 89.999992, 173.472076, -83.071807, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2511.316162, -1521.712890, 36.806999, 89.999992, 173.472076, -83.071807, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2507.883056, -1521.736938, 36.806999, 89.999992, 173.472076, -83.071807, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2504.472167, -1521.760620, 36.806999, 89.999992, 173.472076, -83.071807, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2526.105224, -1521.620849, 35.293350, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2502.582275, -1522.913574, 32.033088, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2526.092529, -1522.771972, 32.033088, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2502.583251, -1521.681884, 35.293350, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2520.950439, -1521.679565, 35.290222, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2511.317382, -1521.746582, 35.290222, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2506.609375, -1521.769287, 35.290222, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2501.887207, -1527.274414, 35.290199, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19379, 2506.514892, -1529.120971, 36.952949, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19379, 2516.119873, -1529.059936, 36.952896, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19379, 2522.020019, -1529.023437, 36.952911, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2909, 2522.714111, -1521.491210, 35.336997, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2909, 2514.443115, -1521.457763, 35.336997, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2909, 2506.171875, -1521.524658, 35.336997, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2508.719970, -1522.283203, 25.288068, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2499.339843, -1522.265747, 25.288099, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2507.189453, -1520.735107, 25.288099, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2504.000000, -1520.709228, 25.288099, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2508.719970, -1522.283203, 28.727968, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2504.023925, -1520.741333, 28.727998, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2507.189453, -1520.735107, 28.727998, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2499.340087, -1522.354614, 28.727998, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2508.719970, -1522.283203, 32.120346, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2499.340087, -1522.334594, 32.120399, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2504.023925, -1520.741333, 32.120399, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2507.202148, -1520.719604, 32.120399, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2508.719970, -1522.283203, 35.387100, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2507.202148, -1520.719604, 35.387100, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2502.500000, -1522.332641, 35.387138, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2504.023925, -1520.741333, 35.387100, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2504.068359, -1522.420288, 37.041702, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2507.151123, -1522.388793, 37.041702, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3851, 2505.891601, -1520.582641, 30.514516, 89.999992, 173.472076, -83.071807, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2514.403808, -1523.132324, 32.186653, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2506.392089, -1521.759521, 37.831588, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2515.876708, -1521.718383, 37.831588, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2521.984375, -1521.686645, 37.831588, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2526.758544, -1526.411865, 37.831596, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2526.801025, -1529.423828, 37.831596, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2522.074707, -1534.302001, 37.831596, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2512.574951, -1534.386596, 37.831596, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2506.222412, -1534.453002, 37.831596, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2501.462646, -1529.693481, 37.831596, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2501.494628, -1526.423217, 37.831596, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2500.815673, -1520.729370, 25.288099, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2500.815673, -1520.729370, 28.727998, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2500.815673, -1520.729370, 32.120399, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2500.815673, -1520.729370, 35.387100, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2499.340087, -1522.334594, 35.373908, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3851, 2501.957519, -1520.610229, 30.514497, 89.999992, 173.472076, -83.071807, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3851, 2514.122558, -1523.186523, 31.540098, 0.000030, 20.000139, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2502.816162, -1516.886230, 24.310598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2498.075439, -1521.674438, 24.310598, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2498.138183, -1531.177246, 24.310598, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2526.857177, -1522.434936, 35.584297, 20.000116, -0.000032, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19435, 2526.870117, -1523.615844, 32.329452, 20.000116, -0.000032, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3851, 2526.750976, -1528.578979, 34.013687, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2526.796875, -1528.582275, 30.347719, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2526.796875, -1528.582275, 23.412199, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2526.863037, -1538.078491, 26.851598, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2526.863037, -1538.078491, 30.347700, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3851, 2526.799072, -1537.162719, 34.013687, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2526.874023, -1538.100219, 23.412199, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2522.103271, -1534.295288, 26.851598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2512.523437, -1534.361450, 26.851598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2506.538330, -1534.430786, 26.851598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2501.729003, -1529.673583, 26.851598, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2500.883056, -1522.405029, 37.041702, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2500.872314, -1523.777099, 25.288099, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2500.872314, -1523.777099, 28.723119, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2500.872314, -1523.777099, 32.044281, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2500.872314, -1523.777099, 35.232582, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2501.596435, -1524.292480, 26.786447, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2522.103271, -1534.295288, 30.362699, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2512.523437, -1534.361450, 30.362699, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2506.538330, -1534.430786, 30.362699, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2501.729003, -1529.673583, 30.362730, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2522.084960, -1542.825683, 23.412199, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2512.624023, -1542.910522, 23.412199, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2507.858398, -1538.206909, 23.412199, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2507.858398, -1538.206909, 26.851598, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2512.624023, -1542.910522, 26.851598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2522.072021, -1542.840698, 23.412199, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2522.072021, -1542.840698, 26.851598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2522.072021, -1542.840698, 30.347700, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2512.624023, -1542.910522, 30.347700, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2507.858398, -1538.206909, 30.347700, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2501.729003, -1529.673583, 33.773788, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2506.538330, -1534.430786, 33.773796, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2507.858398, -1538.206909, 33.773796, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2512.624023, -1542.910522, 33.773796, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2522.072021, -1542.840698, 33.773796, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2526.863037, -1538.078491, 33.773796, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2524.528564, -1539.781250, 22.243398, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2522.060058, -1537.752929, 35.563789, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2512.642578, -1537.796875, 35.563789, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2521.950683, -1526.873657, 39.485298, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2512.271972, -1526.984985, 39.485298, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2506.249023, -1527.041381, 39.485298, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2521.893310, -1529.021484, 39.485298, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2512.280273, -1529.182373, 39.485298, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2506.250244, -1529.137573, 39.485298, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19377, 2506.520996, -1529.242919, 35.563789, 0.000030, 90.000137, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2501.596435, -1524.292480, 30.200010, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2501.596435, -1524.292480, 33.540039, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2501.596435, -1524.292480, 37.027160, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2498.133544, -1533.004882, 24.310598, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19447, 2502.983154, -1537.720214, 24.310598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 2508.236328, -1514.074096, 26.691469, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 2508.241455, -1514.799194, 26.691495, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(644, 2502.711425, -1514.136596, 26.371618, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(644, 2502.945556, -1515.489501, 26.371618, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(673, 2528.479492, -1534.369628, 21.525510, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(673, 2528.352539, -1530.297729, 21.525510, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(673, 2528.444091, -1526.590209, 21.525510, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2510.516357, -1522.163818, 24.079877, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2508.951904, -1520.669799, 24.079900, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2508.852783, -1522.176391, 25.771406, 0.000138, 89.999969, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(638, 2509.906738, -1522.084960, 26.220426, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(914, 2508.902587, -1522.081787, 27.632417, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1223, 2511.350341, -1517.049560, 24.738508, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1223, 2520.079589, -1516.921875, 24.738508, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1291, 2521.899414, -1512.954345, 23.282697, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1256, 2524.841064, -1512.865112, 23.616147, -0.000030, -0.000138, -89.600692, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2524.206298, -1528.666503, 29.902338, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2524.232177, -1528.702026, 26.417398, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2524.266845, -1534.837158, 26.873220, 89.999992, 263.472076, -83.071807, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2526.705566, -1527.230957, 35.290199, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19454, 2526.701416, -1528.592651, 35.290199, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1319, 2530.393310, -1516.248291, 23.363298, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1319, 2530.405517, -1517.989135, 23.363298, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1319, 2530.417236, -1519.673217, 23.363286, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1319, 2530.429443, -1521.432006, 23.363298, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1319, 2530.442138, -1523.228393, 23.363298, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1319, 2530.456054, -1525.239868, 23.363298, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1537, 2512.972656, -1523.862426, 24.941198, 0.000003, 0.000141, 79.399887, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1537, 2516.591308, -1524.979736, 24.941198, -0.000115, -0.000082, -47.599979, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1506, 2524.285644, -1526.072143, 24.944776, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1506, 2524.104248, -1526.073730, 24.944776, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1616, 2511.020751, -1523.514526, 29.353200, -0.000051, -0.000131, -80.599136, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(11245, 2522.550048, -1515.669433, 28.695478, -0.000030, -72.000137, -89.600692, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 2523.296875, -1514.241455, 26.303758, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 2523.384521, -1516.389160, 26.303758, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2793, 2526.358886, -1514.588745, 30.227689, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2793, 2527.776611, -1516.040039, 30.227697, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2793, 2526.413574, -1517.447509, 30.227697, -0.000138, 0.000030, 0.400364, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2793, 2524.963623, -1516.047973, 30.227697, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 2508.246337, -1515.496459, 26.691495, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 2508.251464, -1516.235229, 26.691495, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(8615, 2525.422607, -1530.993652, 27.626478, -0.000030, -0.000138, -89.600692, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1505, 2526.308837, -1534.095092, 29.270917, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1849, 2523.763427, -1528.627685, 24.849607, -0.000030, -0.000138, -89.600692, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3578, 2519.936279, -1531.775268, 25.104146, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2522.103271, -1534.295288, 23.473249, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2512.523437, -1534.361450, 23.473299, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2506.538330, -1534.430786, 23.473299, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19450, 2501.729003, -1529.673583, 23.473299, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19362, 2501.596435, -1524.292480, 26.786447, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2161, 2523.574218, -1534.171142, 24.949499, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2162, 2521.924316, -1534.203613, 24.949499, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1714, 2521.281738, -1527.261596, 24.916688, -0.000030, -0.000138, -89.600692, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1714, 2521.449218, -1528.958740, 24.916688, -0.000030, -0.000138, -89.600692, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1714, 2521.539550, -1530.921020, 24.916688, -0.000030, -0.000138, -89.600692, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1714, 2521.668457, -1533.064208, 24.916688, -0.000030, -0.000138, -89.600692, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1808, 2517.535156, -1524.031860, 24.850339, -0.000138, 0.000030, 0.400364, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1808, 2518.239746, -1524.049316, 24.850339, -0.000138, 0.000030, 0.400364, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(11706, 2517.727783, -1533.945800, 24.893907, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(11706, 2516.884765, -1533.942871, 24.893907, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(11706, 2516.020996, -1533.941040, 24.893907, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(14532, 2523.539550, -1524.197021, 25.903429, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(14532, 2523.787353, -1532.076049, 25.903429, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(14532, 2523.857421, -1533.110595, 25.903429, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2000, 2508.347900, -1533.953735, 24.885389, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3657, 2513.559570, -1532.285034, 25.240598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3657, 2511.488525, -1532.299316, 25.240598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3657, 2509.517333, -1532.313110, 25.240598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3657, 2509.488281, -1527.671997, 25.240598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3657, 2511.484863, -1527.658081, 25.240598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3657, 2513.455566, -1527.644409, 25.240598, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1506, 2506.850830, -1534.330810, 24.890119, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1506, 2505.359130, -1534.357788, 24.890119, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1723, 2503.099365, -1533.610961, 24.885789, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1723, 2503.118408, -1530.013671, 24.885789, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1723, 2503.030029, -1526.395141, 24.885789, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 2528.856445, -1528.468505, 24.296697, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 2528.862548, -1537.249023, 24.296697, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 2528.870117, -1533.024291, 24.296697, 0.000138, -0.000030, -179.600280, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2909, 2522.570800, -1521.598754, 38.219596, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2909, 2514.305419, -1521.650390, 38.219596, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2909, 2506.001953, -1521.682861, 38.219596, 0.000030, 0.000138, 90.399864, -1, -1, -1, 300.00, 300.00); 

	//รพ
	tmpobjid = CreateDynamicObject(18981, 1176.710571, -1322.522216, 12.058572, 0.000018, 90.000022, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "road1-3", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1176.296875, -1302.795410, 12.028573, 0.000018, 90.000022, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "road1-3", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1151.321655, -1303.317504, 12.058572, 0.000018, 90.000022, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "road1-3", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1151.802001, -1326.233520, 12.058572, 0.000018, 90.000022, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "road1-3", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1173.431762, -1315.158203, 14.658573, 0.000024, 0.000070, 1.199995, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19791, 1168.577880, -1316.644042, 2.639883, -0.000070, 0.000024, -89.199729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "sf_pave2", 0x00000000);
	tmpobjid = CreateDynamicObject(19791, 1158.618896, -1316.783569, 2.639883, -0.000070, 0.000024, -89.199729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "sf_pave2", 0x00000000);
	tmpobjid = CreateDynamicObject(19791, 1158.479370, -1306.784912, 2.639883, -0.000070, 0.000024, -89.199729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "sf_pave2", 0x00000000);
	tmpobjid = CreateDynamicObject(19791, 1158.757934, -1326.781127, 2.639883, -0.000070, 0.000024, -89.199729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "sf_pave2", 0x00000000);
	tmpobjid = CreateDynamicObject(19791, 1168.757446, -1326.641601, 2.639883, -0.000070, 0.000024, -89.199729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "sf_pave2", 0x00000000);
	tmpobjid = CreateDynamicObject(19791, 1158.388793, -1300.276489, 2.619884, -0.000070, 0.000024, -89.199729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "sf_pave2", 0x00000000);
	tmpobjid = CreateDynamicObject(19791, 1168.407836, -1300.126586, 2.639883, -0.000070, 0.000024, -89.199729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "sf_pave2", 0x00000000);
	tmpobjid = CreateDynamicObject(19791, 1178.406494, -1300.004272, 2.639883, -0.000070, 0.000024, -89.199729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "sf_pave2", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1174.202270, -1324.561645, 17.570575, -0.000070, 90.000053, -89.199729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1173.796264, -1322.622558, 21.570827, 89.800201, 179.979492, -179.179107, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1173.803466, -1328.142700, 14.658573, 0.000024, 0.000070, 1.199995, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1174.649658, -1329.456665, 17.048572, 0.000018, 0.000067, 0.800015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.269653, -1331.876708, 17.048572, -0.000068, 0.000018, -89.999763, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1174.649658, -1329.456665, 18.828586, 0.000024, 0.000070, 0.800015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.269653, -1331.876708, 18.828586, -0.000071, 0.000024, -89.999763, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1174.649658, -1329.456665, 20.818607, 0.000030, 0.000073, 0.800015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.269653, -1331.876708, 20.818607, -0.000074, 0.000029, -89.999763, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1173.803466, -1328.142700, 18.768596, 0.000024, 0.000070, 1.199995, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1171.260864, -1326.420410, 17.296585, -89.899124, 180.488235, 91.587890, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1171.072387, -1316.602294, 17.296440, -89.899124, 180.488235, 91.587890, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1170.985839, -1312.112548, 22.697010, 0.000043, -89.899871, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1173.489746, -1308.719970, 16.248561, 0.000018, 0.000067, 0.800015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.864379, -1319.848388, 16.748653, 0.000018, 89.100028, 1.099967, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.770996, -1314.989379, 16.748653, 0.000018, 89.100028, 1.099967, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.754516, -1314.159179, 16.748653, 0.000018, 89.100028, 1.099967, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.860229, -1318.457275, 14.268665, 89.999992, 179.478271, -89.278228, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.861450, -1318.867065, 14.268665, 89.999992, 179.478271, -89.278228, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.884277, -1319.297729, 14.268665, 89.999992, 180.677429, -89.277381, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.895385, -1319.747924, 14.268665, 89.999992, 180.677429, -89.277381, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.905761, -1320.178344, 14.268665, 89.999992, 180.677429, -89.277381, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.916015, -1320.588745, 14.268665, 89.999992, 180.677429, -89.277381, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.926513, -1321.018554, 14.268665, 89.999992, 180.677429, -89.277381, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.937377, -1321.468383, 14.268665, 89.999992, 180.677429, -89.277381, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.947387, -1321.868774, 14.268665, 89.999992, 180.677429, -89.277381, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1172.489135, -1315.063232, 22.570598, -0.000070, 90.000053, -89.199729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1173.303100, -1320.416137, 24.548206, -0.000067, 0.000019, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1173.369384, -1322.410888, 26.861736, -0.000067, -90.099914, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1172.534179, -1318.293457, 22.570598, -0.000070, 90.000053, -89.199729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1173.303100, -1320.416137, 19.328193, -0.000067, 0.000019, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19482, 1173.172729, -1315.565795, 21.847284, 0.000000, 0.000000, 0.700001, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "WELCOME", 50, "Arial", 20, 1, 0xFFF00000, 0x00000000, 0);
	tmpobjid = CreateDynamicObject(19866, 1173.057739, -1316.457031, 22.048595, 0.000024, 0.000070, 0.800015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1173.057739, -1316.457031, 22.768596, 0.000024, 0.000070, 0.800015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1171.126342, -1311.275268, 16.248561, -0.000068, 0.000018, -89.399742, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1171.045898, -1306.347900, 16.248561, -0.000068, 0.000018, -89.399742, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1166.716918, -1311.321899, 16.248561, -0.000068, 0.000018, -89.399742, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1166.736572, -1306.393920, 16.248561, -0.000068, 0.000018, -89.399742, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1164.330078, -1308.847045, 16.248561, 0.000018, 0.000068, 0.200027, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1169.897094, -1308.795776, 16.656833, 0.000073, -90.800003, 90.799583, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1169.897094, -1308.795776, 16.656833, 0.000073, -90.800003, 90.799583, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1170.067749, -1311.871337, 14.658573, 0.000074, -0.000014, 90.499549, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1165.977905, -1312.217529, 17.545749, 0.000043, -89.899871, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1165.987182, -1312.216430, 22.695751, 0.000043, -89.899871, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1178.278198, -1295.515991, 15.054018, 0.000043, -0.599816, 0.900075, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1168.419677, -1295.670532, 14.950780, 0.000043, -0.599816, 0.900075, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1173.577270, -1327.073486, 22.900310, 89.000045, 0.198956, 90.800773, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1175.104125, -1324.740722, 22.404399, 0.000024, 89.100028, 0.900002, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1175.178710, -1329.470703, 22.404399, 0.000024, 89.100028, 0.900002, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1170.151855, -1329.544189, 22.644123, -0.446366, 90.052078, 90.898796, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1170.075073, -1324.733154, 22.639781, -0.446366, 90.052078, 90.898796, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1170.147949, -1329.546020, 23.054111, -0.446366, 90.052078, 90.898796, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1170.071411, -1324.734985, 23.049770, -0.446366, 90.052078, 90.898796, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1168.567749, -1311.303344, 22.241199, 0.000043, -89.899871, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1180.108154, -1304.963989, 14.698574, 0.000074, -0.000014, 90.499549, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1174.949951, -1305.479003, 12.109830, 0.000043, -89.899871, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1168.608642, -1327.160278, 22.813571, 89.000045, 0.198956, 90.800773, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1164.010009, -1327.239868, 22.733306, 89.000045, 0.198956, 90.800773, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1183.040527, -1305.404907, 14.558183, -0.000067, 0.000019, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1176.941650, -1296.117309, 14.808109, -0.599928, -0.000018, 90.999694, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1169.792968, -1296.242187, 14.733234, -0.599928, -0.000018, 90.999694, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1164.473144, -1318.025512, 27.728582, 0.000018, 90.000022, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "road1-3", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1164.473144, -1318.025512, 28.728607, 0.000018, 90.000022, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1164.473144, -1321.347900, 27.728582, 0.000018, 90.000030, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "road1-3", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1167.274536, -1331.963012, 17.570575, 0.000014, 90.000076, 0.900030, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1158.995483, -1332.092407, 17.570575, 0.000014, 90.000076, 0.900030, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1170.560424, -1331.493530, 14.658573, -0.000060, 0.000019, -89.299766, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1170.560424, -1331.493530, 18.768581, -0.000060, 0.000019, -89.299766, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1164.473144, -1321.347900, 28.728607, 0.000018, 90.000030, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1174.198120, -1322.843872, 27.201236, 0.000024, 89.100028, 0.900002, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1174.120483, -1317.894165, 27.201236, 0.000024, 89.100028, 0.900002, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1174.042358, -1312.934448, 27.201236, 0.000024, 89.100028, 0.900002, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.251342, -1309.966552, 27.197841, -0.000060, 89.100006, -89.299781, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.485107, -1325.064453, 27.235054, -0.000060, 89.100006, -89.299781, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1174.652587, -1324.544433, 17.104053, 89.800201, 179.979492, -179.179107, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1173.613525, -1329.770996, 25.968204, -0.000067, 0.000019, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1173.547119, -1327.764038, 28.871082, -0.000067, -90.099914, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1171.199584, -1329.882324, 25.968204, -0.000070, 0.000028, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1171.133056, -1327.875244, 28.871082, -0.000070, -90.099906, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1168.547119, -1329.862792, 25.968204, -0.000073, 0.000035, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1168.480468, -1327.855590, 28.871082, -0.000073, -90.099899, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1162.527587, -1333.037719, 14.773557, 0.000014, 53.000129, 0.900030, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1159.026000, -1333.091674, 15.264207, 0.000014, 89.800102, 0.900030, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1162.824951, -1332.032592, 9.940563, 0.000014, 90.000076, 0.900030, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1162.620849, -1331.590576, 20.188571, -0.000060, 0.000019, -89.299766, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1162.620849, -1331.590576, 16.068580, -0.000060, 0.000019, -89.299766, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1159.061645, -1327.326782, 22.646934, 89.000045, 0.198956, 90.800773, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1183.466308, -1302.539916, 13.721794, -89.800201, -0.019657, -179.319442, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1183.415771, -1298.429565, 13.707452, -89.800201, -0.019657, -179.319442, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1183.524780, -1305.781005, 14.558671, 89.999992, -87.880950, -89.318870, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1183.489868, -1305.071655, 14.558671, 89.999992, -87.880950, -89.318870, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1183.401611, -1300.807373, 14.558671, 89.999992, -90.977966, -89.321861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1183.424194, -1296.446899, 14.558671, 89.999992, -90.977966, -89.321861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1183.427246, -1295.816528, 14.558671, 89.999992, -90.977966, -89.321861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1180.008178, -1303.649780, 17.511623, 89.800201, -0.580244, 0.880397, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1179.983520, -1298.949707, 17.495222, 89.800201, -0.580244, 0.880397, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1179.972290, -1296.770385, 17.487621, 89.800201, -0.580244, 0.880397, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1170.084594, -1303.715332, 17.511623, 89.800201, -0.579339, 0.879490, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1170.060058, -1299.015380, 17.495222, 89.800201, -0.579339, 0.879490, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1170.048828, -1296.835815, 17.487621, 89.800201, -0.579339, 0.879490, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1172.633422, -1296.730346, 12.615427, -0.000067, 0.000018, -88.799736, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1172.652587, -1297.649780, 12.615427, -0.000067, 0.000018, -88.799736, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1172.671752, -1298.569213, 12.615427, -0.000067, 0.000018, -88.799736, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1172.691162, -1299.497924, 12.615427, -0.000067, 0.000018, -88.799736, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1172.709960, -1300.426513, 12.615427, -0.000067, 0.000018, -88.799736, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1172.729248, -1301.356079, 12.615427, -0.000067, 0.000018, -88.799736, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1172.748657, -1302.275878, 12.615427, -0.000067, 0.000018, -88.799736, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, 1172.439941, -1304.541748, 12.774639, 0.000067, -0.000018, 91.499588, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4830, "airport2", "sanairtex3", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1172.779785, -1302.524536, 14.598184, -0.000067, 0.000019, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1172.962646, -1305.000488, 14.598184, -0.000067, 0.000019, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1172.457763, -1303.599365, 15.965862, 0.000018, 0.000067, 1.600033, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1172.388305, -1301.110229, 16.605857, 0.000018, 0.000067, 1.600033, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1172.326049, -1298.881225, 16.605857, 0.000018, 0.000067, 1.600033, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1172.263671, -1296.642333, 16.605857, 0.000018, 0.000067, 1.600033, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.234375, -1298.656250, 15.625024, 0.000018, 89.100028, 1.099967, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1172.242431, -1299.605712, 15.624876, 0.000018, 89.100028, 1.099967, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1172.571044, -1296.228027, 14.598184, -0.000067, 0.000019, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(949, 1171.748535, -1296.792358, 13.249889, -0.000054, 0.000045, -64.699996, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(912, 1178.125244, -1296.563720, 15.609891, 0.000018, 0.000067, 1.000007, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(912, 1179.526733, -1296.514160, 15.609891, 0.000018, 0.000067, 0.800009, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1159.384887, -1296.423706, 14.624210, -0.599928, -0.000018, 90.999694, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1158.511474, -1295.825805, 14.847019, 0.000043, -0.599816, 0.900075, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1161.015991, -1294.826049, 12.024381, 0.000043, -324.699890, 0.900075, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1155.896850, -1294.906738, 11.958360, 0.000043, -270.499877, 0.900075, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1153.870361, -1300.440917, 14.839570, -0.000035, -0.599870, -89.599769, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1153.938232, -1310.150024, 14.941226, -0.000035, -0.599870, -89.599769, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(949, 1164.143676, -1296.803344, 13.249889, -0.000054, 0.000045, -64.699996, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1165.962646, -1305.668579, 12.125514, 0.000043, -89.899871, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1163.530151, -1308.954345, 14.658573, 0.000024, 0.000071, 0.699997, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(640, 1164.048706, -1309.005371, 13.233930, 0.000018, 0.000067, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(970, 1183.688110, -1302.841186, 18.550373, -0.000071, 0.000024, -89.399742, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(970, 1183.665527, -1300.720214, 18.550373, -0.000071, 0.000024, -89.399742, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(970, 1183.630004, -1297.416503, 18.550373, -0.000071, 0.000024, -89.399742, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(970, 1176.213134, -1304.942260, 18.550373, -0.000024, -0.000055, -179.599655, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(970, 1178.334106, -1304.926879, 18.550373, -0.000024, -0.000055, -179.599655, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(970, 1181.637939, -1304.903076, 18.550373, -0.000024, -0.000055, -179.599655, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(970, 1176.072753, -1295.448974, 18.550373, -0.000029, -0.000058, -179.599639, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(970, 1178.193725, -1295.433837, 18.550373, -0.000029, -0.000058, -179.599639, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(970, 1181.497558, -1295.409790, 18.550373, -0.000029, -0.000058, -179.599639, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1154.413085, -1302.544433, 14.559185, -0.600017, -0.000068, -179.499755, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1158.659301, -1301.544433, 12.615427, 0.000065, -0.000012, 89.799354, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1158.662353, -1300.624755, 12.615427, 0.000065, -0.000012, 89.799354, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1158.665649, -1299.705078, 12.615427, 0.000065, -0.000012, 89.799354, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1158.669433, -1298.776367, 12.615427, 0.000065, -0.000012, 89.799354, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1158.673095, -1297.847412, 12.615427, 0.000065, -0.000012, 89.799354, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1158.676513, -1296.917846, 12.615427, 0.000065, -0.000012, 89.799354, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2434, 1158.488525, -1302.674804, 12.610040, 0.000018, 0.000068, -0.400031, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1156.636596, -1302.690551, 12.615427, 0.000024, 0.000070, 0.899717, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2435, 1157.565185, -1302.676147, 12.615427, 0.000024, 0.000070, 0.899717, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(912, 1155.338378, -1296.960937, 15.359889, 0.000018, 0.000067, 1.000007, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19380, 1178.165283, -1300.147094, 12.574117, 0.000018, -89.999908, 0.700079, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObject(19380, 1178.165283, -1300.147094, 17.034149, 0.000018, -89.999908, 0.700079, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObject(19380, 1159.616333, -1300.373657, 17.034151, 0.000018, -89.999908, 0.700079, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(638, 1181.289794, -1305.376220, 13.257530, -0.000067, 0.000018, -89.099708, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(638, 1178.740112, -1305.416015, 13.257530, -0.000067, 0.000018, -89.099708, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(912, 1167.560546, -1304.675903, 13.115955, -0.000018, -0.000067, -179.199661, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1169.651977, -1296.031616, 16.944461, -0.000067, 89.100006, -88.999732, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1164.792602, -1296.115966, 16.944461, -0.000067, 89.100006, -88.999732, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2256, 1166.288818, -1296.430664, 15.539876, 0.000018, 0.000067, 1.500036, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1444, "break_s_sf", "CJ_FERRY_MAP", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2923, "bottle_bank", "recycle", 0x00000000);
	tmpobjid = CreateDynamicObject(2256, 1161.670654, -1296.551879, 15.539876, 0.000018, 0.000067, 1.500036, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16644, "a51_detailstuff", "a51_map", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2923, "bottle_bank", "recycle", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1160.058959, -1296.888549, 17.487243, 89.800201, -0.579339, 0.879490, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1158.318969, -1296.898071, 17.487186, 89.800201, -0.579339, 0.879490, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1158.345214, -1301.888183, 17.504589, 89.800201, -0.579339, 0.879490, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1160.195190, -1301.878417, 17.504653, 89.800201, -0.579339, 0.879490, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1160.220947, -1306.858642, 17.522026, 89.800201, -0.579339, 0.879490, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1158.381103, -1306.898071, 17.522056, 89.800201, -0.579339, 0.879490, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1160.238647, -1310.227416, 17.533779, 89.800201, -0.579339, 0.879490, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1158.409790, -1310.288696, 17.533870, 89.800201, -0.579339, 0.879490, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1159.923095, -1296.200683, 16.944461, -0.000067, 89.100006, -88.999732, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1156.863281, -1296.253784, 16.944461, -0.000067, 89.100006, -88.999732, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1155.162963, -1298.575073, 16.958232, -0.000018, 90.199920, -179.899688, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1155.171264, -1303.405151, 16.958232, -0.000018, 90.199920, -179.899688, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2256, 1154.486328, -1300.297851, 15.539876, 0.000067, -0.000018, 91.799591, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 1444, "break_s_sf", "CJ_FERRY_MAP", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 2923, "bottle_bank", "recycle", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1154.033203, -1320.162109, 14.760690, 0.000018, 179.799957, 0.500029, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1153.129394, -1320.170410, 4.467483, 0.000018, 179.799957, 0.500029, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1153.014282, -1306.933227, 4.477479, 0.000018, 179.799957, 0.500029, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19380, 1167.578735, -1326.705688, 22.334167, 0.000018, -90.999900, 0.700079, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1154.517456, -1314.503173, 14.433942, -0.600017, -0.000068, -179.499755, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1154.620117, -1326.271484, 14.310688, -0.600017, -0.000068, -179.499755, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(3361, 1162.426025, -1324.610107, 15.535877, -0.000068, 0.000018, -89.599678, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 18646, "matcolours", "grey-80-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 4, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1166.023925, -1316.700073, 17.305259, -89.899124, 180.488235, 91.587890, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1161.215087, -1316.792480, 17.313659, -89.899124, 180.488235, 91.587890, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1156.355957, -1316.885864, 17.322128, -89.899124, 180.488235, 91.587890, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1156.545166, -1326.734497, 17.322277, -89.899124, 180.488235, 91.587890, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1158.895996, -1326.690795, 17.318201, -89.899124, 180.488235, 91.587890, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19380, 1168.215209, -1316.742309, 17.794124, 0.000018, -89.999908, 0.700079, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObject(19380, 1157.715454, -1316.870605, 17.794124, 0.000018, -89.999908, 0.700079, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObject(19380, 1155.962036, -1326.568603, 17.794124, 0.000018, -89.999908, 0.700079, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1154.620727, -1326.333251, 20.160369, -0.600017, -0.000068, -179.499755, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2938, 1154.548828, -1318.104248, 20.246578, -0.600017, -0.000068, -179.499755, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1157.041259, -1327.361083, 22.611728, 89.000045, 0.198956, 90.800773, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1160.882690, -1326.660766, 15.114648, -0.000035, -0.599870, -88.899742, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1160.901977, -1326.606445, 20.234382, -0.000035, -0.599870, -89.599769, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(912, 1157.538330, -1328.160034, 13.191953, -0.000018, -0.000068, 179.899703, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(3864, 1160.273559, -1326.350708, 10.412042, 0.000018, 0.000068, 0.300024, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1157.947875, -1322.492675, 12.677789, 0.000067, 90.199943, 90.999694, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1157.057739, -1322.508178, 12.677789, 0.000067, 90.199943, 90.999694, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1160.218750, -1322.449462, 14.412174, 89.599922, -89.797164, -89.002746, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1158.439575, -1322.487304, 14.424596, 89.599922, -89.797164, -89.002746, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1156.589965, -1322.525878, 14.437511, 89.599922, -89.797164, -89.002746, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1154.771240, -1322.565063, 14.450227, 89.599922, -89.797164, -89.002746, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1157.947387, -1322.477905, 16.767768, 0.000067, 90.199943, 90.999694, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1157.217285, -1322.490600, 16.767768, 0.000067, 90.199943, 90.999694, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1159.361206, -1322.083618, 15.668819, 89.599922, 0.002838, -89.102615, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1159.345092, -1322.084106, 13.358871, 89.599922, 0.002838, -89.102615, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1155.562622, -1322.075195, 15.668819, 89.599922, 0.003835, -89.103607, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1155.546630, -1322.075439, 13.358871, 89.599922, 0.003835, -89.103607, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(2612, 1158.906738, -1331.538574, 15.169891, -0.000018, -0.000067, -179.199615, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(1742, 1160.799560, -1321.774047, 12.655183, -0.000018, -0.000068, -179.899642, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(949, 1159.459228, -1321.337402, 13.249889, -0.000054, 0.000045, -64.699996, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1157.508544, -1321.655639, 16.698669, -89.899124, 179.988189, 91.587890, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(638, 1160.850830, -1318.642211, 13.257530, -0.000018, -0.000067, -178.399642, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1156.125854, -1332.137695, 17.570575, 0.000014, 90.000076, 0.900030, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1158.065551, -1323.297363, 17.877819, 0.000073, 90.199928, 91.399421, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1157.175537, -1323.318969, 17.877819, 0.000073, 90.199928, 91.399421, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1160.336303, -1323.238403, 19.612201, 89.599922, -89.795120, -88.604782, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1158.447387, -1323.291625, 19.625396, 89.599922, -89.795120, -88.604782, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1156.768066, -1323.338623, 19.637115, 89.599922, -89.795120, -88.604782, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1154.779541, -1323.394897, 19.651027, 89.599922, -89.795120, -88.604782, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1159.475952, -1322.878540, 20.868843, 89.599922, 0.004898, -88.704650, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1159.459838, -1322.878906, 18.558895, 89.599922, 0.004898, -88.704650, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1155.677612, -1322.896484, 20.868843, 89.599922, 0.005892, -88.705657, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1155.661376, -1322.896972, 18.558895, 89.599922, 0.005892, -88.705657, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1158.065063, -1323.282592, 22.087795, 0.000073, 90.199928, 91.399421, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1157.275512, -1323.303222, 22.087795, 0.000073, 90.199928, 91.399421, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1168.982177, -1322.415893, 17.877819, 0.000075, 90.199920, 90.599388, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1157.611450, -1322.920776, 21.581890, 89.599922, 0.004898, -88.704650, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1161.241699, -1321.665771, 19.602924, 89.599922, -89.788208, 0.588083, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(949, 1160.108520, -1322.126098, 18.529876, -0.000054, 0.000045, -64.699996, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(949, 1154.921386, -1322.220581, 18.529876, -0.000054, 0.000045, -64.699996, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1156.868041, -1317.432617, 22.611118, 89.000045, 0.198956, 90.800773, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1161.776123, -1317.346557, 22.696815, 89.000045, 0.198956, 90.800773, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1166.554687, -1317.263183, 22.780231, 89.000045, 0.198956, 90.800773, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1170.383666, -1317.196899, 22.847030, 89.000045, 0.198956, 90.800773, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1155.179443, -1308.064941, 16.958232, -0.000018, 90.199920, -179.899688, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1155.148071, -1319.343872, 16.778057, -0.000018, 90.199920, -179.899688, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1155.139648, -1314.404174, 16.778057, -0.000018, 90.199920, -179.899688, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1163.577392, -1307.722534, 16.987537, -0.000018, 90.199920, -179.699691, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1163.588012, -1309.802001, 16.987537, -0.000018, 90.199920, -179.699691, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1167.161987, -1326.499511, 17.303745, -89.899124, 180.488235, 91.587890, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1165.204589, -1326.689697, 19.746074, -0.000035, -0.599870, -88.799751, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1168.092163, -1322.425292, 17.877819, 0.000075, 90.199920, 90.599388, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1171.253540, -1322.388671, 19.612201, 89.599922, -89.794258, -89.405639, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1169.364135, -1322.415649, 19.625396, 89.599922, -89.794258, -89.405639, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1167.684448, -1322.439086, 19.637115, 89.599922, -89.794258, -89.405639, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1165.695068, -1322.467773, 19.651027, 89.599922, -89.794258, -89.405639, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1170.398437, -1322.016845, 20.868843, 89.599922, 0.005758, -89.505508, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1170.382324, -1322.017211, 18.558895, 89.599922, 0.005758, -89.505508, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1166.600097, -1321.981933, 20.868843, 89.599922, 0.006754, -89.506500, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1166.583984, -1321.982177, 18.558895, 89.599922, 0.006754, -89.506500, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1168.981933, -1322.401245, 22.087795, 0.000075, 90.199920, 90.599388, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1168.192260, -1322.410766, 22.087795, 0.000075, 90.199920, 90.599388, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, 1168.533447, -1322.033203, 21.581890, 89.599922, 0.005758, -89.505508, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1171.845336, -1322.024658, 20.038196, -0.000067, 0.000019, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1173.106811, -1322.052368, 20.228191, -0.000067, 0.000019, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(949, 1172.199584, -1321.122680, 18.529876, -0.000054, 0.000045, -64.699996, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18763, 1162.771606, -1329.299438, 10.819417, -0.000068, 0.000018, -89.799736, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18763, 1163.211791, -1329.288208, 10.519409, -0.000068, 0.000018, -89.799736, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18763, 1163.552368, -1329.287963, 10.279392, -0.000068, 0.000018, -89.799736, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2257, 1171.949584, -1318.538696, 19.870506, -0.000068, 0.000018, -89.699729, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 3820, "boxhses_sfsx", "sl_vic_decor1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 6282, "beafron2_law2", "des_bunting", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1154.019409, -1318.602416, 14.760690, 0.000018, 179.799957, 0.500029, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1158.435180, -1306.602172, 20.415430, 0.000018, 0.299952, -179.799652, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1163.912719, -1310.234130, 22.183712, 0.000095, 269.999969, 91.199653, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1163.878173, -1308.593872, 22.183712, 0.000095, 269.999969, 91.199653, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1160.908081, -1311.128906, 22.683208, 89.000045, 0.199009, 90.000740, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1156.748657, -1311.143798, 22.610645, 89.000045, 0.199009, 90.000740, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1162.965942, -1312.289184, 22.251014, 0.000043, -89.899871, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1155.978637, -1312.437133, 22.263195, 0.000043, -89.899871, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(18762, 1172.727050, -1322.064941, 20.228191, -0.000067, 0.000019, -88.099739, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(949, 1172.706787, -1323.084594, 18.529876, -0.000054, 0.000045, -64.699996, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2639, 1173.271850, -1325.941894, 18.391033, 0.000067, -0.000018, 91.599601, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2639, 1166.290771, -1323.663452, 18.391033, -0.000067, 0.000018, -88.999717, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2639, 1155.140991, -1324.937988, 18.391033, -0.000067, 0.000018, -88.999717, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1157.518310, -1321.655517, 22.258670, -89.599922, 0.002959, -88.396789, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1156.487670, -1307.700195, 19.092090, 0.099941, -179.999984, 0.700110, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1158.097534, -1307.680541, 19.092090, 0.099941, -179.999984, 0.700110, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19426, 1168.543701, -1321.348022, 22.335674, -89.599922, 0.002959, -88.396789, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2639, 1173.198852, -1323.323120, 13.251008, 0.000067, -0.000018, 91.599601, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2639, 1173.256958, -1325.411987, 13.251008, 0.000067, -0.000018, 91.599601, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2639, 1168.547485, -1330.998291, 13.251008, 0.000018, 0.000067, 1.100044, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(2639, 1166.357666, -1331.040039, 13.251008, 0.000018, 0.000067, 1.100044, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19383, 1160.552978, -1310.247436, 19.732494, 0.000018, 0.000068, 0.400047, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19353, 1159.627685, -1308.557128, 19.092792, -0.000068, 0.000018, -89.499717, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1177.232788, -1347.515258, 12.048563, 0.000018, 90.000022, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "road1-3", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1157.356811, -1347.931762, 12.048563, 0.000018, 90.000022, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "road1-3", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1157.878662, -1372.884887, 12.018559, 0.000018, 90.000022, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "road1-3", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1173.270874, -1372.034790, 12.038556, 0.000018, 90.000022, -0.299971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "road1-3", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1173.475952, -1372.755126, 12.228549, 0.000018, 90.000022, -0.299971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "grassdry_128HV", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1186.152343, -1372.822753, 1.173820, 0.000018, 178.100143, -0.299971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1161.167358, -1372.692749, 1.185369, 0.000018, 179.800170, -0.299971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1173.071411, -1384.714599, 1.208379, 0.000018, 179.800170, 89.699958, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1150.427001, -1372.736694, 1.147909, 0.000018, 179.800170, -0.299971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1150.556152, -1348.146484, 1.147920, 0.000018, 179.800170, -0.299971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1186.244995, -1355.052978, 1.173825, 0.000018, 178.100143, -0.299971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(18981, 1186.438232, -1318.023437, 1.173836, 0.000018, 178.100143, -0.299971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19362, 1184.437133, -1305.611938, 11.898564, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-93-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, 1172.453247, -1305.043334, 12.624634, 0.000067, -0.000018, 181.499588, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4830, "airport2", "sanairtex3", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, 1169.444946, -1305.132568, 12.624636, 0.000067, -0.000018, 361.499572, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4830, "airport2", "sanairtex3", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1166.962524, -1305.647338, 12.123770, 0.000043, -89.899871, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(19362, 1170.964843, -1305.196533, 16.878583, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-93-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19362, 1170.714721, -1305.196533, 16.878583, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-93-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, 1158.356079, -1322.144897, 12.774648, 0.000067, -0.000018, 181.499588, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4830, "airport2", "sanairtex3", 0x00000000);
	tmpobjid = CreateDynamicObject(19866, 1156.760131, -1322.522216, 14.436326, 89.599922, -89.797164, -89.002746, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, 1158.347045, -1322.986206, 17.964653, 0.000067, -0.000018, 181.499588, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4830, "airport2", "sanairtex3", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, 1160.477050, -1312.655639, 17.964653, 0.000067, -0.000018, 181.499588, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4830, "airport2", "sanairtex3", 0x00000000);
	tmpobjid = CreateDynamicObject(18766, 1156.467285, -1312.424926, 22.262376, 0.000043, -89.899871, 1.200026, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, 1169.277343, -1322.039184, 17.964653, 0.000067, -0.000018, 181.499588, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4830, "airport2", "sanairtex3", 0x00000000);
	tmpobjid = CreateDynamicObject(19482, 1173.220703, -1305.289428, 14.688572, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "HOSPITALE", 120, "Engravers MT", 20, 1, 0xFFFFFFFF, 0x00000000, 0);
	tmpobjid = CreateDynamicObject(19481, 1176.702392, -1315.213623, 28.823080, 360.000000, 360.000000, 720.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "OVER LORD", 40, "Arial", 20, 1, 0xFFFFFFFF, 0x00000000, 0);
	tmpobjid = CreateDynamicObject(19481, 1174.773437, -1307.719604, 12.558570, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(tmpobjid, 0, "BY STEFANO", 120, "Arial", 10, 1, 0xFF000000, 0x00000000, 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(19329, 1172.256347, -1299.473266, 16.349891, -0.000067, 0.000019, -87.199729, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19329, 1157.899780, -1321.537841, 16.349891, -0.000024, -0.000070, -178.399642, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19329, 1156.710449, -1321.571044, 16.349891, -0.000024, -0.000070, -178.399642, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19329, 1157.439331, -1321.530273, 21.789913, -0.000024, -0.000070, -178.399642, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19329, 1168.454833, -1321.222656, 21.949916, -0.000024, -0.000070, -178.399642, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2938, 1178.000610, -1294.972778, 14.548097, -0.000090, -0.000037, -89.099769, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(639, 1173.792846, -1321.390991, 15.312501, -0.000018, -0.000067, -178.699676, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2345, 1173.663452, -1310.266601, 16.761074, 0.000068, -0.000014, 88.799537, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2345, 1173.724243, -1307.400146, 16.761074, 0.000068, -0.000014, 88.799537, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(957, 1175.595336, -1331.634399, 22.277687, -0.000071, 0.000024, -89.599693, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(957, 1175.586059, -1330.224853, 22.277687, -0.000071, 0.000024, -89.599693, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(957, 1175.574096, -1328.484985, 22.277687, -0.000071, 0.000024, -89.599693, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(957, 1175.560791, -1326.575195, 22.277687, -0.000071, 0.000024, -89.599693, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(957, 1175.525756, -1322.905761, 22.277687, -0.000071, 0.000024, -89.599693, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1346, 1189.025512, -1369.091674, 13.871775, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1340, 1181.821044, -1380.193237, 13.759570, 0.000000, 0.000000, 91.899925, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1340, 1177.483276, -1380.337158, 13.759570, 0.000000, 0.000000, 91.899925, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1257, 1188.896728, -1365.138305, 13.685776, 0.000000, 0.000000, -178.699935, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3630, 1151.145019, -1330.921386, 14.207463, 0.000000, 0.000000, 90.800041, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(957, 1174.583984, -1325.404052, 27.067703, -0.000071, 0.000024, -89.599693, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(957, 1174.479125, -1310.344360, 27.067703, -0.000071, 0.000024, -89.599693, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2012, 1175.185424, -1296.724975, 12.571832, 0.000018, 0.000067, 1.399984, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2012, 1178.244506, -1296.650512, 12.571832, 0.000018, 0.000067, 1.399984, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1847, 1182.731323, -1300.472656, 12.583862, -0.000068, 0.000018, -89.499732, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1850, 1179.760375, -1304.565551, 12.638299, -0.000018, -0.000068, -179.899658, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1671, 1174.046508, -1300.505859, 13.070184, -0.000067, 0.000018, -88.799751, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1671, 1174.004028, -1298.475830, 13.070184, -0.000067, 0.000018, -88.799751, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(11728, 1172.399780, -1302.538818, 14.149888, -0.000067, 0.000019, -88.099739, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2202, 1177.215576, -1298.676635, 12.639883, -0.000068, 0.000018, -89.499732, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2165, 1177.333618, -1301.534057, 12.639883, 0.000068, -0.000018, 90.699729, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1671, 1178.377807, -1300.995239, 13.070184, -0.000067, 0.000018, -88.799751, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2256, 1175.566528, -1296.217651, 15.759880, 0.000018, 0.000067, 1.500036, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1359, 1169.666992, -1296.716064, 13.309883, -0.000054, 0.000045, -64.699996, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1514, 1172.738891, -1300.498413, 13.899888, -0.000067, 0.000019, -87.999717, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1514, 1172.670410, -1298.539550, 13.899888, -0.000067, 0.000019, -87.999717, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2612, 1170.846679, -1296.362060, 14.629894, 0.000018, 0.000068, 0.599995, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1997, 1164.188842, -1304.108886, 12.639883, -0.000018, -0.000068, 179.699707, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3657, 1166.531005, -1296.779663, 13.143543, 0.000018, 0.000067, 0.900017, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1299, 1180.500244, -1296.660400, 13.076745, -0.000067, 0.000019, -87.199729, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3657, 1161.861450, -1296.853149, 13.143543, 0.000018, 0.000067, 0.900017, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3657, 1166.576416, -1311.243530, 13.143543, -0.000018, -0.000068, -179.499649, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(18652, 1162.947631, -1320.552246, 16.941463, 0.000018, 0.000068, 0.500029, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19381, 1178.359863, -1300.173095, 17.925708, -0.199979, -90.000007, 0.300040, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1671, 1157.338989, -1297.735595, 13.070184, 0.000065, -0.000012, 89.799354, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1671, 1157.331909, -1299.766113, 13.070184, 0.000065, -0.000012, 89.799354, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2202, 1154.925781, -1298.063354, 12.639883, 0.000062, -0.000012, 90.899681, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2165, 1154.953491, -1299.700683, 12.639883, 0.000071, -0.000024, 90.699729, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1671, 1155.997802, -1299.161621, 13.070184, -0.000070, 0.000024, -88.799751, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2612, 1157.069702, -1296.576660, 14.529891, 0.000018, 0.000067, 1.100036, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(18652, 1174.339111, -1299.359863, 9.989896, -0.000054, 0.000045, -64.699996, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1997, 1165.218994, -1304.114257, 12.639883, -0.000018, -0.000068, 179.699707, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1997, 1166.308959, -1304.119873, 12.639883, -0.000018, -0.000068, 179.699707, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19816, 1167.143676, -1304.664916, 13.954048, -0.000069, 0.000014, -92.599739, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19816, 1167.373291, -1304.675048, 13.954048, -0.000069, 0.000014, -92.599739, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19816, 1167.622924, -1304.686401, 13.954048, -0.000069, 0.000014, -92.599739, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19381, 1159.949951, -1300.269531, 17.925701, -0.199979, -90.000007, 0.300040, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(18075, 1158.990600, -1302.402343, 16.927848, -0.000018, -0.000068, 179.699737, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1997, 1156.309448, -1326.949584, 12.639883, -0.000018, -0.000068, 179.699707, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1997, 1158.758911, -1327.041503, 12.639883, -0.000018, -0.000068, 179.699707, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3383, 1157.110229, -1330.707397, 12.917024, 0.000018, 0.000067, 0.900047, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19903, 1155.422241, -1327.594604, 12.589426, 0.000068, -0.000018, 89.799560, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(16377, 1159.843383, -1330.594116, 13.559444, 0.300018, 0.000068, -0.500074, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19816, 1157.775268, -1328.045898, 14.023406, -0.000068, 0.000014, -91.299736, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19816, 1157.999023, -1327.991210, 14.033411, -0.000068, 0.000018, -90.399726, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19816, 1157.841308, -1327.787719, 14.023406, -0.000068, 0.000014, -91.299736, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19133, 1154.626098, -1320.248535, 14.715356, -89.200088, 0.004887, 1.604835, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2558, 1159.824951, -1321.852661, 15.306081, -0.000018, -0.000067, -178.899642, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2558, 1158.862304, -1322.650024, 15.306081, 0.000018, 0.000068, -0.199940, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2558, 1156.152465, -1321.828369, 15.306081, -0.000024, -0.000070, -178.899627, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2558, 1155.189697, -1322.625610, 15.306081, 0.000024, 0.000071, -0.199940, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(932, 1155.280639, -1320.742187, 12.636547, 0.000067, -0.000019, 92.899894, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(932, 1155.257690, -1319.973754, 12.636547, 0.000067, -0.000018, 91.199638, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(932, 1155.198608, -1319.124267, 12.636547, 0.000067, -0.000019, 92.899894, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3657, 1160.053466, -1318.764526, 13.143543, -0.000068, 0.000018, -89.899757, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1597, 1200.744384, -1365.537963, 14.940407, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1597, 1200.744384, -1347.267944, 14.940407, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2161, 1160.394165, -1330.285888, 17.861255, -0.000068, 0.000018, -89.999732, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2161, 1154.742431, -1330.774414, 17.861255, 0.000068, -0.000018, 89.699768, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19903, 1157.636840, -1331.097167, 17.881977, 0.000067, -0.000018, 91.099540, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2853, 1160.076904, -1330.460449, 19.220119, 0.000028, -0.000062, 141.900207, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1802, 1157.015991, -1327.213867, 17.682922, -0.000017, -1.700067, 179.099716, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1802, 1159.464599, -1327.250732, 17.650890, -0.000017, -0.400068, 179.099716, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2257, 1160.370849, -1326.822265, 20.201427, -0.000067, 0.000018, -89.099708, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(932, 1155.371459, -1321.085571, 17.894275, 0.000067, -0.000022, 93.299568, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(932, 1155.315795, -1320.116699, 17.894275, 0.000067, -0.000022, 93.299568, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2257, 1171.935424, -1315.779541, 19.870506, -0.000068, 0.000018, -89.699729, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2161, 1167.108276, -1331.448120, 17.861255, -0.000019, -0.000059, -179.299682, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2161, 1165.871948, -1325.836059, 17.861255, 0.000070, -0.000028, 92.799530, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19903, 1166.263549, -1328.700927, 17.881977, 0.000023, 0.000059, 1.799926, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2853, 1166.929809, -1331.132934, 19.220119, 0.000060, 0.000018, 52.599842, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1802, 1170.138916, -1328.032592, 17.682922, 0.000059, -1.700021, 89.799560, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1802, 1170.131835, -1330.481567, 17.650890, 0.000059, -0.400020, 89.799560, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3657, 1169.431396, -1313.176269, 18.293552, 0.000018, 0.000067, 1.200019, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3657, 1165.901611, -1313.249145, 18.293552, 0.000018, 0.000067, 1.200019, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3657, 1156.424560, -1313.448486, 18.293552, 0.000018, 0.000067, 1.200019, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1997, 1165.424682, -1320.186157, 17.829875, -0.000018, -0.000068, 179.699707, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1359, 1171.472412, -1314.224365, 18.479881, -0.000054, 0.000045, -64.699996, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(18075, 1163.250244, -1317.173095, 22.226074, -0.000068, 0.000014, -91.699714, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1594, 1170.895263, -1313.680419, 13.102422, -0.000067, 0.000019, -87.799720, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1594, 1171.010498, -1316.678100, 13.102422, -0.000067, 0.000019, -87.799720, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2515, 1155.453735, -1307.643920, 19.011768, 0.000022, 0.000067, 3.100039, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2515, 1157.291259, -1307.544555, 19.011768, 0.000022, 0.000067, 3.100039, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(2528, 1162.195190, -1311.276367, 18.031948, -0.000019, -0.000067, -177.099624, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19127, 1186.057128, -1358.649658, 12.870270, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19127, 1186.057128, -1352.689331, 12.870270, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19127, 1186.057128, -1345.919067, 12.870270, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19121, 1186.012939, -1307.889282, 12.843590, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19121, 1186.012939, -1312.429199, 12.843590, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19121, 1186.012939, -1320.779296, 12.843590, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(19121, 1186.012939, -1325.569580, 12.843590, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1188.303833, -1360.192260, 12.764817, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(615, 1184.348632, -1383.630981, 12.541190, 0.000045, 0.000029, 81.299797, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1597, 1200.744384, -1329.247924, 14.940407, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1188.303833, -1346.705566, 12.764817, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1188.303833, -1327.591186, 12.764817, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1174.183227, -1335.471923, 12.764817, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1165.983642, -1335.471923, 12.764817, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1155.903442, -1335.471923, 12.764817, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1231, 1170.213012, -1335.497924, 15.097168, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1231, 1161.143310, -1335.497924, 15.097168, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1280, 1170.281372, -1336.442260, 12.940793, 0.000000, 0.000000, 92.399993, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1280, 1161.109741, -1336.826782, 12.940793, 0.000000, 0.000000, 92.399993, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1183.783935, -1362.812255, 12.924818, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1183.783935, -1368.402832, 12.924818, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1183.783935, -1374.553100, 12.924818, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1231, 1184.379516, -1365.599975, 15.097168, 0.000000, 0.000000, -95.600006, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1231, 1184.100097, -1371.411376, 15.097168, 0.000000, 0.000000, -95.600006, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1231, 1183.952880, -1378.601928, 15.097168, 0.000000, 0.000000, -87.899986, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1162.496215, -1381.927734, 12.924818, 0.000000, 0.000007, 179.399810, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1162.554687, -1376.337524, 12.924818, 0.000000, 0.000007, 179.399810, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(792, 1162.619140, -1370.187622, 12.924818, 0.000000, 0.000007, 179.399810, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1231, 1161.929809, -1379.134033, 15.097168, -0.000007, 0.000000, 83.799827, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1231, 1162.270019, -1373.325805, 15.097168, -0.000007, 0.000000, 83.799827, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1231, 1162.492553, -1366.137329, 15.097168, -0.000007, 0.000000, 91.499847, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1597, 1200.744384, -1308.267944, 14.940407, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1344, 1149.169433, -1382.932983, 13.562127, 0.000000, 0.000000, -89.199958, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(9126, 1155.690673, -1381.271606, 12.734828, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(9126, 1155.690673, -1378.971679, 12.734828, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(9126, 1155.690673, -1376.601928, 12.734828, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(9126, 1155.690673, -1366.801513, 12.734828, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(9126, 1155.690673, -1363.921264, 12.734828, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1262, 1161.194580, -1385.003417, 14.448328, 0.000000, 0.000024, -179.800003, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1280, 1182.943237, -1365.719726, 13.037608, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1280, 1182.943237, -1371.489746, 13.037608, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1280, 1182.943237, -1377.849731, 13.037608, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1280, 1162.722900, -1379.019897, 13.117606, 0.000000, 0.000000, -179.399993, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1280, 1162.662353, -1373.230468, 13.117606, 0.000000, 0.000000, -179.399993, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1280, 1163.319335, -1366.183349, 13.117606, 0.000000, 0.000000, -179.399993, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(3819, 1170.906127, -1381.768554, 13.598551, 0.000000, 0.000000, -89.800048, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(955, 1163.182739, -1363.504272, 13.148150, 0.000000, 0.000000, 90.500000, -1, -1, -1, 300.00, 300.00); 
	tmpobjid = CreateDynamicObject(1209, 1163.429809, -1362.236938, 12.739355, 0.000000, 0.000000, 88.700004, -1, -1, -1, 300.00, 300.00); 


	//Objects////////////////////////////////////////////////////////////////////////////////////////////////////////
	//สถานีตร
	tmpobjid = CreateDynamicObject(18765, -705.934448, 2606.117919, 1002.608398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10871, "blacksky_sfse", "ws_slatetiles", 0x00000000);
	tmpobjid = CreateDynamicObject(19462, -706.112792, 2612.826904, 1005.038330, 0.000007, 90.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObject(19462, -712.674804, 2605.826904, 1005.058349, 0.000000, 89.999992, 179.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObject(19462, -712.672851, 2609.767089, 1005.048339, 0.000000, 89.999992, 179.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateDynamicObject(18765, -719.114135, 2606.117919, 1002.678466, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "bathtile01_int", 0x00000000);
	tmpobjid = CreateDynamicObject(19462, -709.323120, 2596.326904, 1005.028320, 0.000000, 89.999992, 179.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(14877, -711.782348, 2599.341796, 1002.974914, -0.000007, 0.000007, -0.000121, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "grey_carpet_256", 0xFF424242);
	tmpobjid = CreateDynamicObject(19456, -701.229736, 2606.319335, 1010.358398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -708.267333, 2611.480468, 1006.853515, -0.000014, -0.000014, -90.000007, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -708.267333, 2611.160156, 1006.853515, -0.000014, -0.000014, -90.000007, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -706.749511, 2615.907226, 1006.858398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -701.849365, 2611.159423, 1006.858398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19433, -710.120605, 2611.161621, 1006.858398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19433, -710.120605, 2611.474609, 1006.858398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(18765, -719.114135, 2606.117919, 1011.028564, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 11301, "carshow_sfse", "ws_officy_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -714.103393, 2602.351562, 1008.698547, 0.000022, 89.999992, 179.999786, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -714.103393, 2604.351562, 1008.698547, 0.000022, 89.999992, 179.999786, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -714.103393, 2606.351562, 1008.698547, 0.000022, 89.999992, 179.999786, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -714.103393, 2608.351562, 1008.698547, 0.000022, 89.999992, 179.999786, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -714.103393, 2610.351562, 1008.698547, 0.000022, 89.999992, 179.999786, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -714.118774, 2601.337158, 1006.060791, 89.999992, 701.465332, -71.465339, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -714.048950, 2615.889404, 1006.858398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -714.118774, 2601.337158, 1008.060791, 89.999992, 701.465332, -71.465339, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -710.149780, 2614.639160, 1006.858398, -0.000007, 0.000000, -89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -714.513061, 2603.111816, 1006.894287, -0.000007, 0.000000, -0.000060, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "ws_carparkwall1", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -715.710449, 2601.069335, 1006.858398, -0.000007, 0.000000, -89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -718.948974, 2601.429687, 1006.858398, -0.000007, 0.000000, -89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "ws_carparkwall1", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -718.798828, 2611.179443, 1006.858398, -0.000007, 0.000000, -89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "ws_carparkwall1", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -722.957885, 2606.329589, 1006.858398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "ws_carparkwall1", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -709.304809, 2601.058593, 1006.858398, -0.000014, -0.000014, -90.000007, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -709.304809, 2600.738281, 1006.858398, -0.000014, -0.000014, -90.000007, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -702.920043, 2601.059570, 1006.858398, -0.000007, 0.000000, -89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -701.229736, 2606.319335, 1006.858398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19433, -701.220214, 2601.911621, 1006.858398, 0.000000, -0.000007, 179.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19433, -701.220214, 2601.911621, 1010.358398, 0.000000, -0.000007, 179.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -706.099365, 2611.159423, 1010.358398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -709.669921, 2601.059570, 1010.358398, -0.000007, 0.000000, -89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -702.852294, 2601.053466, 1010.358398, -0.000007, 0.000000, -89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19369, -710.960815, 2602.717529, 1006.858398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(2445, -711.392456, 2604.797851, 1005.108398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(2445, -711.392456, 2605.797851, 1005.108398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(2445, -711.392456, 2606.797851, 1005.108398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(2445, -711.392456, 2607.797851, 1005.108398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(2445, -711.392456, 2608.797851, 1005.108398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(2445, -711.392456, 2609.797851, 1005.108398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(2445, -711.392456, 2610.797851, 1005.108398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19430, -711.650146, 2606.064453, 1005.354370, 89.999992, 89.999992, -89.999992, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19430, -711.654052, 2609.557128, 1005.354370, 89.999992, 89.999992, -89.999992, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, -710.916137, 2609.709960, 1007.798278, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF354020);
	tmpobjid = CreateDynamicObject(19456, -710.959960, 2605.819335, 1010.358398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19433, -710.961303, 2611.161621, 1010.358398, 0.000000, -0.000007, 179.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, -710.916137, 2607.469726, 1007.798278, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF354020);
	tmpobjid = CreateDynamicObject(19466, -710.916137, 2605.229980, 1007.798278, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF354020);
	tmpobjid = CreateDynamicObject(19087, -710.924682, 2606.339843, 1009.268554, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, -710.924682, 2608.600097, 1009.268554, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(18765, -705.934448, 2606.117919, 1014.018371, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19462, -706.112792, 2612.826904, 1008.638427, 0.000007, 90.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19462, -712.602783, 2609.767089, 1008.648376, 0.000000, 89.999992, 179.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19462, -712.604736, 2605.826904, 1008.638427, 0.000000, 89.999992, 179.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -712.512451, 2611.474609, 1006.884277, -0.000014, -0.000014, -90.000007, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -712.512451, 2611.154296, 1006.884277, -0.000014, -0.000014, -90.000007, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2610.111328, 1008.618652, 0.000000, 90.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2608.111328, 1008.618652, 0.000000, 90.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2606.111328, 1008.618652, 0.000000, 90.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2604.111328, 1008.618652, 0.000000, 90.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2602.111328, 1008.618652, 0.000000, 90.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.341918, 2601.141601, 1008.618652, 0.000014, 90.000007, 89.999923, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -708.341918, 2601.141601, 1008.618652, 0.000014, 90.000007, 89.999923, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -706.341918, 2601.141601, 1008.618652, 0.000014, 90.000007, 89.999923, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -704.341918, 2601.141601, 1008.618652, 0.000014, 90.000007, 89.999923, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -702.341918, 2601.141601, 1008.618652, 0.000014, 90.000007, 89.999923, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -709.901977, 2611.061279, 1008.618652, 0.000022, 90.000007, 89.999900, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -707.901977, 2611.061279, 1008.618652, 0.000022, 90.000007, 89.999900, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -705.901977, 2611.061279, 1008.618652, 0.000022, 90.000007, 89.999900, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -703.901977, 2611.061279, 1008.618652, 0.000022, 90.000007, 89.999900, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.901977, 2611.061279, 1008.618652, 0.000022, 90.000007, 89.999900, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.853149, 2602.061279, 1008.618652, 0.000022, 89.999992, 179.999786, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.853149, 2604.061279, 1008.618652, 0.000022, 89.999992, 179.999786, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.853149, 2606.061279, 1008.618652, 0.000022, 89.999992, 179.999786, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.853149, 2608.061279, 1008.618652, 0.000022, 89.999992, 179.999786, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.853149, 2610.061279, 1008.618652, 0.000022, 89.999992, 179.999786, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.913208, 2610.921386, 1007.828918, 89.999992, -28.073562, 118.073371, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.913208, 2604.521240, 1007.828918, 89.999992, -28.073562, 118.073371, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -714.192749, 2603.111816, 1006.894287, -0.000007, 0.000000, -0.000060, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -714.188354, 2609.519531, 1006.858398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -714.519653, 2609.519531, 1006.858398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "ws_carparkwall1", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -711.063842, 2604.316406, 1007.620666, 89.999992, 791.465332, 108.534637, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -711.063842, 2604.316406, 1005.620666, 89.999992, 791.465332, 108.534637, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19369, -711.211059, 2602.717529, 1006.858398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -711.053833, 2611.076171, 1007.620666, 89.999992, 800.496337, -80.496345, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -711.053833, 2611.076171, 1005.620666, 89.999992, 800.496337, -80.496345, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, -710.924682, 2611.120117, 1006.848449, 0.000000, 90.000015, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, -710.924682, 2608.690185, 1006.848449, 0.000000, 90.000015, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, -710.924682, 2606.270263, 1006.848449, 55.000000, 90.000015, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, -701.254638, 2608.346191, 1006.488464, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, -701.254638, 2608.346191, 1004.258483, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, -701.254638, 2605.258300, 1006.488464, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, -701.254638, 2605.258300, 1004.258483, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, -701.254638, 2606.324218, 1007.658996, 180.000000, 450.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, -701.252563, 2607.299316, 1007.684143, 360.000000, 450.000000, 450.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2610.111328, 1011.529479, 0.000000, 90.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2608.111328, 1011.529479, 0.000000, 90.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2606.111328, 1011.529479, 0.000000, 90.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2604.111328, 1011.529479, 0.000000, 90.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2602.111328, 1011.529479, 0.000000, 90.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.341918, 2601.141601, 1011.529479, 0.000020, 90.000007, 89.999900, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -708.341918, 2601.141601, 1011.529479, 0.000020, 90.000007, 89.999900, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -706.341918, 2601.141601, 1011.529479, 0.000020, 90.000007, 89.999900, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -704.341918, 2601.141601, 1011.529479, 0.000020, 90.000007, 89.999900, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -702.341918, 2601.141601, 1011.529479, 0.000020, 90.000007, 89.999900, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -709.901977, 2611.061279, 1011.529479, 0.000029, 90.000007, 89.999877, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -707.901977, 2611.061279, 1011.529479, 0.000029, 90.000007, 89.999877, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -705.901977, 2611.061279, 1011.529479, 0.000029, 90.000007, 89.999877, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -703.901977, 2611.061279, 1011.529479, 0.000029, 90.000007, 89.999877, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.901977, 2611.061279, 1011.529479, 0.000029, 90.000007, 89.999877, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.853149, 2602.061279, 1011.529479, 0.000022, 89.999984, 179.999740, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.853149, 2604.061279, 1011.529479, 0.000022, 89.999984, 179.999740, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.853149, 2606.061279, 1011.529479, 0.000022, 89.999984, 179.999740, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.853149, 2608.061279, 1011.529479, 0.000022, 89.999984, 179.999740, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.853149, 2610.061279, 1011.529479, 0.000022, 89.999984, 179.999740, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2610.111328, 1004.907348, 0.000000, 90.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2608.111328, 1004.907348, 0.000000, 90.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2606.111328, 1004.907348, 0.000000, 90.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2604.111328, 1004.907348, 0.000000, 90.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.331909, 2602.111328, 1004.907348, 0.000000, 90.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.341918, 2601.141601, 1004.907348, 0.000029, 90.000007, 89.999877, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -708.341918, 2601.141601, 1004.907348, 0.000029, 90.000007, 89.999877, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -706.341918, 2601.141601, 1004.907348, 0.000029, 90.000007, 89.999877, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -704.341918, 2601.141601, 1004.907348, 0.000029, 90.000007, 89.999877, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -702.341918, 2601.141601, 1004.907348, 0.000029, 90.000007, 89.999877, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -709.901977, 2611.061279, 1004.907348, 0.000037, 90.000007, 89.999855, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -707.901977, 2611.061279, 1004.907348, 0.000037, 90.000007, 89.999855, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -705.901977, 2611.061279, 1004.907348, 0.000037, 90.000007, 89.999855, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -703.901977, 2611.061279, 1004.907348, 0.000037, 90.000007, 89.999855, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -701.901977, 2611.061279, 1004.907348, 0.000037, 90.000007, 89.999855, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.851196, 2602.061279, 1004.909362, 0.000022, 89.999977, 179.999694, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.851196, 2603.301269, 1004.909362, 0.000022, 89.999977, 179.999694, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.903198, 2606.061279, 1004.907348, 0.000022, 89.999977, 179.999694, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.903198, 2608.061279, 1004.907348, 0.000022, 89.999977, 179.999694, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.903198, 2610.061279, 1004.907348, 0.000022, 89.999977, 179.999694, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(2773, -709.608520, 2604.400390, 1005.628417, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(2412, -702.104248, 2608.858154, 1005.108398, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16322, "a51_stores", "metalic128", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 16322, "a51_stores", "metalic128", 0x00000000);
	tmpobjid = CreateDynamicObject(2412, -702.104248, 2607.177978, 1005.108398, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16322, "a51_stores", "metalic128", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 16322, "a51_stores", "metalic128", 0x00000000);
	tmpobjid = CreateDynamicObject(2412, -702.104248, 2605.368164, 1005.108398, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16322, "a51_stores", "metalic128", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 16322, "a51_stores", "metalic128", 0x00000000);
	tmpobjid = CreateDynamicObject(2001, -701.814697, 2610.459716, 1005.108398, 0.000000, 0.000000, -2.200007, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 1731, "cj_lighting", "cj_plantpot", 0x00000000);
	tmpobjid = CreateDynamicObject(2001, -701.777099, 2601.620117, 1005.108398, 0.000000, 0.000000, -59.099990, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 1731, "cj_lighting", "cj_plantpot", 0x00000000);
	tmpobjid = CreateDynamicObject(1708, -703.089355, 2601.779296, 1005.108398, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFF4A4A4A);
	SetDynamicObjectMaterial(tmpobjid, 1, 18029, "genintintsmallrest", "GB_restaursmll09", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18028, "cj_bar2", "GB_nastybar09", 0xFF4A4A4A);
	tmpobjid = CreateDynamicObject(1708, -704.589355, 2601.779296, 1005.108398, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFF4A4A4A);
	SetDynamicObjectMaterial(tmpobjid, 1, 18029, "genintintsmallrest", "GB_restaursmll09", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18028, "cj_bar2", "GB_nastybar09", 0xFF4A4A4A);
	tmpobjid = CreateDynamicObject(1708, -706.089355, 2601.779296, 1005.108398, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFF4A4A4A);
	SetDynamicObjectMaterial(tmpobjid, 1, 18029, "genintintsmallrest", "GB_restaursmll09", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18028, "cj_bar2", "GB_nastybar09", 0xFF4A4A4A);
	tmpobjid = CreateDynamicObject(1708, -703.659667, 2610.338867, 1005.108398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFF4A4A4A);
	SetDynamicObjectMaterial(tmpobjid, 1, 18029, "genintintsmallrest", "GB_restaursmll09", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18028, "cj_bar2", "GB_nastybar09", 0xFF4A4A4A);
	tmpobjid = CreateDynamicObject(1708, -705.159667, 2610.338867, 1005.108398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFF4A4A4A);
	SetDynamicObjectMaterial(tmpobjid, 1, 18029, "genintintsmallrest", "GB_restaursmll09", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18028, "cj_bar2", "GB_nastybar09", 0xFF4A4A4A);
	tmpobjid = CreateDynamicObject(1708, -706.659667, 2610.338867, 1005.108398, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFF4A4A4A);
	SetDynamicObjectMaterial(tmpobjid, 1, 18029, "genintintsmallrest", "GB_restaursmll09", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18028, "cj_bar2", "GB_nastybar09", 0xFF4A4A4A);
	tmpobjid = CreateDynamicObject(11721, -701.205078, 2609.566406, 1007.088317, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18028, "cj_bar2", "GB_nastybar13", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18028, "cj_bar2", "GB_nastybar13", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(11721, -701.205078, 2603.556640, 1007.088317, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18028, "cj_bar2", "GB_nastybar13", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 18028, "cj_bar2", "GB_nastybar13", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19366, -705.938476, 2606.080322, 1011.498168, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -707.701782, 2606.684326, 1011.608581, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -707.699829, 2605.474365, 1011.608581, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -704.177124, 2606.684326, 1011.608581, 0.000000, 90.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -704.175170, 2605.474365, 1011.608581, 0.000000, 90.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -705.160278, 2604.490478, 1011.608581, 0.000000, 90.000007, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -706.714599, 2604.488281, 1011.608581, 0.000000, 90.000007, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -705.160278, 2607.672607, 1011.608581, -0.000014, 90.000007, -89.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -706.714599, 2607.670410, 1011.608581, -0.000014, 90.000007, -89.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(2709, -710.623535, 2601.411376, 1011.608520, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(2709, -701.522827, 2610.801269, 1011.608520, 0.000000, 180.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -706.868530, 2614.522460, 1007.428649, 0.000000, 90.000000, 135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -706.868530, 2614.522460, 1005.098510, 0.000000, 90.000000, 135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -713.919799, 2614.522460, 1007.428649, 0.000004, 89.999977, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -713.919799, 2614.522460, 1005.098510, 0.000004, 89.999977, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -714.054199, 2611.042480, 1007.469543, 0.000000, 89.999969, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -714.054199, 2611.042480, 1005.139404, 0.000000, 89.999969, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -706.870971, 2611.608398, 1007.459472, -0.000004, 89.999961, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -706.870971, 2611.608398, 1005.129333, -0.000004, 89.999961, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -713.923828, 2611.600341, 1007.449523, -0.000015, 89.999977, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -713.923828, 2611.600341, 1005.119384, -0.000015, 89.999977, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -710.903198, 2604.071289, 1004.907348, 0.000022, 89.999977, 179.999694, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14476, "carlslounge", "breezewallbse", 0x00000000);
	tmpobjid = CreateDynamicObject(1671, -712.184082, 2609.164062, 1005.584655, 0.000000, 0.000000, 81.400001, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18081, "cj_barb", "ab_leather_strips", 0x00000000);
	tmpobjid = CreateDynamicObject(1671, -712.291748, 2606.205078, 1005.584655, 0.000000, 0.000000, 101.400016, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18081, "cj_barb", "ab_leather_strips", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, -714.304321, 2602.377441, 1005.144287, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14740, "rywins", "mp_CJ_WOODDOOR2", 0x00000000);
	tmpobjid = CreateDynamicObject(2164, -722.747314, 2604.370117, 1005.178466, 0.000000, 0.000000, -270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 1714, "cj_office", "BLUE_FABRIC", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(1518, -720.138061, 2611.208496, 1007.098388, 1.999999, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 9818, "ship_brijsfw", "ship_screen1sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(1518, -719.507446, 2611.208496, 1007.098388, 1.999999, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 19894, "laptopsamp1", "laptopscreen2", 0x00000000);
	tmpobjid = CreateDynamicObject(1518, -718.876831, 2611.208496, 1007.098388, 1.999999, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14535, "ab_wooziec", "wall4", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 6332, "rodeo01_law2", "rodeowind3", 0x00000000);
	tmpobjid = CreateDynamicObject(1518, -718.256469, 2611.208496, 1007.098388, 1.999999, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 6332, "rodeo01_law2", "clothes01_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19569, -717.887084, 2611.138183, 1006.868347, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 914, "industrialext", "CJ_Panel2", 0x00000000);
	tmpobjid = CreateDynamicObject(1518, -720.138061, 2611.208496, 1007.668334, 1.999999, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 6332, "rodeo01_law2", "prada_256", 0x00000000);
	tmpobjid = CreateDynamicObject(1518, -719.507446, 2611.208496, 1007.668334, 1.999999, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 16644, "a51_detailstuff", "a51_map", 0x00000000);
	tmpobjid = CreateDynamicObject(1518, -718.876831, 2611.208496, 1007.668334, 1.999999, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14535, "ab_wooziec", "wall4", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 9818, "ship_brijsfw", "ship_greenscreen1", 0x00000000);
	tmpobjid = CreateDynamicObject(1518, -718.256469, 2611.208496, 1007.668334, 1.999999, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 14571, "chinese_furn", "ab_tv_noise", 0x00000000);
	tmpobjid = CreateDynamicObject(11721, -716.484619, 2611.216308, 1007.418273, 0.000000, 0.000000, 360.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18028, "cj_bar2", "GB_nastybar13", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14498, "imm_rooms", "venetian_blind", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(11721, -721.554321, 2611.216308, 1007.418273, 0.000000, 0.000000, 360.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18028, "cj_bar2", "GB_nastybar13", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14498, "imm_rooms", "venetian_blind", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19832, -715.933837, 2601.321289, 1007.259033, 90.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD1(EDGE)", 0x00000000);
	tmpobjid = CreateDynamicObject(19832, -716.313842, 2601.321289, 1007.259033, 90.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD1(EDGE)", 0x00000000);
	tmpobjid = CreateDynamicObject(19832, -716.693847, 2601.321289, 1007.259033, 90.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD1(EDGE)", 0x00000000);
	tmpobjid = CreateDynamicObject(1898, -716.816528, 2601.469726, 1007.255920, 0.000000, 99.500007, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1898, -715.816528, 2601.469726, 1007.255920, 0.000000, 99.500007, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1898, -716.016479, 2601.469726, 1007.255920, 0.000000, 99.500007, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1898, -716.216430, 2601.469726, 1007.255920, 0.000000, 99.500007, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1898, -716.416381, 2601.469726, 1007.255920, 0.000000, 99.500007, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1898, -716.616333, 2601.469726, 1007.255920, 0.000000, 99.500007, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(2689, -715.812255, 2601.618652, 1006.910766, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 2819, "gb_bedroomclths01", "GB_clothesbed03", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -722.843872, 2601.569824, 1007.343566, -0.000004, 89.999977, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -722.843872, 2601.569824, 1005.013427, -0.000004, 89.999977, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -722.843872, 2611.019531, 1007.343566, -0.000011, 90.000000, 44.999984, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -722.843872, 2611.019531, 1005.013427, -0.000011, 90.000000, 44.999984, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(2183, -718.521240, 2604.736816, 1005.178466, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 1714, "cj_office", "BLUE_FABRIC", 0x00000000);
	tmpobjid = CreateDynamicObject(19893, -718.683349, 2605.362060, 1005.998657, 0.000000, 0.000000, 74.400009, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 9818, "ship_brijsfw", "ship_screen1sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(19893, -718.642578, 2606.959960, 1005.998657, 0.000000, 0.000000, 91.100013, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19893, -719.592407, 2606.953369, 1005.998657, 0.000000, 0.000000, -95.500007, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 9818, "ship_brijsfw", "ship_screen1sfw", 0x00000000);
	tmpobjid = CreateDynamicObject(19825, -710.843627, 2610.198730, 1009.328674, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1654, "dynamite", "clock64", 0x00000000);
	tmpobjid = CreateDynamicObject(19327, -714.097778, 2603.627197, 1007.198913, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} CONTROL ROOM", 130, "Ariel", 40, 1, 0x00000000, 0x00000000, 0);
	tmpobjid = CreateDynamicObject(19834, -714.633666, 2611.054443, 1007.383605, -0.000004, 89.999977, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -714.633666, 2611.054443, 1005.053466, -0.000004, 89.999977, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -714.633666, 2601.544189, 1007.383605, -0.000011, 90.000000, 44.999984, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -714.633666, 2601.544189, 1005.053466, -0.000011, 90.000000, 44.999984, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(3078, -710.864257, 2604.790527, 1009.399353, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFFFFFFFF);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{354920} Sheriff Department", 120, "Ariel", 60, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(3078, -710.869384, 2604.810546, 1009.369323, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFFFFFFFF);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} Sheriff Department", 120, "Ariel", 60, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(19815, -716.349487, 2599.340087, 1000.965698, 55.000000, 0.000014, 89.999839, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19815, -715.529418, 2599.340087, 1001.539367, 55.000000, 0.000014, 89.999839, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19815, -714.710571, 2599.340087, 1002.112976, 55.000000, 0.000014, 89.999839, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19815, -713.899780, 2599.340087, 1002.680786, 55.000000, 0.000014, 89.999839, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19815, -713.079467, 2599.340087, 1003.254333, 55.000000, 0.000014, 89.999839, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19815, -712.268676, 2599.340087, 1003.822143, 55.000000, 0.000014, 89.999839, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19815, -711.465698, 2599.340087, 1004.384277, 55.000000, 0.000014, 89.999839, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19815, -710.925170, 2599.340087, 1004.758850, 55.000000, 0.000014, 89.999839, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19815, -710.555053, 2599.340087, 1004.698852, 89.999992, 466.533294, -16.533428, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19815, -709.664184, 2599.340087, 1004.702880, 89.999992, 466.533294, -16.533428, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19462, -714.462768, 2599.116943, 1006.296508, 35.000000, 89.999992, 269.999938, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14859, "gf1", "mp_cop_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -710.926025, 2599.050292, 1006.864257, -0.000007, -0.000007, -0.000060, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_wall", 0xFFB5B5B5);
	tmpobjid = CreateDynamicObject(19392, -710.605712, 2599.050292, 1006.864257, -0.000007, -0.000007, -0.000060, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, -715.338378, 2597.732910, 1005.114257, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_wall", 0xFFB5B5B5);
	tmpobjid = CreateDynamicObject(19377, -715.338378, 2600.532714, 1005.114257, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_wall", 0xFFB5B5B5);
	tmpobjid = CreateDynamicObject(19433, -719.142944, 2599.082031, 1003.544372, 0.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14859, "gf1", "mp_cop_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19462, -721.502319, 2599.116943, 1000.818481, 0.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_gun_dirt", 0x00000000);
	tmpobjid = CreateDynamicObject(19433, -719.862792, 2599.082031, 1004.264221, 90.000000, 270.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -720.159179, 2599.111328, 1002.654418, -0.000007, -0.000007, -0.000060, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_tank_roomplain", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -719.838867, 2599.111328, 1002.654418, -0.000007, -0.000007, -0.000060, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_tank_roomplain", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, -725.038574, 2595.583007, 1000.833740, 0.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_gun_dirt", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -720.160522, 2592.701660, 1002.669677, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_tank_room", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -724.930664, 2591.201660, 1002.669677, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_tank_roomplain", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -727.258666, 2596.021484, 1002.669677, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_tank_roomplain", 0x00000000);
	tmpobjid = CreateDynamicObject(19456, -724.930664, 2600.681640, 1002.669677, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_tank_roomplain", 0x00000000);
	tmpobjid = CreateDynamicObject(19302, -723.713867, 2592.165039, 1002.159851, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19304, "pd_jail_door_top01", "pd_jail_door_top01", 0x00000000);
	tmpobjid = CreateDynamicObject(19302, -723.713867, 2595.634765, 1002.159851, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19304, "pd_jail_door_top01", "pd_jail_door_top01", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, -728.266601, 2594.668212, 1002.665039, 0.000007, 0.000007, 89.999946, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_tank_roomplain", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -723.456665, 2594.800048, 1003.405639, 89.999992, 134.999984, -45.000022, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFF7D7D7D);
	tmpobjid = CreateDynamicObject(19447, -728.266601, 2597.958496, 1002.665039, 0.000014, 0.000007, 89.999923, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_tank_roomplain", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -723.456665, 2598.090332, 1003.405639, 89.999992, 154.471191, -64.471237, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFF7D7D7D);
	tmpobjid = CreateDynamicObject(19302, -723.715820, 2600.904785, 1002.159851, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19304, "pd_jail_door_top01", "pd_jail_door_top01", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -723.454711, 2594.801025, 1001.895751, 89.999992, 134.999984, -45.000022, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFF7D7D7D);
	tmpobjid = CreateDynamicObject(19447, -728.266601, 2594.938232, 1002.665039, 0.000007, 0.000007, 89.999946, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_tank_roomplain", 0x00000000);
	tmpobjid = CreateDynamicObject(19940, -723.454711, 2598.091308, 1001.895751, 89.999992, 154.471191, -64.471237, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFF7D7D7D);
	tmpobjid = CreateDynamicObject(19447, -728.266601, 2598.228515, 1002.665039, 0.000014, 0.000007, 89.999923, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_tank_roomplain", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, -725.038574, 2595.583007, 1004.223327, 0.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14876, "gf4", "mp_diner_sawdust", 0xFF7D7D7D);
	tmpobjid = CreateDynamicObject(11728, -720.218505, 2595.752929, 1002.609558, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(14877, -711.792480, 2599.341796, 1002.964904, -0.000007, 0.000007, -0.000120, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFFB5B5B5);
	tmpobjid = CreateDynamicObject(1499, -710.694824, 2598.307617, 1005.114257, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14740, "rywins", "mp_CJ_WOODDOOR2", 0x00000000);
	tmpobjid = CreateDynamicObject(3078, -710.474609, 2599.061035, 1007.819274, 90.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFFFFFFFF);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} Detention", 120, "Engravers MT", 15, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(19939, -710.501708, 2599.073242, 1007.854370, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "plywood_gym", 0x00000000);
	tmpobjid = CreateDynamicObject(950, -710.463012, 2602.969970, 1005.638793, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 1360, "cj_plant_props", "CJ_PLANT", 0x00000000);
	tmpobjid = CreateDynamicObject(950, -707.892578, 2601.530029, 1005.638793, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 1360, "cj_plant_props", "CJ_PLANT", 0x00000000);
	tmpobjid = CreateDynamicObject(950, -709.863403, 2610.750000, 1005.638793, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 1360, "cj_plant_props", "CJ_PLANT", 0x00000000);
	tmpobjid = CreateDynamicObject(2649, -721.839111, 2592.066650, 1003.659301, 180.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFFFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -719.709228, 2597.864013, 1003.069519, -0.000004, 89.999977, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -719.709228, 2597.864013, 1000.739379, -0.000004, 89.999977, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -719.709228, 2600.404296, 1003.069519, -0.000004, 89.999992, 44.999984, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -719.709228, 2600.404296, 1000.739379, -0.000004, 89.999992, 44.999984, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19378, -715.866333, 2592.708984, 1005.114257, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_vinyl", 0x00000000);
	tmpobjid = CreateDynamicObject(19461, -710.697265, 2592.631347, 1003.449523, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14806, "bdupshifi", "Bdup2_wood", 0x00000000);
	tmpobjid = CreateDynamicObject(19461, -715.416992, 2597.363769, 1006.950195, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_lectern", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -711.021362, 2595.713134, 1006.950195, -0.000014, 0.000007, -0.000037, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_lectern", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -710.701049, 2595.713134, 1006.950195, -0.000014, 0.000007, -0.000037, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -710.556640, 2597.400146, 1007.809753, -0.000004, 89.999961, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -710.556640, 2597.400146, 1005.479614, -0.000004, 89.999961, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -710.596679, 2597.340087, 1007.739746, -0.000020, 89.999961, -89.999938, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -710.596679, 2597.340087, 1005.409606, -0.000020, 89.999961, -89.999938, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -710.655029, 2597.266113, 1007.739746, -0.000028, 89.999969, 0.000052, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -710.655029, 2597.266113, 1005.409606, -0.000028, 89.999969, 0.000052, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19461, -719.916748, 2592.483886, 1006.950195, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_lectern", 0x00000000);
	tmpobjid = CreateDynamicObject(19405, -710.701660, 2592.551757, 1006.950195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, -710.746215, 2592.553222, 1007.024291, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF333333);
	tmpobjid = CreateDynamicObject(19405, -711.011962, 2592.551757, 1006.950195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_lectern", 0x00000000);
	tmpobjid = CreateDynamicObject(19466, -711.026489, 2592.553222, 1007.024291, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF333333);
	tmpobjid = CreateDynamicObject(1656, -710.877929, 2592.810546, 1006.344360, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1656, -710.877929, 2592.270507, 1006.342346, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1656, -710.877929, 2592.270507, 1007.853637, 0.000007, -179.999969, 89.999969, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1656, -710.879882, 2592.810546, 1007.855590, 0.000007, -179.999969, 89.999969, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1656, -710.877929, 2591.591552, 1007.104309, 0.000014, -269.999969, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1656, -710.879882, 2591.589599, 1007.644348, 0.000014, -269.999969, 89.999977, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1656, -710.886962, 2593.519531, 1007.104309, 0.000014, -269.999969, -90.000038, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(1656, -710.885009, 2593.521484, 1007.644348, 0.000014, -269.999969, -90.000038, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19368, -711.006591, 2589.473144, 1006.950195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_lectern", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, -710.716308, 2589.473144, 1006.950195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19461, -715.457031, 2587.953857, 1006.950195, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_lectern", 0x00000000);
	tmpobjid = CreateDynamicObject(19378, -715.866333, 2592.708984, 1008.764770, 0.000000, 90.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_cop_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -711.150512, 2588.085937, 1007.615539, -0.000004, 89.999961, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -711.150512, 2588.085937, 1005.285400, -0.000004, 89.999961, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -719.791503, 2588.085937, 1007.615539, -0.000015, 89.999961, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -719.791503, 2588.085937, 1005.285400, -0.000015, 89.999961, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -719.791503, 2597.226074, 1007.705322, -0.000011, 89.999984, 44.999984, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -719.791503, 2597.226074, 1005.375183, -0.000011, 89.999984, 44.999984, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -711.141235, 2597.226074, 1007.705322, 0.000000, 90.000000, 134.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -711.141235, 2597.226074, 1005.375183, 0.000000, 90.000000, 134.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(950, -719.120483, 2588.866699, 1005.738891, 0.000000, 0.000000, 129.099884, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 1360, "cj_plant_props", "CJ_PLANT", 0x00000000);
	tmpobjid = CreateDynamicObject(2674, -716.203979, 2591.557373, 1005.210205, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	tmpobjid = CreateDynamicObject(2674, -712.055297, 2590.854003, 1005.210205, 0.000000, 0.000000, 52.499980, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	tmpobjid = CreateDynamicObject(2674, -717.747070, 2595.993164, 1005.210205, 0.000000, 0.000000, -167.700057, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	tmpobjid = CreateDynamicObject(2674, -715.202758, 2594.833984, 1005.210205, 0.000000, 0.000000, 91.099952, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19480, "signsurf", "sign", 0x00000000);
	tmpobjid = CreateDynamicObject(1820, -712.523315, 2592.012939, 1005.200195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, -710.816772, 2594.977539, 1005.178344, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14740, "rywins", "mp_CJ_WOODDOOR2", 0x00000000);
	tmpobjid = CreateDynamicObject(18765, -702.694335, 2596.028076, 1002.628417, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14708, "labig1int2", "HS2_floor2", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, -702.924926, 2600.750488, 1003.387634, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_lectern", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, -698.594482, 2595.880371, 1003.387634, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_lectern", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, -702.924926, 2590.980712, 1003.387634, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_lectern", 0x00000000);
	tmpobjid = CreateDynamicObject(18765, -702.714355, 2596.028076, 1011.088134, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling3", 0x00000000);
	tmpobjid = CreateDynamicObject(19462, -709.323120, 2596.326904, 1008.648803, 0.000000, 89.999992, 179.999954, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14590, "mafcastopfoor", "cop_ceiling1", 0xFF797979);
	tmpobjid = CreateDynamicObject(19392, -707.631835, 2599.054199, 1006.878417, -0.000007, -0.000007, -0.000060, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19392, -707.311523, 2599.054199, 1006.878417, -0.000007, -0.000007, -0.000060, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_lectern", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, -707.315063, 2592.660644, 1003.387634, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14847, "mp_policesf", "mp_cop_lectern", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, -707.615356, 2592.660644, 1003.387634, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(19368, -709.085693, 2591.593017, 1006.840087, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16093, "a51_ext", "ws_whitewall2_top", 0x00000000);
	tmpobjid = CreateDynamicObject(1708, -706.649902, 2593.459228, 1005.108398, 0.000000, 0.000000, 450.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0xFF4A4A4A);
	SetDynamicObjectMaterial(tmpobjid, 1, 18029, "genintintsmallrest", "GB_restaursmll09", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 2, 18028, "cj_bar2", "GB_nastybar09", 0xFF4A4A4A);
	tmpobjid = CreateDynamicObject(2612, -702.440917, 2591.111816, 1007.398132, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0x00000000);
	tmpobjid = CreateDynamicObject(2612, -707.171508, 2593.681640, 1007.518249, 0.000000, 0.000000, 450.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 3, 14489, "carlspics", "AH_picture4", 0x00000000);
	tmpobjid = CreateDynamicObject(2614, -698.737426, 2595.910156, 1007.558471, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(19825, -707.191894, 2599.048583, 1008.088928, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1654, "dynamite", "clock64", 0x00000000);
	tmpobjid = CreateDynamicObject(3078, -710.584716, 2595.730957, 1007.899353, 89.999992, 179.999984, -90.000007, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFFFFFFFF);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} Office 2", 120, "Engravers MT", 15, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(19939, -710.611816, 2595.743164, 1007.934448, 0.000000, 90.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "plywood_gym", 0x00000000);
	tmpobjid = CreateDynamicObject(3078, -707.751464, 2599.062988, 1007.859313, 89.999992, 269.960418, 0.039517, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFFFFFFFF);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} Office 1", 120, "Engravers MT", 15, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(19939, -707.724365, 2599.050781, 1007.894409, 0.000000, 90.000007, 179.999893, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "plywood_gym", 0x00000000);
	tmpobjid = CreateDynamicObject(1499, -707.436889, 2598.317626, 1005.108276, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14740, "rywins", "mp_CJ_WOODDOOR2", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -707.768676, 2591.720214, 1007.579589, 0.000000, 89.999969, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -707.768676, 2591.720214, 1005.249450, 0.000000, 89.999969, -135.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -710.565795, 2591.710449, 1007.579589, -0.000004, 89.999961, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(19834, -710.565795, 2591.710449, 1005.249450, -0.000004, 89.999961, -45.000003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 1355, "break_s_bins", "CJ_WOOD_DARK", 0x00000000);
	tmpobjid = CreateDynamicObject(3078, -709.243164, 2591.720214, 1008.189575, 89.999992, 584.960388, -44.960521, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFFFFFFFF);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} Floor 2", 120, "Engravers MT", 15, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(19939, -709.255371, 2591.693115, 1008.094543, 0.000000, 90.000007, 89.999847, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "plywood_gym", 0x00000000);
	tmpobjid = CreateDynamicObject(3078, -709.243164, 2591.720214, 1007.969360, 89.999992, 584.960388, -44.960521, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0xFFFFFFFF);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} Roof", 120, "Engravers MT", 15, 1, 0x00000000, 0x00000000, 1);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(19940, -716.077514, 2597.844238, 1001.389465, -34.999992, 90.000007, 89.999839, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -714.439331, 2597.844238, 1002.536621, -34.999992, 90.000007, 89.999839, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -712.800903, 2597.844238, 1003.683715, -34.999992, 90.000007, 89.999839, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -709.012939, 2611.312744, 1006.599487, 89.999992, 701.465332, -71.465362, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -709.012939, 2611.312744, 1004.599548, 89.999992, 701.465332, -71.465362, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -707.483154, 2611.312744, 1006.599487, 89.999992, 701.465332, -71.465339, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -707.483154, 2611.312744, 1004.599548, 89.999992, 701.465332, -71.465339, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -708.411132, 2611.314208, 1007.607482, -0.000007, -0.000007, -90.000068, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.050415, 2600.890869, 1006.604370, 89.999992, 701.465332, -71.465362, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.050415, 2600.890869, 1004.604431, 89.999992, 701.465332, -71.465362, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -708.520629, 2600.890869, 1006.604370, 89.999992, 701.465332, -71.465339, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -708.520629, 2600.890869, 1004.604431, 89.999992, 701.465332, -71.465339, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -709.448608, 2600.892333, 1007.612365, -0.000007, -0.000007, -90.000068, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -713.258056, 2611.306884, 1006.630249, 89.999992, 701.465332, -71.465362, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -713.258056, 2611.306884, 1004.630310, 89.999992, 701.465332, -71.465362, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -711.728271, 2611.306884, 1006.630249, 89.999992, 701.465332, -71.465339, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -711.728271, 2611.306884, 1004.630310, 89.999992, 701.465332, -71.465339, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -712.656250, 2611.308349, 1007.638244, -0.000007, -0.000007, -90.000068, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -714.345336, 2602.366210, 1006.640258, 89.999992, 791.465332, -71.465362, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -714.345336, 2602.366210, 1004.640319, 89.999992, 791.465332, -71.465362, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -714.345336, 2603.895996, 1006.640258, 89.999992, 791.465332, -71.465362, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -714.345336, 2603.895996, 1004.640319, 89.999992, 791.465332, -71.465362, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -714.346801, 2602.968017, 1007.648254, 0.000000, 0.000007, -0.000121, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1569, -701.334228, 2605.331054, 1005.108398, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1569, -701.334228, 2608.320800, 1005.108398, -0.000007, 0.000000, -89.999977, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2961, -703.086547, 2611.039062, 1006.718566, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2962, -703.088867, 2611.029296, 1006.718627, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11713, -702.565307, 2611.055908, 1006.938415, -0.000007, 0.000000, -89.999977, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2690, -702.590576, 2610.979492, 1006.908508, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19099, -711.398193, 2610.840576, 1006.228454, 181.787994, 105.000000, 46.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2611, -714.036376, 2609.988037, 1007.154113, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1433, -702.062500, 2602.875488, 1005.278442, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(16779, -705.954956, 2606.052001, 1011.719787, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19173, -705.079467, 2601.152343, 1007.618713, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2191, -713.374633, 2613.567382, 1005.124267, 0.000000, 0.000000, 450.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2000, -713.399536, 2612.509033, 1005.124267, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2000, -713.399536, 2611.999023, 1005.124267, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2066, -713.703247, 2610.520996, 1005.144287, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2002, -711.837524, 2604.001953, 1005.144287, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19810, -714.087768, 2604.114257, 1007.294494, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2193, -721.355468, 2602.070312, 1005.178466, 0.000000, 0.000000, 450.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2172, -718.955444, 2602.030761, 1005.178466, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2191, -722.352783, 2606.186767, 1005.178466, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2356, -721.185913, 2603.226074, 1005.178466, 0.000000, 0.000000, 127.900108, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2356, -719.666503, 2603.142333, 1005.178466, 0.000000, 0.000000, -165.199859, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2202, -715.130737, 2606.011718, 1005.178466, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2197, -715.019531, 2609.552246, 1005.178466, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2612, -722.816894, 2608.728515, 1007.138244, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2205, -719.851928, 2610.518310, 1005.178466, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2200, -714.760620, 2608.590820, 1005.178466, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1806, -719.046875, 2609.268066, 1005.178466, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2059, -719.258056, 2610.700195, 1006.124572, 0.000000, 0.000000, -33.300003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2162, -722.137329, 2611.010253, 1005.178466, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2163, -717.125488, 2611.027832, 1005.178466, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1808, -717.713134, 2601.750000, 1005.178466, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19347, -718.168334, 2610.539550, 1006.118774, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19773, -716.712402, 2610.783203, 1006.128723, 0.000000, 90.000000, 160.699981, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19099, -716.785644, 2601.631835, 1007.204162, 270.000000, 270.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2356, -720.104980, 2605.303710, 1005.178466, 0.000000, 0.000000, -70.199874, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2356, -721.248168, 2607.113281, 1005.178466, 0.000000, 0.000000, -96.499862, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2356, -718.189575, 2606.994628, 1005.178466, 0.000000, 0.000000, 92.300102, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2356, -718.259887, 2605.337158, 1005.178466, 0.000000, 0.000000, 89.100151, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19894, -719.747802, 2605.340820, 1005.998657, 0.000000, 0.000000, -95.500007, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19807, -718.614746, 2605.926757, 1006.038574, 0.000000, 0.000000, 56.800006, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19807, -718.396362, 2610.650878, 1006.168640, 0.000000, 0.000000, -5.999986, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(330, -718.745849, 2607.687988, 1005.958801, 90.000000, -96.099990, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2059, -719.473144, 2606.091796, 1006.002502, 0.000000, 0.000000, -123.099998, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18075, -718.636474, 2608.565429, 1008.529052, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19808, -719.570800, 2610.294921, 1006.148986, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2281, -704.215820, 2610.591552, 1007.178771, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2164, -712.355468, 2601.187500, 1005.133300, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2282, -705.940429, 2610.579589, 1007.058349, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1742, -706.757324, 2613.925781, 1005.124267, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2002, -707.386108, 2612.327636, 1005.124267, 0.000000, 0.000000, 267.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2273, -707.355224, 2601.634521, 1007.178466, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -711.850219, 2597.846191, 1004.345825, -34.999992, 90.000030, 89.999870, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -716.077514, 2600.435546, 1001.389465, -34.999950, 90.000007, 89.999801, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -714.439331, 2600.435546, 1002.536621, -34.999950, 90.000007, 89.999801, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -712.800903, 2600.435546, 1003.683715, -34.999950, 90.000007, 89.999801, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -711.850219, 2600.437500, 1004.345825, -34.999950, 90.000030, 89.999816, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.158813, 2597.848144, 1004.880737, 0.000007, 90.000022, 89.999877, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.158813, 2600.439697, 1004.880737, 0.000007, 90.000022, 89.999877, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.758300, 2598.304687, 1006.610229, 89.999992, 775.747741, -55.747806, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.758300, 2598.304687, 1004.610290, 89.999992, 775.747741, -55.747806, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.758300, 2599.834472, 1006.610229, 89.999992, 775.747741, -55.747787, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.758300, 2599.834472, 1004.610290, 89.999992, 775.747741, -55.747787, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.759765, 2598.906494, 1007.618225, 0.000000, 0.000000, -0.000121, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -719.991455, 2598.365722, 1002.400390, 89.999992, 775.747741, -55.747806, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -719.991455, 2598.365722, 1000.400451, 89.999992, 775.747741, -55.747806, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -719.991455, 2599.895507, 1002.400390, 89.999992, 775.747741, -55.747787, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -719.991455, 2599.895507, 1000.400451, 89.999992, 775.747741, -55.747787, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -719.992919, 2598.967529, 1003.408386, 0.000000, 0.000000, -0.000121, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1771, -725.786254, 2592.065185, 1001.499084, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19302, -723.715820, 2593.895019, 1002.159851, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19302, -723.715820, 2597.395019, 1002.159851, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19302, -723.715820, 2599.154785, 1002.159851, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, -723.716796, 2593.050781, 1004.059509, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, -723.716796, 2596.570800, 1004.059509, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19304, -723.696777, 2600.041015, 1004.059509, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2602, -726.784545, 2593.723632, 1001.410034, 0.000000, 0.000000, 450.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2670, -723.307373, 2593.500244, 1000.999694, 0.000000, 0.000000, -56.599987, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -733.072631, 2594.800048, 1003.405639, 89.999992, 134.999984, -45.000022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -733.070678, 2594.801025, 1001.895751, 89.999992, 134.999984, -45.000022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -733.072631, 2598.090332, 1003.405639, 89.999992, 154.471191, -64.471237, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -733.070678, 2598.091308, 1001.895751, 89.999992, 154.471191, -64.471237, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1771, -725.786254, 2595.735351, 1001.499084, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2602, -726.784545, 2597.393554, 1001.410034, 0.000007, 0.000000, 89.999977, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1771, -725.786254, 2598.995117, 1001.499084, 0.000014, 0.000000, 89.999954, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2602, -726.013916, 2600.233398, 1001.410034, 0.000014, 0.000000, 359.999938, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2310, -720.660644, 2594.280761, 1001.399719, 0.000000, 0.000000, 16.399997, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2310, -720.706176, 2593.386962, 1001.399719, 0.000000, 0.000000, -23.100002, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2310, -720.595092, 2597.497558, 1001.399719, 0.000000, 0.000000, -0.900000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2670, -721.071899, 2595.934814, 1000.999694, 0.000000, 0.000000, 173.100006, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1738, -722.409179, 2591.491210, 1001.459838, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1738, -722.409179, 2600.341308, 1001.459838, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.853637, 2594.967529, 1006.696166, 89.999992, 798.132385, -78.132446, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.853637, 2594.967529, 1004.696228, 89.999992, 798.132385, -78.132446, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.853637, 2596.497314, 1006.696166, 89.999992, 798.132385, -78.132453, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.853637, 2596.497314, 1004.696228, 89.999992, 798.132385, -78.132453, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -710.855102, 2595.569335, 1007.704162, -0.000007, 0.000014, -0.000098, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18075, -715.167968, 2590.659179, 1008.701049, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2186, -719.258911, 2595.860839, 1005.200195, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2181, -716.973632, 2596.693359, 1005.200195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2173, -715.539916, 2591.260498, 1005.200195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(14632, -710.245727, 2586.553710, 1006.690490, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2167, -719.284667, 2590.956054, 1005.200195, 0.000000, 0.000000, 450.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2167, -719.284667, 2591.875976, 1005.200195, 0.000000, 0.000000, 450.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2167, -719.274658, 2593.706054, 1005.200195, 0.000000, 0.000000, 450.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2167, -719.274658, 2592.786132, 1005.200195, 0.000000, 0.000000, 450.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1999, -711.617431, 2590.307128, 1005.200195, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2002, -713.238281, 2596.717773, 1005.200195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2055, -711.138671, 2591.015136, 1007.280212, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19825, -711.144287, 2595.541503, 1008.150390, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2813, -711.538818, 2590.260253, 1006.000549, 0.000000, 0.000000, -71.200004, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3077, -716.751464, 2588.729248, 1005.200195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2309, -712.047241, 2589.403320, 1005.200195, 0.000000, 0.000000, -83.100013, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2309, -716.487060, 2596.273437, 1005.200195, 0.000000, 0.000000, -0.900008, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2161, -712.407348, 2597.262207, 1005.200195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2161, -714.597778, 2597.262207, 1005.200195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2610, -713.060302, 2588.430664, 1006.020202, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2610, -713.600830, 2588.430664, 1006.020202, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2610, -714.141357, 2588.430664, 1006.020202, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1738, -711.241821, 2592.462646, 1005.740356, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1714, -715.110717, 2589.892333, 1005.200195, 0.000000, 0.000000, 162.000045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2253, -715.779418, 2591.271728, 1006.270690, 0.000000, 0.000000, 33.499992, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19807, -714.298950, 2591.328125, 1006.080505, 0.000000, 0.000000, -14.599999, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2263, -711.618896, 2594.150878, 1007.020446, 0.000000, 0.000000, -90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1721, -715.739135, 2592.876464, 1005.200195, 0.000000, 0.000000, 198.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1721, -714.287963, 2592.822021, 1005.200195, 0.000000, 0.000000, 173.899993, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2611, -714.265014, 2597.237792, 1007.464050, 0.000000, 0.000000, 360.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1747, -712.126708, 2597.268554, 1006.540283, 0.000000, 0.000000, -3.299998, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2612, -717.605590, 2588.819824, 1007.240417, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2836, -714.502563, 2594.056396, 1005.200195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19835, -714.685424, 2591.292480, 1006.090820, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2221, -715.831420, 2596.721923, 1006.072570, 0.000000, 0.000000, 2.599998, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1721, -711.297241, 2593.703857, 1005.200195, 0.000000, 0.000000, 90.699996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11710, -709.273315, 2600.699218, 1007.804809, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11743, -717.244384, 2610.792968, 1006.108886, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19347, -715.126098, 2591.399658, 1006.018676, 0.000000, 0.000014, -53.999984, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19773, -715.411254, 2591.262207, 1006.018615, 0.000004, 89.999984, -77.199989, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(14892, -699.441406, 2594.937988, 1004.038024, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -707.464111, 2598.308593, 1006.624389, 89.999992, 775.747741, -55.747806, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -707.464111, 2598.308593, 1004.624450, 89.999992, 775.747741, -55.747806, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -707.464111, 2599.838378, 1006.624389, 89.999992, 775.747741, -55.747787, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -707.464111, 2599.838378, 1004.624450, 89.999992, 775.747741, -55.747787, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19940, -707.465576, 2598.910156, 1007.632385, 0.000000, 0.000000, -0.000121, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18075, -703.037231, 2594.318847, 1008.571044, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2162, -705.908447, 2591.214111, 1005.128417, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2172, -699.291748, 2597.497314, 1005.128417, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2608, -706.926635, 2595.612792, 1005.728271, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2181, -700.696899, 2600.156250, 1005.128417, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2356, -700.151977, 2599.301757, 1005.128417, 0.000000, 0.000000, -8.599974, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1721, -707.073486, 2597.723388, 1005.128417, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1721, -707.073486, 2597.103515, 1005.128417, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2202, -699.251586, 2595.560546, 1005.128417, 0.000000, 0.000000, 270.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2197, -701.647338, 2599.605957, 1005.128417, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2197, -702.368041, 2599.605957, 1005.128417, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2164, -704.072753, 2591.099609, 1005.128417, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2607, -702.753784, 2596.400878, 1005.508361, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1713, -701.437866, 2591.581054, 1005.128417, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2002, -700.421142, 2591.624755, 1005.128417, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2002, -706.654296, 2600.384765, 1005.128417, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2356, -699.981567, 2596.879150, 1005.128417, 0.000000, 0.000000, -74.599975, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2165, -703.253295, 2595.462402, 1005.128417, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1714, -702.705932, 2594.966796, 1005.128417, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1714, -702.656250, 2597.007568, 1005.128417, 0.000000, 0.000000, -20.900018, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2181, -704.316894, 2600.156250, 1005.128417, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2356, -703.825195, 2599.743164, 1005.128417, 0.000000, 0.000000, 3.900022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(16779, -703.024902, 2596.332031, 1008.670593, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1738, -699.551147, 2591.289794, 1005.648437, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2611, -707.175415, 2596.667968, 1007.464050, 0.000000, 0.000000, 450.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2596, -705.774536, 2600.352783, 1007.658325, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2596, -706.904418, 2597.842773, 1007.778442, 0.000000, 0.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1569, -710.013671, 2591.698730, 1005.113708, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19938, -707.033081, 2591.269531, 1006.808471, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19938, -707.033081, 2591.269531, 1007.418884, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1778, -707.604370, 2591.980468, 1005.114257, 0.000000, 0.000000, -81.799987, -1, -1, -1, 300.00, 300.00);

	//เกระลอยฟ้าอ้ายแกรม New By:Gram
    tmpobjid = CreateDynamicObject(19430, 361.411682, -2351.601074, 663.013000, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19430, 361.411682, -2348.110839, 663.013000, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19430, 361.411682, -2345.179687, 663.013000, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19355, 359.741516, -2348.540527, 663.883422, 0.000000, -90.200035, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19355, 359.741516, -2351.749755, 663.883422, 0.000000, -90.200035, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19355, 359.741516, -2345.351074, 663.883422, 0.000000, -90.200035, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19355, 356.251647, -2345.351074, 663.871643, 0.000000, -90.200035, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19355, 356.251647, -2348.550781, 663.871643, 0.000000, -90.200035, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19355, 356.251647, -2351.742187, 663.871643, 0.000000, -90.200035, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19430, 354.591674, -2351.601074, 662.982971, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19430, 354.591674, -2348.400634, 662.982971, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19430, 354.591674, -2345.198242, 662.982971, 90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19454, 358.717651, -2354.593750, 664.638793, 0.000000, 0.000000, 90.299995, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19454, 367.967315, -2354.542236, 664.638793, 0.000000, 0.000000, 90.299995, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19377, 358.501281, -2349.458740, 668.462829, -0.799997, -90.000045, 90.099983, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19377, 358.493621, -2345.385742, 668.462829, -0.799997, -90.000045, 90.099983, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19377, 358.559387, -2339.735839, 668.562805, -0.799996, -79.300003, 89.599990, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19377, 368.188171, -2339.803710, 668.697448, -0.799996, -79.300003, 89.599990, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19377, 368.119903, -2349.440917, 668.597717, -0.799996, -90.000045, 90.099983, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19377, 368.112182, -2345.336914, 668.597717, -0.799996, -90.000045, 90.099983, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19454, 358.717651, -2354.593750, 668.138244, 0.000000, 0.000000, 90.299995, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19454, 367.967285, -2354.542236, 668.109008, 0.000000, 0.000000, 90.299995, -1, -1, -1, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
    tmpobjid = CreateDynamicObject(19536, 416.343017, -2326.952148, 662.897583, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1408, 475.868591, -2314.096435, 663.448242, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 468.976745, -2296.481689, 665.546569, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1408, 470.388610, -2314.096435, 663.448242, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1408, 464.958648, -2314.096435, 663.448242, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1408, 478.616394, -2311.492675, 663.448242, 0.000000, 0.000000, 90.199890, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1408, 462.645690, -2300.494140, 663.448242, 0.000000, 0.000000, -91.300048, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1408, 478.597106, -2306.012451, 663.448242, 0.000000, 0.000000, 90.199890, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1408, 478.578063, -2300.521484, 663.448242, 0.000000, 0.000000, 90.199890, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3383, 463.597320, -2355.049316, 662.870483, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 449.313232, -2356.901123, 665.498840, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 468.933013, -2356.901123, 665.498840, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 429.683349, -2356.901123, 665.519042, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 410.063385, -2356.901123, 665.529296, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 390.443389, -2356.901123, 665.529296, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 370.843383, -2356.901123, 665.538391, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 363.693359, -2356.901123, 665.538574, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3383, 467.737152, -2355.049316, 662.879394, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 451.876647, -2296.481689, 665.546569, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1408, 462.399749, -2311.341796, 663.448242, 0.000000, 0.000000, -91.300048, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 397.776733, -2296.481689, 665.556457, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 378.166809, -2296.481689, 665.556213, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 363.706665, -2296.481689, 665.556640, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3515, 416.171203, -2326.937988, 663.767883, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 432.246734, -2296.481689, 665.546569, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 360.799499, -2352.101074, 662.882690, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 360.799499, -2346.692138, 662.882690, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 356.729492, -2346.692138, 662.882690, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 356.719757, -2352.103271, 662.882690, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(7093, 478.426666, -2352.437255, 672.819213, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(616, 477.949890, -2313.440429, 662.884155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 478.712860, -2353.865966, 663.430541, 0.000000, 0.000000, 89.399986, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 478.756866, -2349.677001, 663.430541, 0.000000, 0.000000, 89.399986, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 478.791015, -2345.468505, 663.430541, 0.000000, 0.000000, 90.099975, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 478.795440, -2341.239990, 663.430541, 0.000000, 0.000000, 90.199974, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 478.799468, -2337.042480, 663.430541, 0.000000, 0.000000, 89.899978, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 478.765899, -2316.293701, 663.430541, 0.000000, 0.000000, 90.099975, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 478.773223, -2320.503662, 663.430541, 0.000000, 0.000000, 90.099975, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 478.780426, -2324.694580, 663.430541, 0.000000, 0.000000, 90.099975, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 478.787628, -2328.893310, 663.430541, 0.000000, 0.000000, 90.099975, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 467.769714, -2351.270263, 662.902709, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 463.699676, -2351.270263, 662.902709, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(9019, 465.880950, -2345.660156, 664.613342, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(14780, 502.272979, -2301.369384, 663.719360, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19536, 557.972778, -2326.952148, 662.897583, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19588, 487.244018, -2332.663818, 663.916442, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2773, 465.707550, -2352.809082, 663.430969, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2773, 465.707550, -2350.468750, 663.430969, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19815, 465.598937, -2356.089599, 665.217407, 0.000000, 0.000000, 179.799987, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19315, 475.879943, -2300.734619, 663.372497, 0.000000, 0.000000, -139.700012, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19315, 475.932464, -2310.688964, 663.372497, 0.000000, 0.000000, -179.700012, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19315, 472.025024, -2309.270019, 663.372497, 0.000000, 0.000000, 151.500000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19315, 474.145812, -2305.380371, 663.372497, 0.000000, 0.000000, 59.100028, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19315, 469.654754, -2301.201904, 663.372497, 0.000000, 0.000000, 122.199996, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19837, 473.927490, -2307.331298, 662.878234, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19837, 473.927490, -2303.919433, 662.878234, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19837, 473.927490, -2303.448974, 662.878234, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19837, 476.527465, -2303.448974, 662.878234, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19837, 469.287445, -2300.119628, 662.878234, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19837, 472.627593, -2299.631347, 662.878234, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19838, 469.868316, -2306.776855, 662.848571, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19838, 471.428344, -2308.037597, 662.848571, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19838, 471.428344, -2303.617431, 662.848571, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19838, 475.088409, -2311.178955, 662.848571, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19838, 470.898498, -2311.178955, 662.848571, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(673, 468.211303, -2298.315429, 662.907470, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(673, 472.021240, -2306.056640, 662.907470, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(672, 356.699645, -2300.526367, 663.792358, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3858, 353.890533, -2347.421142, 665.716857, 0.000000, 0.000000, -45.000007, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 364.869537, -2346.675292, 662.882690, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 368.929565, -2346.683105, 662.882690, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1696, 359.139648, -2341.337890, 662.964477, 0.000000, 0.000000, -179.799942, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1696, 357.539672, -2341.342041, 662.964477, 0.000000, 0.000000, -179.799942, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3440, 372.613128, -2354.358154, 666.211181, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3440, 372.613128, -2354.358154, 661.461608, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3440, 372.613128, -2340.295654, 661.461608, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3440, 372.613128, -2340.295654, 666.191101, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 364.869537, -2352.085693, 662.882690, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 368.929534, -2352.085693, 662.882690, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 368.278411, -2341.935302, 662.882690, 0.000000, 0.000000, 90.099998, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 362.868438, -2341.945556, 662.882690, 0.000000, 0.000000, 90.099998, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 357.448547, -2341.956542, 662.882690, 0.000000, 0.000000, 90.099998, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2773, 362.577301, -2353.353027, 663.437866, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2773, 362.577301, -2350.993408, 663.437866, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2773, 362.577301, -2348.623779, 663.437866, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2773, 362.577301, -2346.234130, 663.437866, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2773, 362.577301, -2343.863769, 663.437866, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2773, 362.577301, -2341.482177, 663.437866, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 364.610168, -2339.993408, 663.416320, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 368.800048, -2339.993408, 663.416320, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2762, 432.524078, -2352.180908, 663.304321, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2762, 435.434020, -2352.180908, 663.304321, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2762, 438.414062, -2352.180908, 663.304321, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2121, 432.704498, -2350.654296, 663.400573, 0.000000, 0.000000, -18.899999, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2121, 435.667999, -2350.567382, 663.400573, 0.000000, 0.000000, -1.600003, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2121, 438.557342, -2350.722167, 663.400573, 0.000000, 0.000000, 0.299995, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2121, 432.450256, -2353.759277, 663.407653, 0.000000, 0.000000, 177.800003, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2121, 435.348358, -2353.868652, 663.407653, 0.000000, 0.000000, 177.800003, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2121, 438.345703, -2353.741943, 663.407653, 0.000000, 0.000000, 177.800003, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 354.632598, -2307.558105, 665.540710, 0.000000, 0.000000, 90.000007, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 354.632598, -2327.189208, 665.540710, 0.000000, 0.000000, 90.000007, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(626, 354.523437, -2339.906250, 664.931091, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(638, 369.544738, -2340.467773, 663.567626, 0.000000, 0.000000, 89.400016, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(638, 355.187133, -2338.581298, 663.593688, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 387.602508, -2346.391113, 665.540710, 0.000000, 0.000000, 90.000007, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 387.602508, -2307.568847, 665.540710, 0.000000, 0.000000, 90.000007, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 455.812194, -2346.329345, 665.540710, 0.000000, 0.000000, 90.000007, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1723, 515.710937, -2310.297607, 662.865966, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1724, 514.148742, -2310.304931, 662.844360, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1724, 518.258605, -2310.304931, 662.844360, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3092, 516.590454, -2312.011230, 663.104614, 45.199985, 89.399971, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1568, 417.314483, -2298.068359, 662.897583, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3524, 513.791870, -2307.459228, 665.632995, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3524, 519.372009, -2307.459228, 665.632995, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19966, 514.072387, -2308.752685, 662.845642, 0.000000, 0.000000, 13.300001, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2098, 516.692016, -2309.503173, 664.841003, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18690, 514.613098, -2308.426757, 661.352172, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3507, 497.187072, -2297.360351, 662.897949, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(982, 495.551025, -2308.616699, 663.569519, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(984, 495.521942, -2340.598876, 663.495666, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(984, 495.521942, -2324.578857, 663.495666, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(984, 495.521942, -2351.747314, 663.495666, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18690, 518.353332, -2308.426757, 661.352172, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1568, 413.514526, -2298.068359, 662.897583, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(624, 498.050903, -2357.480957, 662.126220, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3409, 452.506927, -2347.975585, 662.817504, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(624, 466.642700, -2315.382568, 662.051086, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(822, 451.206665, -2351.062988, 663.937561, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(804, 463.919860, -2299.515625, 663.821472, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1597, 382.002441, -2353.911376, 665.517150, 0.000000, 0.000000, 89.900047, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 374.432098, -2353.667236, 663.517211, 0.000000, 0.000000, 89.999984, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(626, 371.553863, -2353.717773, 664.917358, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(626, 388.122344, -2336.247558, 664.907287, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(626, 388.297698, -2317.875244, 664.917114, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3409, 452.507812, -2343.385498, 662.817504, 0.000000, 0.000000, -0.099999, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3409, 452.515808, -2338.755371, 662.817504, 0.000000, 0.000000, -0.099999, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(822, 451.206665, -2353.984619, 663.937561, 0.000000, 0.000000, -23.200000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19588, 415.165435, -2287.430908, 663.888183, 0.000000, 0.000000, -88.399917, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3095, 410.404602, -2274.595458, 662.447570, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3095, 419.404571, -2274.595458, 662.447570, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3715, 415.143280, -2298.461669, 672.012451, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 425.731475, -2298.353271, 663.567504, 0.000000, 0.000000, -89.700027, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(640, 404.431457, -2298.444824, 663.567504, 0.000000, 0.000000, -89.700027, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(630, 407.463195, -2298.448974, 663.847412, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(630, 422.863250, -2298.448974, 663.847412, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 406.035430, -2272.382812, 663.533203, 0.000000, 0.000000, -90.000015, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 405.985443, -2277.002685, 663.503173, 0.000000, 0.000000, -90.000015, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 408.095367, -2270.293212, 663.522705, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 412.295227, -2270.293212, 663.522705, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 416.485168, -2270.293212, 663.522705, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 420.695098, -2270.293212, 663.522705, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 421.805114, -2270.293212, 663.522705, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 423.875579, -2272.342773, 663.503173, 0.000000, 0.000000, -90.000015, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 423.875579, -2276.992187, 663.503173, 0.000000, 0.000000, -90.000015, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 421.845916, -2279.062500, 663.472900, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 418.305908, -2279.062500, 663.472900, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 407.996032, -2279.062500, 663.472900, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(970, 411.546051, -2279.062500, 663.472900, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(638, 406.425689, -2277.293701, 663.686340, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(638, 406.425842, -2274.614257, 663.686340, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(638, 406.425689, -2271.934082, 663.686340, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(638, 423.435638, -2271.934082, 663.686340, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(638, 423.435638, -2274.613769, 663.686340, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(638, 423.435638, -2277.286376, 663.686340, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19332, 353.924865, -2338.173339, 733.522827, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19336, 447.740661, -2394.490234, 752.201354, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19338, 508.318481, -2452.764160, 836.380126, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19337, 548.226684, -2353.607421, 737.277404, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19335, 463.942291, -2306.473144, 722.398376, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(7093, 389.097778, -2294.671630, 672.868591, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1257, 398.345031, -2354.829833, 664.072021, 0.000000, 0.000000, -88.300033, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1257, 403.402648, -2354.678222, 664.072021, 0.000000, 0.000000, -88.300033, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1342, 428.464904, -2354.365966, 663.920104, 0.000000, 0.000000, 89.299934, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1568, 457.390747, -2355.832519, 662.905151, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1568, 461.970733, -2302.999511, 662.905151, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1568, 461.970733, -2309.091552, 662.905151, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1568, 389.288024, -2355.822265, 662.883850, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1568, 389.218048, -2336.763916, 662.883850, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1231, 356.905517, -2298.243408, 665.638305, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1231, 373.385040, -2340.273193, 665.638305, 0.000000, 0.000000, -90.099983, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1231, 373.360473, -2354.363281, 665.638305, 0.000000, 0.000000, -90.099983, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 505.425354, -2356.935546, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 525.045349, -2356.935546, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 544.685119, -2356.935546, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 564.315002, -2356.935546, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 583.964904, -2356.935546, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 603.614929, -2356.935546, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 610.545532, -2356.935546, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 610.545532, -2296.451904, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 571.306152, -2296.451904, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 590.936035, -2296.451904, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 551.686035, -2296.451904, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 532.066711, -2296.451904, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 512.426818, -2296.451904, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3660, 505.326660, -2296.451904, 665.552856, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(11738, 515.612487, -2312.434570, 662.960205, 0.000000, 0.000000, 10.499999, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1597, 496.211151, -2338.985595, 665.497375, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2905, 517.102783, -2312.646728, 662.931579, 0.000000, 0.000000, 58.300006, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(11738, 516.716857, -2311.375244, 662.940185, 0.000000, 0.000000, -25.400001, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(339, 518.234252, -2310.758544, 663.836914, -7.199995, 179.500000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 515.823608, -2312.251708, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19279, 361.338439, -2354.384765, 668.128662, -125.500205, -178.500198, -179.300003, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 517.213623, -2312.481933, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 517.013427, -2312.481933, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 517.013427, -2312.852294, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 517.213623, -2312.652099, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 516.703552, -2312.652099, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 361.561828, -2343.520507, 662.929077, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 516.883728, -2312.131591, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 361.561828, -2345.589843, 662.929077, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 516.883728, -2311.330810, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 361.561828, -2347.701904, 662.929077, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 516.623474, -2311.701171, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 515.693176, -2312.121582, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 515.933349, -2311.841308, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 515.933349, -2312.431884, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 516.573425, -2312.431884, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 361.561828, -2349.783203, 662.929077, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 361.561828, -2351.824951, 662.929077, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 516.193420, -2312.081787, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 354.379333, -2341.277343, 668.279602, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 354.379333, -2343.258056, 668.279602, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 354.379333, -2345.290039, 668.279602, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 517.063537, -2311.511230, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 515.973449, -2311.511230, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19836, 515.973449, -2311.511230, 662.982971, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1685, 496.574676, -2299.151123, 663.670776, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1685, 496.574676, -2301.221435, 663.670776, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1685, 496.574676, -2303.213134, 663.670776, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1685, 496.574676, -2305.004882, 663.670776, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1685, 496.603729, -2307.140136, 663.670776, 0.000000, 0.000000, 10.999994, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3383, 498.067352, -2339.340087, 662.904052, 0.000000, 0.000000, -89.699981, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2188, 503.116333, -2354.503662, 663.849365, 0.000000, 0.000000, -178.300033, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 354.379333, -2347.220703, 668.279602, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 354.379333, -2349.251464, 668.279602, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 354.379333, -2351.222167, 668.279602, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1256, 496.036834, -2351.483398, 663.595703, 0.000000, 0.000000, 179.899932, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18652, 354.379333, -2353.202880, 668.279602, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19279, 358.578521, -2354.362548, 668.169250, -125.500205, -178.500198, -179.300003, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19279, 355.755615, -2354.500488, 668.095520, -125.500205, -178.500198, -179.300003, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(7093, 478.426666, -2294.747070, 672.819213, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1256, 496.041503, -2348.712646, 663.595703, 0.000000, 0.000000, 179.899932, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1256, 496.046142, -2345.960205, 663.595703, 0.000000, 0.000000, 179.899932, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(616, 552.248779, -2299.284667, 662.831115, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(726, 545.004028, -2355.167480, 662.877380, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(7093, 356.296722, -2294.747070, 672.819213, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(7093, 356.296722, -2352.477294, 672.819213, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(7093, 386.416625, -2352.477294, 672.819213, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(7093, 496.936584, -2352.477294, 672.819213, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(731, 596.745910, -2352.056640, 662.877563, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(7093, 619.656860, -2296.205078, 672.819213, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(7093, 619.656860, -2352.386230, 672.819213, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(782, 617.114990, -2354.965332, 662.897155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(782, 608.754394, -2354.965332, 662.897155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(782, 599.794372, -2354.965332, 662.897155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1568, 389.218048, -2317.112792, 662.883850, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1568, 389.218048, -2298.472167, 662.883850, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19128, 367.255218, -2299.601318, 662.855468, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19128, 371.225128, -2299.601318, 662.855468, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19128, 375.204803, -2299.601318, 662.855468, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19128, 375.204803, -2303.610839, 662.855468, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19128, 371.234832, -2303.610839, 662.855468, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19128, 367.275054, -2303.610839, 662.855468, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19817, 361.009918, -2311.556640, 662.892822, 0.000000, 0.000000, 88.999992, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19817, 360.930145, -2316.128173, 662.892822, 0.000000, 0.000000, 88.999992, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19899, 356.453857, -2319.264404, 662.879150, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19899, 356.453857, -2308.284423, 662.879150, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19898, 358.323394, -2311.719970, 663.000976, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19898, 359.203399, -2311.329589, 663.000976, 0.000000, 0.000000, -163.999969, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19898, 359.025634, -2311.855957, 663.000976, 0.000000, 0.000000, 50.400085, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(772, 496.491241, -2308.815429, 662.867553, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(772, 496.491241, -2343.858642, 662.867553, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(705, 409.884674, -2351.808837, 662.957702, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(715, 440.596313, -2299.905517, 671.157043, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(870, 497.083526, -2310.262695, 663.097595, 0.000000, 0.000000, -76.200004, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(870, 497.094329, -2312.559570, 663.097595, 0.000000, 0.000000, -102.799980, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1597, 496.211151, -2325.665039, 665.497375, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1597, 496.211151, -2315.834472, 665.497375, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19833, 475.151397, -2305.765625, 662.897583, 0.000000, 0.000000, -45.400001, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19833, 474.060852, -2311.040039, 662.897583, 0.000000, 0.000000, -125.800010, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19833, 469.810821, -2307.973388, 662.897583, 0.000000, 0.000000, -106.300025, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19833, 466.725708, -2300.584960, 662.897583, 0.000000, 0.000000, 57.999992, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19833, 472.985992, -2299.379394, 662.897583, 0.000000, 0.000000, -21.100000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 435.181762, -2352.617919, 662.897583, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3505, 477.547973, -2316.051025, 662.897583, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 439.261383, -2352.617919, 662.897583, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 431.121490, -2352.617919, 662.897583, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3096, 373.226257, -2348.761230, 668.657165, 0.000000, 0.000000, 90.099998, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(9833, 371.085876, -2301.056152, 665.867370, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(18761, 389.065124, -2327.102783, 667.907409, 0.000000, 0.000000, 89.600021, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2773, 416.797485, -2297.016357, 663.437866, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2773, 413.897491, -2297.016357, 663.437866, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19898, 359.462768, -2316.331298, 663.000976, 0.000000, 0.000000, 50.400085, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19898, 358.797821, -2315.897949, 663.000976, 0.000000, 0.000000, -27.499914, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19898, 359.231903, -2315.778320, 662.950988, 0.000000, 0.000000, -161.999908, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19917, 356.609924, -2314.120605, 662.921997, 0.000000, 0.000000, -90.199974, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19917, 356.599151, -2311.468994, 662.921997, 0.000000, 0.000000, -90.199974, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19608, 526.993225, -2300.669677, 662.924011, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19609, 524.515380, -2299.864257, 662.964660, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19610, 527.204162, -2302.217773, 664.697265, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19611, 527.202453, -2302.177001, 663.076110, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19613, 523.509094, -2302.367919, 662.957397, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19613, 530.609436, -2302.367919, 662.957397, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(630, 530.919982, -2303.327392, 663.894104, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(630, 523.330322, -2303.327392, 663.894104, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 414.819793, -2274.399902, 662.982238, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 410.749847, -2274.399902, 662.982238, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(2898, 418.889801, -2274.399902, 662.982238, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1598, 422.482971, -2331.634765, 663.188049, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1598, 430.083007, -2325.514648, 663.188049, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1598, 402.723052, -2330.314697, 663.188049, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1598, 402.723052, -2312.905029, 663.188049, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1598, 437.313049, -2312.905029, 663.188049, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1598, 443.733001, -2339.015136, 663.188049, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1598, 450.202972, -2322.815429, 663.188049, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1598, 419.083007, -2311.665527, 663.188049, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(16151, 546.995422, -2298.776855, 663.226562, 0.000000, 0.000000, 90.399993, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3425, 559.603759, -2354.684326, 674.125305, -0.300000, 0.000000, 90.599899, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 590.935424, -2352.079345, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 585.324951, -2352.079345, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 579.872314, -2352.079345, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 574.331970, -2352.079345, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 568.321166, -2352.079345, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 562.761901, -2347.967285, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 568.731750, -2345.076171, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 575.521606, -2345.076171, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3276, 594.257080, -2348.645507, 663.771545, 0.000000, 0.000000, 88.999961, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3276, 594.315246, -2341.285888, 663.771545, 0.000000, 0.000000, 88.999961, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 582.201721, -2345.076171, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 588.682128, -2345.076171, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 590.632202, -2338.653808, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 584.292663, -2338.653808, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 565.323120, -2338.653808, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 577.712158, -2338.653808, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(808, 571.862487, -2338.653808, 664.132324, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(12957, 558.979797, -2344.051269, 663.620483, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(12957, 554.950866, -2347.878173, 663.620483, 0.000000, 0.000000, -26.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3374, 548.126098, -2353.530517, 664.372924, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3374, 552.335693, -2353.530517, 664.372924, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1226, 555.836547, -2299.617675, 666.697082, 0.000000, 0.000000, 92.599967, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1226, 576.624877, -2299.483398, 666.697082, 0.000000, 0.000000, 90.699996, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1226, 601.224426, -2299.300292, 666.697082, 0.000000, 0.000000, 90.699996, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1568, 542.789733, -2298.283935, 662.957641, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1568, 531.620239, -2298.283935, 662.877563, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19076, 523.298645, -2354.759033, 662.897583, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1223, 594.243103, -2355.977050, 662.833740, 0.000000, 0.000000, 88.799957, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1223, 562.797790, -2355.938964, 662.833740, 0.000000, 0.000000, 88.799957, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1681, 600.453125, -2186.288330, 665.104797, 0.000000, 0.000000, -179.399902, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(8355, 600.450927, -2228.236328, 662.998352, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1723, 597.434265, -2197.237548, 663.012145, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1724, 599.969055, -2197.224853, 662.992553, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1723, 601.514343, -2197.237548, 663.012145, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19833, 466.789611, -2312.047363, 662.897583, 0.000000, 0.000000, -147.900039, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(19833, 465.832244, -2304.857177, 662.897583, 0.000000, 0.000000, -67.700073, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(8623, 416.239776, -2327.061767, 663.527404, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(9152, 416.103637, -2327.152343, 663.614746, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3505, 476.697998, -2354.393554, 662.897583, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(3505, 453.737976, -2354.393554, 662.897583, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1257, 445.082092, -2355.165771, 664.123596, 0.000000, 0.000000, -90.299957, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1340, 425.518249, -2354.397216, 663.931640, 0.000000, 0.000000, 90.500000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1341, 422.674743, -2354.604492, 663.789367, 0.000000, 0.000000, 89.499961, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(782, 608.754394, -2348.103027, 662.897155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(782, 617.094055, -2348.103027, 662.897155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(782, 599.654418, -2348.103027, 662.897155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(782, 599.654418, -2339.341796, 662.897155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(782, 608.554565, -2339.341796, 662.897155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(782, 616.974365, -2339.341796, 662.897155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(620, 615.425720, -2303.753906, 662.932189, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(624, 607.603454, -2304.051757, 662.231567, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(624, 599.703674, -2311.049804, 662.231567, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(620, 599.846435, -2303.753906, 662.932189, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(620, 608.436523, -2314.055664, 662.932189, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(620, 592.706420, -2307.165527, 662.902160, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(620, 587.136413, -2312.485839, 662.902160, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(624, 586.363403, -2303.619873, 662.231567, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(624, 616.043395, -2311.018310, 662.231567, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(822, 589.290100, -2300.685058, 662.672729, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(822, 595.930053, -2308.067626, 662.672729, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(822, 613.239746, -2302.347656, 662.672729, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(822, 613.239746, -2314.496826, 662.672729, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(822, 602.888244, -2305.646972, 662.672729, 0.000000, 0.000000, 34.499996, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(822, 606.067687, -2311.967529, 662.672729, 0.000000, 0.000000, 34.499996, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(822, 585.943542, -2309.805175, 662.672729, 0.000000, 0.000000, 34.499996, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1410, 584.712341, -2314.342041, 663.597351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1410, 582.204895, -2311.762207, 663.597351, 0.000000, 0.000000, -90.500000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1410, 582.306335, -2300.172607, 663.597351, 0.000000, 0.000000, -90.500000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1410, 582.265136, -2304.853515, 663.597351, 0.000000, 0.000000, -90.500000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1410, 589.402221, -2314.342041, 663.597351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1410, 594.122741, -2314.342041, 663.597351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1410, 600.852661, -2314.342041, 663.597351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1410, 605.602233, -2314.342041, 663.597351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1410, 611.062133, -2314.342041, 663.597351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(1410, 617.862304, -2314.342041, 663.597351, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
    tmpobjid = CreateDynamicObject(9482, 477.829864, -2332.708007, 669.477355, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 


//ร้านสกิน

	//ร้านขายสกิน VEGAS
	//new tmpobjid;
	tmpobjid = CreateObject(1491, 1295.329223, -1864.439575, 12.546875, 0.000000, 0.000000, 0.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	SetObjectMaterial(tmpobjid, 2, 9514, "711_sfw", "pcut_bot_law", 0x00000000);
	tmpobjid = CreateObject(19387, 1296.097900, -1864.456298, 14.286876, 0.000000, 0.000000, 90.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFFCC00FF);
	tmpobjid = CreateObject(19430, 1299.981323, -1864.482666, 12.436333, 90.000000, 360.000000, 90.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1301.531494, -1864.482666, 12.436333, 90.000000, 360.000000, 90.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1292.141723, -1864.482666, 12.436333, 90.000000, 360.000000, 90.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1290.661010, -1864.482666, 12.436333, 90.000000, 360.000000, 90.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1296.112060, -1864.452636, 16.816343, 90.000000, 360.000000, 90.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1299.602172, -1864.452636, 16.816343, 90.000000, 360.000000, 90.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1292.622680, -1864.452636, 16.816343, 90.000000, 360.000000, 90.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1301.222412, -1864.452636, 16.816343, 90.000000, 360.000000, 90.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1290.862548, -1864.452636, 16.816343, 90.000000, 360.000000, 90.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1302.992553, -1866.642944, 12.436333, 90.000000, 360.000000, 180.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1302.992553, -1870.082397, 12.436333, 90.000000, 360.000000, 180.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1302.992553, -1872.362915, 12.436333, 90.000000, 360.000000, 360.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1303.002807, -1866.112426, 16.816343, 90.000000, 360.000000, 180.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1303.002807, -1869.582397, 16.816343, 90.000000, 360.000000, 180.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1303.002807, -1872.281982, 16.816343, 90.000000, 360.000000, 180.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1300.902343, -1874.053710, 12.436333, 90.000000, 360.000000, 450.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1297.412231, -1874.053710, 12.436333, 90.000000, 360.000000, 450.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1293.982421, -1874.053710, 12.436333, 90.000000, 360.000000, 450.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1291.102294, -1874.053710, 12.436333, 90.000000, 360.000000, 450.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1289.141967, -1872.103759, 12.436333, 90.000000, 360.000000, 540.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1289.141967, -1868.693481, 12.436333, 90.000000, 360.000000, 540.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1289.141967, -1866.613159, 12.436333, 90.000000, 360.000000, 540.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1301.352294, -1874.071533, 16.816343, 90.000000, 360.000000, 270.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1297.892089, -1874.071533, 16.816343, 90.000000, 360.000000, 270.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1294.412109, -1874.071533, 16.816343, 90.000000, 360.000000, 270.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1290.971923, -1874.071533, 16.816343, 90.000000, 360.000000, 270.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1289.171875, -1872.401611, 16.816343, 90.000000, 360.000000, 360.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1289.171875, -1868.941528, 16.816343, 90.000000, 360.000000, 360.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19430, 1289.171875, -1866.241455, 16.816343, 90.000000, 360.000000, 360.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(19449, 1296.126464, -1863.296142, 19.352935, 0.000000, 0.000000, 90.000000, 300.00); 
	SetObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFF000000);
	tmpobjid = CreateObject(7900, 1296.090698, -1863.609252, 19.418319, 0.000000, 0.000000, 180.000000, 300.00); 
	SetObjectMaterialText(tmpobjid, "SKIN.SHOP", 0, 70, "Calibri", 30, 0, 0xFFFFFFFF, 0x00000000, 1);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateObject(19866, 1302.495971, -1862.354980, 12.495885, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(19866, 1289.955566, -1862.354980, 12.495885, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(19376, 1296.104248, -1869.357910, 12.486872, 0.000000, 630.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(19376, 1297.763793, -1869.357910, 12.486872, 0.000000, 630.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(19376, 1294.334594, -1869.357910, 12.486872, 0.000000, 630.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(1649, 1300.452026, -1864.487304, 14.567331, 0.000000, 0.000000, 180.000000, 300.00); 
	tmpobjid = CreateObject(1649, 1300.452026, -1864.487304, 14.567331, 0.000000, 0.000000, 360.000000, 300.00); 
	tmpobjid = CreateObject(1649, 1291.682128, -1864.487304, 14.687332, 0.000000, 0.000000, 360.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1297.881591, -1864.532470, 13.606875, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1297.881591, -1864.532470, 15.826877, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1294.260986, -1864.532470, 13.606875, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1294.261718, -1864.532470, 15.826877, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1289.111206, -1864.532470, 13.606875, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1302.979370, -1864.532470, 13.606875, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1302.979370, -1864.532470, 15.806879, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1289.111206, -1864.532470, 15.836874, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(1649, 1291.682128, -1864.487304, 14.687332, 0.000000, 0.000000, 180.000000, 300.00); 
	tmpobjid = CreateObject(19377, 1303.006591, -1869.187011, 12.348903, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1302.979370, -1874.112304, 13.606875, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1302.979370, -1874.112304, 15.816875, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(19377, 1298.286132, -1874.097045, 12.348903, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(19377, 1293.905761, -1874.097045, 12.348903, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(19377, 1289.115356, -1869.256347, 12.348903, 0.000000, 0.000000, 180.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1289.088867, -1874.112304, 13.606875, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1289.088867, -1874.112304, 15.846874, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1294.261718, -1864.532470, 16.476877, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1289.111206, -1864.532470, 16.476879, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1302.979370, -1874.112304, 13.606875, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1297.881591, -1864.532470, 16.436880, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1302.979370, -1864.532470, 16.476881, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1302.979370, -1874.112304, 16.476881, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(9131, 1289.088867, -1874.112304, 16.456874, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(19377, 1293.468872, -1867.768188, 17.540588, 0.000000, 90.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(19377, 1298.801269, -1867.768188, 17.540588, 0.000000, 90.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(19377, 1293.468872, -1869.978881, 17.540588, 0.000000, 90.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(19377, 1298.801269, -1869.978027, 17.540588, 0.000000, 90.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(640, 1302.335693, -1861.776245, 13.139985, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(640, 1290.175415, -1861.776245, 13.139985, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(1232, 1299.419799, -1862.164184, 14.278068, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(1232, 1292.969482, -1862.164184, 14.278068, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2576, 1302.432373, -1870.434936, 12.572812, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2708, 1302.359985, -1868.440307, 12.572811, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2708, 1302.359985, -1865.530517, 12.572811, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2392, 1302.142822, -1869.773071, 14.382812, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2392, 1302.142822, -1868.622558, 14.382812, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2382, 1302.182861, -1866.781738, 14.342814, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2382, 1302.182861, -1865.791625, 14.342814, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2384, 1302.290893, -1869.307983, 13.112807, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2384, 1302.290893, -1868.467895, 13.112807, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2384, 1302.290893, -1869.958007, 13.112807, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2386, 1302.289916, -1865.649780, 13.142815, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2386, 1302.289916, -1866.309814, 13.142815, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2386, 1302.289916, -1866.900268, 13.142815, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2411, 1302.597290, -1872.762207, 14.052812, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2372, 1299.848754, -1866.314086, 12.552811, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(2689, 1298.448242, -1866.546752, 13.202811, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2689, 1298.598388, -1866.546752, 13.202811, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2689, 1298.838378, -1866.546752, 13.202811, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2689, 1299.018554, -1866.546752, 13.202811, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2689, 1299.258789, -1866.546752, 13.202811, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2689, 1299.468994, -1866.546752, 13.202811, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2689, 1299.678955, -1866.546752, 13.202811, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2689, 1299.899047, -1866.546752, 13.202811, 0.000000, 0.000000, 270.000000, 300.00); 
	tmpobjid = CreateObject(2372, 1299.848754, -1868.964355, 12.552811, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(2392, 1299.040405, -1869.183715, 13.252808, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(2383, 1289.430541, -1865.879760, 15.292810, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2383, 1289.430541, -1865.879760, 14.222809, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2399, 1289.429321, -1867.461181, 15.265365, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(2399, 1289.429321, -1867.461181, 14.215364, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(2389, 1289.546630, -1866.666015, 15.242810, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(2389, 1289.546630, -1866.666015, 14.172809, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(2380, 1289.316772, -1869.436889, 13.972811, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(2025, 1289.746459, -1872.564575, 12.572810, 0.000000, 0.000000, 90.000000, 300.00); 
	tmpobjid = CreateObject(2604, 1295.626464, -1872.104614, 13.352807, 0.000000, 0.000000, 0.000000, 300.00); 
	tmpobjid = CreateObject(2375, 1293.065063, -1873.798461, 12.552807, 0.000000, 0.000000, 180.000000, 300.00); 
	tmpobjid = CreateObject(2375, 1292.834838, -1865.347412, 12.552807, 0.000000, 0.000000, 180.000000, 300.00); 
	// รพ.อ้ายแกรม Gram
    tmpobjid = CreateDynamicObject(19449,1181.050,-1385.076,12.097,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1171.440,-1385.076,12.097,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1161.880,-1385.076,12.097,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1170.820,-1381.356,17.597,0.000,0.000,89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1170.820,-1349.155,17.597,0.000,0.000,89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1175.561,-1354.005,17.647,0.000,-0.000,179.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1175.561,-1363.546,17.647,0.000,-0.000,179.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1175.561,-1373.135,17.647,0.000,-0.000,179.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1175.561,-1379.666,12.797,90.000,0.000,540.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(18762,1185.371,-1384.500,14.987,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(18762,1185.371,-1378.560,14.987,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1382.670,17.986,90.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1382.670,17.986,90.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1161.076,-1382.670,17.986,90.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1377.690,17.986,89.999,89.999,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1377.690,17.986,89.999,89.999,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1161.076,-1377.690,17.986,89.999,89.999,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1372.701,17.986,89.999,89.999,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1372.701,17.986,89.999,89.999,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1367.751,17.986,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1367.751,17.986,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1362.771,17.986,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1362.771,17.986,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1357.800,17.986,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1357.800,17.986,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1382.670,18.966,89.999,89.999,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1382.670,18.966,89.999,89.999,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1161.076,-1382.670,18.966,89.999,89.999,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1377.690,18.966,89.999,89.999,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1377.690,18.966,89.999,89.999,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1161.076,-1377.690,18.966,89.999,89.999,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1372.701,18.966,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1372.701,18.966,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1367.751,18.966,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1367.751,18.966,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1362.771,18.966,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1362.771,18.966,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1357.800,18.966,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1357.800,18.966,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1190.755,-1375.021,11.715,83.000,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.875,-1375.010,12.326,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(18762,1185.371,-1371.369,14.987,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(18762,1185.371,-1353.839,14.987,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1352.860,17.986,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1352.860,17.986,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.935,-1352.860,18.966,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1171.015,-1352.860,18.966,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObject(18762,1185.371,-1359.659,14.987,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1181.704,-1367.710,12.326,89.999,90.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1181.704,-1357.750,12.326,89.999,90.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1181.704,-1350.351,12.326,89.999,90.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1180.864,-1347.830,12.326,89.999,90.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1190.755,-1347.821,11.715,83.000,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1176.804,-1367.710,12.326,89.999,135.000,-44.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1176.804,-1357.750,12.326,89.999,135.000,-44.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1176.804,-1350.351,12.326,89.999,135.000,-44.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(18766,1170.915,-1375.010,12.326,89.999,90.000,-89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1175.671,-1364.166,14.497,0.000,0.000,540.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 7978, "vgssairport", "airportwindow02_128", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1170.820,-1381.356,14.127,0.000,0.000,89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1170.820,-1349.155,14.127,0.000,0.000,89.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1175.561,-1354.005,14.177,0.000,-0.000,179.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1175.561,-1363.546,14.177,0.000,-0.000,179.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1175.561,-1373.135,14.177,0.000,-0.000,179.999,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(18981,1114.137,-1372.825,12.249,360.000,90.000,360.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 6056, "venice_law", "stonewalls2", 0x00000000);
    tmpobjid = CreateDynamicObject(18981,1089.168,-1372.825,12.249,360.000,90.000,360.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 6056, "venice_law", "stonewalls2", 0x00000000);
    tmpobjid = CreateDynamicObject(18981,1089.168,-1347.875,12.249,360.000,90.000,360.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 6056, "venice_law", "stonewalls2", 0x00000000);
    tmpobjid = CreateDynamicObject(18981,1114.128,-1347.875,12.249,360.000,90.000,360.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 6056, "venice_law", "stonewalls2", 0x00000000);
    tmpobjid = CreateDynamicObject(18981,1089.168,-1323.205,12.249,0.000,90.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 6056, "venice_law", "stonewalls2", 0x00000000);
    tmpobjid = CreateDynamicObject(18981,1114.128,-1323.205,12.249,0.000,90.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 6056, "venice_law", "stonewalls2", 0x00000000);
    tmpobjid = CreateDynamicObject(18981,1089.168,-1303.416,12.249,0.000,90.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 6056, "venice_law", "stonewalls2", 0x00000000);
    tmpobjid = CreateDynamicObject(18981,1114.128,-1303.416,12.249,0.000,90.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 6056, "venice_law", "stonewalls2", 0x00000000);
    tmpobjid = CreateDynamicObject(1508,1175.820,-1364.156,14.476,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10763, "airport1_sfse", "ws_airportdoors1", 0x00000000);
    tmpobjid = CreateDynamicObject(19482,1185.964,-1375.150,18.947,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Pillbox Hill", 120, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(2254,1185.960,-1377.331,18.568,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 14811, "lee_strip2_1", "CJ_NEON_HEART", 0x00000000);
    tmpobjid = CreateDynamicObject(2254,1185.950,-1377.331,18.568,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 2702, "pick_up", "CJ_red_FELT", 0x00000000);
    tmpobjid = CreateDynamicObject(2254,1185.950,-1375.971,18.568,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(2254,1185.950,-1374.631,18.568,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(2254,1185.950,-1373.291,18.568,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19482,1185.964,-1375.150,18.947,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Pillbox Hill", 120, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1185.964,-1374.810,18.317,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Medical Center", 120, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1185.964,-1374.810,18.317,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Medical Center", 120, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1185.964,-1364.240,18.587,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "EMERGENCY", 90, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1185.964,-1359.200,18.587,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "RECCIVING", 90, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1185.964,-1355.600,18.587,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "UNIT", 90, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1185.964,-1364.240,18.587,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "EMERGENCY", 90, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1185.964,-1359.200,18.587,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "RECCIVING", 90, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1185.964,-1355.600,18.587,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "UNIT", 90, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(2254,1164.965,-1377.309,61.418,0.000,0.000,47.899,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 14811, "lee_strip2_1", "CJ_NEON_HEART", 0x00000000);
    tmpobjid = CreateDynamicObject(2254,1164.958,-1377.303,61.418,0.000,0.000,47.899,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 2702, "pick_up", "CJ_red_FELT", 0x00000000);
    tmpobjid = CreateDynamicObject(2254,1165.870,-1376.294,61.418,0.000,0.000,47.899,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(2254,1166.768,-1375.299,61.418,0.000,0.000,47.899,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(2254,1167.666,-1374.305,61.418,0.000,0.000,47.899,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    tmpobjid = CreateDynamicObject(19482,1166.430,-1375.694,61.797,0.000,0.000,-42.100,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Pillbox Hill", 120, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1166.658,-1375.442,61.167,0.000,0.000,-42.100,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Medical Center", 120, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1166.658,-1375.442,61.167,0.000,0.000,-42.100,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Medical Center", 120, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1166.430,-1375.694,61.797,0.000,0.000,-42.100,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Pillbox Hill", 120, "Ariel", 40, 1, 0xF0000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19449,1098.489,-1385.228,14.413,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "breezewall", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1088.869,-1385.228,14.413,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "breezewall", 0x00000000);
    tmpobjid = CreateDynamicObject(19449,1079.260,-1385.228,14.413,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "breezewall", 0x00000000);
    tmpobjid = CreateDynamicObject(16362,1088.989,-1365.555,15.789,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(19482,1130.994,-1386.216,14.862,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{ff00aa}YUKI MAPS", 50, "Ariel", 20, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19325,1130.991,-1386.195,12.476,90.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 19080, "laserpointer2", "laserbeam-2-64x64", 0x00000000);
    tmpobjid = CreateDynamicObject(19482,1130.994,-1386.216,14.862,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{ff00aa}YUKI MAPS", 50, "Ariel", 20, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1130.994,-1386.216,14.592,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{ff00aa}------------------------", 80, "Ariel", 30, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1130.994,-1386.216,14.092,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{ff00aa}Subscribe: DC Gaming", 120, "Ariel", 30, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(19482,1130.994,-1386.216,14.092,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{ff00aa}Subscribe: DC Gaming", 120, "Ariel", 30, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObject(3660,1123.385,-1376.005,15.369,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(3660,1123.385,-1356.386,15.369,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    tmpobjid = CreateDynamicObject(3660,1123.385,-1336.786,15.369,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    tmpobjid = CreateDynamicObject(4205,1433.085,-1473.859,16.332,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(4007,1158.750,-1373.131,-17.081,0.000,0.000,720.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(18981,1173.358,-1372.645,12.249,360.000,90.000,360.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(18981,1173.358,-1347.836,12.249,360.000,90.000,360.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(18981,1173.358,-1322.886,12.249,360.000,90.000,360.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(18981,1148.448,-1372.645,12.249,360.000,90.000,360.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(18981,1148.448,-1347.636,12.249,360.000,90.000,360.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(18981,1148.448,-1322.716,12.249,360.000,90.000,360.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(5720,1133.200,-1370.029,21.406,0.000,0.000,89.999,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(5720,1133.200,-1342.969,21.406,0.000,0.000,89.999,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(5720,1133.200,-1315.760,21.406,0.000,0.000,89.999,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(5720,1132.149,-1311.660,21.406,0.000,0.000,269.999,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(970,1185.217,-1368.800,13.270,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(970,1185.217,-1364.630,13.270,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(970,1185.217,-1360.470,13.270,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(970,1185.217,-1356.319,13.270,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(8041,1112.967,-1383.877,18.295,0.000,0.000,270.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(805,1185.133,-1368.969,13.446,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(805,1177.194,-1381.910,13.446,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(800,1180.677,-1380.585,14.329,0.000,0.000,180.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(3657,1176.050,-1372.334,13.116,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(3657,1176.050,-1357.104,13.116,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(3657,1176.050,-1351.834,13.116,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(805,1185.133,-1365.470,13.446,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(805,1185.133,-1361.959,13.446,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(1597,1172.251,-1339.524,15.359,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(19076,1152.629,-1341.530,12.579,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(19054,1153.167,-1341.867,13.289,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(19055,1152.757,-1340.989,13.019,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(19056,1152.463,-1342.017,12.919,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(932,1171.196,-1335.257,12.709,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(8041,1116.937,-1292.638,18.295,0.000,0.000,450.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(18284,1094.234,-1320.773,15.639,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(3881,1086.746,-1333.040,14.519,0.000,0.000,90.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(1597,1112.958,-1374.595,15.279,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(1294,1121.090,-1379.878,17.159,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(1294,1121.090,-1367.188,17.159,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(1294,1121.090,-1352.597,17.159,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(1294,1121.090,-1340.117,17.159,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(1294,1121.090,-1327.427,17.159,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);
    tmpobjid = CreateDynamicObject(1294,1121.090,-1312.836,17.159,0.000,0.000,0.000,-1,-1,-1,300.000,300.000);

	//แต่งงาน by:killer
	CreateDynamicObject(11697, 1241.00281, -2414.38843, 11.22550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11698, 1241.01929, -2409.75757, 10.84310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11698, 1241.01929, -2406.76563, 10.84310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11698, 1241.01929, -2403.90967, 10.84310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11698, 1241.01929, -2401.05371, 10.84310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11698, 1241.01929, -2398.19775, 10.84310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1472, 1241.02454, -2417.09155, 10.46369,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19378, 1241.22937, -2392.12451, 10.30390,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19378, 1251.59741, -2392.12451, 10.30390,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19378, 1231.02344, -2392.12451, 10.30390,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19378, 1231.02344, -2382.97437, 10.30390,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19378, 1241.22937, -2382.97461, 10.30390,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19378, 1251.59741, -2382.97461, 10.30390,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(3499, 1226.17102, -2396.33887, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1226.17102, -2390.66895, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1226.17102, -2384.72900, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1226.17102, -2378.51904, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1231.57104, -2396.33887, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1237.51099, -2396.33887, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1256.41101, -2378.51904, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1256.41101, -2384.72900, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1256.41101, -2390.66895, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1256.41101, -2396.33887, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1237.51099, -2378.51880, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1231.57104, -2378.51880, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1244.26099, -2396.33887, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1250.47095, -2396.33887, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1250.47095, -2378.51880, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3499, 1244.26099, -2378.51880, 4.90590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1472, 1245.89063, -2382.89355, 10.62450,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(18765, 1251.51709, -2387.10132, 8.58250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1472, 1245.89063, -2384.36865, 10.62450,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(18762, 1256.01440, -2382.60156, 12.73580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, 1256.01440, -2391.59766, 12.73580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19129, 1246.76794, -2387.52246, 10.28660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19129, 1235.94385, -2387.52246, 10.28660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1239.67175, -2415.80225, 11.35590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1240.16370, -2415.80225, 11.35590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1241.88574, -2415.80225, 11.35590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1242.37769, -2415.80225, 11.35590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1597, 1255.50940, -2387.01538, 13.32370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, 1256.01440, -2384.67651, 14.73730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1256.01440, -2389.43652, 14.73730,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3439, 1238.70874, -2395.51123, 14.42862,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3439, 1243.57068, -2395.51123, 14.42860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1246.21802, -2382.00952, 8.31715,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1246.21802, -2385.24243, 8.31720,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7093, 1252.75952, -2382.70483, 17.46754,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(7093, 1252.75952, -2391.60889, 17.46750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1232, 1226.26221, -2378.36035, 10.96429,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1226.26221, -2384.84033, 10.96430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1226.26221, -2390.78027, 10.96430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1226.26221, -2396.45020, 10.96430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1231.66223, -2396.45020, 10.96430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1250.56226, -2396.45020, 10.96430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1256.23230, -2396.45020, 10.96430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1256.23230, -2378.63013, 10.96430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1250.29236, -2378.63013, 10.96430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1244.35242, -2378.63013, 10.96430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1237.33240, -2378.63013, 10.96430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1231.66235, -2378.63013, 10.96430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, 1246.33203, -2388.69556, 10.84160,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3810, 1226.92773, -2390.74902, 12.54090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3810, 1226.92773, -2384.82104, 12.54090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3810, 1226.92773, -2378.27588, 12.54090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3810, 1226.92773, -2396.41479, 12.54090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2245, 1246.20605, -2391.78931, 10.60026,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2245, 1246.20605, -2385.64722, 10.60030,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19525, 1244.42395, -2388.68457, 11.61220,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2699, 1244.42883, -2388.69189, 11.00010,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19611, 1249.18762, -2387.58984, 11.08070,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19610, 1249.19617, -2387.58789, 12.71050,   40.00000, 0.00000, -90.00000);
	CreateDynamicObject(1368, 1234.73608, -2381.59741, 11.06130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 1231.90906, -2381.59741, 11.06130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 1229.08215, -2381.59741, 11.06130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 1229.08215, -2385.19556, 11.06130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 1229.08215, -2388.79370, 11.06130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 1229.08215, -2392.39160, 11.06130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 1231.90918, -2385.19556, 11.06130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 1231.90918, -2388.79370, 11.06130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 1231.90918, -2392.39160, 11.06130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 1234.73621, -2385.19556, 11.06130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 1234.73621, -2388.79370, 11.06130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 1234.73621, -2392.39160, 11.06130,   0.00000, 0.00000, 90.00000);

    //สถานีตำรวจ
	CreateDynamicObject(3985, 1479.56250, -1631.45313, 12.07810,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3975, 1578.46875, -1676.42188, 13.07030,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4186, 1479.55469, -1693.14063, 19.57810,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4150, 1532.05469, -1662.28906, 12.46090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3976, 1571.60156, -1675.75000, 35.67970,   0.00000, 0.00000, 0.00000);

	


		//afk
	CreateObject(15071, 471.00000, -2031.42090, 6.79360,   0.00000, 0.00000, 0.00000);
	CreateObject(14395, 408.02530, -2076.19019, 7.06000,   0.00000, 0.00000, 90.00000);
	CreateObject(14395, 407.70520, -2070.60620, 10.90000,   0.00000, 0.00000, 0.00000);
	CreateObject(14395, 415.08560, -2061.17676, 6.86000,   0.00000, 0.00000, -91.00000);
	CreateObject(14395, 415.35611, -2067.10498, 10.90000,   0.00000, 0.00000, -180.00000);

 
 //โรงพยาบาล
	CreateDynamicObject(9946, 1306.05847, -1315.05664, 12.62840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(9946, 1306.06213, -1360.71997, 12.62840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(9946, 1314.25281, -1315.22498, 12.60840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(9946, 1314.08484, -1360.64697, 12.60840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19430, 1294.19482, -1335.72412, 13.57169,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1282.26794, -1349.42456, 14.08970,   0.00000, 0.00000, 88.56290);
	CreateDynamicObject(19436, 1271.02856, -1349.81921, 14.09080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1279.05981, -1349.33118, 14.08970,   0.00000, 0.00000, 88.56290);
	CreateDynamicObject(19436, 1271.07874, -1325.83630, 14.09080,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1272.78528, -1369.53711, 14.02970,   0.00000, 0.00000, 88.56290);
	CreateDynamicObject(19363, 1272.64929, -1349.16382, 14.08970,   0.00000, 0.00000, 88.56290);
	CreateDynamicObject(19363, 1275.91602, -1326.64368, 14.08970,   0.00000, 0.00000, 88.56290);
	CreateDynamicObject(19363, 1275.86157, -1349.24487, 14.08970,   0.00000, 0.00000, 88.56290);
	CreateDynamicObject(19363, 1279.12280, -1326.73120, 14.08970,   0.00000, 0.00000, 88.56290);
	CreateDynamicObject(19363, 1282.32361, -1326.79919, 14.08970,   0.00000, 0.00000, 88.56290);
	CreateDynamicObject(9946, 1302.72180, -1338.46558, 12.68865,   0.00000, 0.00000, 89.79975);
	CreateDynamicObject(1692, 1292.34045, -1348.03552, 11.55640,   0.00000, -89.00000, 297.26401);
	CreateDynamicObject(1692, 1292.06470, -1328.55408, 11.55640,   0.00000, -89.00000, 50.08200);
	CreateDynamicObject(19430, 1294.26746, -1341.81873, 13.57169,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1523, 1294.18860, -1339.48926, 12.80900,   0.00000, 0.00000, 271.00000);
	CreateDynamicObject(1523, 1294.23743, -1339.55627, 12.80900,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1523, 1294.12708, -1336.51807, 12.80900,   0.00000, 0.00000, 271.00000);
	CreateDynamicObject(19430, 1294.17395, -1335.28650, 13.57169,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19430, 1294.20203, -1336.22021, 16.09170,   -90.30000, 0.00000, 0.00000);
	CreateDynamicObject(19430, 1294.24060, -1339.56543, 16.10219,   -90.30000, 0.00000, 0.70000);
	CreateDynamicObject(18014, 1285.02148, -1335.89868, 13.20030,   0.00000, 0.00000, 91.01540);
	CreateDynamicObject(18014, 1287.66504, -1337.75842, 13.14030,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18014, 1275.86816, -1339.80786, 12.76030,   0.00000, 0.00000, 91.01535);
	CreateDynamicObject(18014, 1275.88123, -1336.03906, 12.76030,   0.00000, 0.00000, 91.01535);
	CreateDynamicObject(18014, 1280.43518, -1335.95898, 12.76030,   0.00000, 0.00000, 91.01535);
	CreateDynamicObject(18014, 1285.05542, -1339.64343, 12.96030,   0.00000, 0.00000, 91.01540);
	CreateDynamicObject(18014, 1284.96277, -1339.69238, 13.22030,   0.00000, 0.00000, 91.01540);
	CreateDynamicObject(18014, 1273.11816, -1337.98755, 12.76030,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(759, 1285.19031, -1337.70715, 12.35141,   0.00000, 0.00000, 129.05334);
	CreateDynamicObject(759, 1275.27576, -1337.75842, 12.35141,   0.00000, 0.00000, 129.05334);
	CreateDynamicObject(759, 1278.38379, -1337.74329, 12.35141,   0.00000, 0.00000, 129.05334);
	CreateDynamicObject(759, 1281.43762, -1337.83252, 12.35141,   0.00000, 0.00000, 129.05334);
	CreateDynamicObject(645, 1283.44482, -1337.84753, 9.98499,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(645, 1275.97888, -1337.91089, 11.75041,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1256, 1285.86621, -1348.77600, 13.44620,   0.00000, 0.00000, 268.70569);
	CreateDynamicObject(1256, 1272.27222, -1338.10388, 12.97910,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1256, 1285.74316, -1327.39417, 13.39910,   0.00000, 0.00000, -268.70569);
	CreateDynamicObject(1256, 1276.93933, -1348.77271, 13.01910,   0.00000, 0.00000, 268.70569);
	CreateDynamicObject(1256, 1277.30066, -1327.22803, 13.01910,   0.00000, 0.00000, -268.70569);
	CreateDynamicObject(1574, 1280.80615, -1348.94702, 12.34920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2670, 1280.31470, -1348.45959, 12.45010,   0.00000, 0.00000, 41.96445);
	CreateDynamicObject(2670, 1281.20032, -1327.75671, 12.45010,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(632, 1293.88623, -1336.09900, 13.12930,   0.00000, 0.00000, 311.00458);
	CreateDynamicObject(632, 1295.78210, -1342.65381, 13.12930,   0.00000, 0.00000, 285.90417);
	CreateDynamicObject(2612, 1272.68359, -1349.00720, 14.18112,   0.00000, 0.00000, 180.07254);
	CreateDynamicObject(2612, 1272.66919, -1326.73450, 14.18112,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2684, 1298.34546, -1329.41028, 14.48340,   0.00000, 14.00000, 0.00000);
	CreateDynamicObject(11736, 1274.78027, -1349.06946, 14.09080,   -94.00000, 0.00000, 357.00000);
	CreateDynamicObject(19357, 1292.57629, -1327.76074, 14.17790,   0.00000, 0.00000, 50.22280);
	CreateDynamicObject(19357, 1292.20374, -1349.02930, 14.21790,   0.00000, 0.00000, 297.14551);
	CreateDynamicObject(19357, 1283.81909, -1351.06396, 14.50110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1285.24231, -1349.25598, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1304.92285, -1320.44763, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1301.96582, -1329.24731, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19403, 1298.97070, -1347.94055, 14.49110,   0.00000, 0.00000, 269.81299);
	CreateDynamicObject(19387, 1305.13867, -1329.23621, 14.49250,   0.00000, 0.00000, 270.64520);
	CreateDynamicObject(19357, 1308.30273, -1329.23389, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19387, 1289.36902, -1353.75854, 14.49110,   0.00000, 0.00000, 269.74799);
	CreateDynamicObject(19357, 1295.83252, -1347.90210, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(5309, 1318.50146, -1339.05872, 16.69750,   0.00000, 0.00000, 269.57199);
	CreateDynamicObject(19361, 1309.04492, -1343.66309, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1309.13074, -1324.80505, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1309.01904, -1334.13220, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1309.02808, -1337.33826, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1309.03918, -1340.52808, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1305.09509, -1357.01990, 14.45660,   0.00000, 0.00000, 270.56027);
	CreateDynamicObject(19357, 1308.55872, -1347.95435, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(3397, 1307.22253, -1345.13989, 12.80790,   0.00000, 0.00000, 268.58566);
	CreateDynamicObject(3395, 1305.10156, -1339.17188, 12.80879,   0.00000, 0.00000, 180.62721);
	CreateDynamicObject(2604, 1305.09131, -1342.83350, 13.61030,   0.00000, 0.00000, 88.89190);
	CreateDynamicObject(3394, 1305.08069, -1335.75647, 12.80945,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2166, 1307.45007, -1333.53467, 12.77480,   0.00000, 0.00000, 357.75229);
	CreateDynamicObject(2523, 1294.79053, -1335.79517, 12.80989,   0.00000, 0.00000, 91.37444);
	CreateDynamicObject(1574, 1280.69177, -1327.27014, 12.34920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(632, 1294.08557, -1341.73682, 13.12930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3657, 1296.91858, -1333.43848, 13.22690,   0.00000, 0.00000, 90.99100);
	CreateDynamicObject(3657, 1297.53479, -1343.11865, 13.22690,   0.00000, 0.00000, 90.99100);
	CreateDynamicObject(3657, 1298.97827, -1343.09595, 13.22690,   0.00000, 0.00000, 90.99100);
	CreateDynamicObject(3657, 1305.46118, -1348.44836, 13.22690,   0.00000, 0.00000, 358.28268);
	CreateDynamicObject(3657, 1300.59058, -1333.38062, 13.22690,   0.00000, 0.00000, 90.99100);
	CreateDynamicObject(3657, 1298.79187, -1333.40894, 13.22690,   0.00000, 0.00000, 90.99100);
	CreateDynamicObject(2745, 1300.39441, -1337.82214, 13.92870,   0.00000, 0.00000, 272.36740);
	CreateDynamicObject(2612, 1296.96008, -1329.33875, 14.96490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2684, 1272.51343, -1326.74255, 14.48340,   0.00000, 14.00000, 0.00000);
	CreateDynamicObject(2206, 1298.06995, -1348.00891, 12.80949,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2256, 1296.51721, -1329.07483, 15.08252,   0.00000, 0.00000, 178.94511);
	CreateDynamicObject(2256, 1307.43542, -1329.33679, 14.82447,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2611, 1302.12915, -1329.11011, 14.87733,   0.00000, 0.00000, 179.45720);
	CreateDynamicObject(2257, 1300.01965, -1320.51929, 14.63140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 1304.41846, -1329.31104, 12.76920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 1301.42700, -1347.86292, 12.74990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1305.34692, -1347.93237, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1307.93909, -1353.94324, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1301.55249, -1353.88416, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1292.34143, -1353.78589, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1283.15039, -1353.70007, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1286.18884, -1353.71692, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1287.73877, -1357.40466, 14.48110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1309.04199, -1346.85620, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1309.04065, -1349.94775, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19387, 1302.15198, -1347.93042, 14.49110,   0.00000, 0.00000, 270.64520);
	CreateDynamicObject(19387, 1304.73584, -1353.91479, 14.49110,   0.00000, 0.00000, 269.74799);
	CreateDynamicObject(19387, 1296.06384, -1350.96045, 14.49110,   0.00000, 0.00000, 269.74799);
	CreateDynamicObject(1491, 1288.65430, -1353.69849, 12.76910,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 1303.98755, -1353.90405, 12.76910,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1283.82715, -1352.21033, 14.50110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1300.77930, -1349.48376, 14.48110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1298.40015, -1358.57031, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1299.27625, -1350.99133, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(1523, 1295.28760, -1351.03589, 12.75040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2356, 1307.54150, -1343.59973, 12.81040,   0.00000, 0.00000, 155.08211);
	CreateDynamicObject(2356, 1306.31592, -1338.52698, 12.81040,   0.00000, 0.00000, 118.07069);
	CreateDynamicObject(2356, 1306.33008, -1339.57312, 12.81040,   0.00000, 0.00000, 81.81898);
	CreateDynamicObject(2125, 1306.26184, -1346.31287, 13.12780,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2125, 1303.86816, -1339.41199, 13.12780,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2125, 1303.85596, -1338.38257, 13.12780,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2125, 1308.65857, -1333.44238, 13.12780,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2125, 1305.19885, -1345.23364, 13.12780,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2125, 1307.87500, -1327.48804, 13.12780,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2356, 1293.87451, -1357.58740, 12.81040,   0.00000, 0.00000, 20.46318);
	CreateDynamicObject(2356, 1306.21326, -1335.31567, 12.81040,   0.00000, 0.00000, 81.47176);
	CreateDynamicObject(2162, 1295.18811, -1348.31689, 12.80772,   0.00000, 0.00000, 268.75412);
	CreateDynamicObject(2162, 1299.39160, -1350.44348, 12.80772,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1283.82117, -1325.09900, 14.48110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1299.84717, -1357.37390, 14.48110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1309.02661, -1352.60193, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1306.57190, -1355.59570, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1300.90308, -1355.54797, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1302.45251, -1357.05359, 14.45660,   0.00000, 0.00000, 270.56027);
	CreateDynamicObject(19357, 1298.14087, -1353.85925, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1292.04614, -1358.52515, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1295.21069, -1358.54236, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1289.21545, -1358.49792, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(3657, 1300.74329, -1343.06812, 13.22690,   0.00000, 0.00000, 90.99100);
	CreateDynamicObject(3383, 1297.36975, -1355.72607, 12.81027,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1295.17261, -1353.81042, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(3393, 1292.55493, -1356.82666, 12.80968,   0.00000, 0.00000, 116.26940);
	CreateDynamicObject(19357, 1299.85645, -1355.39099, 14.48110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1287.71655, -1355.41455, 14.48110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2356, 1299.11633, -1349.21484, 12.81040,   0.00000, 0.00000, 20.46318);
	CreateDynamicObject(2257, 1302.50903, -1354.01758, 14.67930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3657, 1293.92627, -1353.31982, 13.22690,   0.00000, 0.00000, 178.90179);
	CreateDynamicObject(1359, 1308.43958, -1348.53894, 13.43461,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2257, 1291.81348, -1353.89172, 14.67930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2025, 1302.57581, -1356.48499, 12.80830,   0.00000, 0.00000, 166.60620);
	CreateDynamicObject(2161, 1305.60461, -1356.56543, 12.80914,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2199, 1304.49695, -1356.86499, 12.80989,   0.00000, 0.00000, 179.68999);
	CreateDynamicObject(19357, 1298.86560, -1329.21387, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1307.82275, -1320.47717, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1289.83362, -1320.28760, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1292.89709, -1320.30835, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1296.07056, -1320.34766, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1299.25671, -1320.39307, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1302.43347, -1320.41589, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1286.67712, -1320.25720, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1285.23645, -1320.25720, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1294.39648, -1349.43127, 14.48110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1557, 1283.88525, -1351.05786, 12.72670,   0.00000, 0.00000, 269.48941);
	CreateDynamicObject(19361, 1309.02588, -1330.91687, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1309.13464, -1327.70166, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19361, 1309.11902, -1321.80054, 14.45660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 1285.47693, -1324.06946, 12.76860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2559, 1284.08423, -1320.90515, 13.55110,   0.00000, 0.00000, 267.53000);
	CreateDynamicObject(1998, 1308.68909, -1327.59851, 12.80832,   0.00000, 0.00000, 182.31953);
	CreateDynamicObject(2125, 1303.82324, -1335.61072, 13.12780,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 1306.38171, -1324.24353, 12.76860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 1302.84155, -1324.16162, 12.76860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 1298.68335, -1324.17310, 12.76860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 1294.24658, -1324.18591, 12.76860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1800, 1290.06201, -1324.19788, 12.76860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2559, 1305.00366, -1321.63733, 13.55110,   0.00000, 0.00000, 267.53000);
	CreateDynamicObject(2559, 1301.41370, -1321.29541, 13.55110,   0.00000, 0.00000, 267.53000);
	CreateDynamicObject(2559, 1296.70691, -1321.18945, 13.55110,   0.00000, 0.00000, 267.53000);
	CreateDynamicObject(2559, 1292.56982, -1321.09631, 13.55110,   0.00000, 0.00000, 267.53000);
	CreateDynamicObject(2559, 1288.74829, -1321.01025, 13.55110,   0.00000, 0.00000, 267.53000);
	CreateDynamicObject(1723, 1297.27087, -1328.44409, 12.80810,   0.00000, 0.00000, 181.82430);
	CreateDynamicObject(1723, 1302.62732, -1328.44910, 12.80810,   0.00000, 0.00000, 181.82430);
	CreateDynamicObject(2164, 1299.17554, -1328.86707, 12.80856,   0.00000, 0.00000, 179.83670);
	CreateDynamicObject(948, 1293.03784, -1327.67480, 12.80826,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2256, 1296.56128, -1347.80066, 15.08252,   0.00000, 0.00000, 178.94511);
	CreateDynamicObject(2611, 1305.12695, -1347.80701, 14.87733,   0.00000, 0.00000, 179.45720);
	CreateDynamicObject(2257, 1300.94507, -1329.34644, 14.55140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10671, 1303.60376, -1320.62109, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1292.79834, -1322.14697, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1298.92163, -1323.83447, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1303.56897, -1327.40515, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1292.05212, -1353.94824, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1289.97693, -1324.94873, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1289.90930, -1322.16199, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3280, 1292.23328, -1326.82825, 16.06210,   0.00000, 0.00000, 321.59842);
	CreateDynamicObject(3280, 1294.67505, -1326.86230, 16.06210,   0.00000, 0.00000, 320.44366);
	CreateDynamicObject(3280, 1293.69690, -1348.80396, 16.06210,   0.00000, 0.00000, 299.39816);
	CreateDynamicObject(10671, 1300.22595, -1327.34265, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.40332, -1355.68469, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1288.41028, -1354.88867, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1293.91467, -1358.24463, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1303.13013, -1349.87463, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.23059, -1347.95325, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1302.95435, -1352.85852, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1291.07947, -1351.35010, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1303.59045, -1323.87341, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3280, 1291.84045, -1327.36047, 15.27810,   -93.00000, 0.00000, 322.81952);
	CreateDynamicObject(3280, 1291.95410, -1348.88574, 15.22210,   0.00000, -87.00000, 299.00000);
	CreateDynamicObject(5740, 1278.09692, -1186.31580, 4.49153,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6135, 1337.20386, -1320.58643, 14.55440,   0.00000, 0.00000, 93.72140);
	CreateDynamicObject(6135, 1244.83008, -1356.82581, 14.49440,   0.00000, 0.00000, 275.44861);
	CreateDynamicObject(19363, 1271.12183, -1320.50708, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1271.15674, -1317.35425, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1271.14905, -1314.42664, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1271.13965, -1311.30017, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1271.08887, -1323.44336, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1271.03540, -1352.14648, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1271.04419, -1355.19214, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1271.06921, -1357.87109, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1271.09717, -1360.86841, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1271.12488, -1363.85718, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1271.15234, -1366.79639, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1283.82727, -1321.92664, 14.48110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.09412, -1321.96985, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.08386, -1319.01563, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.09387, -1315.89246, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.06274, -1312.96924, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.05188, -1310.06506, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1294.27014, -1347.85510, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.02539, -1350.61584, 17.56490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.03662, -1353.69006, 17.56490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.04810, -1356.82605, 17.56490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.05872, -1359.92505, 17.56490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.08521, -1363.13184, 17.56490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.11316, -1366.34338, 17.56490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1295.73083, -1329.17969, 14.49110,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1272.76831, -1306.68359, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1275.96558, -1326.62903, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1279.17310, -1326.65369, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1282.35901, -1326.72754, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1285.56274, -1326.76770, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1288.77527, -1326.79736, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1292.69373, -1326.80774, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1292.72009, -1349.35925, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1272.66455, -1369.51526, 17.52490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1275.89807, -1349.19641, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1279.03162, -1349.21606, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1282.07043, -1349.23560, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1288.35181, -1349.29663, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1291.21472, -1349.32117, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1291.96106, -1326.83252, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(19357, 1271.08850, -1325.01929, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1294.13574, -1328.45630, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1294.15479, -1331.52600, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1294.21899, -1334.55762, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1294.25793, -1337.76257, 17.58490,   0.00000, 0.00000, 1.05180);
	CreateDynamicObject(19357, 1294.27637, -1340.95581, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1294.27917, -1344.08716, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1294.26367, -1347.10657, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10671, 1289.74304, -1351.35596, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1277.05591, -1351.02258, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1277.04688, -1354.47925, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1277.55078, -1324.78455, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1277.26123, -1367.70911, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1277.38257, -1357.94141, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1288.99438, -1351.19702, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1288.92029, -1354.85925, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1289.47729, -1360.97144, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.17896, -1349.70093, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.27271, -1346.10022, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.26868, -1342.47705, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.24768, -1339.04016, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.20740, -1335.71204, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.21082, -1332.38586, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.18127, -1329.44788, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1303.79224, -1329.34863, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1303.79224, -1329.34863, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1303.86523, -1332.44080, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1303.92920, -1335.15381, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.00708, -1338.46533, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.07666, -1341.41699, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.15137, -1344.58411, 16.03720,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1289.19409, -1357.86426, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.66418, -1360.78040, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.68738, -1357.25439, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.71106, -1353.63525, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.73376, -1350.20886, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.83752, -1346.85303, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.88000, -1343.64978, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.87866, -1340.21143, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.86426, -1336.86633, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.84912, -1333.33411, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.83423, -1329.88000, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.81958, -1326.48584, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.80469, -1323.02197, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.78967, -1319.57715, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1304.77527, -1316.20459, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1277.28088, -1308.45923, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.62292, -1362.79944, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1277.49634, -1321.34851, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1277.17383, -1311.15173, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1293.30408, -1315.76843, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1293.28491, -1319.04370, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1293.26477, -1322.50391, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1293.25085, -1324.88049, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1286.01184, -1324.83838, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1286.03125, -1321.49316, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1286.05212, -1317.87976, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1286.06677, -1315.34338, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.19360, -1328.12854, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.19360, -1328.12854, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.23438, -1331.42322, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.27563, -1334.75867, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.31799, -1338.18152, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.35974, -1341.54517, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.40259, -1344.98975, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.44666, -1348.54053, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.49219, -1352.21436, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.53723, -1355.86230, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.57861, -1359.20728, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1300.57861, -1359.20728, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19363, 1271.16309, -1367.95300, 13.98970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1271.13037, -1367.83118, 17.56490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3280, 1294.69214, -1328.81213, 16.06210,   0.00000, 0.00000, 320.00000);
	CreateDynamicObject(3280, 1293.56995, -1328.80847, 15.27810,   -93.00000, 0.00000, 320.00000);
	CreateDynamicObject(18014, 1280.43518, -1339.74011, 12.78030,   0.00000, 0.00000, 91.01540);
	CreateDynamicObject(18014, 1285.05542, -1339.64343, 12.74030,   0.00000, 0.00000, 91.01540);
	CreateDynamicObject(18014, 1285.02148, -1335.89868, 12.98030,   0.00000, 0.00000, 91.01540);
	CreateDynamicObject(18014, 1285.02148, -1335.89868, 12.78030,   0.00000, 0.00000, 91.01540);
	CreateDynamicObject(3280, 1292.31934, -1349.58289, 16.06210,   0.00000, -2.00000, 299.00000);
	CreateDynamicObject(3280, 1293.32153, -1348.12024, 15.24210,   0.00000, -87.00000, 299.00000);
	CreateDynamicObject(19357, 1271.06873, -1308.15466, 17.58490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1292.82629, -1348.75537, 14.25790,   0.00000, 0.00000, 297.14551);
	CreateDynamicObject(19357, 1292.89783, -1328.03345, 14.27790,   0.00000, 0.00000, 50.22280);
	CreateDynamicObject(3280, 1293.46814, -1327.81140, 16.06210,   0.00000, 0.00000, 320.00000);
	CreateDynamicObject(3280, 1292.92322, -1328.25684, 15.27810,   -93.00000, 0.00000, 320.00000);
	CreateDynamicObject(19363, 1272.75098, -1306.66797, 14.08970,   0.00000, 0.00000, 88.56290);
	CreateDynamicObject(19357, 1272.69482, -1349.16235, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(10671, 1277.19348, -1361.44336, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1277.12769, -1364.75757, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19363, 1271.13037, -1308.15088, 14.08970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19363, 1272.71924, -1326.55688, 14.08970,   0.00000, 0.00000, 88.56290);
	CreateDynamicObject(19357, 1272.76538, -1326.59521, 17.58490,   0.00000, 0.00000, 269.42120);
	CreateDynamicObject(10671, 1277.41858, -1317.76367, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(10671, 1277.29126, -1314.39001, 19.08352,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19325, 1294.19275, -1332.52783, 14.47962,   0.00000, 0.00000, -0.54000);
	CreateDynamicObject(19325, 1294.23877, -1344.62317, 14.47962,   0.00000, 0.00000, -0.06000);
	CreateDynamicObject(19325, 1288.20020, -1326.75867, 14.47962,   0.00000, 0.00000, 89.36218);
	CreateDynamicObject(19325, 1287.21057, -1326.76563, 14.47962,   0.00000, 0.00000, 89.68719);
	CreateDynamicObject(19325, 1287.58118, -1349.35730, 14.47962,   0.00000, 0.00000, 271.50821);
	CreateDynamicObject(19430, 1294.26013, -1340.89563, 16.10921,   -90.30000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1275.82861, -1349.23584, 24.33374,   0.00000, 0.00000, 89.52001);
	CreateDynamicObject(19377, 1275.80920, -1349.23083, 34.56169,   0.00000, 0.00000, 89.52001);
	CreateDynamicObject(19377, 1275.82861, -1349.23584, 44.67473,   0.00000, 0.00000, 89.52001);
	CreateDynamicObject(19377, 1285.35315, -1349.30493, 24.33374,   0.00000, 0.00000, 89.52001);
	CreateDynamicObject(19377, 1285.35315, -1349.30493, 34.56170,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1285.35315, -1349.30493, 44.67470,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1294.69836, -1349.51538, 24.33374,   0.00000, 0.00000, 89.52001);
	CreateDynamicObject(19377, 1294.35486, -1344.98132, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1294.32800, -1335.45508, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1294.34583, -1326.06799, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1285.40491, -1326.50830, 24.33370,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1275.80981, -1326.54309, 24.33370,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1294.91040, -1326.51868, 24.33370,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1271.04309, -1321.76245, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1275.70593, -1307.50720, 24.33370,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1308.96411, -1321.80273, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.96533, -1331.09082, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.95129, -1340.58765, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.95630, -1350.08167, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1294.69836, -1349.51538, 34.56170,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1276.04419, -1369.69629, 24.33374,   0.00000, 0.00000, 89.52001);
	CreateDynamicObject(19377, 1271.37708, -1356.59302, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1271.39063, -1353.81018, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.94153, -1356.88818, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1294.35486, -1344.98132, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1294.32800, -1335.45508, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1294.34583, -1326.06799, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1294.91040, -1326.51868, 34.56170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1285.40491, -1326.50830, 34.56170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1275.80981, -1326.54309, 34.56170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1271.04309, -1321.76245, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.96411, -1321.80273, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.96533, -1331.09082, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.95129, -1340.58765, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.95630, -1350.08167, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.94153, -1356.88818, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1294.69836, -1349.51538, 44.67470,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1294.35486, -1344.98132, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1294.32800, -1335.45508, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1294.34583, -1326.06799, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1294.91040, -1326.51868, 44.67470,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1285.40491, -1326.50830, 44.67470,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1275.80981, -1326.54309, 44.67470,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1271.04309, -1321.76245, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.96411, -1321.80273, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.96533, -1331.09082, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.95129, -1340.58765, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.95630, -1350.08167, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1271.39063, -1353.81018, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1271.37708, -1356.59302, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1271.37708, -1356.59302, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1271.39063, -1353.81018, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.94153, -1356.88818, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1275.80750, -1321.39050, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1285.42322, -1321.27795, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1295.07227, -1321.21765, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1304.24622, -1322.13806, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1299.21033, -1331.71460, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1304.21326, -1332.43115, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1299.15198, -1342.16296, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1304.16919, -1342.75488, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1299.22070, -1351.90186, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1304.28711, -1353.06873, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1304.12415, -1356.66516, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1294.64563, -1356.57629, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1290.31042, -1354.58374, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1285.47803, -1356.39294, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1276.06873, -1356.26074, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1281.38989, -1354.72656, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1276.33594, -1354.65820, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3851, 1294.20679, -1332.50708, 20.69016,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20679, -1332.50708, 25.10772,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20679, -1332.50708, 29.76405,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20679, -1332.50708, 34.22142,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20679, -1332.50708, 39.17627,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20679, -1332.50708, 43.99178,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20679, -1332.50708, 48.42925,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20923, -1344.00635, 20.69016,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20923, -1344.00635, 29.76410,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20923, -1344.00635, 25.10770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20923, -1344.00635, 39.17630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20923, -1344.00635, 34.22140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.21729, -1343.98804, 48.42920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1294.20923, -1344.00635, 43.99180,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 1287.31067, -1326.62292, 20.69020,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1287.31067, -1326.62292, 25.10770,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1287.31067, -1326.62292, 29.76410,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1287.31067, -1326.62292, 34.22140,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1287.31067, -1326.62292, 39.17630,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1287.31067, -1326.62292, 43.99180,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1287.31067, -1326.62292, 48.42920,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1276.92529, -1326.69946, 20.69020,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1276.92529, -1326.69946, 20.69020,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1276.92188, -1326.71912, 20.69020,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1276.92529, -1326.69946, 34.22140,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1276.92529, -1326.69946, 29.76410,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1276.92529, -1326.69946, 25.10770,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1276.92188, -1326.71912, 39.17630,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1276.92188, -1326.71912, 43.99180,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1276.92188, -1326.71912, 48.42920,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3851, 1287.08813, -1349.22144, 20.69020,   0.00000, 0.00000, 89.40001);
	CreateDynamicObject(3851, 1287.08813, -1349.22144, 43.99180,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1287.08813, -1349.22144, 39.17630,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1287.08813, -1349.22144, 34.56170,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1287.08813, -1349.22144, 29.76410,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1287.08813, -1349.22144, 25.10770,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1287.08813, -1349.22144, 48.42920,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1276.96484, -1349.10999, 20.69020,   0.00000, 0.00000, 89.40001);
	CreateDynamicObject(3851, 1276.96484, -1349.10999, 39.17630,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1276.96484, -1349.10999, 39.17630,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1276.96484, -1349.10999, 34.56170,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1276.96484, -1349.10999, 29.76410,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1276.96484, -1349.10999, 25.10770,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1276.96484, -1349.10999, 43.99180,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(3851, 1276.96484, -1349.10999, 48.42920,   0.00000, 0.00000, 89.40000);
	CreateDynamicObject(14387, 1282.27429, -1329.22974, 11.81764,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(14387, 1282.28931, -1333.91504, 11.81764,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(14387, 1282.01477, -1342.41492, 11.66258,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(14387, 1282.03577, -1347.12537, 11.66258,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1290, 1280.19263, -1337.92224, 18.25971,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1270.97119, -1312.26465, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1285.20593, -1307.49670, 24.33370,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1294.73401, -1307.50061, 24.33370,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1304.02515, -1307.47717, 24.33370,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1308.94348, -1312.19189, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1270.97119, -1312.26465, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1275.70593, -1307.50720, 34.56170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1285.20593, -1307.49670, 34.56170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1294.73401, -1307.50061, 34.56170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1308.96411, -1321.80273, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1308.94348, -1312.19189, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1304.02515, -1307.47717, 34.56170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1308.94348, -1312.19189, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1304.02515, -1307.47717, 44.67470,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1294.73401, -1307.50061, 44.67470,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1270.97119, -1312.26465, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1275.70593, -1307.50720, 44.67470,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1285.20593, -1307.49670, 44.67470,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 1275.85840, -1312.74158, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1285.45386, -1312.70862, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1294.91943, -1312.69666, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1304.14771, -1312.69592, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1271.27954, -1364.91882, 24.33370,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1285.39490, -1369.72559, 24.33374,   0.00000, 0.00000, 89.52001);
	CreateDynamicObject(19377, 1294.83423, -1369.77783, 24.33374,   0.00000, 0.00000, 89.52001);
	CreateDynamicObject(19377, 1303.16870, -1369.82275, 24.33374,   0.00000, 0.00000, 89.52001);
	CreateDynamicObject(19377, 1308.35278, -1365.25415, 24.33370,   0.00000, 0.00000, -8.46000);
	CreateDynamicObject(19377, 1271.27954, -1364.91882, 34.56170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1276.04419, -1369.69629, 34.56170,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1285.39490, -1369.72559, 34.56170,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1294.83423, -1369.77783, 34.56170,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1303.16870, -1369.82275, 34.56170,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1308.35278, -1365.25415, 34.56170,   0.00000, 0.00000, -8.46000);
	CreateDynamicObject(19377, 1308.35278, -1365.25415, 44.67470,   0.00000, 0.00000, -8.46000);
	CreateDynamicObject(19377, 1303.16870, -1369.82275, 44.67470,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1294.83423, -1369.77783, 44.67470,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1285.39490, -1369.72559, 44.67470,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1276.04419, -1369.69629, 44.67470,   0.00000, 0.00000, 89.52000);
	CreateDynamicObject(19377, 1271.27954, -1364.91882, 44.67470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1276.03455, -1364.45166, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1285.69922, -1364.47266, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1295.02661, -1364.48596, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19377, 1302.45850, -1364.59180, 49.74635,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1306.69690, -1364.85596, 49.69595,   0.00000, 90.00000, -7.91999);

    //เซเว่นการาจเซเว่นจุดเกิด
    CreateObject(3, 1589.51331, -1286.25098, 16.53870,   0.00000, 0.00000, 181.00000);

	
	//เทส
	CreateDynamicObject(15215, -1.2566, 1563.2699, 16.9241,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(15213, -12.61188, 1530.42834, 27.10340,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(15212, -0.91663, 1534.50085, 13.53266,   0.00000, 0.00000, 0.00000);
	CreateObject(15198, 844.40717, -2089.30127, 11.74600,   0.00000, 0.00000, 0.00000);
	CreateObject(15178, 852.01770, -1843.43848, 12.00000,   0.00000, 0.00000, 135.00000);
	CreateObject(15180, 852.77911, -1851.76416, 13.34124,   0.00000, 0.00000, 0.00000);
	CreateObject(15178, 850.73322, -1868.55359, 12.00000,   0.00000, 0.00000, 135.00000);
	CreateObject(15178, 851.36017, -1900.44604, 12.00000,   0.00000, 0.00000, 135.00000);
	CreateObject(15178, 851.31195, -1949.70654, 12.00000,   0.00000, 0.00000, 135.00000);
	CreateObject(15178, 819.00000, -1843.43848, 12.00000,   0.00000, 0.00000, 135.00000);
	CreateObject(15178, 819.00000, -1868.55359, 12.00000,   0.00000, 0.00000, 135.00000);
	CreateObject(15178, 819.00000, -1900.44604, 12.00000,   0.00000, 0.00000, 135.00000);
	CreateObject(15178, 845.64166, -2087.14526, 12.00000,   0.00000, 0.00000, 135.00000);
	CreateObject(15181, 852.29016, -1855.37585, 12.23436,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 820.88281, -1857.06714, 11.74630,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 852.43732, -1887.20776, 11.88650,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 820.73322, -1888.57288, 11.85580,   0.00000, 0.00000, 0.00000);
	CreateObject(15182, 821.14520, -1846.98010, 11.82290,   0.00000, 0.00000, 0.00000);
	CreateObject(15182, 852.06458, -1846.99573, 11.82290,   0.00000, 0.00000, 0.00000);
	CreateObject(15182, 851.67499, -1874.22473, 11.86290,   0.00000, 0.00000, 0.00000);
	CreateObject(15182, 821.38062, -1873.75195, 11.86090,   0.00000, 0.00000, 0.00000);
	CreateObject(15182, 821.80463, -1896.21985, 11.86090,   0.00000, 0.00000, 0.00000);
	CreateObject(15182, 851.26398, -1896.38135, 11.86090,   0.00000, 0.00000, 0.00000);
	CreateObject(15182, 851.52081, -1909.70081, 11.86090,   0.00000, 0.00000, 0.00000);
	CreateObject(15182, 821.45398, -1912.74939, 11.86090,   0.00000, 0.00000, 0.00000);
	CreateObject(15179, 822.11542, -1868.62598, 11.66000,   0.00000, 0.00000, -18.00000);
	CreateObject(15179, 851.70020, -1878.59045, 11.66000,   0.00000, 0.00000, -18.00000);
	CreateObject(15179, 821.25171, -1909.21570, 11.66000,   0.00000, 0.00000, 54.00000);
	CreateObject(15181, 821.18152, -1928.07666, 11.83655,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 851.78827, -1932.33948, 11.83655,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 816.55652, -1973.92261, 11.83655,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 850.17999, -1994.15149, 11.83655,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 806.92542, -2059.48511, 11.83655,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 895.80090, -2010.86963, 11.83655,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 876.47571, -2092.11743, 11.83655,   0.00000, 0.00000, 0.00000);
	CreateObject(15186, 886.21973, -2032.15527, 11.82000,   0.00000, 0.00000, 91.00000);
	CreateObject(15187, 864.21637, -2046.21533, 11.91234,   0.00000, 0.00000, 0.00000);
	CreateObject(15188, 839.44147, -2019.99097, 25.00000,   0.00000, 0.00000, 189.00000);
	CreateObject(15189, 1538.46216, -3820.19629, -1.23033,   0.00000, 0.00000, 0.00000);
	CreateObject(15190, 878.00507, -2048.30005, 11.94000,   0.00000, 0.00000, 0.00000);
	CreateObject(15191, 832.47675, -2032.66882, 13.00000,   0.00000, 0.00000, 69.00000);
	CreateObject(15191, 844.14893, -2035.16809, 13.00000,   0.00000, 0.00000, -76.00000);
	CreateObject(15191, 843.02161, -2027.80225, 13.00000,   0.00000, 0.00000, -91.00000);
	CreateObject(15191, 835.67883, -2027.64978, 13.00000,   0.00000, 0.00000, 33.00000);
	CreateObject(15192, 873.34039, -2038.68713, 11.92000,   0.00000, 0.00000, -156.00000);
	CreateObject(15194, 835.58502, -2038.56409, 13.07010,   0.00000, 0.00000, 60.00000);
	CreateObject(15194, 869.10272, -2037.37183, 11.90000,   0.00000, 0.00000, 60.00000);
	CreateObject(15195, 867.44678, -2032.73486, 12.12170,   0.00000, 0.00000, -200.00000);
	CreateObject(15196, 875.25452, -2034.77686, 11.93750,   0.00000, 0.00000, 33.00000);
	CreateObject(15197, 867.31067, -2029.82410, 11.93648,   0.00000, 0.00000, 0.00000);
	CreateObject(15194, 870.07239, -2044.35962, 11.94620,   0.00000, 0.00000, 127.00000);
	CreateObject(15185, 884.59851, -2042.52490, 12.03970,   0.00000, 0.00000, -142.00000);
	CreateObject(15189, 868.81146, -2027.53394, 11.84710,   0.00000, 0.00000, 0.00000);
	CreateObject(15191, 886.09290, -2024.54346, 11.86000,   0.00000, 0.00000, -76.00000);
	CreateObject(15191, 884.78876, -2027.39050, 11.86000,   0.00000, 0.00000, -171.00000);
	CreateObject(15191, 882.46967, -2025.35132, 11.86000,   0.00000, 0.00000, 98.00000);
	CreateObject(15191, 883.99377, -2023.12231, 11.86000,   0.00000, 0.00000, -4.00000);
	CreateObject(15178, 825.46460, -2022.64478, 12.00000,   0.00000, 0.00000, 135.00000);
	CreateObject(15178, 867.90491, -2005.99451, 12.00000,   0.00000, 0.00000, 135.00000);
	CreateObject(15178, 785.01678, -2038.09497, 12.00000,   0.00000, 0.00000, 11.00000);
	CreateObject(15178, 819.00000, -1949.70654, 12.00000,   0.00000, 0.00000, 147.66000);
	CreateObject(15182, 812.45044, -2004.84082, 11.86090,   0.00000, 0.00000, 0.00000);
	CreateObject(15182, 911.78583, -1978.62256, 11.86090,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 929.66565, -1981.29871, 11.83655,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 775.53534, -1959.73792, 11.83655,   0.00000, 0.00000, 0.00000);
	CreateObject(15199, 873.72089, -2020.11926, 11.98330,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 812.06226, -2000.49817, 11.83655,   0.00000, 0.00000, 0.00000);
	CreateObject(15181, 834.79431, -2061.00146, 11.83655,   0.00000, 0.00000, 0.00000);
	CreateObject(15182, 789.60809, -2037.01208, 11.86090,   0.00000, 0.00000, 0.00000);
	CreateObject(15199, 878.07690, -2023.89209, 11.98330,   0.00000, 0.00000, 46.00000);
	CreateObject(15178, 800.06067, -2092.60620, 12.00000,   0.00000, 0.00000, 135.00000);
	CreateObject(15178, 901.78168, -2027.60193, 12.00000,   0.00000, 0.00000, 200.00000);
	CreateObject(8, 835.80969, -1942.82715, 50.00000,   0.00000, 0.00000, 0.00000);
	CreateObject(8, 836.47552, -2061.89404, 60.00000,   0.00000, 0.00000, 0.00000);
	CreateObject(8, 895.77808, -2010.59387, 55.00000,   0.00000, 0.00000, 0.00000);
	CreateObject(15997, 837.89203, -1945.79517, 20.00000,   0.00000, 0.00000, 0.00000);
	CreateObject(15210, 884.65991, -2024.36694, 40.00000,   0.00000, 0.00000, 185.00000);
	CreateObject(15210, 849.47278, -2034.52502, 45.00000,   0.00000, 0.00000, 244.00000);
	CreateObject(15210, 838.22913, -1980.42981, 48.00000,   0.00000, 0.00000, 185.00000);
	CreateObject(15210, 795.38849, -2084.15601, 48.00000,   0.00000, 0.00000, -33.00000);
	CreateObject(15210, 826.93127, -2028.89099, 70.00000,   0.00000, 0.00000, 185.00000);


    // โรงบาล
	CreateDynamicObject(14602, 418.38489, 171.57080, 1012.72998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14593, 401.69199, 201.44231, 1009.67090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14597, 414.18411, 144.50500, 1009.34998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14598, 406.55530, 171.63631, 1022.89752,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 418.10770, 182.95880, 1007.37500,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1703, 415.39600, 183.77859, 1007.37500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 417.36719, 180.22881, 1007.37500,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1817, 415.77631, 181.46040, 1007.37500,   0.00000, 0.00000, 1.00000);
	CreateDynamicObject(1776, 415.86200, 186.81610, 1008.47662,   0.00000, 0.00000, -3.14160);
	CreateDynamicObject(2002, 414.74661, 186.67070, 1007.37500,   0.00000, 0.00000, 3.14160);
	CreateDynamicObject(2010, 418.79599, 178.29910, 1007.37500,   0.00000, 0.00000, 2.35620);
	CreateDynamicObject(2010, 411.55859, 186.89430, 1007.37500,   0.00000, 0.00000, 2.35620);
	CreateDynamicObject(2010, 418.75812, 186.80000, 1007.37500,   0.00000, 0.00000, 2.35620);
	CreateDynamicObject(2164, 410.73279, 212.60760, 1007.40002,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2164, 410.69571, 214.48140, 1007.40002,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2164, 410.75031, 210.76830, 1007.40002,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2164, 408.92529, 215.40739, 1007.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 407.10849, 215.41901, 1007.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 405.28650, 215.42010, 1007.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2162, 403.38351, 215.43040, 1007.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 392.30600, 195.29890, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2186, 395.58411, 214.91479, 1007.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2162, 392.33759, 211.77490, 1007.40002,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2162, 392.29950, 209.28140, 1007.40002,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1776, 392.61191, 205.10770, 1008.29999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2002, 392.75009, 203.04089, 1007.40002,   0.00000, 0.00000, 90.50000);
	CreateDynamicObject(2164, 392.36749, 213.88721, 1007.40002,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 392.28809, 197.36520, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1998, 396.72345, 198.98067, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 398.72986, 199.97337, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 397.73199, 201.03140, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1998, 399.73581, 202.01680, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(2009, 405.21838, 201.88672, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1999, 403.19562, 200.88663, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1999, 404.20615, 199.86311, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2009, 402.19662, 198.86960, 1007.36719,   360.00000, 0.00000, 360.00000);
	CreateDynamicObject(1998, 402.78937, 206.72913, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 403.83002, 208.73209, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1998, 405.79977, 209.73985, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(2008, 404.77655, 207.70142, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2009, 399.28079, 209.68851, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1999, 398.27548, 207.66566, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2009, 396.29199, 206.67398, 1007.36719,   360.00000, 0.00000, 360.00000);
	CreateDynamicObject(1999, 397.30716, 208.67833, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 405.13614, 198.68797, 1007.36719,   3.00000, 0.00000, 40.00000);
	CreateDynamicObject(1806, 403.99408, 201.93964, 1007.36719,   356.85840, 0.00000, -0.27381);
	CreateDynamicObject(2001, 392.70721, 203.82300, 1007.40002,   0.00000, 0.00000, 2.35620);
	CreateDynamicObject(2001, 400.05869, 208.33217, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(2001, 406.24423, 200.60674, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(1806, 402.45224, 201.94583, 1007.36719,   356.85840, 0.00000, -0.27381);
	CreateDynamicObject(1806, 398.54208, 201.98740, 1007.36719,   356.85840, 0.00000, -0.27381);
	CreateDynamicObject(1806, 396.78116, 201.76532, 1007.36719,   356.85840, 0.00000, -0.27381);
	CreateDynamicObject(1806, 398.20276, 209.74106, 1007.36719,   356.85840, 0.00000, -0.27381);
	CreateDynamicObject(1806, 396.59061, 209.82210, 1007.36719,   357.00000, 0.00000, -193.00000);
	CreateDynamicObject(1806, 403.07495, 198.71400, 1007.36719,   3.00000, 0.00000, -55.00000);
	CreateDynamicObject(1806, 403.01962, 209.51520, 1007.36719,   3.00000, 0.00000, -149.00000);
	CreateDynamicObject(1806, 404.68481, 209.69321, 1007.36719,   3.00000, 0.00000, -215.00000);
	CreateDynamicObject(1806, 398.93652, 206.79149, 1007.36719,   3.00000, 0.00000, 40.00000);
	CreateDynamicObject(1806, 397.39496, 206.79083, 1007.36719,   3.00000, 0.00000, -55.00000);
	CreateDynamicObject(1806, 397.49600, 198.97701, 1007.36719,   3.00000, 0.00000, -55.00000);
	CreateDynamicObject(1806, 399.45111, 199.00618, 1007.36719,   3.00000, 0.00000, 40.00000);
	CreateDynamicObject(1806, 403.84955, 206.60876, 1007.36719,   3.00000, 0.00000, -55.00000);
	CreateDynamicObject(1806, 405.45557, 206.60748, 1007.36719,   3.00000, 0.00000, 40.00000);
	CreateDynamicObject(2164, 395.42419, 158.53920, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 395.44159, 160.60660, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 395.42010, 164.31680, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 395.40829, 166.80251, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2167, 395.46191, 172.16991, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2163, 395.47150, 173.23660, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 395.46771, 177.32249, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2163, 395.45071, 179.12669, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2161, 395.49051, 181.55960, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2162, 395.48071, 183.12000, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2186, 396.33374, 156.30034, 1007.33594,   356.85840, 0.00000, 0.00000);
	CreateDynamicObject(2002, 395.93420, 186.03090, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2169, 396.21747, 188.65045, 1007.38281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1714, 400.11539, 171.33560, 1007.38281,   3.00000, 0.00000, 120.00000);
	CreateDynamicObject(2190, 401.71158, 169.14883, 1008.10162,   0.00000, 0.00000, -164.00000);
	CreateDynamicObject(2190, 402.21439, 173.26140, 1008.10162,   0.00000, 0.00000, -53.00000);
	CreateDynamicObject(2190, 399.47949, 176.80991, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(2190, 399.49661, 181.45500, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(2190, 399.53360, 186.05650, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(2190, 399.40540, 165.38010, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(2190, 399.42068, 161.95020, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(2190, 399.43771, 157.80321, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(1714, 397.34521, 181.57777, 1007.38281,   3.00000, 0.00000, 105.00000);
	CreateDynamicObject(1714, 397.54919, 162.29880, 1007.38281,   3.00000, 0.00000, 84.00000);
	CreateDynamicObject(2001, 407.12921, 175.34694, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(2001, 406.93155, 167.93735, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(1801, 424.08841, 147.48628, 1007.38019,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(16377, 424.60583, 143.07411, 1008.36090,   0.00000, 0.00000, -25.00000);
	CreateDynamicObject(1997, 419.36258, 141.71600, 1007.38080,   0.00000, 0.00000, 215.00000);
	CreateDynamicObject(3387, 427.20129, 145.26012, 1006.18073,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2994, 423.14661, 146.70056, 1007.86267,   0.00000, 0.00000, -18.00000);
	CreateDynamicObject(2167, 427.74414, 141.07100, 1007.37500,   3.00000, 0.00000, -90.00000);
	CreateDynamicObject(2164, 427.65836, 142.92435, 1007.38220,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19903, 421.00970, 141.58229, 1007.38422,   0.00000, 0.00000, 149.00000);
	CreateDynamicObject(1721, 419.45062, 147.84911, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 420.27441, 147.85506, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 421.15579, 147.85692, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 419.11395, 155.49455, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 419.88324, 155.49831, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 420.66022, 155.53610, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1997, 419.54971, 149.98726, 1007.38080,   0.00000, 0.00000, 215.00000);
	CreateDynamicObject(19903, 421.19489, 150.34261, 1007.38422,   0.00000, 0.00000, 149.00000);
	CreateDynamicObject(2994, 422.74072, 154.53233, 1007.86267,   0.00000, 0.00000, -18.00000);
	CreateDynamicObject(16377, 424.06845, 150.76564, 1008.36090,   0.00000, 0.00000, -25.00000);
	CreateDynamicObject(1801, 423.73242, 155.24417, 1007.38019,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3387, 427.23947, 153.10025, 1006.18073,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 427.64038, 150.73344, 1007.38220,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2167, 427.71249, 148.93996, 1007.37500,   3.00000, 0.00000, -90.00000);
	CreateDynamicObject(1997, 412.39059, 138.89627, 1007.38080,   0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19903, 412.85895, 137.55309, 1007.38422,   0.00000, 0.00000, 105.00000);
	CreateDynamicObject(1721, 416.81628, 139.02765, 1007.38342,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1721, 416.82538, 138.25108, 1007.38342,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1721, 416.80676, 137.50496, 1007.38342,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2994, 414.73987, 135.11220, 1007.86267,   0.00000, 0.00000, -156.00000);
	CreateDynamicObject(1801, 416.56482, 135.10068, 1007.38019,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(3387, 414.49197, 131.73947, 1006.18073,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 411.51868, 134.06529, 1007.38220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2167, 412.01706, 131.49315, 1007.37500,   3.00000, 0.00000, -180.00000);
	CreateDynamicObject(1801, 404.57126, 154.12048, 1007.38019,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1997, 406.71771, 154.44984, 1007.38080,   0.00000, 0.00000, 353.00000);
	CreateDynamicObject(19903, 408.13727, 154.39952, 1007.38422,   0.00000, 0.00000, 171.00000);
	CreateDynamicObject(2994, 405.73718, 149.06244, 1007.86267,   0.00000, 0.00000, -267.00000);
	CreateDynamicObject(3387, 401.07504, 153.12494, 1006.18073,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(2164, 400.69208, 148.98962, 1007.34222,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2167, 400.70883, 150.84512, 1007.37500,   3.00000, 0.00000, 90.00000);
	CreateDynamicObject(1721, 409.65012, 148.60045, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 408.85919, 148.56850, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 408.12833, 148.55437, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19903, 409.97711, 145.82530, 1007.38422,   0.00000, 0.00000, 171.00000);
	CreateDynamicObject(1997, 408.00580, 146.17200, 1007.38080,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(1801, 404.75684, 146.48698, 1007.38019,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3387, 401.21362, 145.48138, 1006.18073,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(2167, 400.75641, 143.20757, 1007.37500,   3.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 400.90930, 141.30533, 1007.38220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2994, 405.26932, 145.68243, 1007.86267,   0.00000, 0.00000, -215.00000);
	CreateDynamicObject(1721, 408.03473, 140.65816, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 408.79315, 140.68774, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 409.57312, 140.71614, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16377, 404.46057, 142.14714, 1008.36090,   0.00000, 0.00000, 25.00000);
	CreateDynamicObject(16377, 403.53854, 150.13910, 1008.36090,   0.00000, 0.00000, 25.00000);
	CreateDynamicObject(1817, 402.99652, 158.03528, 1007.37500,   0.00000, 0.00000, 1.00000);
	CreateDynamicObject(1703, 404.42780, 157.03709, 1007.37500,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 402.25031, 160.07997, 1007.37500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 405.52917, 159.44566, 1007.37500,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2001, 400.31689, 185.92545, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(2001, 400.26065, 156.61852, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(19530, 379.50000, 170.20000, 1007.20410,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1569, 433.00290, 170.85530, 1007.34052,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19530, 379.50000, 170.20000, 1007.24408,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(955, 413.28375, 131.82051, 1007.54437,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(955, 401.05643, 144.33298, 1007.73792,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(955, 400.91080, 151.96339, 1007.55170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(955, 427.48419, 151.91928, 1007.51111,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(955, 427.43854, 144.10306, 1007.51111,   0.00000, 0.00000, -90.00000);
	

	//Car ซ่อมรถ
	CreateDynamicObject(0, 764.86188, -1366.64001, 12.28760,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19898, 760.73785, -1363.18445, 12.54500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19898, 770.92969, -1377.18542, 12.54500,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(19898, 762.36176, -1372.47815, 12.54500,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(19898, 770.25238, -1365.71558, 12.54500,   0.00000, 0.00000, 193.00000);
	CreateDynamicObject(19898, 761.75342, -1356.72717, 12.54500,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(19899, 765.86578, -1383.46924, 12.49820,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19899, 758.30139, -1369.92175, 12.49821,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19900, 771.94666, -1367.03015, 12.51320,   0.00000, 0.00000, 105.00000);
	CreateDynamicObject(19900, 769.80658, -1382.92859, 12.51320,   0.00000, 0.00000, 105.00000);
	CreateDynamicObject(19900, 759.59583, -1374.44824, 12.51320,   0.00000, 0.00000, 105.00000);
	CreateDynamicObject(19900, 768.15582, -1350.43091, 12.51320,   0.00000, 0.00000, 105.00000);
	CreateDynamicObject(19899, 765.83972, -1350.09717, 12.49820,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19903, 763.34290, -1380.58594, 12.51070,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(19903, 762.61469, -1351.82825, 12.51070,   0.00000, 0.00000, -62.00000);
	CreateDynamicObject(19815, 757.87915, -1360.54956, 14.24760,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19815, 757.83203, -1373.83972, 14.24760,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19817, 762.67676, -1356.49573, 11.80000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19817, 762.57825, -1365.41357, 11.80000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1327, 771.48883, -1375.81226, 12.25530,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1327, 760.28046, -1371.86316, 12.25530,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1327, 760.04572, -1352.20129, 12.25530,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18651, 772.99139, -1382.46545, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 757.26801, -1360.76270, 12.54480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 780.37451, -1384.91345, 12.71600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 777.23260, -1384.90295, 12.71598,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 774.11102, -1384.89307, 12.71598,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 780.83917, -1330.22534, 12.55600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 777.70532, -1330.19763, 12.55600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 774.53778, -1330.17004, 12.55600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19905, 765.16992, -1367.05444, 12.29220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 773.02112, -1378.42053, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 773.00806, -1380.44348, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 773.07501, -1373.53796, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 773.07971, -1369.50269, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 773.07227, -1371.48706, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 773.29486, -1364.33643, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 773.29083, -1360.42749, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 773.29407, -1362.30884, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 773.18524, -1355.47522, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 773.18750, -1353.46973, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 773.19543, -1351.48035, 12.76480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1483, 753.31134, -1353.42371, 14.30000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1483, 742.77222, -1353.42371, 14.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13667, 786.37445, -1330.29187, 31.50000,   0.00000, 0.00000, 60.00000);
	CreateDynamicObject(3472, 773.01398, -1349.21265, 14.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 786.52289, -1384.17566, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 786.68164, -1331.05957, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 743.02728, -1329.87219, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 740.19513, -1352.72815, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13667, 787.53149, -1384.29248, 31.50000,   0.00000, 0.00000, -29.00000);

	// Prison คุก
	CreateDynamicObject(14412, 2553.88281, -1293.87500, 2052.46875,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14415, 2551.88281, -1293.62500, 2059.80469,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14463, 2552.28125, -1292.33032, 2056.63965,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14411, 2520.03906, -1290.99768, 2050.44531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14416, 2533.17139, -1286.91284, 2044.07385,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2531.33594, -1284.39063, 2053.64502,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1491, 2531.35596, -1287.40564, 2053.64502,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14451, 2526.59375, -1293.92188, 2051.35156,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14435, 2541.09375, -1285.89844, 2052.71875,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2649, 2523.07813, -1298.72656, 2051.42969,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2649, 2523.07813, -1292.23438, 2051.42969,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2649, 2523.07813, -1290.50781, 2051.42969,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2200, 2522.75000, -1285.22559, 2047.28125,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2200, 2522.75000, -1287.54688, 2047.28125,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2200, 2522.75000, -1295.63281, 2047.28125,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2608, 2522.82031, -1297.17969, 2048.17969,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2608, 2522.82031, -1290.93750, 2048.17969,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2608, 2522.82031, -1289.03125, 2048.17969,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19410, 2526.74048, -1297.51208, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19410, 2526.74048, -1281.51184, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19410, 2526.74048, -1284.70691, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19410, 2526.74048, -1287.89954, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19410, 2526.74048, -1291.09204, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19410, 2526.74048, -1294.30139, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19456, 2526.74048, -1283.37122, 2052.51294,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19456, 2526.74048, -1306.98096, 2049.02637,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19456, 2526.74072, -1292.98230, 2052.51294,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19435, 2526.74658, -1297.30237, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2526.74658, -1281.64331, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2526.74658, -1285.12048, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2526.74658, -1288.59595, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2549.33008, -1294.26355, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2526.74658, -1295.54089, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(1810, 2528.35791, -1281.71497, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1810, 2528.33789, -1297.76038, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1810, 2528.35645, -1291.35645, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1810, 2528.35791, -1288.10645, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1810, 2528.35791, -1284.98999, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1810, 2528.35791, -1294.59277, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1663, 2524.84229, -1297.54919, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1663, 2524.86279, -1281.52185, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1663, 2524.86279, -1284.77966, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1663, 2524.88281, -1287.90063, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1663, 2524.86279, -1291.12183, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1663, 2524.86279, -1294.35425, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1622, 2530.09009, -1280.63306, 2052.63086,   0.00000, -12.00000, 23.00000);
	CreateDynamicObject(1886, 2522.85571, -1284.92432, 2050.66211,   22.00000, 180.00000, 133.86000);
	CreateDynamicObject(1886, 2526.27808, -1306.94690, 2053.10205,   32.00000, 0.00000, 577.97998);
	CreateDynamicObject(1886, 2530.44922, -1302.86328, 2050.66211,   34.00000, 180.00000, -33.00000);
	CreateDynamicObject(1886, 2522.91553, -1285.12915, 2050.66211,   15.00000, 180.00000, 19.86000);
	CreateDynamicObject(1886, 2522.79541, -1302.70520, 2050.66211,   15.00000, 180.00000, -200.00000);
	CreateDynamicObject(1886, 2530.36011, -1285.16187, 2050.66211,   15.00000, 180.00000, -7.38000);
	CreateDynamicObject(1886, 2530.30713, -1284.93359, 2050.66211,   22.00000, 180.00000, -144.86000);
	CreateDynamicObject(1886, 2564.89648, -1294.62891, 2053.20215,   33.00000, 0.00000, 270.00000);
	CreateDynamicObject(1886, 2530.27979, -1306.82202, 2053.10205,   30.00000, 0.00000, 561.00000);
	CreateDynamicObject(1738, 2525.62622, -1307.23767, 2047.84399,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1663, 2525.88477, -1306.25012, 2048.04077,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1788, 2522.95923, -1305.18103, 2048.12720,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2174, 2522.87207, -1305.63416, 2047.27148,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2894, 2525.14111, -1305.04883, 2048.08789,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2002, 2527.13574, -1306.88916, 2047.27478,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1958, 2526.69092, -1305.23254, 2048.93066,   90.00000, 270.00000, 0.00000);
	CreateDynamicObject(1778, 2523.03662, -1279.87708, 2047.28235,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2680, 2530.58594, -1281.85742, 2048.37036,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19302, 2567.58081, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19437, 2526.74048, -1299.66565, 2049.02637,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19304, 2530.79834, -1306.51526, 2049.00293,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(1704, 2526.11914, -1303.13757, 2047.09204,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2002, 2526.08984, -1299.61707, 2047.27478,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19302, 2526.74048, -1301.31885, 2048.54663,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, 2526.74048, -1302.15857, 2050.40283,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, 2530.84131, -1288.22937, 2051.85498,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, 2530.84131, -1296.23181, 2051.85498,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, 2530.84131, -1292.19983, 2051.85498,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19444, 2531.00439, -1282.62561, 2048.04321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 2565.36694, -1305.95496, 2047.19495,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19451, 2539.93481, -1285.61951, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2551.81689, -1295.60681, 2047.19482,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19451, 2529.90649, -1302.15662, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2565.36694, -1286.71191, 2047.19495,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19451, 2565.36694, -1296.34265, 2047.19495,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19451, 2558.79858, -1285.61951, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2558.78638, -1302.15662, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2549.14429, -1302.15662, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2539.52563, -1302.15662, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2886, 2522.09570, -1300.11316, 2048.89893,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2886, 2531.09009, -1303.83606, 2048.89893,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2886, 2526.65454, -1305.60156, 2048.89893,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2886, 2526.83887, -1302.51770, 2048.89893,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2951, 2522.40186, -1303.42090, 2048.12036,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2886, 2522.59277, -1300.13281, 2048.95703,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2886, 2530.62671, -1303.88525, 2048.89893,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1566, 2521.66675, -1307.87231, 2048.82202,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1566, 2518.50293, -1307.87988, 2048.82202,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1663, 2520.78442, -1281.56421, 2054.43628,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19444, 2531.00439, -1281.04004, 2048.04321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2538.15063, -1279.80786, 2045.02087,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2560.15210, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2540.05127, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2542.07910, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2544.12695, -1279.80457, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2546.11646, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2548.17896, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2550.04443, -1279.80737, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2552.04980, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2554.12207, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2556.19800, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2558.11060, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2567.52075, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2571.41968, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2567.63550, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2543.51831, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2545.92749, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2548.32202, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2553.11938, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2555.52368, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2557.92944, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2560.30884, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2562.71631, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2565.11523, -1286.77600, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2569.81055, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2560.35474, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2545.89453, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2550.64502, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2536.70630, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2555.45020, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 2549.16626, -1285.61951, 2047.19482,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2551.81689, -1292.18115, 2047.19482,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19457, 2545.85645, -1280.99036, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2536.32617, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2565.66284, -1298.98816, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2531.89136, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2534.25708, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2536.63477, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2539.02783, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2541.39331, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2543.78247, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2546.16455, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2548.56836, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2550.97046, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2553.36255, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2555.75562, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2558.14233, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2560.52295, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2565.06396, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2571.19238, -1305.26404, 2041.55444,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19457, 2560.56250, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2555.81055, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2551.06372, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2546.24756, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2541.42456, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2530.79834, -1305.01343, 2048.54663,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19302, 2538.77051, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2538.62622, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2548.37427, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2553.18164, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2557.98291, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2534.16187, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2562.78394, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2567.56543, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2558.04590, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2553.27100, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2548.46240, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2543.68164, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2538.93481, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2569.16406, -1281.63782, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2569.15283, -1285.11157, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2549.93628, -1281.63782, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2540.32642, -1281.63782, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2540.32959, -1285.11157, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2558.77881, -1294.26355, 2044.37109,   34.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2559.55908, -1285.11157, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(14409, 2546.61548, -1293.97754, 2044.10437,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14409, 2556.89673, -1293.95752, 2044.08435,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(970, 2535.29370, -1285.72510, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2550.18311, -1298.51697, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2553.36572, -1298.52344, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2533.20581, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2559.55054, -1281.63782, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2532.36597, -1302.17102, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2544.60620, -1294.27161, 2044.30005,   -34.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2558.77905, -1293.69690, 2044.37109,   34.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2544.60620, -1293.68262, 2044.30005,   -34.00000, 90.00000, 90.00000);
	CreateDynamicObject(19438, 2550.73291, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 2526.74658, -1292.07703, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2549.32715, -1293.69592, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2550.85229, -1293.69592, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2552.44336, -1293.69592, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2554.04175, -1293.69690, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2554.03320, -1294.26355, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2552.44385, -1294.26355, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2550.93359, -1294.26355, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2774, 2551.69336, -1293.96484, 2034.15979,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2247, 2524.64258, -1304.65479, 2048.40186,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2563.74854, -1298.52893, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2537.37134, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2559.61279, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2553.36572, -1289.35535, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2563.75391, -1289.35815, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2563.75293, -1293.52405, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2563.75293, -1297.67896, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2561.68481, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2561.64648, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2557.49683, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2555.45239, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2548.08789, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2543.92529, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2539.78394, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2550.18311, -1289.33533, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2555.44385, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2548.09497, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2543.95166, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2539.79736, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2535.65698, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2549.94409, -1285.11157, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2535.90039, -1305.65076, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2545.51294, -1305.65076, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2555.11108, -1305.65076, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2570.83105, -1305.65076, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2570.85352, -1302.17102, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2551.59790, -1302.17102, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2540.36133, -1304.14526, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2960, 2559.81689, -1291.93994, 2043.94897,   0.00000, 34.48000, 0.00000);
	CreateDynamicObject(2960, 2552.87183, -1291.93994, 2047.20349,   0.00000, 0.06000, 0.00000);
	CreateDynamicObject(2960, 2557.01978, -1291.93994, 2045.88892,   0.00000, 35.30000, 0.00000);
	CreateDynamicObject(2960, 2552.87183, -1296.01575, 2047.20349,   0.00000, 0.06000, 0.00000);
	CreateDynamicObject(2960, 2546.48901, -1291.93994, 2045.88892,   0.00000, -35.06000, 0.00000);
	CreateDynamicObject(2960, 2550.63721, -1291.93994, 2047.20349,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2960, 2543.65625, -1291.93994, 2043.92896,   0.00000, -34.48000, 0.00000);
	CreateDynamicObject(2960, 2550.63721, -1296.01575, 2047.20349,   0.00000, 0.06000, 0.00000);
	CreateDynamicObject(2960, 2546.48901, -1296.01575, 2045.88892,   0.00000, -35.06000, 0.00000);
	CreateDynamicObject(2960, 2543.65112, -1296.01575, 2043.92896,   0.00000, -34.48000, 0.00000);
	CreateDynamicObject(2960, 2557.01978, -1296.01575, 2045.88892,   0.00000, 35.36000, 0.00000);
	CreateDynamicObject(2960, 2559.81812, -1296.01575, 2043.94897,   0.00000, 34.48000, 0.00000);
	CreateDynamicObject(19394, 2538.72021, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2541.11719, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2541.07300, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2541.10522, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2543.49512, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2545.88428, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2548.26050, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2553.05688, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2555.42627, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2557.81982, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2572.47095, -1297.85950, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2538.73267, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2565.66284, -1296.59949, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2536.33325, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2540.90747, -1279.76965, 2046.63428,   0.00000, -180.00000, 90.00000);
	CreateDynamicObject(19457, 2570.28589, -1291.84058, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2550.66724, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2565.66284, -1289.46777, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2565.66284, -1291.85669, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19394, 2565.66284, -1294.22437, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2565.66016, -1283.07324, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2568.99609, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2562.59692, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2560.21338, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2562.59326, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2560.19312, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2557.81250, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2555.43237, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2553.03027, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2550.63989, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2548.25122, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2545.86890, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2543.49146, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2541.10986, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2565.66284, -1305.39331, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2535.62671, -1307.08801, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2541.12134, -1307.07678, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2545.85327, -1307.07678, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2550.66626, -1307.07678, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2555.46191, -1307.07678, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2560.17969, -1307.07678, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2560.19971, -1280.99036, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2555.43506, -1280.99036, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2550.62280, -1280.99036, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2541.97412, -1302.17102, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2540.36597, -1307.61938, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2549.97632, -1307.61938, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2559.58667, -1307.61938, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2569.19824, -1307.61938, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2570.81250, -1287.96777, 2050.69824,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 2559.58789, -1304.14526, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2549.97632, -1304.14526, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19302, 2543.58252, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2543.54761, -1285.61694, 2048.50659,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2548.31934, -1285.61694, 2048.50659,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2553.09619, -1285.61694, 2048.50659,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2557.87939, -1285.61694, 2048.50659,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2562.66406, -1285.61694, 2048.50659,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2565.66284, -1289.52795, 2048.50659,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19302, 2565.66284, -1294.29321, 2048.50659,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19302, 2565.66284, -1299.06177, 2048.50659,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19302, 2562.48926, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2557.69922, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2552.93848, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2548.16333, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2543.39233, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2564.34302, -1280.47034, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2567.33203, -1287.97815, 2050.69824,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 2567.33203, -1297.59485, 2050.69824,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 2570.81250, -1297.57996, 2050.69824,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 2569.19824, -1304.14526, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2564.34253, -1283.94714, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2545.13550, -1283.93689, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2554.73242, -1283.94714, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2545.13501, -1280.45325, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2554.77759, -1280.47034, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2571.54614, -1281.42505, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2569.95459, -1281.42505, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19457, 2540.39014, -1280.99036, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2542.19238, -1279.78955, 2050.13452,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2551.81274, -1279.78955, 2050.13452,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2561.42603, -1279.78955, 2050.13452,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2560.13232, -1279.76965, 2046.63428,   0.00000, -180.00000, 90.00000);
	CreateDynamicObject(19457, 2550.52051, -1279.76965, 2046.63428,   0.00000, -180.00000, 90.00000);
	CreateDynamicObject(2606, 2543.73438, -1294.54395, 2056.99341,   20.00000, 0.00000, -90.00000);
	CreateDynamicObject(2165, 2521.44531, -1282.87903, 2053.62549,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 2518.60571, -1287.66638, 2053.63550,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2191, 2521.13159, -1280.35461, 2053.63599,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2197, 2519.11499, -1281.39258, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2197, 2518.44482, -1281.39258, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2518.34033, -1283.80603, 2053.63501,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19388, 2526.74097, -1285.85608, 2055.97510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19431, 2526.74097, -1287.86865, 2059.43506,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19431, 2526.74097, -1284.68506, 2059.43506,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19431, 2526.74097, -1286.27380, 2059.43506,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(1491, 2522.33911, -1284.38892, 2053.62500,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1491, 2522.37207, -1287.43225, 2053.62500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1886, 2518.32739, -1299.30249, 2059.74463,   20.00000, 0.00000, 170.00000);
	CreateDynamicObject(1886, 2518.48022, -1307.29492, 2053.31421,   30.00000, 0.00000, 150.00000);
	CreateDynamicObject(19394, 2562.91553, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2565.25073, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2570.00830, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2565.95142, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2571.60986, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2571.19238, -1305.25391, 2045.01440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2562.81738, -1300.49976, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2204, 2536.65918, -1298.19995, 2056.09326,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2541, 2540.14429, -1280.33801, 2053.58179,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2542, 2542.14453, -1280.39746, 2053.58179,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2500, 2538.38550, -1288.26758, 2055.03296,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1667, 2537.98047, -1287.39075, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2537.98047, -1284.95630, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2537.98560, -1283.71130, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.43726, -1280.46753, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2537.98047, -1286.24829, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1716, 2537.27783, -1287.04565, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1716, 2537.27783, -1283.35168, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1716, 2537.27783, -1284.61926, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1716, 2537.27783, -1285.89868, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1742, 2531.50635, -1281.11768, 2053.63257,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19173, 2540.94263, -1297.89124, 2056.93262,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1557, 2539.12329, -1298.19556, 2053.64502,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1557, 2536.06885, -1298.18481, 2053.65137,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1886, 2527.50391, -1282.73120, 2059.66870,   33.00000, 0.00000, 50.00000);
	CreateDynamicObject(1795, 2566.53906, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2535.87500, -1306.90649, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1795, 2531.60718, -1308.20300, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2537.31665, -1308.20300, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2545.43237, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2550.25049, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2554.96191, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2559.71997, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2565.11646, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1795, 2542.05005, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2546.83008, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2556.47363, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2561.16699, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2570.33765, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2570.33203, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2564.25684, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2559.52246, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2554.64355, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2549.78540, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2545.03125, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2540.19946, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2551.63892, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2536.04663, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2565.64917, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2546.47168, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2541.64526, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2551.25049, -1283.41406, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2556.03271, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2560.94800, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2568.99170, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2570.27417, -1296.65173, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1795, 2571.92822, -1291.24670, 2047.30066,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1795, 2571.92822, -1296.06738, 2047.30066,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1795, 2571.92822, -1301.89099, 2047.30066,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1795, 2560.75708, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2556.04712, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2551.22852, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2546.40234, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2541.71143, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2536.20288, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2544.30688, -1283.38794, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2553.89722, -1283.38635, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2558.64600, -1283.38635, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2564.10132, -1283.38635, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2549.07275, -1283.38794, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2540.62378, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2540.27637, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2545.03735, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2549.87354, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2554.69653, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2559.41650, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2564.91382, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2570.59546, -1297.41797, 2047.28113,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2528, 2570.59546, -1292.58167, 2047.28113,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2528, 2570.59546, -1286.44446, 2047.28113,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2528, 2560.95532, -1280.41211, 2047.30115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2556.20435, -1280.41211, 2047.30115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2551.39478, -1280.41211, 2047.30115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2546.64111, -1280.41211, 2047.30115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2541.18237, -1280.41211, 2047.30115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1886, 2530.35620, -1302.70728, 2050.66211,   15.00000, 180.00000, 561.00000);
	CreateDynamicObject(1886, 2532.36792, -1294.67700, 2053.20215,   33.00000, 0.00000, 90.00000);
	CreateDynamicObject(2886, 2526.67139, -1286.87549, 2055.84766,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2886, 2526.83130, -1286.83594, 2055.84766,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2886, 2526.63452, -1302.58044, 2048.89893,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19304, 2530.84033, -1300.18018, 2051.85498,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2412, 2522.10278, -1307.26794, 2047.28308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2412, 2518.75659, -1307.26794, 2047.28308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1892, 2527.16113, -1301.80872, 2047.28296,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1892, 2526.34521, -1301.80872, 2047.28296,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1536, 2526.76099, -1286.61023, 2054.25488,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3084, 2535.65210, -1308.64075, 2051.70117,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3084, 2540.32227, -1279.48743, 2051.70117,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3084, 2541.77295, -1302.52234, 2051.70117,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3084, 2554.20044, -1302.52234, 2051.70117,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3084, 2566.63037, -1302.52234, 2051.70117,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3084, 2565.69189, -1297.14624, 2051.70117,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3084, 2565.69189, -1284.73767, 2051.70117,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3084, 2571.34912, -1285.58557, 2051.70117,   0.00000, 0.00000, 0.04000);
	CreateDynamicObject(3084, 2546.53076, -1285.58557, 2051.70117,   0.00000, 0.00000, 0.04000);
	CreateDynamicObject(3084, 2558.95508, -1285.58557, 2051.70117,   0.00000, 0.00000, 0.04000);
	CreateDynamicObject(1511, 2538.54932, -1279.96948, 2055.65381,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1488, 2538.16748, -1279.96594, 2055.66040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1520, 2538.41211, -1283.71790, 2055.09302,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1551, 2538.34326, -1283.56299, 2055.26831,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.30103, -1280.57959, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.59521, -1280.55762, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.21582, -1280.45679, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.37183, -1280.67419, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.48315, -1280.61194, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1541, 2538.88525, -1285.25745, 2054.60718,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2112, 2534.10718, -1282.02148, 2054.03564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2099, 2531.59961, -1293.22461, 2053.63330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2120, 2534.17188, -1283.66284, 2054.25537,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2120, 2535.82959, -1281.99500, 2054.25537,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2120, 2534.16455, -1280.32324, 2054.25537,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2120, 2532.42554, -1282.00000, 2054.25537,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1216, 2570.81665, -1292.88977, 2043.61707,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1216, 2570.81665, -1294.84521, 2043.61707,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1216, 2570.81665, -1293.90967, 2043.61707,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1649, 2520.27148, -1283.63806, 2057.88672,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 2532.13208, -1296.35144, 2053.63379,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 2532.12573, -1291.93237, 2053.63379,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2126, 2534.83350, -1295.81116, 2053.63477,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2126, 2534.83350, -1291.50012, 2053.63477,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2606, 2517.98999, -1282.18066, 2056.99341,   20.00000, 0.00000, 90.00000);
	CreateDynamicObject(2606, 2543.56006, -1294.54395, 2057.43335,   25.00000, 0.00000, -90.00000);
	CreateDynamicObject(2606, 2543.73438, -1296.52368, 2056.99341,   20.00000, 0.00000, -90.00000);
	CreateDynamicObject(2606, 2543.55859, -1296.52344, 2057.43335,   25.00000, 0.00000, -90.00000);
	CreateDynamicObject(2737, 2543.55762, -1295.75049, 2055.29590,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2191, 2541.53076, -1297.45337, 2053.62085,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2002, 2543.09741, -1292.91394, 2053.62427,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1703, 2539.71802, -1296.48572, 2053.59082,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1742, 2531.50171, -1283.23083, 2053.63257,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2521.23145, -1283.77698, 2056.34131,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2526.04370, -1281.57239, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2527.44629, -1281.43262, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(364, 2526.04370, -1294.42334, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2526.04370, -1291.18811, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2526.04370, -1287.95264, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2526.04370, -1284.82288, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2526.04370, -1297.58374, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2527.44629, -1297.43933, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(364, 2527.44629, -1294.26953, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(364, 2527.42725, -1291.05444, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(364, 2527.44629, -1287.81519, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(364, 2527.44629, -1284.68091, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1886, 2518.47974, -1284.52783, 2059.74463,   30.00000, 0.00000, 30.00000);
	CreateDynamicObject(3785, 2553.60376, -1293.90674, 2046.85168,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3785, 2549.97925, -1293.86963, 2046.85168,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2611, 2524.51001, -1307.35718, 2049.60620,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2008, 2524.94092, -1304.96765, 2047.28381,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2960, 2538.17285, -1286.50854, 2054.83569,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2538.67700, -1286.94922, 2054.83569,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2538.14111, -1285.42236, 2054.83569,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2538.69604, -1285.40942, 2054.83569,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2723, 2540.16870, -1288.93542, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2723, 2538.58643, -1288.66492, 2054.59546,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2723, 2538.58594, -1280.67871, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2723, 2539.23462, -1288.88843, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2723, 2538.87842, -1289.13062, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2723, 2540.18799, -1289.19165, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1775, 2543.27881, -1284.15894, 2054.71338,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1209, 2543.19458, -1285.38000, 2053.63330,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2723, 2539.55420, -1289.19336, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19431, 2526.74097, -1288.23145, 2055.97510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19431, 2526.74097, -1284.31445, 2055.97510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1297.52832, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1281.52283, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1285.00684, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1287.73279, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1290.97400, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1294.10107, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1744, 2571.25854, -1289.58777, 2043.11853,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1744, 2571.23438, -1296.87292, 2043.11853,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19325, 2530.83350, -1286.73206, 2049.19702,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2530.83350, -1299.87585, 2049.19702,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2530.83350, -1293.23999, 2049.19702,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2011, 2520.02808, -1280.22302, 2053.63525,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19174, 2520.19263, -1279.89417, 2056.82373,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2960, 2525.61108, -1286.09314, 2053.76001,   -30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2525.94214, -1286.09314, 2053.93994,   -30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2526.21362, -1286.09314, 2054.08496,   -30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2526.53394, -1286.09314, 2054.25806,   -30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2526.90283, -1285.91528, 2054.27979,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2527.23389, -1285.91528, 2054.09985,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2527.49512, -1285.91528, 2053.96191,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2527.80591, -1285.91528, 2053.80200,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2526.19165, -1283.70203, 2054.64307,   0.00000, 27.00000, 0.00000);
	CreateDynamicObject(638, 2529.13770, -1282.70935, 2054.31567,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2528.11987, -1285.91528, 2053.64209,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2526.19189, -1288.11804, 2054.64209,   0.00000, 27.00000, 0.00000);
	CreateDynamicObject(638, 2529.13770, -1289.07092, 2054.31567,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(16779, 2537.63452, -1288.59094, 2059.65186,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19456, 2526.74048, -1302.60168, 2052.51294,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(2186, 2524.50903, -1306.91565, 2047.28406,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2723, 2538.16943, -1280.67786, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2561.22314, -1302.17102, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2561.21387, -1305.65076, 2046.53833,   0.00000, 90.00000, 90.00000);

	// Disable Garage
	CreateDynamicObject(971, 1968.47839, 2162.16748, 11.31600,   0.00000, 0.00000, -90.00000); // LV
	CreateDynamicObject(971, 720.07300, -462.58569, 17.23430,   0.00000, 0.00000, 0.00000); // Dillimore
	CreateDynamicObject(971, -99.92000, 1111.42896, 20.90000,   0.00000, 0.00000, 0.00000); // Fort Carson
	CreateDynamicObject(971, -1420.69995, 2591.14771, 56.94000,   0.00000, 0.00000, -180.00000); // LV
	CreateDynamicObject(971, -1935.00000, 239.48129, 35.51500,   0.00000, 0.00000, 0.00000); // SF
	CreateDynamicObject(971, -1904.47009, 277.84760, 43.50000,   0.00000, 0.00000, 0.00000); // SF
	CreateDynamicObject(971, 2071.62280, -1830.77295, 14.94440,   0.00000, 0.00000, 90.00000); // LS
	CreateDynamicObject(971, 1025.79028, -1029.45764, 32.00000,   0.00000, 0.00000, 0.00000); // LS
	CreateDynamicObject(971, 1042.33875, -1025.97498, 31.87860,   0.00000, 0.00000, 0.00000); // LS
	CreateDynamicObject(971, 488.26001, -1735.25928, 12.73790,   0.00000, 0.00000, -7.80000); // LS
	CreateDynamicObject(971, -2425.36475, 1028.08203, 52.70790,   0.00000, 0.00000, 180.00000); // SF
	CreateDynamicObject(971, 2394.18579, 1483.60706, 13.36593,   0.00000, 0.00000, 0.00000); // LV
	CreateDynamicObject(971, 2387.00000, 1043.56226, 12.29850,   0.00000, 0.00000, 0.00000); // LV

	// Black market
	CreateDynamicObject(1649,2357.69995117,-648.50000000,128.30000305,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (1)
	CreateDynamicObject(1649,2357.69995117,-648.50000000,128.19999695,0.00000000,0.00000000,272.00000000); //object(wglasssmash) (2)
	CreateDynamicObject(1491,2353.89990234,-656.70001221,126.62000275,0.00000000,0.00000000,90.00000000); //object(gen_doorint01) (1)
	CreateDynamicObject(10150,2351.59960938,-659.19921875,128.00000000,0.00000000,0.00000000,90.00000000); //object(fdorsfe) (1)
	CreateDynamicObject(1491,2354.89990234,-650.82000732,126.62000275,0.00000000,0.00000000,0.00000000); //object(gen_doorint01) (2)
	CreateDynamicObject(1491,2354.00000000,-647.61999512,127.00000000,0.00000000,0.00000000,268.00000000); //object(gen_doorint01) (3)
	CreateDynamicObject(1649,2349.00000000,-651.70001221,128.19999695,0.00000000,0.00000000,270.00000000); //object(wglasssmash) (3)
	CreateDynamicObject(1649,2349.00000000,-651.70001221,128.19999695,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (4)
	CreateDynamicObject(1649,2349.00000000,-656.00000000,128.50000000,0.00000000,0.00000000,90.00000000); //object(wglasssmash) (5)
	CreateDynamicObject(1649,2349.00000000,-656.00000000,128.19999695,0.00000000,0.00000000,270.00000000); //object(wglasssmash) (6)
	CreateDynamicObject(2173,2352.00000000,-647.50000000,127.09999847,0.00000000,0.00000000,180.00000000); //object(med_office_desk_3) (1)
	CreateDynamicObject(2123,2351.60009766,-646.79998779,127.69999695,0.00000000,0.00000000,90.00000000); //object(swank_din_chair_4) (1)
	CreateDynamicObject(1550,2353.39990234,-646.29998779,127.50000000,0.00000000,0.00000000,0.00000000); //object(cj_money_bag) (1)
	CreateDynamicObject(1550,2353.39990234,-646.90002441,127.50000000,0.00000000,0.00000000,0.00000000); //object(cj_money_bag) (2)
	CreateDynamicObject(1550,2352.89990234,-646.29998779,127.50000000,0.00000000,0.00000000,0.00000000); //object(cj_money_bag) (3)
	CreateDynamicObject(1550,2349.80004883,-653.29998779,128.30000305,0.00000000,0.00000000,0.00000000); //object(cj_money_bag) (6)
	CreateDynamicObject(2173,2349.89990234,-653.20001221,127.09999847,0.00000000,0.00000000,90.00000000); //object(med_office_desk_3) (2)
	CreateDynamicObject(1550,2349.69995117,-652.79998779,128.30000305,0.00000000,0.00000000,0.00000000); //object(cj_money_bag) (7)
	CreateDynamicObject(1578,2349.89990234,-652.20001221,127.87000275,0.00000000,0.00000000,0.00000000); //object(drug_green) (1)
	CreateDynamicObject(1212,2351.10009766,-647.79998779,127.90000153,0.00000000,0.00000000,0.00000000); //object(money) (1)
	CreateDynamicObject(1212,2350.80004883,-647.79998779,127.90000153,0.00000000,0.00000000,0.00000000); //object(money) (2)
	CreateDynamicObject(1212,2351.10009766,-647.50000000,127.90000153,0.00000000,0.00000000,0.00000000); //object(money) (3)
	CreateDynamicObject(1212,2350.80004883,-647.50000000,127.90000153,0.00000000,0.00000000,0.00000000); //object(money) (4)
	CreateDynamicObject(1210,2349.50000000,-651.59997559,127.19999695,0.00000000,0.00000000,0.00000000); //object(briefcase) (1)
	CreateDynamicObject(1215,2354.00000000,-650.50000000,127.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,2357.50000000,-650.59997559,127.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,2354.00000000,-646.40002441,127.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,2357.39990234,-646.40002441,127.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,2353.50000000,-659.00000000,127.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,2349.39990234,-659.00000000,127.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
	CreateDynamicObject(1215,2349.50000000,-646.50000000,127.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (7)
	CreateDynamicObject(1215,2356.60009766,-651.09997559,127.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (
	CreateDynamicObject(1215,2354.80004883,-651.09997559,127.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (9)
	CreateDynamicObject(1215,2354.19995117,-656.90002441,127.69999695,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,2354.19995117,-655.00000000,127.59999847,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
	CreateDynamicObject(1723,2357.00000000,-647.50000000,127.09999847,0.00000000,0.00000000,272.00000000); //object(mrk_seating1) (1)
	CreateDynamicObject(948,2353.19995117,-650.79998779,127.09999847,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (1)
	CreateDynamicObject(948,2353.19995117,-651.59997559,127.09999847,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (2)
	CreateDynamicObject(948,2353.19995117,-652.40002441,127.09999847,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (3)
	CreateDynamicObject(948,2353.19995117,-653.20001221,127.09999847,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (4)
	CreateDynamicObject(948,2353.19995117,-654.09997559,127.09999847,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (5)
	CreateDynamicObject(2248,2356.89990234,-650.29998779,127.59999847,0.00000000,0.00000000,0.00000000); //object(plant_pot_16) (1)

	//หน้าโรงบาล
	/*CreateDynamicObject(19853, 1230.51904, -1354.37878, 12.36000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19853, 1231.24915, -1292.07654, 12.36000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1216.76941, -1300.57068, 15.00000,   0.00000, 0.00000, 90.06000);
	CreateDynamicObject(3660, 1244.52258, -1300.86609, 15.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3660, 1216.76941, -1320.20544, 15.00000,   0.00000, 0.00000, 89.94000);
	CreateDynamicObject(3660, 1244.52258, -1320.49829, 15.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3660, 1244.69897, -1375.15112, 15.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3660, 1244.68188, -1355.54468, 15.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3660, 1216.76941, -1355.71985, 15.00000,   0.00000, 0.00000, 90.06000);
	CreateDynamicObject(3660, 1216.76941, -1375.24976, 15.00000,   0.00000, 0.00000, 89.94000);
	CreateDynamicObject(1597, 1230.89258, -1371.07849, 14.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1597, 1230.38123, -1347.83984, 15.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1597, 1230.53174, -1295.90112, 14.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1597, 1230.60681, -1308.17419, 14.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1597, 1230.60449, -1321.52100, 15.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1242.51855, -1355.26782, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3715, 1230.87976, -1291.02869, 20.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3715, 1230.75586, -1384.60083, 20.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1341, 1242.54736, -1377.41309, 13.30000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1571, 1242.32324, -1366.43555, 13.60000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1281, 1242.41101, -1372.69690, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1340, 1242.43982, -1360.26172, 13.50000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1341, 1242.86182, -1351.34253, 13.30000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1568, 1230.90588, -1314.90100, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1230.47681, -1302.02759, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1230.30774, -1353.88611, 13.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1231.02686, -1379.04932, 12.35051,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1231.31689, -1334.20007, 12.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1230.93030, -1334.25549, 12.32714,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1242.68787, -1321.22119, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 1242.65295, -1308.62231, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 1242.53198, -1296.30164, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 1219.40576, -1355.01355, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 1219.38892, -1366.66296, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 1219.42603, -1379.60742, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1341, 1218.91809, -1298.95288, 13.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 1219.65417, -1302.32520, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1340, 1219.59766, -1306.26965, 13.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1571, 1220.11157, -1311.52124, 13.60000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 1219.47888, -1317.16870, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1341, 1219.03259, -1321.27893, 13.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1230.87036, -1362.73279, 13.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1218.83337, -1296.18420, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1218.90405, -1314.62537, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1218.98340, -1327.69788, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1243.07507, -1302.20508, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1243.09399, -1315.05725, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1243.04077, -1328.46118, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1243.03247, -1348.03113, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1242.81836, -1369.45435, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1242.81616, -1380.51514, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1219.90198, -1372.39221, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1219.52075, -1360.38464, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1219.27991, -1348.41907, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 1213.84680, -1357.27454, 13.80000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 1214.00647, -1373.91968, 13.80000,   0.00000, 0.00000, 0.00000);
	*/

	//ฟรีรันนิ่งใหม่
	CreateDynamicObject(9741, -3395.04, 1575.80, -9.33,   356.86, 0.00, 3.14);
	CreateDynamicObject(8483, -3386.99, 1573.39, 20.26,   0.00, 0.00, 180.00);
	CreateDynamicObject(16113, -3393.07, 1541.06, 14.58,   0.00, 0.00, 55.00);
	CreateDynamicObject(16113, -3383.60, 1598.03, 14.58,   0.00, 0.00, 207.00);
	CreateDynamicObject(16113, -3370.63, 1568.23, 14.58,   0.00, 0.00, 134.00);
	CreateDynamicObject(7916, -3387.28, 1578.05, 28.07,   0.00, 0.00, 276.19);
	CreateDynamicObject(3374, -3418.60, 1571.03, 21.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(3374, -3413.39, 1570.99, 15.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(3374, -3415.64, 1571.01, 18.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(3743, -3426.89, 1570.70, 26.31,   0.00, 0.00, -90.00);
	CreateDynamicObject(3578, -3438.25, 1570.69, 28.22,   0.00, 0.00, 0.00);
	CreateDynamicObject(3578, -3448.54, 1570.71, 28.22,   0.00, 0.00, 0.00);
	CreateDynamicObject(3578, -3476.65, 1570.79, 35.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(3578, -3457.87, 1570.70, 29.90,   0.00, 22.00, 0.00);
	CreateDynamicObject(3578, -3467.12, 1570.73, 33.61,   0.00, 22.00, 0.00);
	CreateDynamicObject(13562, -3484.42, 1571.33, 28.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3489.39, 1571.13, 28.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3493.96, 1571.03, 28.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3499.09, 1570.69, 28.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3502.60, 1575.25, 28.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3504.43, 1568.19, 28.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3508.67, 1573.01, 28.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(12990, -3525.56, 1572.63, 35.28,   0.00, 0.00, 90.00);
	CreateDynamicObject(3565, -3549.56, 1573.06, 46.74,   0.00, 0.00, 90.00);
	CreateDynamicObject(3565, -3540.14, 1573.04, 36.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(3565, -3542.41, 1573.02, 39.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(3565, -3544.67, 1573.06, 41.73,   0.00, 0.00, 90.00);
	CreateDynamicObject(3565, -3547.07, 1573.06, 44.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(3502, -3555.02, 1572.58, 49.72,   0.00, 0.00, 90.00);
	CreateDynamicObject(3502, -3563.59, 1572.59, 49.72,   0.00, 0.00, 90.00);
	CreateDynamicObject(3502, -3571.99, 1572.60, 49.72,   0.00, 0.00, 90.00);
	CreateDynamicObject(3631, -3580.30, 1572.52, 47.57,   0.00, 0.00, 0.00);
	CreateDynamicObject(3631, -3588.83, 1572.58, 47.57,   0.00, 0.00, 0.00);
	CreateDynamicObject(16481, -3610.71, 1572.54, 52.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(11496, -3636.76, 1572.38, 58.12,   0.00, 0.00, 90.00);
	CreateDynamicObject(18841, -3654.36, 1588.89, 63.18,   90.00, 0.00, 0.00);
	CreateDynamicObject(974, -3652.45, 1601.60, 58.77,   0.00, 0.00, 292.13);
	CreateDynamicObject(974, -3650.89, 1574.84, 58.27,   0.00, 0.00, 66.04);
	CreateDynamicObject(974, -3656.81, 1579.95, 58.27,   0.00, 0.00, 27.39);
	CreateDynamicObject(3578, -3659.34, 1585.86, 59.65,   0.00, -41.00, 97.00);
	CreateDynamicObject(974, -3658.97, 1589.33, 60.31,   0.00, 0.00, 348.48);
	CreateDynamicObject(13749, -3642.66, 1594.37, 63.44,   0.00, 0.00, 229.48);
	CreateDynamicObject(16644, -3630.29, 1582.77, 69.97,   0.00, 0.00, 358.73);
	CreateDynamicObject(16640, -3614.71, 1587.51, 73.33,   0.00, 0.00, 0.00);
	CreateDynamicObject(18984, -3672.57, 1592.72, 78.84,   0.00, 0.00, 90.00);
	CreateDynamicObject(18827, -3770.09, 1592.72, 78.84,   0.00, 0.00, 90.00);
	CreateDynamicObject(6052, -3828.30, 1586.32, 76.26,   0.00, 0.00, 276.12);
	CreateDynamicObject(13648, -3837.85, 1557.47, 78.45,   0.00, 0.00, 355.16);
	CreateDynamicObject(18566, -3839.71, 1534.08, 78.88,   0.00, 0.00, 178.00);
	CreateDynamicObject(18566, -3839.91, 1531.81, 78.88,   0.00, 0.00, 359.36);
	CreateDynamicObject(18367, -3840.03, 1529.99, 78.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3840.29, 1498.08, 75.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3843.33, 1493.76, 75.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3836.10, 1493.40, 75.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3833.32, 1487.82, 75.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3839.72, 1487.27, 75.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3845.92, 1486.28, 75.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3835.87, 1481.11, 75.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3842.48, 1480.49, 75.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(13562, -3838.71, 1475.13, 75.10,   0.00, 0.00, 0.00);
	CreateDynamicObject(18367, -3838.07, 1472.80, 81.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(18767, -3835.02, 1437.17, 90.32,   0.00, 0.00, 180.00);
	CreateDynamicObject(18762, -3832.03, 1442.79, 92.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(16644, -3825.04, 1444.75, 95.22,   0.00, 0.00, 0.00);
	CreateDynamicObject(18783, -3807.29, 1397.97, 101.66,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, -3807.17, 1431.31, 96.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, -3805.81, 1432.81, 95.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, -3803.61, 1429.18, 97.22,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, -3804.59, 1431.22, 96.30,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, -3805.76, 1429.17, 97.22,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, -3808.08, 1429.01, 97.22,   0.00, 0.00, 0.00);
	CreateDynamicObject(18786, -3807.29, 1417.74, 101.66,   0.00, 0.00, 90.00);
	CreateDynamicObject(18783, -3805.26, 1443.27, 92.68,   0.00, 0.00, 0.00);
	CreateDynamicObject(3533, -3801.31, 1398.64, 103.54,   90.00, 0.00, -7.00);
	CreateDynamicObject(3533, -3811.28, 1398.35, 103.54,   90.00, 0.00, 0.00);
	CreateDynamicObject(3533, -3799.93, 1398.71, 103.54,   90.00, 0.00, 22.00);
	CreateDynamicObject(3533, -3813.19, 1398.15, 103.54,   90.00, 0.00, 22.00);
	CreateDynamicObject(3533, -3804.84, 1398.37, 103.54,   90.00, 0.00, -3.00);
	CreateDynamicObject(3533, -3814.73, 1398.18, 103.54,   90.00, 0.00, 0.00);
	CreateDynamicObject(3533, -3803.13, 1398.55, 103.54,   90.00, 0.00, 22.00);
	CreateDynamicObject(3533, -3807.82, 1398.53, 103.54,   90.00, 0.00, 0.00);
	CreateDynamicObject(3534, -3808.04, 1391.44, 104.95,   0.00, 0.00, 0.00);
}

// --> ระบบ Animation ส่วนตัว
Dialog:D_Animlist(playerid, response, listitem, inputtext[])
{
	if(response) {
		switch(listitem)
		{
			case 0: //
			{
				ClearAnimations(playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			}
			case 1: //
			{
				ApplyAnimation(playerid, "ROB_BANK","SHP_HandsUp_Scr",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 2: //
			{
				ApplyAnimation(playerid, "ped", "cower",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 3: //
			{
				ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.1, 0, 1, 1, 1, 1, 1);
			}
			case 4: //
			{
				SetPlayerSpecialAction(playerid, 68);
			}
			case 5: //
			{
				ApplyAnimation(playerid,"PED","KO_skid_front",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 6: //
			{
				ApplyAnimation(playerid, "PED","FLOOR_hit_f", 4.1, 0, 1, 1, 1, 1, 1);
			}
			case 7: //
			{
				ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.1, 0, 1, 1, 1, 1, 1); // Arms crossed
			}
			case 8:
			{
				ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1, 0, 1, 1, 0, 0, 1);
			}
			case 9: //seat 7
			{
				ApplyAnimation(playerid,"ped","SEAT_down",4.1, 0, 0, 0, 1, 0, 0);
			}
			case 10: //taxiL
			{
				ApplyAnimation(playerid,"MISC","Hiker_Pose_L",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 11: //taxiR
			{
				ApplyAnimation(playerid,"MISC","Hiker_Pose",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 12: //smoke 1
			{
				ApplyAnimation(playerid,"SMOKING","M_smk_in",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 13: //smoke 2
			{
				ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 14: //angry
			{
				ApplyAnimation(playerid,"RIOT","RIOT_ANGRY",4.1, 0, 1, 1, 1, 1, 1);
			}
		}
	}
	return 1;
}

// --> ระบบบ้าน Dynamic

forward House_Load();
public House_Load()
{
	new
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_HOUSES)
	{

		HouseData[i][houseExists] = true;
		HouseData[i][houseLights] = true;

		cache_get_value_name_int(i, "houseID", HouseData[i][houseID]);
		cache_get_value_name_int(i, "houseOwner", HouseData[i][houseOwner]);
		cache_get_value_name_int(i, "housePrice", HouseData[i][housePrice]);

	    cache_get_value_name(i, "houseAddress", HouseData[i][houseAddress], 32);

		cache_get_value_name_float(i, "housePosX", HouseData[i][housePos][0]);
		cache_get_value_name_float(i, "housePosY", HouseData[i][housePos][1]);
		cache_get_value_name_float(i, "housePosZ", HouseData[i][housePos][2]);
		cache_get_value_name_float(i, "housePosA", HouseData[i][housePos][3]);

		cache_get_value_name_float(i, "houseIntX", HouseData[i][houseInt][0]);
		cache_get_value_name_float(i, "houseIntY", HouseData[i][houseInt][1]);
		cache_get_value_name_float(i, "houseIntZ", HouseData[i][houseInt][2]);
		cache_get_value_name_float(i, "houseIntA", HouseData[i][houseInt][3]);

		cache_get_value_name_int(i, "houseInterior", HouseData[i][houseInterior]);
		cache_get_value_name_int(i, "houseExterior", HouseData[i][houseExterior]);
		cache_get_value_name_int(i, "houseExteriorVW", HouseData[i][houseExteriorVW]);
		cache_get_value_name_int(i, "houseLocked", HouseData[i][houseLocked]);
		cache_get_value_name_int(i, "houseMoney", HouseData[i][houseMoney]);

		House_Refresh(i);
	}
	return 1;
}

House_Save(houseid)
{
	new
	    query[1536];

	format(query, sizeof(query), "UPDATE `houses` SET `houseOwner` = '%d', `housePrice` = '%d', `houseAddress` = '%s', `housePosX` = '%.4f', `housePosY` = '%.4f', `housePosZ` = '%.4f', `housePosA` = '%.4f', `houseIntX` = '%.4f', `houseIntY` = '%.4f', `houseIntZ` = '%.4f', `houseIntA` = '%.4f', `houseInterior` = '%d', `houseExterior` = '%d', `houseExteriorVW` = '%d'",
	    HouseData[houseid][houseOwner],
	    HouseData[houseid][housePrice],
	    HouseData[houseid][houseAddress],
	    HouseData[houseid][housePos][0],
	    HouseData[houseid][housePos][1],
	    HouseData[houseid][housePos][2],
	    HouseData[houseid][housePos][3],
	    HouseData[houseid][houseInt][0],
	    HouseData[houseid][houseInt][1],
	    HouseData[houseid][houseInt][2],
	    HouseData[houseid][houseInt][3],
        HouseData[houseid][houseInterior],
        HouseData[houseid][houseExterior],
        HouseData[houseid][houseExteriorVW]
	);
	for (new i = 0; i < 10; i ++) {
		format(query, sizeof(query), "%s, `houseWeapon%d` = '%d', `houseAmmo%d` = '%d'", query, i + 1, HouseData[houseid][houseWeapons][i], i + 1, HouseData[houseid][houseAmmo][i]);
	}
	format(query, sizeof(query), "%s, `houseLocked` = '%d', `houseMoney` = '%d' WHERE `houseID` = '%d'",
	    query,
	    HouseData[houseid][houseLocked],
	    HouseData[houseid][houseMoney],
        HouseData[houseid][houseID]
	);
	return mysql_tquery(g_SQL, query);
}

House_Inside(playerid)
{
	if (playerData[playerid][pHouse] != -1)
	{
	    for (new i = 0; i != MAX_HOUSES; i ++) if (HouseData[i][houseExists] && HouseData[i][houseID] == playerData[playerid][pHouse] && GetPlayerInterior(playerid) == HouseData[i][houseInterior] && GetPlayerVirtualWorld(playerid) > 0) {
	        return i;
		}
	}
	return -1;
}

/*House_Area(playerid)
{
	new
        Float:fDistance[2] = {99999.0, 0.0},
		h = -1;

	for (new i = 0; i != MAX_HOUSES; i ++) {
		if (HouseData[i][houseExists])
		{
	        if(GetPlayerInterior(playerid) == HouseData[i][houseInterior] && GetPlayerVirtualWorld(playerid) > 0 && HouseData[i][houseID] == playerData[playerid][pHouse])
	        {
         		h = i;
         		break;
			}
			if(IsPlayerInRangeOfPoint(playerid, 15, HouseData[i][housePos][0], HouseData[i][housePos][1], HouseData[i][housePos][2]))
			{
			    fDistance[1] = GetPlayerDistanceFromPoint(playerid, HouseData[i][housePos][0], HouseData[i][housePos][1], HouseData[i][housePos][2]);

				if (fDistance[1] < fDistance[0])
				{
				    fDistance[0] = fDistance[1];
				    h = i;
				}
			}
		}
	}
	return h;
}*/

House_Nearest(playerid)
{
    for (new i = 0; i != MAX_HOUSES; i ++) if (HouseData[i][houseExists] && IsPlayerInRangeOfPoint(playerid, 2.5, HouseData[i][housePos][0], HouseData[i][housePos][1], HouseData[i][housePos][2]))
	{
		if (GetPlayerInterior(playerid) == HouseData[i][houseExterior] && GetPlayerVirtualWorld(playerid) == HouseData[i][houseExteriorVW])
			return i;
	}
	return -1;
}

House_Refresh(houseid)
{
	if (houseid != -1 && HouseData[houseid][houseExists])
	{
		if (IsValidDynamic3DTextLabel(HouseData[houseid][houseText3D]))
		    DestroyDynamic3DTextLabel(HouseData[houseid][houseText3D]);

		if (IsValidDynamicPickup(HouseData[houseid][housePickup]))
		    DestroyDynamicPickup(HouseData[houseid][housePickup]);

		if (IsValidDynamicMapIcon(HouseData[houseid][houseMapIcon]))
		    DestroyDynamicMapIcon(HouseData[houseid][houseMapIcon]);

		new
			string[512];

		if (!HouseData[houseid][houseOwner]) {
			format(string, sizeof(string), "{0BF5C7}[{FFFFFF}บ้านพักอาศัย{0BF5C7}]\n{FFFFFF}ราคาบ้าน : {FFFFFF}[{0D9D13}%s{FFFFFF}]\n{FFFFFF}ชื่อบ้าน : {FFFFFF}[{F5150B}%s{FFFFFF}]", FormatNumber(HouseData[houseid][housePrice]), HouseData[houseid][houseAddress]);
            HouseData[houseid][houseText3D] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, HouseData[houseid][housePos][0], HouseData[houseid][housePos][1], HouseData[houseid][housePos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, HouseData[houseid][houseExteriorVW], HouseData[houseid][houseExterior]);
		}
		else {
			format(string, sizeof(string), "{0BF5C7}[{FFFFFF}บ้านพักอาศัย{0BF5C7}]\n{FFFFFF}ราคาบ้าน : {FFFFFF}[{0D9D13}%s{FFFFFF}]\n{FFFFFF}ชื่อบ้าน : {FFFFFF}[{F5150B}%s{FFFFFF}]", FormatNumber(HouseData[houseid][housePrice]), HouseData[houseid][houseAddress]);
            HouseData[houseid][houseText3D] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, HouseData[houseid][housePos][0], HouseData[houseid][housePos][1], HouseData[houseid][housePos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, HouseData[houseid][houseExteriorVW], HouseData[houseid][houseExterior]);
		}
        HouseData[houseid][housePickup] = CreateDynamicPickup(1273, 23, HouseData[houseid][housePos][0], HouseData[houseid][housePos][1], HouseData[houseid][housePos][2], HouseData[houseid][houseExteriorVW], HouseData[houseid][houseExterior]);
        HouseData[houseid][houseMapIcon] = CreateDynamicMapIcon(HouseData[houseid][housePos][0], HouseData[houseid][housePos][1], HouseData[houseid][housePos][2], (HouseData[houseid][houseOwner] != 0) ? (32) : (31), 0, HouseData[houseid][houseExteriorVW], HouseData[houseid][houseExterior]);
	}
	return 1;
}

House_Create(playerid, const address[], price)
{
	new
	    Float:x,
	    Float:y,
	    Float:z,
		Float:angle;

	if (GetPlayerPos(playerid, x, y, z) && GetPlayerFacingAngle(playerid, angle))
	{
		for (new i = 0; i != MAX_HOUSES; i ++)
		{
	    	if (!HouseData[i][houseExists])
		    {
    	        HouseData[i][houseExists] = true;
        	    HouseData[i][houseOwner] = 0;
            	HouseData[i][housePrice] = price;
            	HouseData[i][houseMoney] = 0;

				format(HouseData[i][houseAddress], 32, address);

    	        HouseData[i][housePos][0] = x;
    	        HouseData[i][housePos][1] = y;
    	        HouseData[i][housePos][2] = z;
    	        HouseData[i][housePos][3] = angle;

                HouseData[i][houseInt][0] = 2269.8772;
                HouseData[i][houseInt][1] = -1210.3240;
                HouseData[i][houseInt][2] = 1047.5625;
                HouseData[i][houseInt][3] = 90.0000;

				HouseData[i][houseInterior] = 10;
				HouseData[i][houseExterior] = GetPlayerInterior(playerid);
				HouseData[i][houseExteriorVW] = GetPlayerVirtualWorld(playerid);

				HouseData[i][houseLights] = true;
				HouseData[i][houseLocked] = false;

				House_Refresh(i);
				mysql_tquery(g_SQL, "INSERT INTO `houses` (`houseOwner`) VALUES(0)", "OnHouseCreated", "d", i);
				return i;
			}
		}
	}
	return -1;
}

House_Delete(houseid)
{
	if (houseid != -1 && HouseData[houseid][houseExists])
	{
	    new
	        string[64];

		format(string, sizeof(string), "DELETE FROM `houses` WHERE `houseID` = '%d'", HouseData[houseid][houseID]);
		mysql_tquery(g_SQL, string);

        if (IsValidDynamic3DTextLabel(HouseData[houseid][houseText3D]))
		    DestroyDynamic3DTextLabel(HouseData[houseid][houseText3D]);

		if (IsValidDynamicPickup(HouseData[houseid][housePickup]))
		    DestroyDynamicPickup(HouseData[houseid][housePickup]);

		if (IsValidDynamicMapIcon(HouseData[houseid][houseMapIcon]))
		    DestroyDynamicMapIcon(HouseData[houseid][houseMapIcon]);

	    HouseData[houseid][houseExists] = false;
	    HouseData[houseid][houseOwner] = 0;
	    HouseData[houseid][houseID] = 0;
	}
	return 1;
}

House_IsOwner(playerid, houseid)
{
	if (playerData[playerid][pID] == -1)
	    return 0;

    if ((HouseData[houseid][houseExists] && HouseData[houseid][houseOwner] != 0) && HouseData[houseid][houseOwner] == playerData[playerid][pID])
		return 1;

	return 0;
}

stock GetFreeFashionSlot(playerid)
{
    for (new i = 0; i < MAX_FASHION_SLOTS; i++)
    {
        if (!FashionUsed[playerid][i]) return i;
    }
    return -1;
}

stock GetFashionSlotByName(playerid, const name[])
{
    for (new i = 0; i < MAX_FASHION_SLOTS; i++)
    {
        if (FashionUsed[playerid][i] && !strcmp(FashionName[playerid][i], name, true))
            return i;
    }
    return -1;
}

stock House_GetFreeID(houseid)
{
	if (houseid == -1 || !HouseData[houseid][houseExists])
	    return 0;

	for (new i = 0; i < MAX_HOUSE_STORAGE; i ++)
	{
	    if (!HouseStorage[houseid][i][hItemExists])
	        return i;
	}
	return -1;
}

stock House_GetFreeIDEx(houseid, item[], extended)
{
	if (houseid == -1 || !HouseData[houseid][houseExists])
	    return 0;

	for (new i = 0; i < MAX_HOUSE_STORAGE; i ++)
	{
	    if (!HouseStorage[houseid][i][hItemExists])
	        continue;

        if (!strcmp(HouseStorage[houseid][i][hItemName], item) && HouseStorage[houseid][i][hItemExtended] == extended) return i;
	}
	return -1;
}

stock GetHouseByID(sqlid)
{
	for (new i = 0; i != MAX_HOUSES; i ++) if (HouseData[i][houseExists] && HouseData[i][houseID] == sqlid)
	    return i;

	return -1;
}

forward OnHouseCreated(houseid);
public OnHouseCreated(houseid)
{
	if (houseid == -1 || !HouseData[houseid][houseExists])
	    return 0;

	HouseData[houseid][houseID] = cache_insert_id();
	House_Save(houseid);

	return 1;
}

GetPlayerSQLID(playerid)
{
	return (playerData[playerid][pID]);
}

House_GetCount(playerid)
{
	new
		count = 0;

	for (new i = 0; i != MAX_HOUSES; i ++)
	{
		if (HouseData[i][houseExists] && House_IsOwner(playerid, i))
   		{
   		    count++;
		}
	}
	return count;
}

stock SendAdminAlert(color, const str[], {Float,_}:...)
{
	static
	    args,
	    start,
	    end,
	    string[144]
	;
	#emit LOAD.S.pri 8
	#emit STOR.pri args

	if (args > 8)
	{
		#emit ADDR.pri str
		#emit STOR.pri start

	    for (end = start + (args - 8); end > start; end -= 4)
		{
	        #emit LREF.pri end
	        #emit PUSH.pri
		}
		#emit PUSH.S str
		#emit PUSH.C 144
		#emit PUSH.C string

		#emit LOAD.S.pri 8
		#emit ADD.C 4
		#emit PUSH.pri

		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

        foreach (new i : Player)
		{
			if (playerData[i][pAdmin] >= 1) {
  				SendClientMessage(i, color, string);
			}
		}
		return 1;
	}
	foreach (new i : Player)
	{
		if (playerData[i][pAdmin] >= 1) {
			SendClientMessage(i, color, str);
		}
	}
	return 1;
}

forward ModCar(playerid);
public ModCar(playerid)
{
	switch(pmodelid[playerid])
	{
        case 562,565,559,561,560,575,534,567,536,535,576,411,579,602,496,518,527,589,597,419,
		533,526,474,545,517,410,600,436,580,439,549,491,445,604,507,585,587,466,492,546,551,516,
		426, 547, 405, 409, 550, 566, 540, 421,	529,431,438,437,420,525,552,416,433,427,490,528,
		407,544,470,598,596,599,601,428,499,609,524,578,486,406,573,455,588,403,514,423,
		414,443,515,456,422,482,530,418,572,413,440,543,583,478,554,402,542,603,475,568,504,457,
        483,508,429,541,415,480,434,506,451,555,477,400,404,489,479,442,458,467,558:
		{
		    ShowMenuForPlayer(TuningMenu, playerid);
		    TogglePlayerControllable(playerid,0);
 			return SendClientMessage(playerid, COLOR_WHITE, "[Server]: เลือกรายการแล้วกดปุ่ม Spacebar");
		}
		default: return SendClientMessage(playerid,COLOR_RED,"[Server]: คุณไม่สามารถแต่งรถคันนี้ได้");
	}
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
    new Menu:Current = GetPlayerMenu(playerid);
	if(Current == TuningMenu)
	{
	    switch(row)
		{
	        case 0:	ShowMenuForPlayer(Paintjobs, playerid);
	        case 1:	ShowMenuForPlayer(Colors, playerid);
	        case 2: ShowMenuForPlayer(Exhausts, playerid);
	        case 3:ShowMenuForPlayer(Frontbumper, playerid);
	        case 4:ShowMenuForPlayer(Rearbumper, playerid);
	        case 5:ShowMenuForPlayer(Roof, playerid);
	        case 6:ShowMenuForPlayer(Spoilers, playerid);
	        case 7:ShowMenuForPlayer(Sideskirts, playerid);
			case 8:ShowMenuForPlayer(Bullbars, playerid);
	        case 9:ShowMenuForPlayer(Wheels, playerid);
	        case 10:ShowMenuForPlayer(Carstereo, playerid);
	        case 11:ShowMenuForPlayer(TuningMenu1, playerid);
		}
	}
	if(Current == Paintjobs)
	{
		switch(row)
		{
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
		        {
					new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,0);
					SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เพ้นท์สีรถเรียบร้อยแล้ว");
					ShowMenuForPlayer(Paintjobs, playerid);
				}
				else
				{
				   SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] รถรุ่นนี้ไม่สามารถเพ้นท์ได้");
			       ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 1:
			    if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,1);
					SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เพ้นท์สีรถเรียบร้อยแล้ว");
					ShowMenuForPlayer(Paintjobs, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] รถรุ่นนี้ไม่สามารถเพ้นท์ได้");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
	      		if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,2);
					SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เพ้นท์สีรถเรียบร้อยแล้ว");
					ShowMenuForPlayer(Paintjobs, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] รถรุ่นนี้ไม่สามารถเพ้นท์ได้");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,3);
					SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เพ้นท์สีรถเรียบร้อยแล้ว");
					ShowMenuForPlayer(Paintjobs, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] รถรุ่นนี้ไม่สามารถเพ้นท์ได้");
				    ShowMenuForPlayer(TuningMenu, playerid);
			}

			case 4:
		    if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,4);
					SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เพ้นท์สีรถเรียบร้อยแล้ว");
					ShowMenuForPlayer(Paintjobs, playerid);
				}
				else
				{
	            	SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] รถรุ่นนี้ไม่สามารถเพ้นท์ได้");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
				case 5:
			{
		    	ShowMenuForPlayer(TuningMenu, playerid);
			}

		}
		}

	if(Current == Colors) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            ChangeVehicleColor(car,0,0);
		            //GivePlayerMoney(playerid,-150);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
		            ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,1,1);
			    //    GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,3,3);
			      //  GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
	      		 	SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,79,79);
			     //   GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 4:
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,86,86);
			     //   GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 5:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,6,6);
			      //  GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	            case 6:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,126,126);
			  //      GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 7:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,66,66);
			    //    GivePlayerMoney(playerid,-150);
	          		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 8:ShowMenuForPlayer(Colors1, playerid);
	 }
	 }

	if(Current == Colors1) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            ChangeVehicleColor(car,24,24);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
		            ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	         case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,123,123);
	          		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,53,53);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,93,93);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 4:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,83,83);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 5:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,60,60);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	            case 6:
	      		if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,126,126);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 7:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,110,110);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 8:ShowMenuForPlayer(TuningMenu, playerid);
	 }
	 }


	if(Current == Exhausts) {
		switch(row){
		    case 0:

		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562)
		            {
		            	AddVehicleComponentEx(car,1034);
		            	SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Elegy");
		            	ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponentEx(car,1046);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Flash");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponentEx(car,1065);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Jetser");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponentEx(car,1064);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Stratum");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponentEx(car,1028);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Sultan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponentEx(car,1089);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Uranus");
					    ShowMenuForPlayer(Exhausts, playerid);
	    			}
					}
	  			 	else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}



	//-------------------X-Flow Exausts-Wheel Arch Cars----------------------------------------------------------
			case 1:
			    if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562)
			        {
			            AddVehicleComponentEx(car,1037);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Exhaust component on Elegy");
			            ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponentEx(car,1045);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Exhaust component on Flash");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponentEx(car,1066);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow exaust component on Jester");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponentEx(car,1059);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Exhaust component on Stratum");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponentEx(car,1029);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Exhaust component on Sultan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponentEx(car,1092);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Exhaust component on Uranus");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------Locos Low Chromer Exausts----------------------------------------------------------
			case 2:
			    if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1044);
		             	SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Brodway");
			            ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1126);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Remington");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1129);
	                    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Savanna");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1104);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Blade");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1113);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Slamvan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1136);
					   	SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Tornado");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------Locos Low Salmin Exausts----------------------------------------------------------
			case 3:
			    if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1043);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Brodway");
			            ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1127);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Remingon");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1132);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Savanna");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1105);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Blade");
					    ShowMenuForPlayer(Exhausts, playerid);
					}

					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1114);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Slamvan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}

					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1135);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Tornado");
					    ShowMenuForPlayer(Exhausts, playerid);
					}

					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
		}

	if(Current == Frontbumper) {
		switch(row){


	//-------------------Alien Front Bumper-Wheel Arch Cars----------------------------------------------------------
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
				{
		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponentEx(car,1171);
	              		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Elegy");
		            	ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1153);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Flash");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponentEx(car,1160);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Jester");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1155);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Stratum");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1169);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Sultan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponentEx(car,1166);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Uraus");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}


	//-------------------X-Flow Front Bumper-Wheel Arch Cars----------------------------------------------------------
			case 1:

				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponentEx(car,1172);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow front bumper component on Elegy");
			            ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1152);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow front bumper component on Flash");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponentEx(car,1173);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow front bumper component on Jester");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1157);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow front bumper component on Stratum");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1170);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow front bumper component on Sultan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponentEx(car,1165);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow front bumper component on Uranus");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------Locos Low Chromer Front Bumper----------------------------------------------------------
			case 2:

	      		if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
				{
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1174);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Brodway");
			            ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1179);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Remington");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1189);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Savanna");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1182);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Blade");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1115);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Slamvan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1191);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Tornado");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}



	//-------------------Locos Low Salmin Front Bumper----------------------------------------------------------
			case 3:

			    if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
	            pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 576)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1175);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Brodway");
			            ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1185);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Remington");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1188);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Savanna");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1181);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Blade");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}

				    else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1116);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Slamvan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1190);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Tornado");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}

					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
		}


	if(Current == Rearbumper) {
		switch(row){


	//-------------------Alien Rear Bumper-Wheel Arch Cars----------------------------------------------------------
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponentEx(car,1149);
	              		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Elegy");
		            	ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1150);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Flash");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponentEx(car,1159);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Jester");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1154);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Stratum");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1141);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Sultan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponentEx(car,1168);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Uranus");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------X-Flow Rear Bumper-Wheel Arch Cars----------------------------------------------------------
			case 1:

				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponentEx(car,1148);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Elegy");
			            ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1151);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Flash");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponentEx(car,1161);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Jester");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1156);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Stratum");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1140);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Sultan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponentEx(car,1167);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Uranus");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Chromer rear Bumper----------------------------------------------------------
			case 2:
			    if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1176);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Brodway");
			            ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1180);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Remington");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1187);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Savanna");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1184);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Blade");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1109);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Slamvan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1192);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Tornado");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Salmin Rear Bumper----------------------------------------------------------
			case 3:
			    if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1177);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Brodway");
			            ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1178);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Remington");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1186);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Savanna");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1183);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Blade");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}

					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1110);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Slamvan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}

					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1193);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Tornado");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}

					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
		}



	if(Current == Roof) {
		switch(row){


	//-------------------Alien Roof Vent-Wheel Arch Cars----------------------------------------------------------
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponentEx(car,1035);
	              		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Elegy");
		            	ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1054);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Flash");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponentEx(car,1067);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Jester");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1055);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Stratum");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1032);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Sultan");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponentEx(car,1088);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Uranus");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------X-Flow Roof Vent-Wheel Arch Cars----------------------------------------------------------
			case 1:

				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponentEx(car,1035);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Elegy");
			            ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1053);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Flash");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponentEx(car,1068);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Jester");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1061);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Stratum");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1033);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Sultan");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponentEx(car,1091);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Uranus");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Hardtop Roof ----------------------------------------------------------
			case 2:
			    if(pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 567) // Savanna
			        {
			            AddVehicleComponentEx(car,1130);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Hardtop Roof component on Brodway");
			            ShowMenuForPlayer(Roof, playerid);
					}
	   				else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1128);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Hardtop Roof component on Blade");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types Savanna and Blade");
					ShowMenuForPlayer(Roof, playerid);
					}
	//-------------------Locos Low Softtop Roof ----------------------------------------------------------
			case 3:
			    if(pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 567) // Savanna
			        {
			            AddVehicleComponentEx(car,1131);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Softtop Roof component on Brodway");
			            ShowMenuForPlayer(Roof, playerid);
					}
	   				else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1103);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Softtop Roof component on Blade");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types Savanna and Blade");
					ShowMenuForPlayer(Roof, playerid);
					}

			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
		}


	if(Current == Spoilers) {
		switch(row){


	//-------------------Alien Spoilers-Wheel Arch Cars----------------------------------------------------------
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponentEx(car,1147);
	              		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Elegy");
		            	ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1049);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Flash");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponentEx(car,1162);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Jester");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1158);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Stratum");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1138);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Sultan");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponentEx(car,1164);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Uranus");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}


	//-------------------X-Flow Spoilers-Wheel Arch Cars----------------------------------------------------------
			case 1:

				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponentEx(car,1146);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Elegy");
			            ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1150);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Flash");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponentEx(car,1158);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Jester");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1060);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Stratum");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1139);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Sultan");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponentEx(car,1163);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Uranus");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to X-Flow Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	        	case 2:
				{
	            ShowMenuForPlayer(TuningMenu, playerid);
	            }
		}
		}


	if(Current == Sideskirts) {
		switch(row){


	//-------------------Alien Sideskirts Wheel Arch Cars----------------------------------------------------------
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponentEx(car,1036);
		            	AddVehicleComponentEx(car,1040);
	              		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Side Skirts component on Elegy");
		            	ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1047);
					    AddVehicleComponentEx(car,1051);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Sideskirts vent component on Flash");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponentEx(car,1069);
					    AddVehicleComponentEx(car,1071);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Side Skirts component on Jester");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1056);
					    AddVehicleComponentEx(car,1062);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Side Skirts component on Stratum");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1026);
					    AddVehicleComponentEx(car,1027);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Side Skirts bumper component on Sultan");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponentEx(car,1090);
					    AddVehicleComponentEx(car,1094);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Side Skirts component on Uranus");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------X-Flow Sideskirts-Wheel Arch Cars----------------------------------------------------------
			case 1:

				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponentEx(car,1039);
			            AddVehicleComponentEx(car,1041);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Elegy");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1048);
					    AddVehicleComponentEx(car,1052);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Flash");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponentEx(car,1070);
					    AddVehicleComponentEx(car,1072);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Jester");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1057);
					    AddVehicleComponentEx(car,1063);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Stratum");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1031);
					    AddVehicleComponentEx(car,1030);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Sultan");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponentEx(car,1093);
					    AddVehicleComponentEx(car,1095);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Uranus");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------Locos Low Chrome Strip Side Skirts----------------------------------------------------------
			case 2:
			    if(pmodelid[playerid] == 575 ||
	               pmodelid[playerid] == 536 ||
	               pmodelid[playerid] == 576 ||
		 	       pmodelid[playerid] == 567)
	               {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
	       		        AddVehicleComponentEx(car,1042);
	       		        AddVehicleComponentEx(car,1099);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Strip Side Skirts component on Brodway");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
	   				else if(pmodelid[playerid] == 567) // Savanna
					{
					    AddVehicleComponentEx(car,1102);
					    AddVehicleComponentEx(car,1133);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Strip Side Skirts component on Savanna");
	    		        ShowMenuForPlayer(Sideskirts, playerid);
	                }
	                else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1134);
					    AddVehicleComponentEx(car,1137);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Strip Side Skirts component on Tornado");
	    		        ShowMenuForPlayer(Sideskirts, playerid);
	                }
	                else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1108);
					    AddVehicleComponentEx(car,1107);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Strip Side Skirts component on Blade");
	                    ShowMenuForPlayer(Sideskirts, playerid);
	                }
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types Brodway, Savanna Tornado and Blade");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Chrome Flames Side Skirts----------------------------------------------------------
			case 3:
			    if(pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponentEx(car,1122);
			            AddVehicleComponentEx(car,1101);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Flames Side Skirts component on Remington");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Chrome Arches Side Skirts----------------------------------------------------------

			case 4:
			    if(pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponentEx(car,1106);
			            AddVehicleComponentEx(car,1124);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Arches Side Skirts component on Remington");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}




	//-------------------Locos Low Chrome Trim Side Skirts----------------------------------------------------------
			case 5:
			    if(pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 535) // Slamvan
			        {
			            AddVehicleComponentEx(car,1118);
			            AddVehicleComponentEx(car,1120);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Trim Side Skirts component on Slamvan");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Slamvan ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------Locos Low Chrome Wheelcovers Side Skirts----------------------------------------------------------
	  case 6:
			    if(pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 535) // Slamvan
			        {
			            AddVehicleComponentEx(car,1119);
			            AddVehicleComponentEx(car,1121);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Wheelcovers component on Slamvan");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Slamvan ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			   case 7:ShowMenuForPlayer(TuningMenu, playerid);
		}
		}

	//-------------------Locos Low Chrome Grill ----------------------------------------------------------

	if(Current == Bullbars) {
		switch(row){

	        case 0:
			    if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponentEx(car,1100);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Grill component on Remington");
			            ShowMenuForPlayer(Bullbars, playerid);
			        }
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Chrome Bars ----------------------------------------------------------
			case 1:
			    if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponentEx(car,1123);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Bars component on Remington");
			            ShowMenuForPlayer(Bullbars, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Chrome Lights ----------------------------------------------------------


			case 2:
			    if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponentEx(car,1125);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Lights component on Remington");
			            ShowMenuForPlayer(Bullbars, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}




	//-------------------Locos Low Chrome Bullbar ----------------------------------------------------------


	    case 3:
		    if(pmodelid[playerid] == 535)
		    {
		        new car = GetPlayerVehicleID(playerid);
		        if(pmodelid[playerid] == 535) // Slamvan
		        {
		            AddVehicleComponentEx(car,1117);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Lights component on Slamvan");
		            ShowMenuForPlayer(Bullbars, playerid);
				}
				}
				else
				{
					SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Slamvan ");
					ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
	}



	if(Current == Wheels) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1025);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Offroad Wheels ");
		            ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1074);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Mega Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponentEx(car,1076);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wires Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1078);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Twist Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	      		 	SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(Wheels, playerid);
				}
			case 4:
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1081);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Grove Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 5:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponentEx(car,1082);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Import Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	   		case 6:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1085);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Atomic Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 7:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1096);
	          		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Ahab Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 8:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1097);
	          		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Virtual Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	 		case 9:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1098);
	          		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Access Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	        case 10:
				{

				    ShowMenuForPlayer(Wheels1, playerid);
				}

			case 11:
				{

				    ShowMenuForPlayer(TuningMenu, playerid);
				}

	 	}
	 }

	if(Current == Wheels1) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1084);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Trance Wheels ");
		            ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1073);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Shadow Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponentEx(car,1075);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Rimshine Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	      	 		SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1077);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Classic Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(Wheels, playerid);
				}
			case 4:
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1079);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Cutter Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 5:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponentEx(car,1080);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Switch Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	   		case 6:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1083);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Dollar Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	        case 7:
				{

				    ShowMenuForPlayer(TuningMenu, playerid);
				}
		 }
	 }


	if(Current == Carstereo) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1086);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Stereo Bass bost system ");
		            ShowMenuForPlayer(Carstereo, playerid);
				}
				else
				{
	                SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
			    }
			case 1:

			    {
			        ShowMenuForPlayer(TuningMenu, playerid);
				}
		 }
	 }

	if(Current == Hydraulics) {
		switch(row){
		    case 0:
	            if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1087);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Hydraulics ในรถ ");
		            ShowMenuForPlayer(Hydraulics, playerid);
				}
				else
				{
	                SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
			    }

			case 1:

			    {
			        ShowMenuForPlayer(TuningMenu, playerid);
				}
		 }
	 }

	if(Current == Nitro) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1008);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง 2x Nitro ในรถ ");
		            ShowMenuForPlayer(Nitro, playerid);
				}
				else
				{
	                SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
			    }
			case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1009);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง 5x Nitro ในรถ ");
			        ShowMenuForPlayer(Nitro, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponentEx(car,1010);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง 10x Nitro ในรถ ");
			        ShowMenuForPlayer(Nitro, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:

			    {
			        ShowMenuForPlayer(TuningMenu, playerid);
				}
	 	}
	}


	//--------------------------Main Menu page 2 ----------------------------------------------------------------------------
	if(Current == TuningMenu1) {
	    switch(row){
	        case 0:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Hydraulics, playerid);
				}
	        case 1:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Nitro, playerid);
				}
	       case 2:
				{
				 	SendClientMessage(playerid,COLOR_WHITE,"[INFO] กรุณาไปซ่อมรถที่ร้านซ่อมรถค่ะ !");
					ShowMenuForPlayer(TuningMenu1, playerid);

				}

	       case 3:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(TuningMenu, playerid);
				}


		}
	}
	return 1;
}


stock IsComponentidCompatible(modelid, componentid)
{
    if(componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
         componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
         componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
         componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086)
         return true;

    switch (modelid)
    {
        case 400: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 401: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 402: return (componentid == 1009 || componentid == 1009 || componentid == 1010);
        case 404: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 405: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000);
        case 409: return (componentid == 1009);
        case 410: return (componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 411: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 412: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 415: return (componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 418: return (componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016);
        case 419: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 420: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003);
        case 421: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000);
        case 422: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007);
        case 426: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003);
        case 429: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 436: return (componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 438: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 439: return (componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013);
        case 442: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 445: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 451: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 458: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 466: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 467: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 474: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 475: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 477: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 478: return (componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 479: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 480: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 489: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000);
        case 491: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 492: return (componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000);
        case 496: return (componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020);
        case 500: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 506: return (componentid == 1009);
        case 507: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 516: return (componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 517: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 518: return (componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 526: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 527: return (componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007);
        case 529: return (componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 533: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 534: return (componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106);
        case 535: return (componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119);
        case 536: return (componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108);
        case 540: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 541: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 542: return (componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015);
        case 545: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 546: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 547: return (componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000);
        case 549: return (componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 550: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003);
        case 551: return (componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003);
        case 555: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 558: return (componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093);
        case 559: return (componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009);
        case 560: return (componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031);
        case 561: return (componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057);
        case 562: return (componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039);
        case 565: return (componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048);
        case 566: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 567: return (componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133);
        case 575: return (componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042);
        case 576: return (componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134);
        case 579: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 580: return (componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 585: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 587: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 589: return (componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 600: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 602: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 603: return (componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
    }
    return false;
}

public OnPlayerExitedMenu(playerid)
{
    new Menu:Current = GetPlayerMenu(playerid);
	HideMenuForPlayer(Current, playerid);
	TogglePlayerControllable(playerid, true);

	return 1;
}


AddVehicleComponentEx(vehicleid, componentid) {
	if(vehicleid > 0 && vehicleid != INVALID_VEHICLE_ID) {
	    new temp_model = GetVehicleModel(vehicleid);
	    if(IsComponentidCompatible(temp_model, componentid)) {
	        AddVehicleComponent(vehicleid, componentid);
	    }
	}
	return 1;
}

stock StockAddMenuItem()
{
	//==========================================================================
    TuningMenu = CreateMenu("TuningMenu",1,20,120,150,40);
    AddMenuItem(TuningMenu,0,"Paint Jobs");
    AddMenuItem(TuningMenu,0,"Colors");
    AddMenuItem(TuningMenu,0,"Exhausts");
    AddMenuItem(TuningMenu,0,"Front Bumper");
    AddMenuItem(TuningMenu,0,"Rear Bumper");
    AddMenuItem(TuningMenu,0,"Roof");
    AddMenuItem(TuningMenu,0,"Spoilers");
    AddMenuItem(TuningMenu,0,"Side Skirts");
    AddMenuItem(TuningMenu,0,"Bullbars");
    AddMenuItem(TuningMenu,0,"Wheels");
    AddMenuItem(TuningMenu,0,"Car Stereo");
    AddMenuItem(TuningMenu,0,"Next Page");
    Paintjobs = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Paintjobs,0,"PaintJobs");
	AddMenuItem(Paintjobs,0,"Paintjob 1");
	AddMenuItem(Paintjobs,0,"Paintjob 2");
	AddMenuItem(Paintjobs,0,"Paintjob 3");
	AddMenuItem(Paintjobs,0,"Paintjob 4");
	AddMenuItem(Paintjobs,0,"Paintjob 5");
	AddMenuItem(Paintjobs,0,"Main Menu");
	Colors = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Colors,0,"Colors");
	AddMenuItem(Colors,0,"Black");
	AddMenuItem(Colors,0,"White");
	AddMenuItem(Colors,0,"Red");
	AddMenuItem(Colors,0,"Blue");
	AddMenuItem(Colors,0,"Green");
	AddMenuItem(Colors,0,"Yellow");
	AddMenuItem(Colors,0,"Pink");
	AddMenuItem(Colors,0,"Brown");
	AddMenuItem(Colors,0,"Next Page");
	Colors1 = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Colors1,0,"Colors");
    AddMenuItem(Colors1,0,"Grey");
	AddMenuItem(Colors1,0,"Gold");
	AddMenuItem(Colors1,0,"Dark Blue");
	AddMenuItem(Colors1,0,"Light Blue");
	AddMenuItem(Colors1,0,"Green");
	AddMenuItem(Colors1,0,"Light Grey");
	AddMenuItem(Colors1,0,"Dark Red");
	AddMenuItem(Colors1,0,"Dark Brown");
	AddMenuItem(Colors1,0,"Main Menu");
	Exhausts = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Exhausts,0,"Exhausts");
	AddMenuItem(Exhausts,0,"Wheel Arch Alien Exhaust");
	AddMenuItem(Exhausts,0,"Wheel Arch X-Flow Exhaust");
	AddMenuItem(Exhausts,0,"Locos Low Chromer Exhaust");
	AddMenuItem(Exhausts,0,"Locos Low Slamin Exhaust");
	AddMenuItem(Exhausts,0,"Main Menu");
	Frontbumper = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Frontbumper,0,"Frontbumpers");
	AddMenuItem(Frontbumper,0,"Wheel Arch Alien bumper");
	AddMenuItem(Frontbumper,0,"Wheel Arch X-Flow bumper");
	AddMenuItem(Frontbumper,0,"Locos Low Chromer bumper");
	AddMenuItem(Frontbumper,0,"Locos Low Slamin bumper");
	AddMenuItem(Frontbumper,0,"Main Menu");
	Rearbumper = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Rearbumper,0,"Rearbumpers");
	AddMenuItem(Rearbumper,0,"Wheel Arch Alien bumper");
	AddMenuItem(Rearbumper,0,"Wheel Arch X-Flow bumper");
	AddMenuItem(Rearbumper,0,"Locos Low Chromer bumper");
	AddMenuItem(Rearbumper,0,"Locos Low Slamin bumper");
	AddMenuItem(Rearbumper,0,"Main Menu");
	Roof = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Roof,0,"Roof");
	AddMenuItem(Roof,0,"Wheel Arch Alien Roof Vent");
	AddMenuItem(Roof,0,"Wheel Arch X-Flow Roof Vent");
	AddMenuItem(Roof,0,"Locos Low Hardtop Roof");
	AddMenuItem(Roof,0,"Locos Low Softtop Roof");
	AddMenuItem(Roof,0,"Main Menu");
	Spoilers = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Spoilers,0,"Spoliers");
	AddMenuItem(Spoilers,0,"Alien Spoiler");
	AddMenuItem(Spoilers,0,"X-Flow Spoiler");
	AddMenuItem(Spoilers,0,"Main Menu");
	Sideskirts = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Sideskirts,0,"SideSkirts");
	AddMenuItem(Sideskirts,0,"Wheel Arch Alien Side Skirts");
	AddMenuItem(Sideskirts,0,"Wheel Arch X-Flow Side Skirts");
    AddMenuItem(Sideskirts,0,"Locos Low Chrome Strip");
    AddMenuItem(Sideskirts,0,"Locos Low Chrome Flames");
    AddMenuItem(Sideskirts,0,"Locos Low Chrome Arches");
    AddMenuItem(Sideskirts,0,"Locos Low Chrome Trim");
    AddMenuItem(Sideskirts,0,"Locos Low Wheelcovers");
	AddMenuItem(Sideskirts,0,"Main Menu");
	Bullbars = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Bullbars,0,"Bullbars");
	AddMenuItem(Bullbars,0,"Locos Low Chrome Grill");
	AddMenuItem(Bullbars,0,"Locos Low Chrome Bars");
	AddMenuItem(Bullbars,0,"Locos Low Chrome Lights");
	AddMenuItem(Bullbars,0,"Locos Low Chrome Bullbar");
	AddMenuItem(Bullbars,0,"Main Menu");
	Wheels = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Wheels,0,"Wheels");
	AddMenuItem(Wheels,0,"Offroad");
	AddMenuItem(Wheels,0,"Mega");
	AddMenuItem(Wheels,0,"Wires");
	AddMenuItem(Wheels,0,"Twist");
	AddMenuItem(Wheels,0,"Grove");
	AddMenuItem(Wheels,0,"Import");
	AddMenuItem(Wheels,0,"Atomic");
	AddMenuItem(Wheels,0,"Ahab");
	AddMenuItem(Wheels,0,"Virtual");
	AddMenuItem(Wheels,0,"Access");
	AddMenuItem(Wheels,0,"Next Page");
	AddMenuItem(Wheels,0,"Main Menu");
	Wheels1 = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Wheels1,0,"Wheels");
	AddMenuItem(Wheels1,0,"Trance");
	AddMenuItem(Wheels1,0,"Shadow");
	AddMenuItem(Wheels1,0,"Rimshine");
	AddMenuItem(Wheels1,0,"Classic");
	AddMenuItem(Wheels1,0,"Cutter");
	AddMenuItem(Wheels1,0,"Switch");
	AddMenuItem(Wheels1,0,"Dollar");
	AddMenuItem(Wheels1,0,"Main Menu");
	Carstereo = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Carstereo,0,"Stereo");
	AddMenuItem(Carstereo,0,"Bass Boost");
	AddMenuItem(Carstereo,0,"Main Menu");
 	TuningMenu1= CreateMenu("TuningMenu",1,20,120,150,40);
    AddMenuItem(TuningMenu1,0,"Hydraulics");
    AddMenuItem(TuningMenu1,0,"Nitro");
    AddMenuItem(TuningMenu1,0,"Repair Car");
    AddMenuItem(TuningMenu1,0,"Main Menu");
	Hydraulics = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Hydraulics,0,"Hydraulics");
	AddMenuItem(Hydraulics,0,"Hydraulics");
	AddMenuItem(Hydraulics,0,"Main Menu");
	Nitro = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Nitro,0,"Nitro");
	AddMenuItem(Nitro,0,"2x Nitrous");
	AddMenuItem(Nitro,0,"5x Nitrous");
	AddMenuItem(Nitro,0,"10x Nitrous");
	AddMenuItem(Nitro,0,"Main Menu");
}

Dialog:DIALOG_MENU_PLAYER(playerid, response, listitem, inputtext[])
{
	if(!response)
	{
		return 1;
	}
	if(response)
	{
		switch(listitem)
		{
			case 0:
			{
				if(INVENTORY_PLAYING[playerid] == 0) {
				INVENTORY_INTERFACE(playerid, true);
			  	}
				ShowPlayerStats(playerid, false);
			}
			case 1:
			{
				OpenInventory(playerid);
			}
		}
	}
	return 1;
}
/*public OnPlayerVehicleDamage(playerid,vehicleid,Float:Damage)
{
	if(IsPlayerNPC(playerid)) return 1;

	new Float:vH; GetVehicleHealth(vehicleid, vH);
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

	new Float:speed_x,Float:speed_y,Float:speed_z,Float:parames30_10,parames30_10_int;
	GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
	parames30_10 = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+(speed_z*speed_z))*199.4166672;
	parames30_10_int = floatround(parames30_10,floatround_round);

	//if(Damage > 40.0)
	if(parames30_10_int > 60)
	{
		foreach (new i : Player)
		{
			if(GetPlayerVehicleID(i) == vehicleid)
			{
			    new Float:x, Float:y, Float:z, Float:DamageVeh = randomEx(5,10);

			    GetPlayerPos(i, x, y, z);
			    SetPlayerPos(i,x-8,y,z+3);
				RemovePlayerFromVehicle(i);
                ApplyAnimation(i,"PED","fall_front", 4.0, 0, 1, 1, 0, 0, 1);
				SetTimerEx("WakeUp", 500, false, "d", i);

				new Float:pdHealth;
				GetPlayerHealth(i, pdHealth);
				SetPlayerHealth(i, pdHealth-DamageVeh);
				SetPlayerDrunkLevel(i, 2000);
			}
		}
	}
    return 1;
}

forward WakeUp(playerid);
public WakeUp(playerid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);

	ApplyAnimation(playerid,"PED","getup_front", 4.0, 0, 1, 1, 0, 0, 1);

	BloodObject[playerid][0] = CreateObject(19836, x, y, z-0.9, 0.0, 0.0, 0.0);
	BloodObject[playerid][1] = CreateObject(19836, x-0.3, y, z-0.9, 0.0, 0.0, 0.0);
	BloodObject[playerid][2] = CreateObject(19836, x, y-0.3, z-0.9, 0.0, 0.0, 0.0);

    SetTimerEx("UnBlood", 3000, false, "d", playerid);

	return 1;
}

forward UnBlood(playerid);
public UnBlood(playerid)
{
	DestroyObject(BloodObject[playerid][0]);
	DestroyObject(BloodObject[playerid][1]);
	DestroyObject(BloodObject[playerid][2]);

	return 1;
}*/

// --> ระบบแต่งรถ

forward GetModel(Model);
public GetModel(Model)
{
	switch(Model){
 		case 417, 425, 430, 432, 446, 447, 448, 452, 453, 454, 460, 461, 462, 463, 464, 465, 468, 469, 471, 472, 473, 476, 481, 484, 487, 488, 493, 497, 501, 509, 510, 511, 512, 513, 521, 522, 523, 548:
   		return true;
    }
    return false;
}

// ระบบแต่งตัว
Dialog:DIALOG_BUY_CLOTHING(playerid, response, listitem, inputtext[])
{
	if (response) {

		switch(cl_buying[playerid])
		{
		    case BUYSPORTS:
		    {
				if (playerData[playerid][pCoin] < cl_SportsData[listitem][e_price])
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมี Coin ไม่เพียงพอ");

		        //GivePlayerMoneyEx(playerid, -cl_SportsData[listitem][e_price]);
		        playerData[playerid][pCoin] -= cl_SportsData[listitem][e_price];

		        Inventory_Add(playerid, cl_SportsData[listitem][e_name], 1);
				SendClientMessageEx(playerid, COLOR_YELLOW, "คุณได้รับ %s เรียบร้อยแล้ว", cl_SportsData[listitem][e_name]);
		    }

		    case BUYZIP:
		    {
				if (GetPlayerMoneyEx(playerid) < cl_ZipData[listitem][e_price])
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินไม่เพียงพอ");

		        GivePlayerMoneyEx(playerid, -cl_ZipData[listitem][e_price]);

		        Inventory_Add(playerid, cl_ZipData[listitem][e_name], 1);
				SendClientMessageEx(playerid, COLOR_YELLOW, "คุณได้รับ %s เรียบร้อยแล้ว", cl_ZipData[listitem][e_name]);
		    }
		}
		cl_buying[playerid]=0;
	}
	return 1;
}

alias:car_tune1("แต่งลาย")
CMD:car_tune1(playerid)
{
    if (GetFactionType(playerid) != FACTION_MEC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ช่าง!");

	if (!IsPlayerInAnyVehicle(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่บนรถ");

    Dialog_Show(playerid, DIALOG_PAINTJOB, DIALOG_STYLE_INPUT, "[เลือกลาย]", "{FFFFFF}เลือกลายได้ 0-2 หากต้องการลบให้ใส่ -1", "ยืนยัน", "ปิด");
	return 1;
}

alias:todsuit("ถอดชุด")
CMD:todsuit(playerid)
{
	RemovePlayerAttachedObject(playerid, 3);
	SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้ถอดเครื่องแต่งกายของคุณแล้ว!");

	return 1;
}

forward CARSHOP_Load();
public CARSHOP_Load()
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_CARSHOP)
	{
	    carshopData[i][carshopExists] = true;

	    cache_get_value_name_int(i, "carshopID", carshopData[i][carshopID]);
	    cache_get_value_name_int(i, "carshopModel", carshopData[i][carshopModel]);
	    cache_get_value_name_int(i, "carshopPrice", carshopData[i][carshopPrice]);
	    cache_get_value_name_int(i, "carshopType", carshopData[i][carshopType]);
	}
	printf("[SERVER]: %i Carshop were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward OnCarshopCreated(carshopid);
public OnCarshopCreated(carshopid)
{
	if (carshopid == -1 || !carshopData[carshopid][carshopExists])
	    return 0;

	carshopData[carshopid][carshopID] = cache_insert_id();
	CARSHOP_Save(carshopid);

	return 1;
}

CARSHOP_Delete(carshopid)
{
	if (carshopid != -1 && carshopData[carshopid][carshopExists])
	{
	    static
	        string[64];

		format(string, sizeof(string), "DELETE FROM `carshop` WHERE `carshopID` = '%d'", carshopData[carshopid][carshopID]);
		mysql_tquery(g_SQL, string);

		carshopData[carshopid][carshopExists] = false;
		carshopData[carshopid][carshopID] = 0;
	}
	return 1;
}

CARSHOP_Create(model, price, type)
{
	for (new i = 0; i < MAX_CARSHOP; i ++) if (!carshopData[i][carshopExists])
	{
	    carshopData[i][carshopExists] = true;
	    carshopData[i][carshopModel] = model;
	    carshopData[i][carshopPrice] = price;
	    carshopData[i][carshopType] = type;

	    mysql_tquery(g_SQL, "INSERT INTO `carshop` (`carshopID`) VALUES(0)", "OnCarshopCreated", "d", i);
		return i;
	}
	return -1;
}

CARSHOP_Save(carshopid)
{
	static
	    query[220];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `carshop` SET `carshopModel` = '%d', `carshopPrice` = '%d', `carshopType` = '%d' WHERE `carshopID` = '%d'",
		carshopData[carshopid][carshopModel],
	    carshopData[carshopid][carshopPrice],
	    carshopData[carshopid][carshopType],
	    carshopData[carshopid][carshopID]
	);
	return mysql_tquery(g_SQL, query);
}

Dialog:DIALOG_BUYCAR_DONATE(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new var[32], string[512], query[256];
	    format(var, sizeof(var), "CARSHOP%d", listitem);
	    new carshopid = GetPVarInt(playerid, var);

		if (playerData[playerid][pCoin] < carshopData[carshopid][carshopPrice])
		{
		    SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมี Coin ไม่เพียงพอในการซื้อ (%d/%d Coin)", playerData[playerid][pCoin], carshopData[carshopid][carshopPrice]);
		    return 1;
		}

		mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', %d, %d, %.1f, '562.3970', '-1283.8485', '17.0007', '0.0000')", playerData[playerid][pID], GetPlayerNameEx(playerid), carshopData[carshopid][carshopModel], carshopData[carshopid][carshopPrice], vehicleData[carshopData[carshopid][carshopModel] - 400][vFuel]);
		mysql_tquery(g_SQL, query);

		playerData[playerid][pCoin] -= carshopData[carshopid][carshopPrice];

		format(string, sizeof(string), "{FFFFFF}คุณได้ซื้อรถรุ่น {F9C205}%s {FFFFFF}ในราคา {F9C205}%d Coin {FFFFFF}เรียบร้อยแล้ว", ReturnVehicleModelName(carshopData[carshopid][carshopModel]), carshopData[carshopid][carshopPrice]);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	return 1;
}

CMD:createcarshop(playerid, params[])
{
	static
	    id = -1,
		model,
		price,
		type;

    if (playerData[playerid][pAdmin] < 5)
	    return 1;

	if (sscanf(params, "ddd", model, price, type))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/createcarshop [ไอดียานพาหนะ] [ราคา] [รูปแบบ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบ]:{FFFFFF} 1: รถจักรยานยนต์ | 2: รถยนต์ | 3: รถโดเนท | 4: รถสปอร์ต");
	    return 1;
	}
	if (model < 400 || model > 611)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไอดียานพาหนะมีแค่ 400 - 611 เท่านั้น");

	if (price < 1 || price > 50000000)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาต้องไม่ต่ำกว่า $1 และไม่เกิน $50,000,000 เท่านั้น");

	if (type < 1 || type > 4)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบของ Carshop ต้องไม่ต่ำกว่า 1 และไม่เกิน 3 เท่านั้น");

	id = CARSHOP_Create(model, price, type);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของร้านขายยานพาหนะในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้เพิ่มยานพาหนะ %s ราคา %s รูปแบบ %d ลงในร้าน /buycar เรียบร้อย ID: %d", ReturnVehicleModelName(model), FormatMoney(price), type, id);
	return 1;
}

CMD:deletecarshop(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 5)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deletecarshop [ไอดี]");

	if ((id < 0 || id >= MAX_CARSHOP) || !carshopData[id][carshopExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดี Carshop นี้อยู่ในฐานข้อมูล");

	CARSHOP_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบ Carshop ไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:editcarshop(playerid, params[])
{
	static
	    id,
	    type[24],
	    string[128];

	if (playerData[playerid][pAdmin] < 5)
	    return 1;

	if (sscanf(params, "ds[24]S()[128]", id, type, string))
 	{
	 	SendClientMessage(playerid, COLOR_WHITE, "/editcarshop [ไอดี] [ชื่อรายการ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} model, price, type");
		return 1;
	}
	if ((id < 0 || id >= MAX_CARSHOP) || !carshopData[id][carshopExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดี Carshop นี้อยู่ในฐานข้อมูล");

	else if (!strcmp(type, "model", true))
	{
	    new model;

	    if (sscanf(string, "d", model))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "/editcarshop [ไอดี] [ชื่อรายการ] [ไอดียานพาหนะ]");
			return 1;
		}
		if (model < 400 || model > 611)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไอดียานพาหนะมีแค่ 400 - 611 เท่านั้น");

        carshopData[id][carshopModel] = model;

	    CARSHOP_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับ Model ของ Carshop ไอดี %d เป็น Model %d", GetPlayerNameEx(playerid), id, model);
	}
	else if (!strcmp(type, "price", true))
	{
	    new price;

	    if (sscanf(string, "d", price))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "/editcarshop [ไอดี] [ชื่อรายการ] [ราคา]");
			return 1;
		}
		if (price < 1 || price > 50000000)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาต้องไม่ต่ำกว่า $1 และไม่เกิน $50,000,000 เท่านั้น");

        carshopData[id][carshopPrice] = price;

	    CARSHOP_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับราคาของ Carshop ไอดี %d เป็น %s", GetPlayerNameEx(playerid), id, FormatMoney(price));
	}
	else if (!strcmp(type, "type", true))
	{
	    new typecar;

	    if (sscanf(string, "d", typecar))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "/editcarshop [ไอดี] [ชื่อรายการ] [รูปแบบ]");
	    	SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบ]:{FFFFFF} 1: รถจักรยานยนต์ | 2: รถยนต์");
			return 1;
		}
		if (typecar < 1 || typecar > 2)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบของ Carshop ต้องไม่ต่ำกว่า 1 และไม่เกิน 2 เท่านั้น");

        carshopData[id][carshopType] = typecar;

	    CARSHOP_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับรูปแบบของ Carshop ไอดี %d เป็น %s", GetPlayerNameEx(playerid), id, typecar);
	}
	return 1;
}

ReturnVehicleModelName(model)
{
	new
	    name[32] = "None";

    if (model < 400 || model > 611)
	    return name;

	format(name, sizeof(name), g_arrVehicleNames[model - 400]);
	return name;
}

alias:givecoin("เสกคอย")
CMD:givecoin(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new userid, amount;
        if(sscanf(params, "ud", userid, amount))
			return SendClientMessage(playerid, COLOR_WHITE, "/givecoin [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        playerData[userid][pCoin] += amount;

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ให้ Coin กับ %s(%d) จำนวน %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, FormatMoney(amount));
	}
    return 1;
}

CMD:editsafe(playerid, params[])
{
    new string[256];

	if (playerData[playerid][pAdmin] < 6)
		return SendClientMessage(playerid,COLOR_LIGHTRED,"คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	new choice[32], id, amount;
	if(sscanf(params, "s[32]dd", choice, id, amount))
	{
		SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/editsafe [1-2] [ไอดีเซฟโซน] [ขนาด]");
		SendClientMessage(playerid, COLOR_WHITE, "1:เปลี่ยนจุด | 2:เปลี่ยนขนาด");
		return 1;
	}
	if(strcmp(choice, "1", true) == 0)
	{
		GetPlayerPos(playerid, SafeZoneInfo[id][szPosX], SafeZoneInfo[id][szPosY], SafeZoneInfo[id][szPosZ]);
		SendClientMessage( playerid, -1, "คุณได้เปลี่ยนจุดsafezone!" );
		DestroyPickup(SafeZoneInfo[id][szPickupID]);
		SaveSafeZones(id);

		DestroyPickup(SafeZoneInfo[id][szPickupID]);
		DestroyDynamic3DTextLabel(SafeZoneInfo[id][szTextID]);
		format(string, sizeof(string), "{FFFFFF}[{FD2A15}Safezone ไอดี : %d{FFFFFF}]\n{FDD615}Area : {FFFFFF}%d\n{FFFFFF}ห้ามใช้อาวุธหรือทำดาเมจกันภายในบริเวณนี้",id,SafeZoneInfo[id][szSize]);
		SafeZoneInfo[id][szTextID] = CreateDynamic3DTextLabel( string, -1, SafeZoneInfo[id][szPosX], SafeZoneInfo[id][szPosY], SafeZoneInfo[id][szPosZ]+0.5,10.0, .testlos = 1, .streamdistance = 10.0);
		SafeZoneInfo[id][szPickupID] = CreatePickup(1314, 23, SafeZoneInfo[id][szPosX], SafeZoneInfo[id][szPosY], SafeZoneInfo[id][szPosZ]);
	}
	else if(strcmp(choice, "2", true) == 0)
	{
		SafeZoneInfo[id][szSize] = amount;
		SendClientMessage( playerid, COLOR_YELLOW, "> คุณได้ทำการแก้ไขขนาด 'Safezone' สำเร็จ" );
		SaveSafeZones(id);

		DestroyDynamic3DTextLabel(SafeZoneInfo[id][szTextID]);
		format(string, sizeof(string), "{FFFFFF}[{FD2A15}Safezone ไอดี : %d{FFFFFF}]\n{FDD615}Area : {FFFFFF}%d\n{FFFFFF}ห้ามใช้อาวุธหรือทำดาเมจกันภายในบริเวณนี้",id,SafeZoneInfo[id][szSize]);
		SafeZoneInfo[id][szTextID] = CreateDynamic3DTextLabel( string, -1, SafeZoneInfo[id][szPosX], SafeZoneInfo[id][szPosY], SafeZoneInfo[id][szPosZ]+0.5,10.0, .testlos = 1, .streamdistance = 10.0);
	}

	SaveSafeZones(id);
	return 1;
}

CMD:deletesafe(playerid, params[])
{
    new string[256];

	if (playerData[playerid][pAdmin] < 6)
		return SendClientMessage(playerid,COLOR_LIGHTRED,"คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	new id;
	if(sscanf(params,"d",id))
		return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/deletesafe [ไอดี]");

	if(!IsValidDynamicPickup(SafeZoneInfo[id][szPickupID]))
		return SendClientMessage(playerid, COLOR_LIGHTRED,"> ไอดีไม่ถูกต้อง");

	SafeZoneInfo[id][szPosX] = 0;
	SafeZoneInfo[id][szPosY] = 0;
	SafeZoneInfo[id][szPosZ] = 0;

	DestroyDynamicPickup(SafeZoneInfo[id][szPickupID]);
	DestroyDynamic3DTextLabel(SafeZoneInfo[id][szTextID]);

	new query[512];

	mysql_format(g_SQL,query,sizeof(query),"DELETE FROM `safezonedata` WHERE `ID` = %d", id);
	mysql_tquery(g_SQL,query);

	format(string, sizeof(string), "> คุณได้ทำการลบ 'Safezone' ไอดี '%d' ออกจากฐานข้อมูล", id);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);

	return 1;
}

CMD:createsafe(playerid, params[])
{
	new string[256];

	if (playerData[playerid][pAdmin] < 6)
		return SendClientMessage(playerid,COLOR_LIGHTRED,"คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid, X,Y,Z);

	for(new i = 1; i < MAX_SZ; i++)
	{
		if(!SafeZoneInfo[i][Exits])
		{
			SafeZoneInfo[i][Exits] = true;
			SafeZoneInfo[i][szPosX] 	= X;
			SafeZoneInfo[i][szPosY] 	= Y;
			SafeZoneInfo[i][szPosZ] 	= Z;
			SafeZoneInfo[i][szSize] 	= 5;

			format(string, sizeof(string), "> คุณได้ทำการสร้าง 'Safezone' ไอดี '%d' เรียบร้อยแล้ว",i);
			SendClientMessage(playerid,COLOR_YELLOW,string);

			format(string, sizeof(string), "{FFFFFF}[{FD2A15}Safezone ไอดี : %d{FFFFFF}]\n{FDD615}Area : {FFFFFF}%d\n{FFFFFF}ห้ามใช้อาวุธหรือทำดาเมจกันภายในบริเวณนี้",i,SafeZoneInfo[i][szSize]);
			SafeZoneInfo[i][szPickupID] = CreateDynamicPickup(1314, 23, SafeZoneInfo[i][szPosX], SafeZoneInfo[i][szPosY], SafeZoneInfo[i][szPosZ]);
			SafeZoneInfo[i][szTextID] = CreateDynamic3DTextLabel(string, -1, SafeZoneInfo[i][szPosX], SafeZoneInfo[i][szPosY], SafeZoneInfo[i][szPosZ]+0.5,30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1,  -1, 30.0);

			new query[512];

			mysql_format(g_SQL,query,sizeof(query),"INSERT INTO  safezonedata SET `ID`=%d,szPosX=%f,szPosY='%f',szPosZ='%f',szSize='%d'",i,X,Y,Z,SafeZoneInfo[i][szSize]);
			mysql_tquery(g_SQL,query);
			return 1;
		}
	}
	return 1;
}




CMD:gotosz(playerid, params[])
{
	if (playerData[playerid][pAdmin] < 6)
		return SendClientMessage(playerid,COLOR_LIGHTRED,"คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	new housenum;

	if(sscanf(params, "d", housenum))
		return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/gotosz [ไอดี]");

	SetPlayerPos(playerid,SafeZoneInfo[housenum][szPosX],SafeZoneInfo[housenum][szPosY],SafeZoneInfo[housenum][szPosZ]);
	SetPlayerInterior(playerid, 0);
	return 1;
}

forward SaveSafeZones(id);
public SaveSafeZones(id)
{
	new query[1048];
	mysql_format(g_SQL, query, sizeof(query), "UPDATE safezonedata SET szPosX='%f',szPosY='%f',szPosZ='%f',szSize='%d' WHERE ID=%d",
	SafeZoneInfo[id][szPosX],SafeZoneInfo[id][szPosY],SafeZoneInfo[id][szPosZ],SafeZoneInfo[id][szSize],id);
	mysql_tquery(g_SQL, query, "", "");
}

forward LoadSafeZones();
public LoadSafeZones()
{
    new rows = cache_num_rows();
	new id,loaded;
	new string[128];
 	if(rows)
  	{
		while(loaded < rows)
		{
		    cache_get_value_name_int(loaded,"ID",id);
		    cache_get_value_name_float(loaded,"szPosX",SafeZoneInfo[id][szPosX]);
		    cache_get_value_name_float(loaded,"szPosY",SafeZoneInfo[id][szPosY]);
		    cache_get_value_name_float(loaded,"szPosZ",SafeZoneInfo[id][szPosZ]);
		    cache_get_value_name_int(loaded,"szSize",SafeZoneInfo[id][szSize]);


   			format(string, sizeof(string), "{FFFFFF}[{FD2A15}Safezone ไอดี : %d{FFFFFF}]\n{FDD615}Area : {FFFFFF}%d\n{FFFFFF}ห้ามใช้อาวุธหรือทำดาเมจกันภายในบริเวณนี้",id,SafeZoneInfo[id][szSize]);
   			SafeZoneInfo[id][szPickupID] = CreateDynamicPickup(1314, 23, SafeZoneInfo[id][szPosX], SafeZoneInfo[id][szPosY], SafeZoneInfo[id][szPosZ]);
   			SafeZoneInfo[id][szTextID] = CreateDynamic3DTextLabel(string, -1, SafeZoneInfo[id][szPosX], SafeZoneInfo[id][szPosY], SafeZoneInfo[id][szPosZ]+0.5,30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1,  -1, 30.0);
			if(!SafeZoneInfo[id][Exits])
		    {
		        SafeZoneInfo[id][Exits] = true;
		    }
		    loaded ++;
		}

	}
	printf("LoadSafeZones %d", loaded);
}



/*stock IsPlayerNearGaragePoint(playerid) {
	for(new x = 0; x < sizeof(garagePoints); x ++) {
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, garagePoints[x][0], garagePoints[x][1], garagePoints[x][2])) {
	        return 1;
		}
	}
	return 0;
}*/

/*Dialog:DIALOG_SUIT(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		switch(listitem)
  		{
			case 0:
			{
				cl_buying[playerid]= BUYZIP;

				new str[4096];

				for(new i=0;i!=sizeof(cl_ZipData);++i) format(str, 4096, "%s %d.%s\t{3FFA3C}$%d"EMBED_WHITE"\n", str, i, cl_ZipData[i][e_name], cl_ZipData[i][e_price]);
				Dialog_Show(playerid, DIALOG_BUY_CLOTHING, DIALOG_STYLE_TABLIST, "{FFFFFF}[{03BB0C}ร้านขายของแต่งตัว{FFFFFF}]", str, "ตกลง", "ยกเลิก");

				return 1;
			}
			case 1:
			{
				cl_buying[playerid]=BUYSPORTS;

				new str[4096];

				for(new i=0;i!=sizeof(cl_SportsData);++i) format(str, 4096, "%s %d.%s\t{FDEC1C}%d {FFFFFF}Coin"EMBED_WHITE"\n", str, i, cl_SportsData[i][e_name], cl_SportsData[i][e_price]);
				Dialog_Show(playerid, DIALOG_BUY_CLOTHING, DIALOG_STYLE_TABLIST, "{FFFFFF}[{03BB0C}ร้านขายของแต่งตัว{FFFFFF}]", str, "Ok", "Cancel");
				return 1;
			}
		}
	}
	return 1;
}*/

public OnProgressFinish(playerid, objectid)
{
	//if(isPoonStart[playerid] == 1)
		//PlayerPoonUnfreeze(playerid);

	if(isPlayerCallCar[playerid] == 1)
		CallCarComplete(playerid);

	if(isFixCar[playerid] == 2)
		RepairCar(playerid);

	return Y_HOOKS_CONTINUE_RETURN_0;
}

public OnProgressUpdate(playerid, progress, objectid)
{
	if(isPoonStart[playerid] == 1)
	{
		ApplyAnimation(playerid, "BD_FIRE","wash_up", 4.1, 1, 0, 0, 1, 0, 1);
		return Y_HOOKS_BREAK_RETURN_1;
	}
	if(isFixCar[playerid] == 1)
	{
		ApplyAnimation(playerid, "BD_FIRE","wash_up", 4.1, 1, 0, 0, 1, 0, 1);
		return Y_HOOKS_BREAK_RETURN_1;
	}

    return Y_HOOKS_CONTINUE_RETURN_0;
}

/*// จกปูน
PlayerPoonUnfreeze(playerid)
{
	isPoonStart[playerid] = 0;
	ClearAnimations(playerid);

	new id = Inventory_Add(playerid, "ปูน", 1);

	if (id == -1)
	{
	    SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d)", Inventory_Items(playerid), playerData[playerid][pMaxItem]);
		return 1;
	}

	SendClientMessage(playerid, COLOR_WHITE, "คุณได้รับ {00FF00}ปูน + 1{FFFFFF} ชิ้น");

	GivePlayerWanted(playerid, 1);
	SendClientMessage(playerid, COLOR_LIGHTRED, "[คดีความ] {FFFFFF}คุณติดดาวเพราะคุณมีปูน");

	// ระบบแจ้งเตือนตำรวจ
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);

	foreach (new i : Player)
	{
		if(GetFactionType(i) == FACTION_POLICE)
		{
			SetPlayerCheckpoint(i, X,Y,Z, 15.0);

			SendClientMessage(i, COLOR_LIGHTBLUE, "[แจ้งเตือน] : มีพลเมืองดีรายงานว่า 'มีคนกำลังทำงานผิดกฎหมาย'");
			SendClientMessage(i, COLOR_LIGHTBLUE, "[แจ้งเตือน] : ตำแหน่ง Checkpoint ถูกแสดงขึ้นบนแผนที่แล้ว");
		}
	}
	return 1;
}*/

stock IsAPlane(vehicleid)
{
	switch (GetVehicleModel(vehicleid)) {
		case 460, 464, 476, 511, 512, 513, 519, 520, 553, 577, 592, 593: return 1;
	}
	return 0;
}

/*stock IsAHelicopter(vehicleid)
{
	switch (GetVehicleModel(vehicleid)) {
		case 417, 425, 447, 465, 469, 487, 488, 497, 501, 548, 563: return 1;
	}
	return 0;
}*/

// --> ระบบ Boombox
stock Boombox_Place(playerid)
{
	new
	    Float:angle;

	GetPlayerFacingAngle(playerid, angle);

	strpack(BoomboxData[playerid][boomboxURL], "", 128 char);
	GetPlayerPos(playerid, BoomboxData[playerid][boomboxPos][0], BoomboxData[playerid][boomboxPos][1], BoomboxData[playerid][boomboxPos][2]);

	BoomboxData[playerid][boomboxPlaced] = true;
	BoomboxData[playerid][boomboxInterior] = GetPlayerInterior(playerid);
	BoomboxData[playerid][boomboxWorld] = GetPlayerVirtualWorld(playerid);

    BoomboxData[playerid][boomboxObject] = CreateDynamicObject(2226, BoomboxData[playerid][boomboxPos][0], BoomboxData[playerid][boomboxPos][1], BoomboxData[playerid][boomboxPos][2] - 0.9, 0.0, 0.0, angle, BoomboxData[playerid][boomboxWorld], BoomboxData[playerid][boomboxInterior]);
    BoomboxData[playerid][boomboxText3D] = CreateDynamic3DTextLabel("{FCCC09}(Boombox)\n{FFFFFF}พิมพ์ /boombox เพื่อตั้งค่าลำโพง", COLOR_DARKBLUE, BoomboxData[playerid][boomboxPos][0], BoomboxData[playerid][boomboxPos][1], BoomboxData[playerid][boomboxPos][2] - 0.7, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, BoomboxData[playerid][boomboxWorld], BoomboxData[playerid][boomboxInterior]);

	return 1;
}

stock Boombox_Nearest(playerid)
{
	foreach (new i : Player) if (BoomboxData[i][boomboxPlaced] && GetPlayerInterior(playerid) == BoomboxData[i][boomboxInterior] && GetPlayerVirtualWorld(playerid) == BoomboxData[i][boomboxWorld] && IsPlayerInRangeOfPoint(playerid, 30.0, BoomboxData[i][boomboxPos][0], BoomboxData[i][boomboxPos][1], BoomboxData[i][boomboxPos][2])) {
     	return i;
	}
	return INVALID_PLAYER_ID;
}

stock Boombox_SetURL(playerid, url[])
{
	if (BoomboxData[playerid][boomboxPlaced])
	{
	    strpack(BoomboxData[playerid][boomboxURL], url, 128 char);

	    foreach (new i : Player) if (playerData[i][pBoombox] == playerid) {
	        StopAudioStreamForPlayer(i);
	        PlayAudioStreamForPlayer(i, url, BoomboxData[playerid][boomboxPos][0], BoomboxData[playerid][boomboxPos][1], BoomboxData[playerid][boomboxPos][2], 30.0, 1);
		}
	}
	return 1;
}

stock Boombox_Destroy(playerid)
{
	if (BoomboxData[playerid][boomboxPlaced])
	{
		if (IsValidDynamicObject(BoomboxData[playerid][boomboxObject]))
		    DestroyDynamicObject(BoomboxData[playerid][boomboxObject]);

		if (IsValidDynamic3DTextLabel(BoomboxData[playerid][boomboxText3D]))
		    DestroyDynamic3DTextLabel(BoomboxData[playerid][boomboxText3D]);

		foreach (new i : Player) if (playerData[i][pBoombox] == playerid) {
		    StopAudioStreamForPlayer(i);
		}
        BoomboxData[playerid][boomboxPlaced] = false;
        BoomboxData[playerid][boomboxInterior] = 0;
        BoomboxData[playerid][boomboxWorld] = 0;
	}
	return 1;
}

CMD:boombox(playerid, params[])
{
	new
	    type[24],
	    string[512];

	if (!Inventory_HasItem(playerid, "Boombox"))
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่มีลำโพง Marshall อยู่ในตัว");

	if (sscanf(params, "s[24]S()[128]", type, string))
	{
	    SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/boombox (รายการ)");
	    SendClientMessage(playerid, COLOR_YELLOW, "(รายการ) :{FFFFFF} วาง, เก็บ, เปลี่ยนเพลง");
	    return 1;
	}
	if (!strcmp(type, "วาง", true))
	{
	    if (BoomboxData[playerid][boomboxPlaced])
	        return SendClientMessage(playerid, COLOR_GREY, "คุณได้วาง Boombox แล้ว");

		if (Boombox_Nearest(playerid) != INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_GREY, "คุณอยู่ในขอบเขตของ Boombox อื่น");

		if (IsPlayerInAnyVehicle(playerid))
		    return SendClientMessage(playerid, COLOR_GREY, "คุณต้องออกจากยานพาหนะก่อน");

		Boombox_Place(playerid);

		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s วางลำโพง Boombox ลง", GetPlayerNameEx(playerid));
		SendClientMessage(playerid, COLOR_YELLOW, "คุณได้วางลำโพง Boombox ของคุณแล้ว");
	}
	else if (!strcmp(type, "เก็บ", true))
	{
	    if (!BoomboxData[playerid][boomboxPlaced])
	        return SendClientMessage(playerid, COLOR_GREY, "คุณยังไม่ได้ใช้ Boombox");

		if (!IsPlayerInRangeOfPoint(playerid, 3.0, BoomboxData[playerid][boomboxPos][0], BoomboxData[playerid][boomboxPos][1], BoomboxData[playerid][boomboxPos][2]))
		    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้อยู่ในขอบเขต Boombox ของคุณ");

		Boombox_Destroy(playerid);
		SendClientMessage(playerid, -1, "คุณได้เก็บลำโพง Boombox ของคุณแล้ว");
	}
	else if (!strcmp(type, "เปลี่ยนเพลง", true))
	{
	    if (sscanf(string, "s[128]", string))
	        return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/boombox [url] [song url]");

        if (!BoomboxData[playerid][boomboxPlaced])
	        return SendClientMessage(playerid, COLOR_GREY, "คุณยังไม่ได้ใช้ Boombox");

		if (!IsPlayerInRangeOfPoint(playerid, 3.0, BoomboxData[playerid][boomboxPos][0], BoomboxData[playerid][boomboxPos][1], BoomboxData[playerid][boomboxPos][2]))
		    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้อยู่ในขอบเขต Boombox ของคุณ");

		Dialog_Show(playerid, DIALOG_URL, DIALOG_STYLE_INPUT, "{B2FC09}(เปลี่ยนลิ้งเพลง)", "{FFFFFF}กรุณาระบุ URL ของลิ้งเพลงที่คุณต้องการจะฟัง :", "ตกลง", "ยกเลิก");
		return 1;
	}
	return 1;
}

Dialog:DIALOG_URL(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    Boombox_SetURL(playerid, inputtext);
		SendClientMessage(playerid, -1, "{B2FC09}คุณได้เปลี่ยน URL เพลงของลำโพง Boombox ของคุณแล้ว");
	}
	return 1;
}

alias:getjiggy("เต้น")
CMD:getjiggy(playerid, params[]) {

    if(GetPlayerState(playerid) != 1)
		return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณสามารถดำเนินการนี้ได้ในขณะอยู่บนพื้นเท่านั้น");

    new animid;
   	if(sscanf(params,"d",animid)) return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/เต้น [1-9]");
	switch(animid) {

		case 1: ApplyAnimation(playerid, "DANCING", "DAN_Down_A", 4.0, 1,  0, 1, 1, 1, 1);
        case 2: ApplyAnimation(playerid, "DANCING", "DAN_Left_A", 4.0, 1,  0, 1, 1, 1, 1);
       	case 3: ApplyAnimation(playerid, "DANCING", "DAN_Loop_A", 4.0, 1,  0, 1, 1, 1, 1);
        case 4: ApplyAnimation(playerid, "DANCING", "DAN_Right_A", 4.0, 1,  0, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "DANCING", "DAN_Up_A", 4.0, 1,  0, 1, 1, 1, 1);
        case 6: ApplyAnimation(playerid, "DANCING", "dnce_M_a", 4.0, 1,  0, 1, 1, 1, 1);
       	case 7: ApplyAnimation(playerid, "DANCING", "dnce_M_b", 4.0, 1,  0, 1, 1, 1, 1);
        case 8: ApplyAnimation(playerid, "DANCING", "dnce_M_c", 4.0, 1,  0, 1, 1, 1, 1);
        case 9: ApplyAnimation(playerid, "DANCING", "dnce_M_d", 4.0, 1,  0, 1, 1, 1, 1);
        default: SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/เต้น [1-9]");
   	}
   	return 1;
}


CMD:greet(playerid, params[])
{
	new targetid, type;

	if (playerData[playerid][pAnimation] == 0)
		return SendClientMessage(playerid, COLOR_GREY, "คุณต้องโดเนทท่าทางพิเศษก่อน");

	if(sscanf(params,"ud",targetid,type)) {
		SendClientMessage(playerid, COLOR_GREY, "การใช้: /greet [ไอดีผู้เล่น/ชื่อบางส่วน] [style]");
		SendClientMessage(playerid, COLOR_YELLOW, "[1] Kiss [2] Handshake [3] Handshake [4] Handshake [5] Handshake");
		SendClientMessage(playerid, COLOR_YELLOW, "[6] Handshake [7] Handshake [8] Handshake [9] Handshake [10] Handshake");
		return 1;
	}

	if(targetid == INVALID_PLAYER_ID)
		SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นตัดการเชื่อมต่อ");

	if(targetid == playerid)
  		return SendClientMessage(playerid, COLOR_GREY, "คุณไม่สามารถทักทายตัวเองได้");

	if(type > 10 || type < 1)
		return SendClientMessage(playerid, COLOR_WHITE, "มีแค่ 1-10!");

	if (!IsPlayerNearPlayer(playerid, targetid, 2.0))
		return SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้อยู่ใกล้คุณ");

	SetPVarInt(playerid, "SentGreet", 1);
	SetPVarInt(playerid, "GreetType", type);
	SetPVarInt(targetid, "GreetFrom", playerid);
	SetPVarInt(targetid, "GettingGreet", 1);

	SendClientMessageEx(playerid, COLOR_WHITE, "* คุณต้องการทักทาย %s", GetPlayerNameEx(targetid));
	SendClientMessageEx(targetid, COLOR_WHITE, "(ID: %d)%s อยากจะเริ่มทักทายกับคุณ(/acceptshake playerID)", playerid,GetPlayerNameEx(playerid));
	return 1;
}

CMD:acceptshake(playerid, params[])
{
	new targetid;
	if(sscanf(params,"d",targetid)) return SendClientMessage(playerid, COLOR_GREY, "{FF6142}USAGE:"EMBED_WHITE" /acceptshake [ไอดีผู้เล่น/ชื่อบางส่วน]");
	if(GetPVarInt(playerid, "GettingGreet") == 0) return SendClientMessage(playerid, COLOR_GREY, "ไม่มีใครต้องการทักทายคุณ");
	if(GetPVarInt(playerid, "GreetFrom") != targetid) return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้ถูกร้องขอการทักทายจากผู้เล่นนี้");

	if(targetid == INVALID_PLAYER_ID) {
		return SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นตัดการเชื่อมต่อ");
	}

	if(targetid == playerid) return SendClientMessage(playerid, COLOR_GREY, "คุณไม่สามารถทักทายตัวเองได้");


	if (!IsPlayerNearPlayer(playerid, targetid, 1.0)) return SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้อยู่ใกล้คุณ");

    if (AnimationCheck(playerid)) return SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถทักทายได้ในขณะนี้");
    if (AnimationCheck(targetid)) return SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนี้ไม่สามารถทักทายคุณได้ในขณะนี้");

	new type = GetPVarInt(targetid, "GreetType");

	ApplyAnimationEx(playerid, "CARRY", "crry_prtial", 4.0,  0, 1, 1, 1, 1, 1);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

	ApplyAnimationEx(targetid, "CARRY", "crry_prtial", 4.0,  0, 1, 1, 1, 1, 1);
	SetPlayerSpecialAction(targetid, SPECIAL_ACTION_NONE);

	SetPlayerFacePlayer(playerid, targetid);
	SetPlayerFacePlayer(targetid, playerid);

	if(type == 1)
	{
		ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 2.0,  0, 1, 1, 1, 1, 1);
		ApplyAnimation(targetid, "KISSING", "Playa_Kiss_02", 2.0,  0, 1, 1, 1, 1, 1);
	}
	else if(type == 2)
	{
		ApplyAnimation(playerid,"GANGS","hndshkfa_swt", 2.0,  0, 1, 1, 1, 1, 1);
		ApplyAnimation(targetid,"GANGS","hndshkfa_swt", 2.0,  0, 1, 1, 1, 1, 1);
	}
	else if(type == 3)
	{
		ApplyAnimation(playerid,"GANGS","hndshkba", 2.0,  0, 1, 1, 1, 1, 1);
		ApplyAnimation(targetid,"GANGS","hndshkba", 2.0,  0, 1, 1, 1, 1, 1);
	}
	else if(type == 4)
	{
		ApplyAnimation(playerid,"GANGS","hndshkca", 2.0,  0, 1, 1, 1, 1, 1);
		ApplyAnimation(targetid,"GANGS","hndshkca", 2.0,  0, 1, 1, 1, 1, 1);
	}
	else if(type == 5)
	{
		ApplyAnimation(playerid,"GANGS","hndshkcb", 2.0,  0, 1, 1, 1, 1, 1);
		ApplyAnimation(targetid,"GANGS","hndshkcb", 2.0,  0, 1, 1, 1, 1, 1);
	}
	else if(type == 6)
	{
		ApplyAnimation(playerid,"GANGS","hndshkda", 2.0,  0, 1, 1, 1, 1, 1);
		ApplyAnimation(targetid,"GANGS","hndshkda", 2.0,  0, 1, 1, 1, 1, 1);
	}
	else if(type == 7)
	{
		ApplyAnimation(playerid,"GANGS","hndshkea", 2.0,  0, 1, 1, 1, 1, 1);
		ApplyAnimation(targetid,"GANGS","hndshkea", 2.0,  0, 1, 1, 1, 1, 1);
	}
	else if(type == 8)
	{
		ApplyAnimation(playerid,"GANGS","hndshkfa", 2.0,  0, 1, 1, 1, 1, 1);
		ApplyAnimation(targetid,"GANGS","hndshkfa", 2.0,  0, 1, 1, 1, 1, 1);
	}
	else if(type == 9)
	{
		ApplyAnimation(playerid,"GANGS","hndshkaa", 2.0,  0, 1, 1, 1, 1, 1);
		ApplyAnimation(targetid,"GANGS","hndshkaa", 2.0,  0, 1, 1, 1, 1, 1);
	}
	else if(type == 10)
	{
		ApplyAnimation(playerid,"GANGS","prtial_hndshk_biz_01", 2.0,  0, 1, 1, 1, 1, 1);
		ApplyAnimation(targetid,"GANGS","prtial_hndshk_biz_01", 2.0,  0, 1, 1, 1, 1, 1);
	}
	DeletePVar(GetPVarInt(playerid, "GreetFrom"), "SentGreet");
	DeletePVar(GetPVarInt(playerid, "GreetFrom"), "GreetType");
	DeletePVar(playerid, "GreetFrom");
	DeletePVar(playerid, "GettingGreet");
	return 1;
}

SetPlayerFacePlayer(playerid, giveplayerid) {
    new
        Float: pX,
        Float: pY,
        Float: pZ,
        Float: gX,
        Float: gY,
        Float: gZ
    ;
    if(GetPlayerPos(playerid, pX, pY, pZ) && GetPlayerPos(giveplayerid, gX, gY, gZ)) {
        SetPlayerFacingAngle(playerid, (pX = -atan2((gX - pX), (gY - pY))));
        return SetPlayerFacingAngle(giveplayerid, (pX + 180.0));
    }
    return false;
}

AnimationCheck(playerid)
{
	return (playerData[playerid][pInjured] || playerData[playerid][pCuffed]);
}

ApplyAnimationEx(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time, forcesync = 1)
{
	if(playerData[playerid][pInjured])
	    return 0;

	ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, forcesync);
	return 1;
}

// สร้างเกราะ
Dialog:DIALOG_ARMOUR(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		if (Inventory_Count(playerid, "เหล็ก") < 20)
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเหล็กไม่เพียงพอ (20)");

		if (Inventory_Count(playerid, "ทอง") < 20)
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีทองไม่เพียงพอ (20)");

		if (GetPlayerMoneyEx(playerid) < 20000)
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินเขียวไม่เพียงพอ ($20,000)");

		Inventory_Remove(playerid, "เหล็ก", 20);
		Inventory_Remove(playerid, "ทอง", 20);
		GivePlayerMoneyEx(playerid, -20000);

		new cut = random(100);
		switch (cut)
		{
		    case 0..5:
		    {
				Inventory_Add(playerid, "เสื้อเกราะ", 1);

		        SendClientMessage(playerid, COLOR_GREEN, "|============================|");
		        SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}คุณได้รับ {07BB0C}เสื้อเกราะ + 1 {FFFFFF}จากการสร้างเกราะ");
		        SendClientMessage(playerid, COLOR_GREEN, "|============================|");
		    }
		    case 6..99:
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "|============================|");
		        SendClientMessage(playerid, COLOR_RED, "+ {FFFFFF}คุณล้มเหลวในการสร้าง {F71809}เสื้อเกราะ");
		        SendClientMessage(playerid, COLOR_LIGHTRED, "|============================|");
		    }
		}
	}
	return 1;
}

forward SyncCamera(playerid);
public SyncCamera(playerid)
{
	if(GetPVarInt(playerid, "DisableFPS") == 0)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			AttachObjectToPlayer(CameraFirstPerson[playerid], playerid, 0.0, 0.20, 0.75, 0.0, 0.0, 0.0);
			AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
		}
		else
		{
 		    /*iftVehicleModel(GetPlayerVehicleID(playerid)) == 586)
		    {
		    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), 0.044999, -0.269999, 1.039999, 0.0, 0.0, 0.0);
				AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
			}*/
			if(IsABike(GetPlayerVehicleID(playerid)))
			{
    		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 461) //PCJ Suc
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), 0.089999, 0.050000, 1.004999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
				else
				{
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), -0.484999, -0.309999, 1.164999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
			}
     		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) //Faggio Suc
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), 0.089999, -0.100000, 1.004999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
				else
				{
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), -0.004999, -0.609999, 1.164999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
			}
     		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 586) //Wayfarer
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), 0.089999, -0.18, 1.190, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
				else
				{
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), -0.084999, -0.809999, 1.264999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
			}
     		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 521) // FCR-900
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), 0.089999, 0.050000, 1.004999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
				else
				{
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), -0.484999, -0.309999, 1.164999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
			}
     		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 522) // NRG-500
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), 0.049999, 0.050000, 1.004999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
				else
				{
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), -0.284999, -0.459999, 1.164999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
			}
     		else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 468) // Sanchez
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), 0.00, -0.100000, 0.954999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
				else
				{
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), -0.324999, -0.485, 1.154999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
			}
   		    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 581) //BF
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), 0.089999, 0.050000, 1.004999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
				else
				{
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), -0.484999, -0.309999, 1.164999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
			}
   		    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 463) //Freeway
		    {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), 0.044999, -0.269999, 1.039999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
				else
				{
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), -0.059999, -0.859999, 1.289999, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
				}
			}
		    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 411)
		    {
		    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), -0.40, -0.15, 0.45, 0.0, 0.0, 0.0);
				AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
			}
			}
			else
			{
			    new vehicleid = GetPlayerVehicleID(playerid);
			    new vehiclemodelid = GetVehicleModel(vehicleid);

			    new iSeat = GetPlayerVehicleSeat(playerid);
			    new Float:X, Float:Y, Float:Z;
			    GetVehicleModelInfo(vehiclemodelid, VEHICLE_MODEL_INFO_FRONTSEAT, X, Y, Z);

				if(iSeat == 0)
			    {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], vehicleid, X+(-0.85), Y+(-0.18), Z+(0.585), 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
			    }
				else if(iSeat == 1)
			    {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], vehicleid, X+(0.05), Y+(-0.18), Z+(0.585), 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
			    }
				else if(iSeat == 2)
			    {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], vehicleid, X+(-0.85), Y+(-0.86), Z+(0.585), 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
			    }
				else if(iSeat == 3)
			    {
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], vehicleid, X+(0.05), Y+(-0.86), Z+(0.585), 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
			    }
			    /*if(iSeat == 0)
			    {2.3,5.4,1.6

			    -2.75
			    	AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), -0.45, -0.08, 0.53, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
			    }
		    	else if(iSeat == 1)
		    	{
					AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), 0.45, -0.08, 0.53, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
			    }
		    	else if(iSeat == 2)
		    	{
					AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), -0.45000, -0.76000, 0.53000, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
		    	}
		    	else if(iSeat == 3)
		    	{
					AttachObjectToVehicle(CameraFirstPerson[playerid], GetPlayerVehicleID(playerid), 0.45000, -0.76000, 0.53000, 0.0, 0.0, 0.0);
					AttachCameraToObject(playerid, CameraFirstPerson[playerid]);
		    	}*/
			}
		}
	}
	return 1;
}


CMD:fps(playerid, params[])
{
    if(!IsPlayerConnected(playerid)) return SendClientMessage(playerid, COLOR_GREY, "คุณต้องเข้าสู่ระบบก่อนที่จะใช้คำสั่งต่าง ๆ");
    if(IsFPS[playerid] == 0) {
        SetCameraBehindPlayer(playerid);
        CameraFirstPerson[playerid] = CreateObject(19300, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    	SetPVarInt(playerid, "DisableFPS", 0);
	  	SyncCamera(playerid);
	   	GameTextForPlayer(playerid, "~w~ First Person ~b~~h~Enabled", 500, 4);
      	IsFPS[playerid] = 1;
    } else {
     	SetPVarInt(playerid, "DisableFPS", 1);

     	DestroyObject(CameraFirstPerson[playerid]);

		SetCameraBehindPlayer(playerid);
		GameTextForPlayer(playerid, "~w~ First Person ~r~~h~Disabled", 500, 4);
      	IsFPS[playerid] = 0;
 	}
	return 1;
}

CMD:setskin(playerid, params[])
{
	new
	    userid,
		skinid;

    if (playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "ud", userid, skinid))
	    return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/setskin [playerid/name] [skin id]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_GREY, "ผู้เล่นที่ระบุไม่ถูกต้อง");

	if (skinid < 0 || skinid > 350)
	    return SendClientMessage(playerid, COLOR_GREY, "ไอดีสกินไม่ถูกต้อง สกินต้องอยู่ในช่วง 0 ถึง 311");

	SetPlayerSkin(userid, skinid);
	playerData[userid][pSkin] = skinid;

	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้ตั้งค่าสกินของ %s เป็นสกินไอดี: %d", GetPlayerNameEx(userid), skinid);

	return 1;
}

CMD:toghud(playerid, params[])
{
	if (HUDToggle[playerid] == 0)
	{
	    HUDToggle[playerid] = 1;
	    ShowPlayerStats(playerid, true);
	    SendClientMessage(playerid, COLOR_GREEN, "+ {FFFFFF}คุณได้เปิดการใช้งาน 'HUD'");
	}
	else
	{
  		HUDToggle[playerid] = 0;
  		ShowPlayerStats(playerid, false);
  		SendClientMessage(playerid, COLOR_RED, "+ {FFFFFF}คุณได้ปิดการใช้งาน 'HUD'");
	}
	return 1;
}

// สร้างเกราะ
Dialog:DIALOG_TAZER(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		if (Inventory_Count(playerid, "เหล็ก") < 200)
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเหล็กไม่เพียงพอ (200)");

		//if (playerData[playerid][pRedMoney] < 10000)
		    //return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินแดงไม่เพียงพอ ($10,000)");

		if (GetPlayerRedMoney(playerid) < 10000)
	        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินแดงไม่เพียงพอ ($10,000)");

		if (GetPlayerMoneyEx(playerid) < 20000)
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินเขียวไม่เพียงพอ ($20,000)");

		Inventory_Remove(playerid, "เหล็ก", 200);
		//playerData[playerid][pRedMoney] -= 10000;
		GivePlayerRedMoney(playerid, -50000);
		GivePlayerMoneyEx(playerid, -20000);

		new cut = random(100);
		switch (cut)
		{
		    case 0..10:
		    {
				Inventory_Add(playerid, "ปืนช็อตไฟฟ้า", 1);

		        SendClientMessage(playerid, COLOR_GREEN, "|============================|");
		        SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}คุณได้รับ {F9CC15}ปืนช็อตไฟฟ้า + 1 {FFFFFF}จากการสร้างปืนช็อตไฟฟ้า");
		        SendClientMessage(playerid, COLOR_GREEN, "|============================|");
		    }
		    case 11..99:
		    {
		        SendClientMessage(playerid, COLOR_LIGHTRED, "|============================|");
		        SendClientMessage(playerid, COLOR_RED, "+ {FFFFFF}คุณล้มเหลวในการสร้าง {F9CC15}ปืนช็อตไฟฟ้า");
		        SendClientMessage(playerid, COLOR_LIGHTRED, "|============================|");
		    }
		}
	}
	return 1;
}


/*stock CountIP(ip[]) // Counts how many connections from one IP.
{
    new b = 0;
    for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && !strcmp(GetIP(i),ip)) b++;
    return b;
}*/

stock BanAllBots(playerid) // Bans the player.
{
    new PlayerNameEx[25];
    GetPlayerName(playerid, PlayerNameEx, sizeof(PlayerNameEx));
    printf("%s was Banned due to MANY Connections.", PlayerNameEx);
    Ban(playerid);
    return 1;
}

// ระบบท่าเต้น  By EnterDev
CMD:dancing(playerid, params[])
{
	new animid;
	if(sscanf(params,"d",animid))
	return SendClientMessage(playerid, COLOR_GREY, "/dancing [1-9]");
	switch(animid) {

   		case 1: ApplyAnimation(playerid, "DANCING", "DAN_Down_A", 4.0, 1, 0, 0, 0, 0);
	   	case 2: ApplyAnimation(playerid, "DANCING", "DAN_Left_A", 4.0, 1, 0, 0, 0, 0);
 		case 3: ApplyAnimation(playerid, "DANCING", "DAN_Loop_A", 4.0, 1, 0, 0, 0, 0);
 		case 4: ApplyAnimation(playerid, "DANCING", "DAN_Right_A", 4.0, 1, 0, 0, 0, 0);
	  	case 5: ApplyAnimation(playerid, "DANCING", "DAN_Up_A", 4.0, 1, 0, 0, 0, 0);
		case 6: ApplyAnimation(playerid, "DANCING", "dnce_M_a", 4.0, 1, 0, 0, 0, 0);
  		case 7: ApplyAnimation(playerid, "DANCING", "dnce_M_b", 4.0, 1, 0, 0, 0, 0);
		case 8: ApplyAnimation(playerid, "DANCING", "dnce_M_c", 4.0, 1, 0, 0, 0, 0);
  		case 9: ApplyAnimation(playerid, "DANCING", "dnce_M_d", 4.0, 1, 0, 0, 0, 0);
	 	default: SendClientMessage(playerid, COLOR_GREY, "/dancing [1-9]");
   	}
   	return 1;
}
//1245.108764, -1829.746093, 13.394620 - 0.4, 59.886966
CMD:savepos(playerid){
	new Float:x, Float:y, Float:z, Float:a;

	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, a);

    printf("[%s]%f, %f, %f, %f", GetPlayerNameEx(playerid), x, y, z, a);
    SendClientMessageEx(playerid, COLOR_GREEN, "[ !] {ffffff}[X:%f][Y:%f][Z:%f][A:%f]",x,y,z,a);
	return 1;
}
CMD:tod(playerid, params[])
{
	new weather;
 	if(playerData[playerid][pAdmin] < 2)
	 	return SendClientMessage(playerid, COLOR_RED, "[!]{ffffff}คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if(sscanf(params, "d", weather))
		return SendClientMessage(playerid, COLOR_RED, "[!]{ffffff}การใช้งาน : /tod [weatherid]");

	if(weather < 0||weather > 45)
 	{
	 	SendClientMessage(playerid, COLOR_RED, "[!]{ffffff} idต้องมากกว่า 0 และไม่เกิน 45");
	 	return 1;
 	}
	SetWeather(weather);
  	SendClientMessage(playerid, COLOR_GREY, "สภาพอากาศถูกเปลี่ยนให้กับทุกคน!");
	return 1;
}

// สูบบุหรี่ไฟฟ้า
alias:vape("สูบบุหรี่ไฟฟ้า")
CMD:vape(playerid, params[])
{
    if (!Inventory_HasItem(playerid, "บุหรี่ไฟฟ้า"))
		return SendClientMessage(playerid, COLOR_RED, "[!]{ffffff}คุณไม่มี 'บุหรี่ไฟฟ้า'");

	ApplyAnimation(playerid,"SMOKING","M_smk_in",4.1, 0, 1, 1, 1, 1, 1);
	SetTimerEx("SmokeWeed214", 2000, false, "d", playerid);
	SendClientMessageEx(playerid, COLOR_YELLOW, "คุณกำลังสูบบุหรี่ไฟฟ้า HP + 50");
	return 1;
}

forward SmokeWeed214(playerid);
public SmokeWeed214(playerid)
{
    SetPlayerAttachedObject(playerid, 4, 18687, 2, 0.012896, 0.179381, -1.588311, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); //
	SetTimerEx("SmokeWeed144", 2000, false, "d", playerid);
}

forward SmokeWeed144(playerid);
public SmokeWeed144(playerid)
{
	new Float:hp; GetPlayerHealth(playerid, hp);

    RemovePlayerAttachedObject(playerid, 4);
	ClearAnimations(playerid);
	TogglePlayerControllable(playerid, 1);

	SetPlayerHealth(playerid, hp + 50);
}

CMD:kickall(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 1)
	    return 1;

	foreach (new i : Player)
	{
		if(playerData[i][IsLoggedIn])
		{
            UpdateplayerData(i);
            DelayedKick(i);
            SendClientMessageToAllEx(COLOR_LIGHTRED, "* เซิฟเวอร์ถูก Restart เพื่ออัพเดทระบบ กรุณาออกเข้าใหม่");
		}
	}

	SendClientMessageToAllEx(COLOR_LIGHTRED, "AdmCmd: %s ได้เตะผู้เล่นทุกคนออกจากเซิร์ฟเวอร์", GetPlayerNameEx(playerid));

	return 1;
}
CMD:ckitem(playerid, params[])
{
	static
	    userid;

	if (playerData[playerid][pAdmin] < 2)
	    return 1;

	if (sscanf(params, "u", userid))
     	return SendClientMessage(playerid, COLOR_WHITE, "/ckitem [ไอดี/ชื่อ]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	toggleInventory(playerid, userid);
	return 1;
}

forward toggleInventory(playerid, targetid);
public toggleInventory(playerid, targetid)
{
    if (playerData[playerid][IsLoggedIn] == false)
	    return 0;

	new
		string[4096],
		string2[4096],
		count,
		var[32];

    for (new i = 0; i < playerData[targetid][pMaxItem]; i ++)
	{
 		if (invData[targetid][i][invExists])
		 {
   			format(string, sizeof(string), "%s\t{D0AEEB}({FFFFFF}%d{D0AEEB}){FFFFFF}%d{D0AEEB})\n", invData[targetid][i][invItem], invData[targetid][i][invQuantity], invData[playerid][i][invWeapon]);
   			strcat(string2, string);
   			format(var, sizeof(var), "itemlist%d", count);
   			SetPVarInt(targetid, var, i);
   			count++;
		}
	}
	if (!count)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นไม่มีของภายในตัว");
		return 1;
	}
	//playerData[playerid][pItemSelect] = 0;
	format(string, sizeof(string), "ชื่อ\tความจุ (%d/%d)\tความทน\n%s", Inventory_Items(targetid), playerData[targetid][pMaxItem], string2);
	return Dialog_Show(playerid, ShowOnly, DIALOG_STYLE_TABLIST_HEADERS, "[กระเป๋า]", string, "เลือก", "ปิด");
}
CMD:ckstats(playerid, params[])
{
	static
	    userid;

	if (playerData[playerid][pAdmin] < 2)
	    return 1;

	if (sscanf(params, "u", userid))
     	return SendClientMessage(playerid, COLOR_WHITE, "/ckstats [ไอดี/ชื่อ]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	static const aGender[3][10] = {"แก้ไข", "ชาย", "หญิง"};

	new string100[4096];
	new string2[4096];

	format(string100, sizeof(string100), "{04C407}|---------- {FFFFFF}(%d)%s %s{00FF00} ----------|\n", userid, GetPlayerNameEx(userid), ReturnDateEx());
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}เพศ: {FFFF00}[%s] {FFFFFF}เงินในตัว: {FFFF00}[%s] {FFFFFF}เงินแดง: {FFFF00}[%s] {FFFFFF}วันเดือนปีเกิด: {FFFF00}[%s]\n", aGender[playerData[userid][pGender]], FormatMoney(GetPlayerMoneyEx(userid)), FormatMoney(GetPlayerRedMoney(userid)), playerData[userid][pBirthday]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}ฆ่า: {FFFF00}[%s] {FFFFFF}ตาย: {FFFF00}[%s] {FFFFFF}น้ำ: {FFFF00}[%.3f] {FFFFFF}อาหาร: {FFFF00}[%.3f]\n", FormatNumber(playerData[userid][pKills]), FormatNumber(playerData[userid][pDeaths]), playerData[userid][pThirsty], playerData[userid][pHungry]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}เลเวล: {FFFF00}[%d] {FFFFFF}ค่าประสบการณ์: {FFFF00}[%d/%d] {FFFFFF}ชั่วโมงที่เล่น: {FFFF00}[%d] {FFFFFF}ครบชั่วโมง: {FFFF00}[%d/60]\n", GetPlayerLevel(userid), GetPlayerExp(userid), GetPlayerRequiredExp(userid), playerData[userid][pHours], playerData[userid][pMinutes]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}วันที่ลงทะเบียน: {FFFF00}[%s]\n", playerData[userid][pRegisterDate]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFF00}Point: {FFFFFF}[%s Point]\n", FormatNumber(playerData[userid][pPoint]));
	strcat(string2,string100);

	Dialog_Show(playerid,ShowOnly,DIALOG_STYLE_MSGBOX,"{C42104}[{FE5132}สถานะตัวละคร{C42104}]",string2,"ตกลง","");
	return 1;
}

alias:TWITTER("TW")
CMD:TWITTER(playerid, params[])
{
	if (playerData[playerid][pOOCSpam] > 0)
		return SendClientMessageEx(playerid, COLOR_RED, "[ ! ] {FFFFFF}ป้องกันการ Spam ข้อความ คุณเหลือเวลาอีก %d วินาที ในการใช้คำสั่งใหม่อีกครั้ง", playerData[playerid][pOOCSpam]);


	SendClientMessageToAllEx(COLOR_ORANGE , "{1E90FF}[TWITTER]{FFFFFF} %s(%d) {1E90FF}:{FFFFFF} %s ", GetPlayerNameEx(playerid), playerid, params);

	playerData[playerid][pOOCSpam] = 10;
	return 1;
}

alias:Shopee("Shopee")
CMD:Shopee(playerid, params[])
{
	if (playerData[playerid][pOOCSpam] > 0)
		return SendClientMessageEx(playerid, COLOR_RED, "[ ! ] {FFFFFF}ป้องกันการ Spam ข้อความ คุณเหลือเวลาอีก %d วินาที ในการใช้คำสั่งใหม่อีกครั้ง", playerData[playerid][pOOCSpam]);


	SendClientMessageToAllEx(COLOR_ORANGE , "{FF8C00}[Shopee]{FF8C00} %s(%d) {FF8C00}:{FF8C00} %s ", GetPlayerNameEx(playerid), playerid, params);

	playerData[playerid][pOOCSpam] = 20;
	return 1;
}

// --> ระบบแชร์โลเคชั่น
alias:lot("ส่งโล")
CMD:lot(playerid, params[])
{
	static
	    userid;

	if (sscanf(params, "u", userid))
     	return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/แชร์โลเคชั่น [ไอดี/ชื่อ]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (!IsPlayerSpawnedEx(userid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ยังไม่ได้อยู่ในสถานะปกติ");

	new Float:X, Float:Y, Float:Z;

	GetPlayerPos(playerid, X,Y,Z);

	SetPlayerCheckpoint(userid, X,Y,Z, 2.0);

	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "> คุณได้ส่งพิกัดล่าสุดของคุณให้กับผู้เล่น '%s' แล้ว", GetPlayerNameEx(userid));
	SendClientMessageEx(userid, COLOR_YELLOW, "> คุณได้รับพิกัดตำแหน่งล่าสุดของ '%s' แล้ว", GetPlayerNameEx(playerid));

	return 1;
}
CMD:creategate(playerid, params[])
{
	static
	    id = -1;

    if (playerData[playerid][pAdmin] < 5)
	    return SendAdminAlert(COLOR_LIGHTRED, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้.");

	id = Gate_Create(playerid);

	if (id == -1)
	    return SendAdminAlert(COLOR_LIGHTRED, "The server has reached the limit for gates.");

	SendAdminAlert(COLOR_LIGHTRED, "You have successfully created gate ID: %d.", id);
	return 1;
}

CMD:destroygate(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 5)
	    return SendAdminAlert(COLOR_LIGHTRED, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้.");

	if (sscanf(params, "d", id))
	    return SendAdminAlert(COLOR_LIGHTRED, "/destroygate [gate id]");

	if ((id < 0 || id >= MAX_GATES) || !GateData[id][gateExists])
	    return SendAdminAlert(COLOR_LIGHTRED, "You have specified an invalid gate ID.");

	Gate_Delete(id);
	SendAdminAlert(COLOR_LIGHTRED, "You have successfully destroyed gate ID: %d.", id);
	return 1;
}

CMD:editgate(playerid, params[])
{
	static
	    id,
	    type[24],
	    string[128];

	if (playerData[playerid][pAdmin] < 5)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้.");

	if (sscanf(params, "ds[24]S()[128]", id, type, string))
 	{
	 	SendClientMessage(playerid, COLOR_GREY, "/editgate [id] [name]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[NAMES]:{FFFFFF} location, speed, radius, time, model, pos, move, pass, linkid, faction");
		return 1;
	}
	if ((id < 0 || id >= MAX_GATES) || !GateData[id][gateExists])
	    return SendClientMessage(playerid, COLOR_GREY, "You have specified an invalid gate ID.");

    if (!strcmp(type, "location", true))
	{
		static
		    Float:x,
		    Float:y,
		    Float:z,
		    Float:angle;

		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, angle);

		x += 3.0 * floatsin(-angle, degrees);
		y += 3.0 * floatcos(-angle, degrees);

		GateData[id][gatePos][0] = x;
		GateData[id][gatePos][1] = y;
		GateData[id][gatePos][2] = z;
		GateData[id][gatePos][3] = 0.0;
		GateData[id][gatePos][4] = 0.0;
		GateData[id][gatePos][5] = angle;

		SetDynamicObjectPos(GateData[id][gateObject], x, y, z);
		SetDynamicObjectRot(GateData[id][gateObject], 0.0, 0.0, angle);

		GateData[id][gateOpened] = false;

		Gate_Save(id);
		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s has adjusted the position of gate ID: %d.", GetPlayerNameEx(playerid), id);
		return 1;
	}
	else if (!strcmp(type, "speed", true))
	{
	    static
	        Float:speed;

		if (sscanf(string, "f", speed))
		    return SendClientMessage(playerid, COLOR_GREY, "/editgate [id] [speed] [move speed]");

		if (speed < 0.0 || speed > 20.0)
		    return SendClientMessage(playerid, COLOR_GREY, "The specified speed can't be below 0 or above 20.");

        GateData[id][gateSpeed] = speed;

		Gate_Save(id);
		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s has adjusted the speed of gate ID: %d to %.2f.", GetPlayerNameEx(playerid), id, speed);
		return 1;
	}
	else if (!strcmp(type, "radius", true))
	{
	    static
	        Float:radius;

		if (sscanf(string, "f", radius))
		    return SendClientMessage(playerid, COLOR_GREY, "/editgate [id] [radius] [open radius]");

		if (radius < 0.0 || radius > 20.0)
		    return SendClientMessage(playerid, COLOR_GREY, "The specified radius can't be below 0 or above 20.");

        GateData[id][gateRadius] = radius;

		Gate_Save(id);
		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s has adjusted the radius of gate ID: %d to %.2f.", GetPlayerNameEx(playerid), id, radius);
		return 1;
	}
	else if (!strcmp(type, "time", true))
	{
	    static
	        time;

		if (sscanf(string, "d", time))
		    return SendClientMessage(playerid, COLOR_GREY, "/editgate [id] [time] [close time] (0 to disable)");

		if (time < 0 || time > 60000)
		    return SendClientMessage(playerid, COLOR_GREY, "The specified time can't be 0 or above 60,000 ms.");

        GateData[id][gateTime] = time;

		Gate_Save(id);
		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s has adjusted the close time of gate ID: %d to %d.", GetPlayerNameEx(playerid), id, time);
		return 1;
	}
	else if (!strcmp(type, "model", true))
	{
	    static
	        model;

		if (sscanf(string, "d", model))
		    return SendClientMessage(playerid, COLOR_GREY, "/editgate [id] [model] [gate model]");

		if (!IsValidObjectModel(model))
		    return SendClientMessage(playerid, COLOR_GREY, "Invalid object model.");

        GateData[id][gateModel] = model;

		DestroyDynamicObject(GateData[id][gateObject]);
		GateData[id][gateObject] = CreateDynamicObject(GateData[id][gateModel], GateData[id][gatePos][0], GateData[id][gatePos][1], GateData[id][gatePos][2], GateData[id][gatePos][3], GateData[id][gatePos][4], GateData[id][gatePos][5], GateData[id][gateWorld], GateData[id][gateInterior]);

		Gate_Save(id);
		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s has adjusted the model of gate ID: %d to %d.", GetPlayerNameEx(playerid), id, model);
		return 1;
	}
    else if (!strcmp(type, "pos", true))
	{
	    ResetEditing(playerid);
	   	EditDynamicObject(playerid, GateData[id][gateObject]);

		playerData[playerid][pEditGate] = id;
		playerData[playerid][pEditType] = 1;

		SendAdminAlert(COLOR_LIGHTRED,  "You are now adjusting the position of gate ID: %d.", id);
		return 1;
	}
	else if (!strcmp(type, "move", true))
	{
	    ResetEditing(playerid);
	   	EditDynamicObject(playerid, GateData[id][gateObject]);

		playerData[playerid][pEditGate] = id;
		playerData[playerid][pEditType] = 2;

		SendAdminAlert(COLOR_LIGHTRED,  "You are now adjusting the position of gate ID: %d.", id);
		return 1;
	}
	else if (!strcmp(type, "linkid", true))
	{
	    static
	        linkid = -1;

		if (sscanf(string, "d", linkid))
		    return SendClientMessage(playerid, COLOR_GREY, "/editgate [id] [linkid] [gate link] (-1 for none)");

        if ((linkid < -1 || linkid >= MAX_GATES) || (linkid != -1 && !GateData[linkid][gateExists]))
	    	return SendClientMessage(playerid, COLOR_GREY, "You have specified an invalid gate ID.");

        GateData[id][gateLinkID] = (linkid == -1) ? (-1) : (GateData[linkid][gateID]);
		Gate_Save(id);

		if (id == -1)
			SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s has adjusted the faction of gate ID: %d to no gate.", GetPlayerNameEx(playerid), id);

		else
		    SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s has adjusted the faction of gate ID: %d to ID: %d.", GetPlayerNameEx(playerid), id, linkid);

		return 1;
	}
	else if (!strcmp(type, "faction", true))
	{
	    static
	        factionid = -1;

		if (sscanf(string, "d", factionid))
		    return SendClientMessage(playerid, COLOR_GREY, "/editgate [id] [faction] [gate faction] (-1 for none)");

        if ((factionid < -1 || factionid >= MAX_FACTIONS) || (factionid != -1 && !factionData[factionid][factionExists]))
	    	return SendClientMessage(playerid, COLOR_GREY, "You have specified an invalid faction ID.");

        GateData[id][gateFaction] = (factionid == -1) ? (-1) : (factionData[factionid][factionID]);
		Gate_Save(id);

		if (factionid == -1)
			SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s has adjusted the faction of gate ID: %d to no faction.", GetPlayerNameEx(playerid), id);

		else
		    SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s has adjusted the faction of gate ID: %d to \"%s\".", GetPlayerNameEx(playerid), id, factionData[factionid][factionName]);

		return 1;
	}
	else if (!strcmp(type, "pass", true))
	{
	    static
	        pass[32];

		if (sscanf(string, "s[32]", pass))
		    return SendClientMessage(playerid, COLOR_GREY, "/editgate [id] [pass] [gate password] (Use 'none' to disable)");

		if (!strcmp(params, "none", true))
			GateData[id][gatePass][0] = 0;

		else format(GateData[id][gatePass], 32, pass);

		Gate_Save(id);
		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s has adjusted the password of gate ID: %d to %s.", GetPlayerNameEx(playerid), id, pass);
		return 1;
	}
	return 1;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	if (response == EDIT_RESPONSE_FINAL)
	{

		 if (playerData[playerid][pEditGate] != -1 && GateData[playerData[playerid][pEditGate]][gateExists])
	    {
	        switch (playerData[playerid][pEditType])
	        {
	            case 1:
	            {
	                new id = playerData[playerid][pEditGate];

	                GateData[playerData[playerid][pEditGate]][gatePos][0] = x;
	                GateData[playerData[playerid][pEditGate]][gatePos][1] = y;
	                GateData[playerData[playerid][pEditGate]][gatePos][2] = z;
	                GateData[playerData[playerid][pEditGate]][gatePos][3] = rx;
	                GateData[playerData[playerid][pEditGate]][gatePos][4] = ry;
	                GateData[playerData[playerid][pEditGate]][gatePos][5] = rz;

	                DestroyDynamicObject(GateData[id][gateObject]);
					GateData[id][gateObject] = CreateDynamicObject(GateData[id][gateModel], GateData[id][gatePos][0], GateData[id][gatePos][1], GateData[id][gatePos][2], GateData[id][gatePos][3], GateData[id][gatePos][4], GateData[id][gatePos][5], GateData[id][gateWorld], GateData[id][gateInterior]);

					Gate_Save(id);
                    SendAdminAlert(COLOR_LIGHTRED,  "You have edited the position of gate ID: %d.", id);
				}
				case 2:
	            {
	                new id = playerData[playerid][pEditGate];

	                GateData[playerData[playerid][pEditGate]][gateMove][0] = x;
	                GateData[playerData[playerid][pEditGate]][gateMove][1] = y;
	                GateData[playerData[playerid][pEditGate]][gateMove][2] = z;
	                GateData[playerData[playerid][pEditGate]][gateMove][3] = rx;
	                GateData[playerData[playerid][pEditGate]][gateMove][4] = ry;
	                GateData[playerData[playerid][pEditGate]][gateMove][5] = rz;

	                DestroyDynamicObject(GateData[id][gateObject]);
					GateData[id][gateObject] = CreateDynamicObject(GateData[id][gateModel], GateData[id][gatePos][0], GateData[id][gatePos][1], GateData[id][gatePos][2], GateData[id][gatePos][3], GateData[id][gatePos][4], GateData[id][gatePos][5], GateData[id][gateWorld], GateData[id][gateInterior]);

					Gate_Save(id);
                    SendAdminAlert(COLOR_LIGHTRED,  "You have edited the moving position of gate ID: %d.", id);
				}
			}
		}
	}
	if (response == EDIT_RESPONSE_FINAL || response == EDIT_RESPONSE_CANCEL)
	{

	    playerData[playerid][pEditType] = 0;
	    playerData[playerid][pEditGate] = -1;
	}
	return 1;
}
CMD:open(playerid, params[])
{
	new id = Gate_Nearest(playerid);

	if (id != -1)
	{
		if (strlen(GateData[id][gatePass]))
		{
		    Dialog_Show(playerid, GatePass, DIALOG_STYLE_INPUT, "Enter Password", "Please enter the password for this gate below:", "Submit", "Cancel");
		}
		else
		{
		    if (GateData[id][gateFaction] != -1 && playerData[playerid][pFaction] != GetFactionByID(GateData[id][gateFaction]))
				return SendClientMessage(playerid,  0xFFFFFFAA,"คุณไม่สามารถเปิดประตูนี้ได้");

			Gate_Operate(id);

			switch (GateData[id][gateOpened])
			{
			    case 0:
				    //ShowPlayerFooter(playerid, "You have ~r~closed~w~ the gate!");
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s ปิดประตู", GetPlayerNameEx(playerid));

                case 1:
        			//ShowPlayerFooter(playerid, "You have ~g~opened~w~ the gate!");
        			SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s เปิดประตู", GetPlayerNameEx(playerid));
			}
		}
	}
	return 1;

}

stock GetGateByID(sqlid)
{
	for (new i = 0; i != MAX_GATES; i ++) if (GateData[i][gateExists] && GateData[i][gateID] == sqlid)
	    return i;

	return -1;
}

forward Gate_Load();
public Gate_Load()
{
    static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_GATES)
	{
	    GateData[i][gateExists] = true;
	    GateData[i][gateOpened] = false;


	    cache_get_value_name_int(i, "gateID",GateData[i][gateID]);
	    cache_get_value_name_int(i, "gateModel",GateData[i][gateModel]);
	    cache_get_value_name_float(i, "gateSpeed",GateData[i][gateSpeed]);
	    cache_get_value_name_float(i, "gateRadius",GateData[i][gateRadius]);
	    cache_get_value_name_int(i, "gateTime",GateData[i][gateTime]);
	    cache_get_value_name_int(i, "gateInterior",GateData[i][gateInterior]);
	    cache_get_value_name_int(i, "gateWorld",GateData[i][gateWorld]);

	    cache_get_value_name_float(i, "gateX",GateData[i][gatePos][0]);
	    cache_get_value_name_float(i, "gateY",GateData[i][gatePos][1]);
	    cache_get_value_name_float(i, "gateZ",GateData[i][gatePos][2]);
	    cache_get_value_name_float(i, "gateRX",GateData[i][gatePos][3]);
	    cache_get_value_name_float(i, "gateRY",GateData[i][gatePos][4]);
	    cache_get_value_name_float(i, "gateRZ",GateData[i][gatePos][5]);

        cache_get_value_name_float(i, "gateMoveX",GateData[i][gateMove][0]);
	    cache_get_value_name_float(i, "gateMoveY",GateData[i][gateMove][1]);
	    cache_get_value_name_float(i, "gateMoveZ",GateData[i][gateMove][2]);
	    cache_get_value_name_float(i, "gateMoveRX",GateData[i][gateMove][3]);
	    cache_get_value_name_float(i, "gateMoveRY",GateData[i][gateMove][4]);
	    cache_get_value_name_float(i, "gateMoveRZ",GateData[i][gateMove][5]);

        cache_get_value_name_int(i, "gateLinkID",GateData[i][gateLinkID]);
	    cache_get_value_name_int(i, "gateFaction",GateData[i][gateFaction]);

		cache_get_value_name_int(i, "gatePass", GateData[i][gatePass]);
	    //cache_get_field_content(i, "gatePass", GateData[i][gatePass], g_iHandle, 32);
		printf("[SERVER]: %d Gates were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	    GateData[i][gateObject] = CreateDynamicObject(GateData[i][gateModel], GateData[i][gatePos][0], GateData[i][gatePos][1], GateData[i][gatePos][2], GateData[i][gatePos][3], GateData[i][gatePos][4], GateData[i][gatePos][5], GateData[i][gateWorld], GateData[i][gateInterior]);
	}
	printf("[SERVER]: %d Gates were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward OnGateCreated(gateid);
public OnGateCreated(gateid)
{
	if (gateid == -1 || !GateData[gateid][gateExists])
	    return 0;

	GateData[gateid][gateID] = cache_insert_id();
	Gate_Save(gateid);

	return 1;
}

stock IsPlayerNearHood(playerid, vehicleid)
{
	new
		Float:fX,
		Float:fY,
		Float:fZ;

	GetVehicleHood(vehicleid, fX, fY, fZ);

	return (GetPlayerVirtualWorld(playerid) == GetVehicleVirtualWorld(vehicleid)) && IsPlayerInRangeOfPoint(playerid, 3.0, fX, fY, fZ);
}

stock GetVehicleHood(vehicleid, &Float:x, &Float:y, &Float:z)
{
    if (!GetVehicleModel(vehicleid) || vehicleid == INVALID_VEHICLE_ID)
	    return (x = 0.0, y = 0.0, z = 0.0), 0;

	new
	    Float:pos[7]
	;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, pos[0], pos[1], pos[2]);
	GetVehiclePos(vehicleid, pos[3], pos[4], pos[5]);
	GetVehicleZAngle(vehicleid, pos[6]);

	x = pos[3] + (floatsqroot(pos[1] + pos[1]) * floatsin(-pos[6], degrees));
	y = pos[4] + (floatsqroot(pos[1] + pos[1]) * floatcos(-pos[6], degrees));
 	z = pos[5];

	return 1;
}



//ระบบนี้จัดทำโดยเป๊ก สุดหล่อ
//ลบเครดิตพ่อมึงตาย

alias:givecar("เสกรถ")
CMD:givecar(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new userid, carid, carfuel, query[1640];
        if(sscanf(params, "udf", userid, carid, carfuel))
			return SendClientMessage(playerid, COLOR_WHITE, "/เสกรถ [ไอดี/ชื่อ] [ไอดีรถ] [ค่าน้ำมัน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ ! ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

		mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', %d, %.1f, '557.8670', '-1283.9822', '17.0007', '0.0000')", playerData[userid][pID], GetPlayerNameEx(userid), carid, carfuel);
		mysql_tquery(g_SQL, query);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ให้รถ %s กับ %s ", GetPlayerNameEx(playerid), g_arrVehicleNames[carid - 400], GetPlayerNameEx(userid));
	}
    return 1;
}

Injured_Remove(hitmanid)
{
	if (hitmanid != -1 && injuredData[hitmanid][injuredExists])
	{
	    injuredData[hitmanid][injuredExists] = false;

		injuredData[hitmanid][injuredID] = -1;
		injuredData[hitmanid][injuredTarget] = -1;
	}
	return 1;
}
// อุ้มเอ๋อ
CMD:aomaoue(playerid, params[])
{
	new
	    userid;

    if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/อุ้มเอ๋อ [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (playerData[userid][pJailTime] > 0)
	    return SendClientMessage(playerid, COLOR_RED, "* คุณไม่สามารถลากผู้เล่นที่ติดคุกอยู่ได้");

    if (playerData[userid][pDraggedBy] == playerid)
	{
     	SetPVarInt(userid, "DisableFPS", 1);

     	DestroyObject(CameraFirstPerson[userid]);

		SetCameraBehindPlayer(userid);
      	IsFPS[userid] = 0;

		playerData[userid][pDragged] = 0;
		playerData[userid][pDraggedBy] = INVALID_PLAYER_ID;

		SetPlayerVirtualWorld(userid, GetPlayerVirtualWorld(playerid));

		ApplyAnimation(playerid, "CARRY", "putdwn", 4.0, 0, 0, 0, 0, 0);
		RemovePlayerAttachedObject(playerid, 6);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

		KillTimer(playerData[userid][pDragTimer]);
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ปล่อยตัว %s วางที่พื้น", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
		return 1;
	}

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (playerData[userid][pInjured])
	{
		if (playerData[userid][pDragged])
		{
			if (playerData[userid][pDraggedBy] != playerid)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถแย่งตัวผู้เล่นที่กำลังถูกอุ้มอยู่ได้");

	     	SetPVarInt(userid, "DisableFPS", 1);

	     	DestroyObject(CameraFirstPerson[userid]);

			SetCameraBehindPlayer(userid);
	      	IsFPS[userid] = 0;

			// ยกเลิก
		    playerData[playerid][pDragStart] = 0;
		    playerData[playerid][pDragID] = -1;
		    playerData[playerid][pDragTime] = 0;

		    playerData[userid][pDragged] = 0;
		    playerData[userid][pDraggedBy] = INVALID_PLAYER_ID;

		    SetPlayerVirtualWorld(userid, GetPlayerVirtualWorld(playerid));

			ApplyAnimation(playerid, "CARRY", "putdwn", 4.0, 0, 0, 0, 0, 0);
			RemovePlayerAttachedObject(playerid, 6);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

		    KillTimer(playerData[userid][pDragTimer]);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ปล่อยตัว %s วางที่พื้น", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
		}
		else
		{
			if (CopOnline() < 1)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "ต้องมีตำรวจออนไลน์มากกว่า 2 คนขึ้นไป!");

		    playerData[userid][pDragged] = 1;
		    playerData[userid][pDraggedBy] = playerid;

			// --> ถือคนอุ้ม
			SetPlayerAttachedObject(playerid, 6, 3092, 6, 0.048999, 0.021000, -0.269999, -27.799999, -5.000000, 15.299999, 1.000000, 1.000000, 1.000000);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);

			ApplyAnimation(playerid, "CARRY", "liftup", 4.1, 0, 0, 0, 0, 0, 1);

			// --> ทำตัวผู้เล่นที่ถูกอุ้มให้หาย
			SetPlayerVirtualWorld(userid, userid + 1);

			// เริ่มต้น
		    playerData[playerid][pDragStart] = 1;
		    playerData[playerid][pDragID] = userid;
		    playerData[playerid][pDragTime] = 0;

			// --> FPS Mode
	        SetCameraBehindPlayer(userid);
	        CameraFirstPerson[userid] = CreateDynamicObject(19300, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	    	SetPVarInt(userid, "DisableFPS", 0);
		  	SyncCamera(userid);
	      	IsFPS[userid] = 1;

		    playerData[userid][pDragTimer] = SetTimerEx("DragUpdate2", 200, true, "dd", playerid, userid);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้อุ้มตัว %s ที่กำลังบาดเจ็บไปกับเขา", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));

			SendClientMessageToAllEx(-1, "{F34C1F}[อุ้มเอ๋อ] : {ECF306}ผู้เล่น %s กำลังทำการอุ้มเอ๋อผู้บาดเจ็บ %s ในตอนนี้!", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
		}
		return 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "สำหรับผู้บาดเจ็บเท่านั้น!");
	}
	return 1;
}
alias:aomaoue("ohm")

alias:deadfrisk("top")
CMD:deadfrisk(playerid, params[])
{
    new
	    userid;

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "การใช้งาน : {FFFFFF}/จกของ [ไอดี/ชื่อ]");

	if (!playerData[userid][pInjured])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้บาดเจ็บหนัก");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถค้นศพตัวเองได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (CopOnline() < 1)
		return SendClientMessage(playerid, COLOR_LIGHTRED, "ต้องมี 'ตำรวจ' ออนไลน์มากกว่า '1 คน'");

	/*FriskDEADInventory(playerid, userid);

	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "* คุณถูกค้นตัวโดย %s", GetPlayerNameEx(playerid));
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้ทำการค้นตัว %s", GetPlayerNameEx(userid));

    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ค้นตัว %s ที่กำลังบาดเจ็บสาหัส", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	*/

	playerData[playerid][pTargetFrisk] = userid;

	new string100[1024];
	new string2[1024];

	format(string100, sizeof(string100), "{FC6E52}ไอเทม\t{FFFFFF}[จำนวน]\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FC6E52}เงินเขียว\t{FFFFFF}%s\n", FormatMoney(GetPlayerMoneyEx(userid)));
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FC6E52}เงินแดง\t{FFFFFF}%s\n", FormatMoney(playerData[userid][pRedMoney]));
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FC6E52}ไอเทมภายในตัว\t{FFFFFF}Click\n");
	strcat(string2,string100);

	Dialog_Show(playerid,DIALOG_PONSOP,DIALOG_STYLE_TABLIST_HEADERS,"{F64A28}ปล้นศพ",string2,"ตกลง","ยกเลิก");

	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "* คุณถูกค้นตัวโดย %s", GetPlayerNameEx(playerid));
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้ทำการค้นตัว %s", GetPlayerNameEx(userid));

    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ค้นตัว %s ที่กำลังบาดเจ็บสาหัส", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));

	return 1;
}
// ปล้นศพ
Dialog:DIALOG_PONSOP(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pTargetFrisk];
	if(!response)
	{
		return 1;
	}
	if(response)
	{
		switch(listitem)
		{
			case 0:
			{
				Dialog_Show(playerid,DIALOG_ROB_MONEY,DIALOG_STYLE_INPUT,"{1BF649}ปล้นเงินเขียว","กรุณาระบุจำนวนเงินที่คุณต้องการจะนำออกมา :","ตกลง","ยกเลิก");
			}
			case 1:
			{
			    Dialog_Show(playerid,DIALOG_ROB_REDMONEY,DIALOG_STYLE_INPUT,"{F6461B}ปล้นเงินแดง","กรุณาระบุจำนวนเงินที่คุณต้องการจะนำออกมา :","ตกลง","ยกเลิก");
			}
			case 2:
			{
			    FriskDEADInventory(playerid, userid);
			}
		}
	}
	return 1;
}

forward GetItemFromInventory(playerid, itemid, name[]);
public GetItemFromInventory(playerid, itemid, name[])
{
	if (playerData[playerid][pTargetFrisk] == -1)
	    return 1;

	else if (!strcmp(name, "ดอกไม้", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ดิลโด้", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ไม้ไม้สนุ๊ก", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ไม้กอล์ฟ", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ไม้เบสบอล", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "พลั่ว", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "สนับมือ", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "มีดสั้น", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ดาบซามูไรของเทพ", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "MP5", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ปืนยิงล้ม", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "เสื้อเกราะ", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ดาบซามูไรแดง", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ดาบไฟ", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ปากฉลามเทพ", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "บุหรี่ไฟฟ้า", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ดาบซามูไรมังกร", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "กระบองมังกร", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "กระยองศิลา", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ดาบอุลตร้า", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ชุดเทพปีกดำ", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "RPG", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "คาบูกิ", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ไม้เบสบอลติดไฟ", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ดาบมณี", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "ดาบซามูไรเขียว", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}
	else if (!strcmp(name, "กุญแจตู้เซฟ", true)) {
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถเอาอาวุธออกจากตัวผู้เล่นได้");
	}

	Dialog_Show(playerid, DIALOG_INV_AMOUNT, DIALOG_STYLE_LIST, name, "ยึด", "เลือก", "ปิด");
	playerData[playerid][pItemSelect] = itemid;
 	return 1;
}

Dialog:DIALOG_INV_AMOUNT(playerid, response, listitem, inputtext[])
{
	return Dialog_Show(playerid, DIALOG_INV_TAKE, DIALOG_STYLE_INPUT, "{ffffff}ระบุจำนวนไอเท็ม:", "กรุณาระบุจำนวนที่คุณต้องการจะยึดออกมา :", "ตกลง", "ออก");
}

Dialog:DIALOG_INV_TAKE(playerid, response, listitem, inputtext[])
{
	new amount = strval(inputtext);

	if (playerData[playerid][pTargetFrisk] == -1)
	    return 1;

	new userid = playerData[playerid][pTargetFrisk];
	if (response)
	{
		/*switch(listitem)
		{
		    case 0:
		    {
	            new stringz[32];
				new itemid = playerData[playerid][pItemSelect];
				strunpack(stringz, invData[playerid][playerData[playerid][pItemSelect]][invItem]);

				SendClientMessageEx(playerid, COLOR_ORANGE, "* คุณได้จกของ '%s' ออกมาจากตัว '%s' จำนวน '%d'", invData[userid][itemid][invItem], GetPlayerNameEx(userid), amount);
				SendClientMessageEx(userid, COLOR_ORANGE, "* คุณถูกจกของ '%s' ออกมาโดย '%s' จำนวน '%d'", invData[userid][itemid][invItem], GetPlayerNameEx(userid), amount);

		        Inventory_Add(playerid, invData[userid][itemid][invItem], amount);
		        Inventory_Remove(userid, invData[userid][itemid][invItem], amount);

                playerData[playerid][pTargetFrisk] = -1;

				SendClientMessageToAllEx(COLOR_LIGHTRED, "[จกของ]: {F7E60D}%s ได้ทำการจกไอเท็ม %s ออกจากตัว %s จำนวน %d เรียบร้อยแล้ว ))", GetPlayerNameEx(playerid), invData[userid][itemid][invItem], GetPlayerNameEx(userid), amount);

				return 1;
			}
		}*/


		new stringz[32];
		new itemid = playerData[playerid][pItemSelect];
		strunpack(stringz, invData[playerid][playerData[playerid][pItemSelect]][invItem]);

		if (amount <= 0)
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องระบุจำนวนมากกว่า '0'!");

		if (amount > invData[userid][itemid][invQuantity])
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "จำนวนของผู้เล่นนั้นไม่เพียงพอ!");

		SendClientMessageEx(playerid, COLOR_ORANGE, "* คุณได้จกของ '%s' ออกมาจากตัว '%s' จำนวน '%d'", invData[userid][itemid][invItem], GetPlayerNameEx(userid), amount);
		SendClientMessageEx(userid, COLOR_ORANGE, "* คุณถูกจกของ '%s' ออกมาโดย '%s' จำนวน '%d'", invData[userid][itemid][invItem], GetPlayerNameEx(userid), amount);

		Inventory_Add(playerid, invData[userid][itemid][invItem], amount);
		Inventory_Remove(userid, invData[userid][itemid][invItem], amount);

		playerData[playerid][pTargetFrisk] = -1;

		SendClientMessageToAllEx(COLOR_LIGHTRED, "[จกของ]: {F7E60D}%s ได้ทำการจกไอเท็ม %s ออกจากตัว %s จำนวน %d เรียบร้อยแล้ว ))", GetPlayerNameEx(playerid), invData[userid][itemid][invItem], GetPlayerNameEx(userid), amount);

		return 1;
	}
	return 1;
}

forward FriskDEADInventory(playerid, userid);
public FriskDEADInventory(playerid, userid)
{
    if (playerData[userid][IsLoggedIn] == false)
	    return 0;

	new
		string[4096],
		string2[4096],
		count,
		var[32];

    for (new i = 0; i < playerData[userid][pMaxItem]; i ++)
	{
 		if (invData[userid][i][invExists]) {
   			format(string, sizeof(string), "%s\t{D0AEEB}({FFFFFF}%d{D0AEEB})\n", invData[userid][i][invItem], invData[userid][i][invQuantity]);
   			strcat(string2, string);
   			format(var, sizeof(var), "itemlistzax%d", count);
   			SetPVarInt(playerid, var, i);
   			count++;
		}
	}
	if (!count) {
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นไม่มีไอเท็มอยู่ในตัวเลย");
		return 1;
	}
	playerData[playerid][pTargetFrisk] = userid;
	format(string, sizeof(string), "ชื่อ\tความจุ (%d/%d)\n%s", Inventory_Items(userid), playerData[userid][pMaxItem], string2);
	return Dialog_Show(playerid, DIALOG_INVENTORY2345, DIALOG_STYLE_TABLIST_HEADERS, "[กระเป๋า]", string, "เลือก", "ปิด");
}

Dialog:DIALOG_INVENTORY2345(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new userid = playerData[playerid][pTargetFrisk];
		new var[32];
		format(var, sizeof(var), "itemlistzax%d", listitem);
		new item = GetPVarInt(playerid, var);

        GetItemFromInventory(playerid, item, invData[userid][item][invItem]);
	}
	return 1;
}

Dialog:DIALOG_ROB_MONEY(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pTargetFrisk], amount = strval(inputtext);
	if(!response)
	{
		return 1;
	}
	if(response)
	{
	    if (amount <= 0)
	        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องระบุจำนวนมากกว่า '0'");

	    if (amount > GetPlayerMoneyEx(userid))
	        return SendClientMessage(playerid, COLOR_LIGHTRED, "ผู้เล่นนั้นมีเงินเขียวไม่เพียงพอ");

		GivePlayerMoneyEx(playerid, amount);
		GivePlayerMoneyEx(userid, -amount);

		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ปล้นเงินเขียวจำนวน {06C803}%s {FFFFFF}จากผู้เล่น {06C803}%s {FFFFFF}เรียบร้อยแล้ว", FormatMoney(amount), GetPlayerNameEx(userid));
		SendClientMessageEx(userid, COLOR_WHITE, "คุณถูกปล้นเงินเขียวจำนวน {06C803}%s {FFFFFF}จากผู้เล่น {06C803}%s {FFFFFF}", FormatMoney(amount), GetPlayerNameEx(playerid));

		SendClientMessageToAllEx(COLOR_LIGHTRED, "[จกของ]: {F7E60D}%s ได้ทำการปล้นเงินเขียวจำนวน %s ออกจากตัว %s เรียบร้อยแล้ว ))", GetPlayerNameEx(playerid), FormatMoney(amount), GetPlayerNameEx(userid));

        playerData[playerid][pTargetFrisk] = -1;
	}
	return 1;
}

Dialog:DIALOG_ROB_REDMONEY(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pTargetFrisk], amount = strval(inputtext);
	if(!response)
	{
		return 1;
	}
	if(response)
	{
	    if (amount <= 0)
	        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องระบุจำนวนมากกว่า '0'");

	    if (amount > playerData[userid][pRedMoney])
	        return SendClientMessage(playerid, COLOR_LIGHTRED, "ผู้เล่นนั้นมีเงินแดงไม่เพียงพอ");

		playerData[playerid][pRedMoney] += amount;
		playerData[userid][pRedMoney] -= amount;

		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ปล้นเงินแดงจำนวน {FC4F29}%s {FFFFFF}จากผู้เล่น {FC4F29}%s {FFFFFF}เรียบร้อยแล้ว", FormatMoney(amount), GetPlayerNameEx(userid));
		SendClientMessageEx(userid, COLOR_WHITE, "คุณถูกปล้นเงินแดงจำนวน {FC4F29}%s {FFFFFF}จากผู้เล่น {FC4F29}%s {FFFFFF}", FormatMoney(amount), GetPlayerNameEx(playerid));

		SendClientMessageToAllEx(COLOR_LIGHTRED, "[จกของ]: {F7E60D}%s ได้ทำการปล้นเงินแดงจำนวน %s ออกจากตัว %s เรียบร้อยแล้ว ))", GetPlayerNameEx(playerid), FormatMoney(amount), GetPlayerNameEx(userid));

        playerData[playerid][pTargetFrisk] = -1;

	}
	return 1;
}
// ระบบแต่งงาน
/*alias:marry("แต่งงาน")
CMD:marry(playerid, params[])
{
	new userid;

	if (!IsPlayerInRangeOfPoint(playerid, 3.0, 1543.6841,-1352.9375,329.4747))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่สถานที่แต่งงาน");

	if (sscanf(params, "u", userid))
		return SendClientMessage(playerid, COLOR_WHITE, "/แต่งงาน [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (GetPlayerMoneyEx(playerid) < 10000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องมีเงินมากกว่า $10,000");

	if (playerData[playerid][pMarryOn] == 1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณแต่งงานแล้ว!");

	if (playerData[userid][pMarryOn] == 1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นแต่งงานแล้ว!");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในระยะ");

	if (userid == playerid)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถแต่งงานกับตัวเองได้");

	MarryOn[userid] = playerid;

	SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้ส่งคำขอแต่งงานถึง %s แล้ว, กรุณารอการตัดสินใจของเขา", GetPlayerNameEx(userid));
    Dialog_Show(userid, DIALOG_MARRY, DIALOG_STYLE_MSGBOX, "{F64F06}[การขอแต่งงาน]", "%s ได้ขอคุณแต่งงานด้วยสินสอด $1,000,000\nคุณ 'ตกลง' ที่จะแต่งงานกับเขาหรือไม่?", "ตกลง", "ปฏิเสธ", GetPlayerNameEx(playerid));

	return 1;
}

Dialog:DIALOG_MARRY(playerid, response, listitem, inputtext[])
{
	new userid = MarryOn[playerid];

	if (response)
	{
		GivePlayerMoneyEx(userid, -10000);

		SendClientMessageEx(userid, COLOR_GREEN, "%s ได้ตกลงแต่งงานกับคุณแล้ว!", GetPlayerNameEx(playerid));

		SendClientMessageEx(playerid, COLOR_GREEN, "คุณได้ตกลงแต่งงานกับ %s เรียบร้อยแล้ว!", GetPlayerNameEx(userid));
		SendClientMessageToAllEx(COLOR_ORANGE, "[พิธีสมรส] : %s และ %s ได้แต่งงานกันเป็น 'สามี-ภรรยา' ที่ถูกต้องตามกฎหมายแล้ว!", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));

        playerData[playerid][pMarryOn] = 1;
        playerData[userid][pMarryOn] = 1;

        MarryOn[playerid] = -1;
        MarryOn[userid] = -1;
	}
	else
	{
		SendClientMessageEx(userid, COLOR_LIGHTRED, "%s ได้ปฏิเสธการแต่งงานกับคุณ!", GetPlayerNameEx(playerid));
		SendClientMessageEx(playerid, COLOR_LIGHTRED, "คุณได้ปฏิเสธการแต่งงานกับ %s แล้ว!", GetPlayerNameEx(userid));

        MarryOn[playerid] = -1;
        MarryOn[userid] = -1;
	}
	return 1;
}*/

//วางล่างสคริปต์ทั้งหมด
CMD:JuakSub(playerid, params[])
{
    new
	    userid;

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/จกศพ [ไอดี/ชื่อ]");
	    
	if (CopOnline() < 2)
	return SendClientMessage(playerid, COLOR_RED, "[ ! ] {FFFFFF}ต้องมีตำรวจ 5 นายในเซิร์ฟเวอร์ !!");
	
	if (CopOnline() < 5)
		return SendClientMessage(playerid, COLOR_LIGHTRED, "ต้องมี 'ตำรวจ' ออนไลน์มากกว่า '5 คน'");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถจกศพของตัวเองได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerState(userid) != PLAYER_STATE_ONFOOT)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในยานพาหนะ");

    if (!playerData[userid][pInjured])
        return SendClientMessage(playerid, COLOR_RED, "ผู้เล่นไอดีนี้ไม่ได้รับบาดเจ็บ");

	JuakSubInventory1(playerid, userid);

	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "* คุณถูกค้นหาของผิดกฎหมายโดย %s", GetPlayerNameEx(playerid));
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้ทำการค้นหาของผิดกฎหมายของ %s", GetPlayerNameEx(userid));

    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ค้นหาของผิดกฎหมายของ %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));

	return 1;
}
alias:JuakSub("AAA")

forward JuakSubInventory1(playerid, userid);
public JuakSubInventory1(playerid, userid)
{
    if (playerData[userid][IsLoggedIn] == false)
	    return 0;

	new
		string[512],
		string2[512],
		count,
		var[32];

    for (new i = 0; i < playerData[userid][pMaxItem]; i ++)
	{
 		if (invData[userid][i][invExists]) {
   			format(string, sizeof(string), "%s\t{D0AEEB}({FFFFFF}%d{D0AEEB})\n", invData[userid][i][invItem], invData[userid][i][invQuantity]);
   			strcat(string2, string);
   			format(var, sizeof(var), "itemlistza%d", count);
   			SetPVarInt(playerid, var, i);
   			count++;
		}
	}
	if (!count) {
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นไม่มีไอเท็มอยู่ในตัวเลย");
		return 1;
	}
	playerData[playerid][pTargetFrisk] = userid;
	format(string, sizeof(string), "ชื่อ\tความจุ (%d/%d)\n%s", Inventory_Items(userid), playerData[userid][pMaxItem], string2);
	return Dialog_Show(playerid, DIALOG_JuakSubINVENTORY, DIALOG_STYLE_TABLIST_HEADERS, "[กระเป๋า]", string, "เลือก", "ปิด");
}

Dialog:DIALOG_JuakSubINVENTORY(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new userid = playerData[playerid][pTargetFrisk];
		new var[32];
		format(var, sizeof(var), "itemlistza%d", listitem);
		new item = GetPVarInt(playerid, var);

        JuakSubInventory(playerid, item, invData[userid][item][invItem]);
	}
	return 1;
}

forward JuakSubInventory(playerid, itemid, name[]);
public JuakSubInventory(playerid, itemid, name[])
{
	if (playerData[playerid][pTargetFrisk] == -1)
	    return 1;

    if (!strcmp(name, "ข้าว", true))
	{
		Dialog_Show(playerid, INVENTORYMENUJUAKSUB, DIALOG_STYLE_LIST, name, "จก", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

    if (!strcmp(name, "มือถือ", true))
	{
		Dialog_Show(playerid, INVENTORYMENUJUAKSUB, DIALOG_STYLE_LIST, name, "จก", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

    if (!strcmp(name, "บัตรประชาชน", true))
	{
		Dialog_Show(playerid, INVENTORYMENUJUAKSUB, DIALOG_STYLE_LIST, name, "จก", "เลือก", "ปิด");
		playerData[playerid][pItemSelect] = itemid;
		return 1;
	}

	else return SendClientMessage(playerid, COLOR_LIGHTRED, "+ {FFFFFF}คุณสามารถจกของได้บางส่วนเท่านั้น!");
}

Dialog:INVENTORYMENUJUAKSUB(playerid, response, listitem, inputtext[])
{
	if (playerData[playerid][pTargetFrisk] == -1)
	    return 1;

	new userid = playerData[playerid][pTargetFrisk];
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
	            new stringz[32];
				new itemid = playerData[playerid][pItemSelect];
				strunpack(stringz, invData[playerid][playerData[playerid][pItemSelect]][invItem]);

				SendClientMessageEx(playerid, COLOR_LIGHTRED, "* คุณได้จกของ '%s' ออกมาจากตัว '%s' จำนวน '%d'", invData[userid][itemid][invItem], GetPlayerNameEx(userid), invData[userid][itemid][invQuantity]);
				SendClientMessageEx(userid, COLOR_LIGHTRED, "* คุณถูกจกของ '%s' ออกมาโดย '%s' จำนวน '%d'", invData[userid][itemid][invItem], GetPlayerNameEx(userid), invData[userid][itemid][invQuantity]);

		        Inventory_Add(playerid, invData[userid][itemid][invItem], invData[userid][itemid][invQuantity]);
		        Inventory_Remove(userid, invData[userid][itemid][invItem], invData[userid][itemid][invQuantity]);

                playerData[playerid][pTargetFrisk] = -1;
			}
		}
	}
	return 1;
}

// --> ดาบไฟ
alias:weaponfire("ดาบไฟ")
CMD:weaponfire(playerid, params[])
{
	if (!Inventory_HasItem(playerid, "ดาบไฟ"))
		return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่มี 'ดาบไฟ'");

	if (KatanaUse[playerid] == 0)
	{
		GivePlayerWeapon(playerid, 8, 1);
		SetPlayerAttachedObject(playerid,4,19590,6,0.051999,0.008000,-0.140000,-81.599990,-72.900032,6.100000,2.805999,1.699999,1.065999);
		SetPlayerAttachedObject(playerid,5,18694,6,0.191999,-0.062000,-0.208001,0.000000,95.199958,74.399993,0.000000,0.000000,0.000000);

		KatanaUse[playerid] = 1;
		SendClientMessage(playerid, COLOR_YELLOW, "คุณได้เรียกดาบไฟออกมาใช้งานแล้ว");

		return 1;
	}
	else
	{
	    ResetPlayerWeaponsEx(playerid);
	    RemovePlayerAttachedObject(playerid, 4);
	    RemovePlayerAttachedObject(playerid, 5);

	    KatanaUse[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTRED, "คุณได้เก็บดาบไฟแล้ว");

		return 1;
	}
}

alias:dubfah("ดาบฟ้า")
CMD:dubfah(playerid, params[])
{
	if (!Inventory_HasItem(playerid, "ดาบสายฟ้า"))
		return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่มี 'ดาบสายฟ้า'");

	if (DabOn[playerid] == 0)
	{
		DabOn[playerid] = 1;

		GivePlayerWeapon(playerid, 8, 1);
		SetPlayerAttachedObject(playerid,4,18699,6,-0.092000,-0.021000,1.559999,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);
		SetPlayerAttachedObject(playerid,5,18699,6,-0.092000,-0.021000,1.773999,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);
		SetPlayerAttachedObject(playerid,6,18699,6,-0.092000,-0.021000,2.000999,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);
		SetPlayerAttachedObject(playerid,7,18699,6,-0.092000,-0.021000,2.210999,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);
		SetPlayerAttachedObject(playerid,8,18699,6,-0.092000,-0.021000,2.441000,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);
		SetPlayerAttachedObject(playerid,3,18699,6,-0.092000,-0.021000,2.675000,0.000000,174.899917,-11.199996,2.767000,5.142000,1.146000);

		SendClientMessage(playerid, COLOR_LIGHTBLUE, "คุณได้เรียกใช้งานดาบสายฟ้าแล้ว!");
		return 1;
	}

	if (DabOn[playerid] == 1)
	{
		DabOn[playerid] = 0;
		RemovePlayerAttachedObject(playerid,4);
		RemovePlayerAttachedObject(playerid,5);
		RemovePlayerAttachedObject(playerid,6);
		RemovePlayerAttachedObject(playerid,7);
		RemovePlayerAttachedObject(playerid,8);
		RemovePlayerAttachedObject(playerid,9);

		SendClientMessage(playerid, COLOR_RED, "คุณได้เก็บดาบสายฟ้าแล้ว!");
		return 1;
	}

	return 1;
}

alias:katanagreen("ดาบซามูไรเขียว")
CMD:katanagreen(playerid, params[])
{
	if (!Inventory_HasItem(playerid, "ดาบซามูไรเขียว"))
		return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่มี 'ดาบซามูไรเขียว'");

	if (KatanaGreen[playerid] == 0)
	{
		GivePlayerWeapon(playerid, 8, 1);
		SetPlayerAttachedObject(playerid,6, 18649, 6, 0.076999, -0.008999, 0.859000, -88.900123, -73.299957, 176.900085, 0.607000, 0.530000, 1.018999);

		KatanaGreen[playerid] = 1;
		SendClientMessage(playerid, COLOR_YELLOW, "คุณได้เรียก 'ดาบซามูไรเขียว' ออกมาใช้งานแล้ว");

		return 1;
	}
	else
	{
	    ResetPlayerWeaponsEx(playerid);
	    RemovePlayerAttachedObject(playerid, 6);

	    KatanaGreen[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTRED, "คุณได้เก็บ 'ดาบซามูไรเขียว' แล้ว");

		return 1;
	}
}

alias:katanared("ดาบซามูไรแดง")
CMD:katanared(playerid, params[])
{
	if (!Inventory_HasItem(playerid, "ดาบซามูไรแดง"))
		return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่มี 'ดาบซามูไรแดง'");

	if (KatanaRed[playerid] == 0)
	{
		GivePlayerWeapon(playerid, 8, 1);
		SetPlayerAttachedObject(playerid,6, 18728, 6, 0.000000, 0.000000, 0.198999, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 0.000000);

		KatanaRed[playerid] = 1;
		SendClientMessage(playerid, COLOR_YELLOW, "คุณได้เรียก 'ดาบซามูไรแดง' ออกมาใช้งานแล้ว");

		return 1;
	}
	else
	{
	    ResetPlayerWeaponsEx(playerid);
	    RemovePlayerAttachedObject(playerid, 6);

	    KatanaRed[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTRED, "คุณได้เก็บ 'ดาบซามูไรแดง' แล้ว");

		return 1;
	}
}


// จำนวนรัฐบาลออนไลน์
stock CopOnline()
{
	new cop;
	foreach(new x: Player)
	{
		if(IsPlayerConnected(x) && GetFactionType(x) == FACTION_POLICE && playerData[x][pOnDuty] == true)
		{
			cop++;
		}
	}
	return cop;
}

stock MedicOnline()
{
	new cop;
	foreach(new x: Player) {
		if(IsPlayerConnected(x) && GetFactionType(x) == FACTION_MEDIC && playerData[x][pOnDuty] == true)
		{
			cop++;
		}
	}
	return cop;
}

stock MechanicOnline()
{
	new cop;
	foreach(new x: Player) {
		if(IsPlayerConnected(x) && GetFactionType(x) == FACTION_MEC && playerData[x][pOnDuty] == true)
		{
			cop++;
		}
	}
	return cop;
}

stock GovOnline()
{
	new cop;
	foreach(new x: Player) {
		if(IsPlayerConnected(x) && GetFactionType(x) == FACTION_GOV && playerData[x][pOnDuty] == true)
		{
			cop++;
		}
	}
	return cop;
}


//-->ลงท้ายสคริปต์


alias:hok("free")
CMD:hok(playerid, params[])
{
    return Dialog_Show(playerid, DIALOG_ALT1, DIALOG_STYLE_LIST, "{66FFFF}[กิจกรรม]", "{33CCFF}>> {66FF66}ฟรีรันนิ่ง", "ตกลง", "ยกเลิก");
}
Dialog:DIALOG_ALT1(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		switch(listitem)
  		{
			case 0:
			{
			    Dialog_Show(playerid, DIALOG_FREERUNNING, DIALOG_STYLE_LIST, "[ฟรีรันนิ่ง]", "ฟรีรันนิ่ง >>> 1\nฟรีรันนิ่ง >>> 2\nฟรีรันนิ่ง >>> 3\nฟรีรันนิ่ง >>> 4\nฟรีรันนิ่ง >>> 5\nฟรีรันนิ่ง >>> 6\nฟรีรันนิ่ง >>> 7[ด่านไหม่]", "ไปเลย", "บ่ไป");
			}
		}
	}
	return 1;
}
Dialog:DIALOG_FREERUNNING(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0://ฟรี1
		    {
				if (playerData[playerid][pJailTime] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดคุกอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pCuffed] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณถูกจับอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pJailTime] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณติดคุกอยู่");

			    if (GetPlayerWantedLevelEx(playerid) > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดดาวอยู่!");

				SetPlayerPos(playerid, 2782.99658, -2010.46753, 3015.04297);
				SetPlayerFacingAngle(playerid, 349.8074);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] >> คุณได้เข้าร่วมกิจกรรม 'ฟรีรันนิีง' >>> 1 ");
			}
			case 1: //ฟรี2
			{
			    if (playerData[playerid][pJailTime] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดคุกอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pCuffed] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณถูกจับอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pJailTime] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณติดคุกอยู่");

			    if (GetPlayerWantedLevelEx(playerid) > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดดาวอยู่!");

				SetPlayerPos(playerid, -1329.2273, 2961.0378, 65.9750);
				SetPlayerFacingAngle(playerid, 349.8074);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] >> คุณได้เข้าร่วมกิจกรรม 'ฟรีรันนิีง' >>> 2  ");
			}
			case 2: //ฟรี3
			{
				if (playerData[playerid][pJailTime] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดคุกอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pCuffed] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณถูกจับอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pJailTime] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณติดคุกอยู่");

			    if (GetPlayerWantedLevelEx(playerid) > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดดาวอยู่!");

				SetPlayerPos(playerid, 1832.2316, 2986.3533, 18.1129);
				SetPlayerFacingAngle(playerid, 349.8074);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] >> คุณได้เข้าร่วมกิจกรรม 'ฟรีรันนิีง' >>> 3  ");
			}
			case 3: //ฟรี4
			{
			    if (playerData[playerid][pJailTime] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดคุกอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pCuffed] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณถูกจับอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pJailTime] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณติดคุกอยู่");

			    if (GetPlayerWantedLevelEx(playerid) > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดดาวอยู่!");

				SetPlayerPos(playerid, 526.6566, 2906.3540, 5.2977);
				SetPlayerFacingAngle(playerid, 349.8074);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] >> คุณได้เข้าร่วมกิจกรรม 'ฟรีรันนิีง' >>> 4 ");
			}
			case 4: //ฟรี5
			{
			    if (playerData[playerid][pJailTime] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดคุกอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pCuffed] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณถูกจับอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pJailTime] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณติดคุกอยู่");

			    if (GetPlayerWantedLevelEx(playerid) > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดดาวอยู่!");

				SetPlayerPos(playerid, -3403.3518, 1569.8540, 16.3645);
				SetPlayerFacingAngle(playerid, 349.8074);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] >> คุณได้เข้าร่วมกิจกรรม 'ฟรีรันนิีง' >>> 5 ");
			}
			case 5: //ฟรี6
			{
			    if (playerData[playerid][pJailTime] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดคุกอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pCuffed] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณถูกจับอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pJailTime] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณติดคุกอยู่");

			    if (GetPlayerWantedLevelEx(playerid) > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดดาวอยู่!");

				SetPlayerPos(playerid, 2935.3003,-701.6806,147.1282);
				SetPlayerFacingAngle(playerid, 349.8074);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] >> คุณได้เข้าร่วมกิจกรรม 'ฟรีรันนิีง' >>> 6 ");
			}
			case 6: //ฟรี6
			{
			    if (playerData[playerid][pJailTime] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดคุกอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pCuffed] > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณถูกจับอยู่ ไม่สามารถเปิดกระเป๋าได้");

				if (playerData[playerid][pJailTime] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณติดคุกอยู่");

			    if (GetPlayerWantedLevelEx(playerid) > 0)
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดดาวอยู่!");

				SetPlayerPos(playerid, -1835.2200,2033.3800,8.5864);
				SetPlayerFacingAngle(playerid, 349.8074);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] >> คุณได้เข้าร่วมกิจกรรม 'ฟรีรันนิีง' >>> 7 ");
			}
		}
	}
	return 1;
}
stock CountIP(ip[])
{
    new b = 0;
    for(new i = 0; i < MAX_PLAYERS; i++) if(IsPlayerConnected(i) && !strcmp(GetIP(i),ip)) b++;
    return b;
}
/*stock Inventory_GetItemIDFromItemName(const item[])
{
	new itemid;
    for (new i = 0; i < sizeof(itemData); i ++) if (!strcmp(itemData[i][itemName], item, true))
	{
        itemid = i;
        break;
    }
    return itemid;
}*/
stock FreeTimer(playerid,timer)
{
	TogglePlayerControllable(playerid, 0);
	defer UnFreeTimer[timer](playerid);
}

timer UnFreeTimer[1000](playerid)
{
	TogglePlayerControllable(playerid, 1);
}

Dialog:DIALOG_BABY(playerid, response, listitem, inputtext[])
{
	if (!response)
		BABYCheck[playerid] = 0;

	if (response)
	{
		BABYCheck[playerid] = 0;
	}
	return 1;
}

CheckInventoryIsWeapon(playerid, itemid){
	if (!strcmp(invData[playerid][itemid][invItem], "ดอกไม้", true) || !strcmp(invData[playerid][itemid][invItem], "ไม้เบสบอล", true) || !strcmp(invData[playerid][itemid][invItem], "ไม้กอล์ฟ", true) || !strcmp(invData[playerid][itemid][invItem], "มีดสั้น", true) || !strcmp(invData[playerid][itemid][invItem], "ดาบซามูไร", true) || !strcmp(invData[playerid][itemid][invItem], "สนับมือ", true)
	|| !strcmp(invData[playerid][itemid][invItem], "น่องไก่", true) || !strcmp(invData[playerid][itemid][invItem], "กล้วยพกพา", true) || !strcmp(invData[playerid][itemid][invItem], "ไม้สนุ๊ก", true) || !strcmp(invData[playerid][itemid][invItem], "ไม้สนุ๊กศิลาจาลึก", true))
	{
		return 1;
	}
	return -1;
}
stock CheckWeapon(const item[])
{
    // printf("[DEBUG] CheckWeapon เรียกใช้ด้วยค่า item = '%s'", item);

    if (!strcmp(item, "ดอกไม้", true) 
     || !strcmp(item, "ไม้เบสบอล", true) 
     || !strcmp(item, "ไม้กอล์ฟ", true) 
     || !strcmp(item, "มีดสั้น", true) 
     || !strcmp(item, "ไอติม", true) 
     || !strcmp(item, "สนับมือ", true) 
     || !strcmp(item, "น่องไก่", true) 
     || !strcmp(item, "กล้วยพกพา", true) 
     || !strcmp(item, "ไม้สนุ๊ก", true) 
     || !strcmp(item, "ไม้สนุ๊กศิลาจาลึก", true))
    {
        // printf("[DEBUG] '%s' = อาวุธ ? return 1", item);
        return 1;
    }

    // printf("[DEBUG] '%s' ไม่ใช่อาวุธ ? return -1", item);
    return -1;
}

CMD:clearjob(playerid, params[])
{
	BABYCheck[playerid] = 0;
	return SendClientMessage(playerid, COLOR_YELLOW, "คุณได้ผ่านการตรวจสอบ AutoClick แล้ว! กลับมาทำงานได้ตามปกติ");
}

CMD:lazada(playerid, params[])
{
	if (lazadaCD[playerid] > 0)
 		return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ป้องกันการ Spam ข้อความ คุณเหลือเวลาอีก %d วินาที ในการใช้คำสั่งใหม่อีกครั้ง", lazadaCD[playerid]);

    lazadaCD[playerid] = 60*5;
	SendClientMessageToAllEx(COLOR_ORANGE, "Lazada > %s : %s (ติดต่อ : %d)", GetPlayerNameEx(playerid), params, playerData[playerid][pPhone]);
	return 1;
}

// ระบบซ่อมรถ
RepairCar(playerid)
{
	isFixCar[playerid] = 0;
	ClearAnimations(playerid);

	TogglePlayerControllable(playerid, true);

	new vehicleid = GetNearbyVehicle(playerid);

	RepairVehicle(vehicleid);
	SendClientMessage(playerid, COLOR_WHITE, "คุณได้ใช้เครื่องมือซ่อมรถสำเร็จ");
	Inventory_Remove(playerid, "เครื่องมือซ่อมรถ", 1);

	return 1;
}

CallCarComplete(playerid)
{
	new listitem = isPlayerListitem[playerid];

	isPlayerCallCar[playerid] = 0;
	isPlayerListitem[playerid] = -1;
	ClearAnimations(playerid);
	TogglePlayerControllable(playerid, true);

	new query[128];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM vehicles WHERE carOwnerID = %d LIMIT %d, 1", playerData[playerid][pID], listitem);
	mysql_tquery(g_SQL, query, "OnPlayerSpawnVehicle", "ii", playerid, false);
}

Dialog:DIALOG_OFFUI(playerid, response, listitem, inputtext[])
{
	if(!response)
	{
		return 1;
	}
	if(response)
	{
		switch(listitem)
		{
			case 0:
			{
			   	ShowPlayerStats(playerid, true);
			}
			case 1:
			{
   				ShowPlayerStats(playerid, false);
			}
		}
	}
	return 1;
}

forward Whitelist_Check(playerid);
public Whitelist_Check(playerid) {
    if(cache_num_rows() == 1) {
		//onwhitelist
	}
    else {
		SendClientMessage(playerid, COLOR_WHITE, "ขอไวริสก่อนนะวัยรุ่น By.UR CITY WHITELIST...");
        DelayedKick(playerid);
    }
    return 1;
}

Brian_CheckStatusWhitelist(playerid) {
    new str[103];
    mysql_format(g_SQL, str, sizeof(str), "SELECT * FROM verify WHERE playerName = '%s' LIMIT 1", GetPlayerNameEx(playerid));
    mysql_pquery(g_SQL, str, "Whitelist_Check", "i", playerid);        
    return 1;
}

//
/*Vehicle_Nearest(playerid)
{
	new
	    Float:fDistance = FLOAT_INFINITY,
	    Float:fX,
	    Float:fY,
	    Float:fZ,
	    iIndex = -1
	;
	for(new i=0;i!=MAX_VEHICLES;i++) {

	    GetVehiclePos(i, fX, fY, fZ);

		new
        	Float:temp = GetPlayerDistanceFromPoint(playerid, fX, fY, fZ);

		if (temp < fDistance && temp < 6.0)
		{
		    fDistance = temp;
		    iIndex = i;
		}
	}
	return iIndex;
}

stock Inventory_GetItemIDFromItemName(const item[])
{
	new itemid;
    for (new i = 0; i < sizeof(itemData); i ++) if (!strcmp(itemData[i][itemName], item, true))
	{
        itemid = i;
        break;
    }
    return itemid;
}

stock GetItemArrayID(const item[]) 
{
    for (new i = 0; i < sizeof(itemData); i++) 
	{
        if (!strcmp(itemData[i][itemName], item, true)) 
		{
            return i;
        }
    }
    return -1;
}	

Inventory_RemoveEx(playerid, itemid, quantity = 1)
{
	new
		string[128];

	if (itemid != -1)
	{
	    strunpack(string, invData[playerid][itemid][invItem]);

	    if (invData[playerid][itemid][invQuantity] > 0)
	    {
	        invData[playerid][itemid][invQuantity] -= quantity;
		}
		if (quantity == -1 || invData[playerid][itemid][invQuantity] < 1)
		{
		    invData[playerid][itemid][invExists] = false;
		    invData[playerid][itemid][invQuantity] = 0;

		    mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `inventory` WHERE `invOwner` = '%d' AND `invID` = '%d'", playerData[playerid][pID], invData[playerid][itemid][invID]);
	        mysql_tquery(g_SQL, string);
		}
		else if (quantity != -1 && invData[playerid][itemid][invQuantity] > 0)
		{
			mysql_format(g_SQL, string, sizeof(string), "UPDATE `inventory` SET `invQuantity` = `invQuantity` - %d WHERE `invOwner` = '%d' AND `invID` = '%d'", quantity, playerData[playerid][pID], invData[playerid][itemid][invID]);
            mysql_tquery(g_SQL, string);
		}
		return 1;
	}
	return 0;
}

Inventory_GetItemSlot(playerid, const item[])
{
	for (new i = 0; i < MAX_INVENTORY; i ++)
	{
	    if (!invData[playerid][i][invExists])
	        continue;

		if (!strcmp(invData[playerid][i][invItem], item)) return i;
	}
	return -1;
}

stock IsDoorVehicle(vehicleid)
{
	switch (GetVehicleModel(vehicleid)) 
	{
		case 400..424, 426..429, 431..440, 442..445, 451, 455, 456, 458, 459, 466, 467, 470, 474, 475:
		    return 1;

		case 477..480, 482, 483, 486, 489, 490..492, 494..496, 498..500, 502..508, 514..518, 524..529, 533..536:
		    return 1;

		case 540..547, 549..552, 554..562, 565..568, 573, 575, 576, 578..580, 582, 585, 587..589, 596..605, 609:
			return 1;
	}
	return 0;
}

stock ReturnWeaponName(weaponid)
{
	new name[sizeof(g_WeaponName[])];

	WC_GetWeaponName(weaponid, name);

	return name;
}*/

// ระบบแต่งงาน
alias:marry("แต่งงาน")
CMD:marry(playerid, params[])
{
	new userid;

	if (!IsPlayerInRangeOfPoint(playerid, 3.0, 1543.6841,-1352.9375,329.4747))
	    return SendClientMessage(playerid, COLOR_RED, "[SYSTEM] >> {FFFFFF}คุณไม่ได้อยู่สถานที่แต่งงาน");

	if (sscanf(params, "u", userid))
		return SendClientMessage(playerid, COLOR_WHITE, "/แต่งงาน [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[SYSTEM] >> {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (GetPlayerMoneyEx(playerid) < 50000)
	    return SendClientMessage(playerid, COLOR_RED, "[SYSTEM] >> {FFFFFF}คุณต้องมีเงินมากกว่า $50,000");

	if (Inventory_Count(playerid, "แหวนดอกหญ้า") < 1)
	    return SendClientMessage(playerid, COLOR_RED, "[SYSTEM] >> {FFFFFF}คุณต้องแหวนดอกหญ้ามากกว่า 1 ชิ้น");

	if (playerData[playerid][pMarryOn] == 1)
	    return SendClientMessage(playerid, COLOR_RED, "[SYSTEM] >> {FFFFFF}คุณแต่งงานแล้ว!");

	if (playerData[userid][pMarryOn] == 1)
	    return SendClientMessage(playerid, COLOR_RED, "[SYSTEM] >> {FFFFFF}ผู้เล่นนั้นแต่งงานแล้ว!");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[SYSTEM] >> {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในระยะ");

	if (userid == playerid)
		return SendClientMessage(playerid, COLOR_RED, "[SYSTEM] >> {FFFFFF}คุณไม่สามารถแต่งงานกับตัวเองได้");

	MarryOn[userid] = playerid;

	SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้ส่งคำขอแต่งงานถึง %s แล้ว, กรุณารอการตัดสินใจของเขา", GetPlayerNameEx(userid));
    Dialog_Show(userid, DIALOG_MARRY, DIALOG_STYLE_MSGBOX, "{F64F06}[การขอแต่งงาน]", "%s ได้ขอคุณแต่งงานด้วยสินสอด $1,000,000\nคุณ 'ตกลง' ที่จะแต่งงานกับเขาหรือไม่?", "ตกลง", "ปฏิเสธ", GetPlayerNameEx(playerid));

	return 1;
}

Dialog:DIALOG_MARRY(playerid, response, listitem, inputtext[])
{
	new userid = MarryOn[playerid];

	if (response)
	{
		GivePlayerMoneyEx(userid, -10000);

		SendClientMessageEx(userid, COLOR_GREEN, "%s ได้ตกลงแต่งงานกับคุณแล้ว!", GetPlayerNameEx(playerid));

		SendClientMessageEx(playerid, COLOR_GREEN, "คุณได้ตกลงแต่งงานกับ %s เรียบร้อยแล้ว!", GetPlayerNameEx(userid));
		SendClientMessageToAllEx(COLOR_ORANGE, "[พิธีสมรส] : %s และ %s ได้แต่งงานกันเป็น 'สามี-ภรรยา' ที่ถูกต้องตามกฎหมายแล้ว!", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));

        playerData[playerid][pMarryOn] = 1;
        playerData[userid][pMarryOn] = 1;

        MarryOn[playerid] = -1;
        MarryOn[userid] = -1;
	}
	else
	{
		SendClientMessageEx(userid, COLOR_LIGHTRED, "%s ได้ปฏิเสธการแต่งงานกับคุณ!", GetPlayerNameEx(playerid));
		SendClientMessageEx(playerid, COLOR_LIGHTRED, "คุณได้ปฏิเสธการแต่งงานกับ %s แล้ว!", GetPlayerNameEx(userid));

        MarryOn[playerid] = -1;
        MarryOn[userid] = -1;
	}
	return 1;
}

alias:unmarry("หย่าร้าง")
CMD:unmarry(playerid, params[])
{
	if (playerData[playerid][pMarryOn] == 0)
	    return SendClientMessage(playerid, COLOR_RED, "[SYSTEM] >> {FFFFFF}คุณยังไม่ได้ทำการแต่งงาน!");

    playerData[playerid][pMarryOn] = 0;
    SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้ทำการหย่าร้างการแต่งงานเรียบร้อยแล้ว!");
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
alias:rw(".ls")
CMD:rw(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (.ls)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:pickup(".sf")
CMD:pickup(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (.sf)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:splayers(".lv")
CMD:splayers(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (.lv)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:up(".goto")
CMD:up(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (.goto)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:down("pcars")
CMD:down(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (pcars)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
CMD:tb(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (tb)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:tb("hme")
alias:pjack("kme")
CMD:pjack(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (kme,hme,pjack)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:ufme("spme")
CMD:ufme(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (spme)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:mynrg("spack")
CMD:mynrg(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (spack)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:fpack("ppack")
CMD:fpack(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (ppack)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:getw("ammo")
CMD:getw(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (getw)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:irun("cash")
CMD:irun(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (irun)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:fdeath("fdamage")
CMD:fdeath(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (fdeath)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:rejoin("be")
CMD:rejoin(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (rejoin)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
alias:tr("tb.kick")
CMD:tr(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (tr)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
CMD:fcrash(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (fcrash)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
CMD:rp(playerid, params[])
{
    SendAdminMessage(COLOR_LIGHTRED, "[HackLog] {FFFFFF}ผู้เล่น %s ได้ใช้คำสั่งต้องห้าม (rp)", GetPlayerNameEx(playerid));
	Kick(playerid);
	return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//x2
stock AddItemExpire(playerid, const item[], days)
{
    new query[256];
    new player_id = playerData[playerid][pID];

    mysql_format(g_SQL, query, sizeof(query), "INSERT INTO itemtimes (playerid, item, expire_at) VALUES ('%d', '%e', NOW() + INTERVAL %d DAY)", player_id, item, days);
    mysql_tquery(g_SQL, query);
}

stock CheckExpiredItems(playerid)
{
    new query[256];
    new player_id = playerData[playerid][pID];

    mysql_format(g_SQL, query, sizeof(query), "SELECT `item` FROM `itemtimes` WHERE `playerid` = %d AND `expire_at` <= NOW()", player_id);
    mysql_tquery(g_SQL, query, "OnExpiredItems", "d", playerid);
}

forward OnExpiredItems(playerid);
public OnExpiredItems(playerid)
{
    new rows;
    cache_get_row_count(rows);

    for (new i = 0; i < rows; i++)
    {
        new item[128];
        cache_get_value_name(i, "item", item, sizeof(item));


        Inventory_Remove(playerid, item, 1);


        new query[256];
        new player_id = playerData[playerid][pID];
        mysql_format(g_SQL, query, sizeof(query), "DELETE FROM `itemtimes` WHERE `playerid` = %d AND `item` = '%e'", player_id, item);
        mysql_tquery(g_SQL, query);

        SendClientMessage(playerid, -1, "บัตรฟามX2 ของคุณหมดอายุแล้ว");
    }
}

stock GiveItem(playerid, const name[], quantity)
{
    new amount = quantity;

    if (Inventory_Count(playerid, "บัตรฟามX2-3วัน") >= 1 || Inventory_Count(playerid, "บัตรฟามX2-7วัน") >= 1)
    {
        amount = quantity * 2;
    }

    new id = Inventory_Add(playerid, name, amount);

    if (id == -1) return -1; // ความจุเต็ม

    return amount;
}

CMD:cx2(playerid, params[])
{
    new query[256];
    new player_id = playerData[playerid][pID];

    mysql_format(g_SQL, query, sizeof(query),"SELECT `item`, DATE_FORMAT(`expire_at`, '%%d-%%m-%%Y %%H:%%i') as expire_time \
    FROM `itemtimes` WHERE `playerid` = %d ORDER BY `expire_at` ASC", player_id);
    mysql_tquery(g_SQL, query, "OnCheckCard", "d", playerid);
    return 1;
}

forward OnCheckCard(playerid);
public OnCheckCard(playerid)
{
    new rows;
    cache_get_row_count(rows);

    if (rows == 0)
    {
        return SendClientMessage(playerid, -1, "คุณยังไม่มีบัตรที่ใช้งานอยู่");
    }

    for (new i = 0; i < rows; i++)
    {
        new item[64], expire_time[64];
        cache_get_value_name(i, "item", item, sizeof(item));
        cache_get_value_name(i, "expire_time", expire_time, sizeof(expire_time));

        new msg[144];
        format(msg, sizeof(msg), "บัตร %s จะหมดอายุวันที่: %s", item, expire_time);
        SendClientMessage(playerid, -1, msg);
    }
    return 1;
}