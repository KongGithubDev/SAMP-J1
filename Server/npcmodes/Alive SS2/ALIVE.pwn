/*

							GTA ALIVE

- ระบบแฟชั่นแต่งตัวแบบ Dragon DM *เสร็จแล้ว > ไปย้ายจุดเอาเอง '/buyitem'

- ระบบvitural world /fixbug *เสร็จแล้ว > '/fixbug'
- ระบบแก้ตัวละครค้าง /ค้าง *เสร็จแล้ว > '/ค้าง'

- ฉายาการพูดแบบ TARO * เสร็จแล้ว > /ฉายา, /ให้ฉายา
วิธีการได้รับฉายาตอนพูดตอนพิม * เสร็จแล้ว
Noob ได้ฉายานี้ทุกคนตอนสมัครใหม่ โค้ดสีฉายา : #F5F62E * เสร็จแล้ว
King OF Alive เล่นมากกว่า 300 ชม. โค้ดสีฉายา : #16E7CD * เสร็จแล้ว
King OF Lotto ถูกหวยมากกว่า 50 ครั้ง โค้ดสีฉายา : #F025F2 * เสร็จแล้ว
King OF Death ตายครบ 200 ครั้ง โค้ดสีฉายา : #E7166A * เสร็จแล้ว
King OF Kill ฆ่าคน 150 ศพ โค้ดสีฉายา : #FB0303 * เสร็จแล้ว
King OF Weeds ปลูกกัญชาครบ 200 ต้น โค้ดสีฉายา : #18FB03 * เสร็จแล้ว

- ระบบลบรถเสกแอดมิน /deletevehicle *เสร็จแล้ว > '/deletevehicle'
- ระบบโอนรถ /tcar *เสร็จแล้ว > '/โอนรถ', '/tcar'

- ระบบการศึกษามีระดับชั้น *เสร็จแล้ว
- คราฟชุดแฟนตาซีมีโค้ดชุดแฟนซีให้ *เสร็จแล้ว

*/

#include 	<a_samp>

#undef	  	MAX_PLAYERS
#define	 	MAX_PLAYERS			100

#define 	YSI_NO_OPTIMISATION_MESSAGE
#define 	YSI_NO_CACHE_MESSAGE
#define 	YSI_NO_MODE_CACHE
#define 	YSI_NO_HEAP_MALLOC
#define 	YSI_NO_VERSION_CHECK

#include	<sscanf2>
#include 	<a_mysql>
#include	<streamer>
#include 	<Pawn.RakNet>
#include    <io>
#define 	cec_auto
#include	<CEC>
#include	<Pawn.CMD>
//#include    <nex-ac>
#include	<progress2>

#include    <strlib>

#include 	<YSI_Data\y_iterate>
#include 	<YSI_Coding\y_timers>

#include	<easyDialog>
#include 	<OPVD>

#include 	<samp-player-gangzones>
#include 	<GPS>


#define		MYSQL_HOST 				"127.0.0.1"
#define		MYSQL_USER 				"root"
#define		MYSQL_PASSWORD 			""
#define		MYSQL_DATABASE 			"ohio"


#define IsPlayerAndroid(%0)                 GetPVarInt(%0, "NotAndroid") == 0

#if !defined IsValidVehicle
    native IsValidVehicle(vehicleid);
#endif

#define		SECONDS_TO_LOGIN 		60

#define 	SpeedCheck(%0,%1,%2,%3,%4) 				floatround(floatsqroot(%4?(%0*%0+%1*%1+%2*%2):(%0*%0+%1*%1) ) *%3*1.6)  //IC-L1U02


#define		SERVER_NAME				".::::SAMP : George Roleplay::::. "
#define		SERVER_VERSION		  	"1.0.0"
#define		SERVER_MODE		     	"George"
#define     SERVER_LANGUAGE     	"TH"
#define     SERVER_WEBSITE      	"Coming Soon"

#define		COLOR_BLACK				0x000000FF
#define     COLOR_WHITE  			0xFFFFFFFF
#define     COLOR_TG                0x76C3FFFF
#define 	COLOR_GREY				0xAFAFAFFF
#define		COLOR_GREY1    			0xE6E6E6FF
#define 	COLOR_GREY2 			0xC8C8C8FF
#define 	COLOR_GREY3 			0xAAAAAAFF
#define 	COLOR_GREY4 			0x8C8C8CFF
#define 	COLOR_GREY5 			0x6E6E6EFF
#define     COLOR_RED           	0xFF0000FF
#define     COLOR_ORANGE        	0xFFA84DFF
#define     COLOR_YELLOW        	0xFFFF00FF
#define     COLOR_GREEN         	0x00FF00FF
#define 	COLOR_SERVER      		0xFFFF90FF
#define 	COLOR_FACTION     		0xBDF38BFF
#define 	COLOR_LIGHTRED    		0xFF6347FF
#define 	COLOR_LIGHTBLUE   		0x33CCFFAA
#define 	COLOR_DARKBLUE    		0x1394BFFF
#define 	DEFAULT_COLOR     		0xFFFFFFFF
#define     COLOR_ADMIN         	0xFF0080FF
#define 	COLOR_PURPLE      		0xD0AEEBFF
#define 	COLOR_DEPARTMENT  		0xF0CC00FF
#define 	COLOR_HOSPITAL    		0xFF8282FF
#define 	COLOR_RADIO       		0x8D8DFFFF
#define     COLOR_PINK              0xFF00FFFF
#define 	COLOR_CYAN        		0x33CCFFFF
#define     COLOR_VIP1      		0x00FF00FF
#define     COLOR_VIP2      		0xFFFF00FF
#define     COLOR_VIP3      		0xFF00FFFF
#define     COLOR_VIP4      		0xFF00FFFF

#define 	MAX_FACTIONS 			(50)
#define 	MAX_ARREST 				(50)
#define 	MAX_SHOPS				(50)
#define 	MAX_ENTRANCES 			(100)
#define 	MAX_CARS 				(1500)
#define 	MAX_OWNABLE_CARS 		(5)
#define 	MAX_PUMPS 				(50)
#define     MAX_INVENTORY       	(1500)
#define 	MAX_CONTACTS 			(20)
#define 	MAX_ATM_MACHINES 		(50)
#define 	MAX_GARAGES 			(20)
#define     MAX_GPS                 (30)
#define		MAX_QUEST				(10)
#define 	MAX_SPAWNED_VEHICLES    (1)

#define     THREAD_LOGIN            (0)
#define		THREAD_LIST_VEHICLES 	(1)
#define		THREAD_LIST_VEHICLES2 	(2)

#define 	FACTION_POLICE 			(1)
#define 	FACTION_NEWS 			(2)
#define 	FACTION_MEDIC 			(3)
#define 	FACTION_GOV 			(4)
#define 	FACTION_GANG 			(5)
#define 	FACTION_MEC 			(6)

#define percent(%0,%1)  floatround((float((%0)) / 100) * (%1))

native WP_Hash(buffer[], len, const str[]);

// ตลาดกลาง
new CowCash, CKCash, WoodCash, MarketCash[16];

new MySQL: g_SQL;
new BBGunOn[MAX_PLAYERS] = 0;

new schoolTake[MAX_PLAYERS];
new schoolCD[MAX_PLAYERS];
new schoolPoints[MAX_PLAYERS];

new buyMaterials[MAX_PLAYERS];

new StorageType[MAX_PLAYERS];
new CraftType[MAX_PLAYERS];

new mechanicID[MAX_PLAYERS] = -1;
new mechanicPrice[MAX_PLAYERS] = 0;

new fineID[MAX_PLAYERS] = -1;
new finePrice[MAX_PLAYERS] = 0;
new fineText[MAX_PLAYERS][64];

new redzone;
new bool:gPlayerWeaponData[MAX_PLAYERS][47];
new globalWeather = 2;
new bool:OOC = true;
new bool:Twitter = true;
new bool:PVPStats = true;
new g_TaxVault;
new NewbieCar[15];
new PVPZone;
new adminVehicle[MAX_VEHICLES];
new Float:vehicleFuel[MAX_VEHICLES];
new vehicleSiren[MAX_VEHICLES] = {INVALID_OBJECT_ID, ...};
new vehicleStream[MAX_VEHICLES][128];
new vehicleColors[MAX_VEHICLES][2];

new seatbelt[MAX_PLAYERS char];
new old_vehicle[MAX_PLAYERS];
new old_veh_seat[MAX_PLAYERS];

new factionLocker[MAX_PLAYERS] = -1;

new prisonJob[MAX_PLAYERS] = 0;

new isHospital[MAX_PLAYERS] = 0;
new hospitalPoints[MAX_PLAYERS] = 0;

new isHarvest[MAX_PLAYERS] = 0;
new harvestPoints[MAX_PLAYERS] = 0;

new WeaponType[MAX_PLAYERS] = 0;
new VehicleType[MAX_PLAYERS] = -1;

new warFlagOn = 0;
new FlagOnPlayer = -1;
new warJoin[MAX_PLAYERS] = 0;

//=======Embed Colors=======
#define EMBED_BLACK                     "{000000}"
#define EMBED_RED						"{FF0000}"
#define EMBED_WHITE						"{FFFFFF}"
#define EMBED_YELLOW				    "{FFFF00}"
#define EMBED_GREEN						"{33AA33}"
#define EMBED_BLUE						"{0000FF}"
#define EMBED_LIGHTBLUE				    "{8080FF}"
#define EMBED_ORANGE				    "{FF8000}"
#define EMBED_GREY						"{AFAFAF}"
#define EMBED_CYAN						"{00FFFF}"
#define EMBED_GRAD						"{CBCCCE}"
#define EMBED_GRAD1						"{b4b5b7}"
#define EMBED_PURPLE				    "{C68DFF}"
#define EMBED_PINK						"{FF8282}"
#define EMBED_LIGHTBLUE2			    "{8D8DFF}"
#define EMBED_LIGHTRED				    "{FF6347}"
#define EMBED_DIALOG				    "{A8C3E3}"
#define EMBED_LIGHTGREEN			    "{AEFFBC}"
#define EMBED_GREENMONEY			    "{33AA33}"
#define EMBED_LIMEGREEN                 "{E5FF00}"

// Fix Time
new ghour = 7;
//new	gminute = 0;
//new	gsecond = 0;
new	timeshift = 0;
new	shifthour = 0;

// --> ระบบแต่งตัว Object
new ClothingCooldown[MAX_PLAYERS] = 0;
new EditClothing[MAX_PLAYERS] = 0;

#define MAX_CLOTHES 15

#define BUYZIP 1
#define BUYHARDWARE 2
#define BUYSPORTS 3
#define BUYMUSIC 4
#define BUYWATCH 5
#define BUYPOLICE 6
#define BUYMEDIC 7
#define BUYSPECIAL 8

new const BoneName[][] = {
	"กระดูกสันหลัง", "หัว", "ต้นแขนซ้าย", "ต้นแขนขวา",
	"มือซ้าย", "มือขวา", "ต้นขาซ้าย", "ต้นขาขวา", "เท้าซ้าย", "เท้าขวา", "น่องขวา", "น่องซ้าย",
	"แขนซ้าย", "แขนขวา", "กระดูกไหปลาร้าซ้าย", "กระดูกไหปลาร้าขวา", "คอ", "กราม"
}
;

enum e_cloths {
	cl_sid,
	cl_object,
	Float:cl_x,
	Float:cl_y,
	Float:cl_z,
	Float:cl_rx,
	Float:cl_ry,
	Float:cl_rz,
	Float:cl_scalex,
	Float:cl_scaley,
	Float:cl_scalez,
	cl_bone,
	cl_slot,
	cl_equip,
	cl_mc1,
	cl_mc2,
	cl_name[32]
};

enum e_cldata {
	e_model,
	e_price,
	e_bone,
	e_name[32],
	Float:e_x,
	Float:e_y,
	Float:e_z,
	Float:e_rx,
	Float:e_ry,
	Float:e_rz,
	Float:e_sx,
	Float:e_sy,
	Float:e_sz
};

new const cl_SportsData[][e_cldata] = { // 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0
	/*{18645, 1200, 2, "(Red&White)Motorcycle Helmet", 0.059999, 0.023999, 0.005, 93.6, 75.3, 0.0, 1.0, 1.0, 1.0},
	{18976, 1200, 2, "(Blue&White)DirtBike Helmet", 0.084999, 0.043999, -0.002, 82.1, 88.2999, 8.5, 1.0, 1.0, 1.0},
	{18977, 1200, 2, "(Red&Black)Motorcycle Helmet", 0.052999, 0.016999, 0.006999, 0.0, 91.1, 75.7, 1.0, 1.0, 1.0},
	{18978, 1200, 2, "(Blue&White)Motorcycle Helmet", 0.052999, 0.032, -0.007, 74.9, 86.5, -4.60001, 1.0, 1.0, 1.0},
	{18979, 1200, 2, "(Purple)Motorcycle Helmet", 0.051999, 0.028, 0.0, 93.3, 74.8, -9.6, 1.0, 1.0, 1.0},
	*/
	{19036, 1200, 2, "White Hockey Mask", 0.088996, 0.043997, -0.002998, 101.3, 92.2001, -16.5, 1.0, 1.0, 1.0},
	{19037, 1200, 2, "Red Hockey Mask", 0.088996, 0.043997, -0.002998, 101.3, 92.2001, -16.5, 1.0, 1.0, 1.0},
	{19038, 1200, 2, "Green Hockey Mask", 0.088996, 0.043997, -0.002998, 101.3, 92.2001, -16.5, 1.0, 1.0, 1.0},
	{3026, 2000, 1, "Backpack", -0.147999, -0.061999, 0.006999, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0},
	{19559, 2000, 1, "Hiking Backpack", 0.108999, -0.041, 0.000999, -5.09999, 90.1999, 3.0, 1.0, 1.0, 1.0},
	{2919, 2000, 5, "Sports Bag", 0.240999, -0.066, 0.014999, 6.9, -94.6, 14.6, 0.353999, 0.196, 0.348},
	{19624, 2000, 5, "Suitcase", 0.067, 0.014999, -0.006, 0.0, -90.3, -3.8, 1.0, 1.0, 1.0},
	{19142, 4000, 1, "Police Armour", 0.071998,0.044000,0.004000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000},
	{19515, 3000, 1, "Armour", 0.071998,0.044000,0.004000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000}
};

new const cl_ZipData[][e_cldata] = { // 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0
	{19066, 1000, 2, "Santa Hat", 0.1229, 0.0350, 0.000, 90.7, 119.2999, -2.4, 1.0, 1.0, 1.0},
	{18970, 1000, 2, "Tiger Pimp Hat", 0.1089, 0.0360, 0.0000, 0.0000, 93.5999, 87.7999, 1.0, 1.0, 1.0},
	{18971, 1000, 2, "Disco Pimp Hat", 0.1089, 0.0360, 0.0000, 0.0000, 93.5999, 87.7999, 1.0, 1.0, 1.0},
	{18972, 1000, 2, "Lava Pimp Hat", 0.1089, 0.0360, 0.0000, 0.0000, 93.5999, 87.7999, 1.0, 1.0, 1.0},
	{18973, 1000, 2, "Camo Pimp Hat", 0.1089, 0.0360, 0.0000, 0.0000, 93.5999, 87.7999, 1.0, 1.0, 1.0},
	{18921, 1000, 2, "Beret", 0.1430, 0.0210, -0.0029, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18922, 1000, 2, "Red Beret", 0.1430, 0.0210, -0.0029, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18923, 1000, 2, "Blue Beret", 0.1430, 0.0210, -0.0029, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18924, 1000, 2, "Camo Beret", 0.1430, 0.0210, -0.0029, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19067, 1000, 2, "Red Hoody Hat", 0.1239, 0.0290, -0.0009, 85.5999, 118.7000, 1.0000, 1.0, 1.0, 1.0},
	{19068, 1000, 2, "Zebra Hoody Hat", 0.1239, 0.0290, -0.0009, 85.5999, 118.7000, 1.0000, 1.0, 1.0, 1.0},
	{19069, 1000, 2, "Black Hoody Hat", 0.1239, 0.0290, -0.0009, 85.5999, 118.7000, 1.0000, 1.0, 1.0, 1.0},
	{18926, 1000, 2, "Camo Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18927, 1000, 2, "Blue Flame Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18928, 1000, 2, "Hippie Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18929, 1000, 2, "Illusion Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18930, 1000, 2, "Fire Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18931, 1000, 2, "Dark Flame Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18932, 1000, 2, "Lava Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18933, 1000, 2, "Poka Dot Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18934, 1000, 2, "Red Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18935, 1000, 2, "Yellow Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18941, 1000, 2, "Black Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18942, 1000, 2, "Dark Blue Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18943, 1000, 2, "Green Hat", 0.1460, 0.0250, -0.0070, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18961, 1000, 2, "Trucker Hat", 0.1370, 0.0320, 0.0030, 103.0000, 94.0000, -14.9000, 1.0, 1.0, 1.0},
	{18960, 1000, 2, "Cap Rim Up", 0.1370, 0.0320, 0.0030, 103.0000, 94.0000, -14.9000, 1.0, 1.0, 1.0},
	{18936, 1000, 2, "Grey Helmet", 0.0980, 0.0369, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18937, 1000, 2, "Red Helmet", 0.0980, 0.0369, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18938, 1000, 2, "Purple Helmet", 0.0980, 0.0369, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19101, 1000, 2, "Army Helmet(Straps)", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19102, 1000, 2, "Navy Helmet(Straps)", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19103, 2000, 2, "Desert Helmet(Straps)", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19104, 2000, 2, "Day Camo Helmet(Straps)", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19105, 2000, 2, "Night Camo Helmet(Straps)", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19106, 2000, 2, "Army Helmet", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19107, 2000, 2, "Navy Helmet", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19108, 2000, 2, "Desert Helmet", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19109, 2000, 2, "Day Camo Helmet", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19110, 2000, 2, "Night Camo Helmet", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19111, 2000, 2, "Sand Camo Helmet", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19112, 2000, 2, "Pink Camo Helmet", 0.1470, 0.0260, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18911, 2000, 2, "Skull Bandana", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {18912, 1600, 2, "Black Bandana", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {18913, 1600, 2, "Green Bandana", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {18914, 1600, 2, "Camo Bandana", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {18915, 1600, 2, "Funky Bandana", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {18916, 1600, 2, "Triangle Bandana", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {18917, 1600, 2, "Dark Blue Bandana", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {18918, 1600, 2, "Black & White Bandana", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {18919, 1600, 2, "Dots Bandana", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {18920, 1600, 2, "Triangle & Dots Bandana", 0.0785, 0.0348, -0.0007, 268.9704, 1.5333, 269.2237, 1.0, 1.0, 1.0},
    {19469, 1600, 1, "Scarf", 0.3000, 0.0550, -0.0369, -5.8999, 0.0000, 26.2000, 1.0000, 1.5519, 1.3889},
	{18944, 1600, 2, "Lava Hat Boater", 0.1330, 0.0180, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18945, 1600, 2, "Grey Hat Boater", 0.1330, 0.0180, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18946, 1600, 2, "Casual Hat Boater", 0.1330, 0.0180, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18947, 2000, 2, "Black Hat Bowler", 0.1390, 0.0180, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {18948, 2000, 2, "Blue Hat Bowler", 0.1390, 0.0180, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {18949, 2000, 2, "Green Hat Bowler", 0.1390, 0.0180, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {18950, 2000, 2, "Red Hat Bowler", 0.1390, 0.0180, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {18951, 2000, 2, "Yellow Hat Bowler", 0.1390, 0.0180, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18953, 2000, 2, "Black Cap Knit", 0.1110, 0.0340, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18954, 2000, 2, "Grey Cap Knit", 0.1110, 0.0340, -0.0010, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{18955, 2000, 2, "Lava Cap Eye", 0.1030, 0.0440, 0.0009, -95.6000, 92.2001, -161.9002, 1.0, 1.0, 1.0},
	{18956, 2000, 2, "Dark Flame Cap Eye", 0.1030, 0.0440, 0.0009, -95.6000, 92.2001, -161.9002, 1.0, 1.0, 1.0},
	{18957, 2000, 2, "Blue Cap Eye", 0.1030, 0.0440, 0.0009, -95.6000, 92.2001, -161.9002, 1.0, 1.0, 1.0},
	{18958, 2000, 2, "Cheetah Cap Eye", 0.1030, 0.0440, 0.0009, -95.6000, 92.2001, -161.9002, 1.0, 1.0, 1.0},
	{18959, 2000, 2, "Camo Cap Eye", 0.1030, 0.0440, 0.0009, -95.6000, 92.2001, -161.9002, 1.0, 1.0, 1.0},
	{18964, 2000, 2, "Black Skully Cap", 0.1210, 0.0310, 0.0000, 95.3000, 107.1999, 0.0000, 1.0, 1.0, 1.0},
	{18965, 2000, 2, "Skully Cap", 0.1210, 0.0310, 0.0000, 95.3000, 107.1999, 0.0000, 1.0, 1.0, 1.0},
	{18966, 2000, 2, "Funky Skully Cap", 0.1210, 0.0310, 0.0000, 95.3000, 107.1999, 0.0000, 1.0, 1.0, 1.0},
	{18967, 2000, 2, "Black Chav Hat", 0.1030, 0.0260, 0.0000, 95.7000, 87.3999, -0.3999, 1.0, 1.0, 1.0},
	{18968, 2000, 2, "Chav Hat", 0.1030, 0.0260, 0.0000, 95.7000, 87.3999, -0.3999, 1.0, 1.0, 1.0},
	{18969, 2000, 2, "Lava Chav Hat", 0.1030, 0.0260, 0.0000, 95.7000, 87.3999, -0.3999, 1.0, 1.0, 1.0},
	{19006, 1400, 2, "Red Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19007, 1400, 2, "Orange Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19008, 1400, 2, "Green Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19009, 1400, 2, "Blue Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19010, 1400, 2, "Pink Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19011, 1400, 2, "Black & White Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19012, 1400, 2, "Black Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19013, 1400, 2, "Dot Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19014, 1400, 2, "Square Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19015, 1400, 2, "Lucent Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19016, 1400, 2, "X-Ray Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19017, 1400, 2, "Plain Yellow Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19018, 1400, 2, "Plain Orange Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19019, 1400, 2, "Plain Red Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19020, 1400, 2, "Plain Blue Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19021, 1400, 2, "Plain Green Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19022, 1400, 2, "Lucent Aviators", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19023, 1400, 2, "Blue Aviators", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19024, 1400, 2, "Purple Aviators", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19025, 1400, 2, "Pink Aviators", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19026, 1400, 2, "Red Aviators", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19027, 1400, 2, "Orange Aviators", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19028, 1400, 2, "Yellow Aviators", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19029, 1400, 2, "Green Aviators", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19030, 1400, 2, "Thick Lucent", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19031, 1400, 2, "Thick Yellow", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19032, 1400, 2, "Thick Red", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19033, 1400, 2, "Plain Black Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
    {19024, 1400, 2, "Squares Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
    {19025, 1400, 2, "Dark Blue Glasses", 0.0879, 0.0460, 0.0000, 91.0999, 85.3999, 0.0000, 1.0, 1.0, 1.0},
	{19349, 1400, 2, "Monocle", 0.0769, 0.1050, 0.0340, 120.9999, 2.6999, -96.3998, 1.0, 1.0, 1.0},
	{18891, 1400, 2, "Blue Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18892, 1400, 2, "Red Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18893, 1400, 2, "White & Red  Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18894, 1400, 2, "Bob Marley Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18895, 1400, 2, "Skulls Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18896, 1400, 2, "Black & White Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18897, 1400, 2, "Blue & White Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18898, 1400, 2, "Green & White Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18899, 1400, 2, "Purple & White Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18900, 1400, 2, "Psychedelic Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18901, 1400, 2, "Fall Camo Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18902, 1400, 2, "Yellow Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18903, 1400, 2, "Light Blue Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18904, 1400, 2, "Dark Blue Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
    {18905, 1400, 2, "Hay Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
    {18906, 1400, 2, "Red & Yellow Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18907, 1400, 2, "Psychedelic Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18908, 1400, 2, "Waves Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18909, 1400, 2, "Sky Blue Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18910, 1400, 2, "Lava Bandana", 0.1149, 0.0160, -0.0029, -88.2001, 8.3999, -95.0999, 1.0, 1.0, 1.0},
	{18962, 1400, 2, "Black Cowboy Hat", 0.1630, 0.0270, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19095, 1400, 2, "Light Brown Cowboy Hat", 0.1630, 0.0270, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19096, 1400, 2, "Dark Blue Cowboy Hat", 0.1630, 0.0270, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
	{19097, 1400, 2, "Red Cowboy Hat", 0.1630, 0.0270, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {19098, 1400, 2, "Brown Cowboy Hat", 0.1630, 0.0270, 0.0000, 0.0000, 0.0000, 0.0000, 1.0, 1.0, 1.0},
    {19352, 1400, 2, "Top Hat", 0.1039, 0.0210, 0.0060, 93.7000, 74.3000, 0.0000, 1.0, 1.0, 1.0}
};

new ClothingData[MAX_PLAYERS][MAX_CLOTHES][e_cloths];

new cl_selected[MAX_PLAYERS];
new cl_dataslot[MAX_PLAYERS][MAX_CLOTHES];

new cl_buying[MAX_PLAYERS];
new cl_buyingpslot[MAX_PLAYERS];

// ประตูรถ
enum Door
{
	DOOR_HOOD,
	DOOR_TRUNK,
	DOOR_DRIVER,
	DOOR_PASSENGER
}

enum DoorState(<<= 1)
{
	IS_OPENED = 1,
	IS_DAMAGED,
	IS_REMOVED
}

// --> ระบบกาชาปอง TextDraws
new Lucky_TimeLast[MAX_PLAYERS]; //
new Lucky_ActiveLast[MAX_PLAYERS]; //
new Lucky_StatsLast[MAX_PLAYERS];

enum GachapongEnumX
{
	gachaID,
	ModelID,
	Name[32],
}

new GachapongLast[][GachapongEnumX] ={ //
	{0, 1550, "$100"}, //0
	{1, 1550, "$100"},
	{2, 1550, "$500"},
	{3, 1550, "$500"},
	{4, 1550, "$1000"},
	{5, 1550, "$1000"},
	{6, 1550, "$1500"},
	{7, 1550, "$1500"},
	{8, 1550, "$2000"},
	{9, 1550, "$2000"},
	{10, 1550, "$2500"},
	{11, 1550, "$2500"},
	{12, 1550, "$3000"},
	{13, 1550, "$3000"},
	{14, 1550, "$4000"},
	{15, 1550, "$4000"},
	{16, 1550, "$5000"},
	{17, 1550, "$5000"},
	
	{18, 331, "Brass Knuckles"},
	{19, 336, "Baseball Bat"},
	{20, 337, "Shovel"},
	{21, 510, "Moutain Bike"},
	{22, 463, "Freeway"},
	{23, 533, "Feltzer"} // 23
};

// ----------------------->

new TuningGate;
new TuningStats = 0;

new isRepairVehicle[MAX_PLAYERS] = 0;
new repairPoints[MAX_PLAYERS] = 0;

new isUseMedicKit[MAX_PLAYERS] = 0;
new medicPoints[MAX_PLAYERS] = 0;

new isPoonStart[MAX_PLAYERS] = 0;
new poonPoints[MAX_PLAYERS] = 0;

new targetonname[MAX_PLAYERS];
new targeton[MAX_PLAYERS];

new PlayerText:inventoryTextdraws[MAX_PLAYERS][90];

// --> ระบบช่องเก็บของ
#define MAX_PLAYER_ITEMS (32)
#define MAX_DROPPED_ITEMS (300)

new craftFoods[][] = {
	//"Helmet Lv.1", "Helmet Lv.2", "Helmet Lv.3", "Helmet Lv.4", "Helmet Lv.5"
	{ "Flower" },
	{ "Dildo" },
	{ "Pool Cue" },
	{ "Golf Club" },
	{ "Baseball Bat" },
	{ "Shovel" },
	{ "Brass Knuckles" },
	{ "Katana" },
	{ "Cane" },
	{ "MP5" },
	{ "Shell" },
	{ "Pizza" },
	{ "Water Bottle" },
	{ "Phone" },
	{ "Toolbox" },
	{ "Driving License" },
	{ "Beef" },
	{ "Chicken" },
	{ "Hematite" },
	{ "Rock Salt" },
	{ "Coal Ore" },
	{ "Uranium Ore" },
	{ "Orange" },
	{ "Apple" },
	{ "Lemon" },
	{ "Woods" },
	{ "Hacksaw" },
	{ "Fishing Rod" },
	{ "Bait" },
	{ "Grouper" },
	{ "Salmon" },
	{ "Stingray" },
	{ "Shark" },
	{ "Cocain" },
	{ "Cannabis" },
	{ "Knife" },
	{ "Medic Kit" },
	{ "VehicleBox" },
	{ "Poon" },
	{ "Fuel Can" },
	{ "Kachapong" },

	{ "Wagyu Steak" },
	{ "Sushi" },
	{ "Orange Juice" },
	{ "Apple Juice" },
	{ "Vape" }
};

enum dropE {
	dItemExists,
	dItemName[24],
	dItemWeaponID,
	dItemAmount,
	Float:dItemX,
	Float:dItemY,
	Float:dItemZ,
	dItemInterior,
	dItemVirtual,
	Text3D:dItemText,
	dItemObjectID
};

new droppedItems[MAX_DROPPED_ITEMS][dropE];

new szQueryOutput[512];
new weaponData[MAX_PLAYERS][13][2];

new WeaponNames[47][] = // As below
{
	"มือเปล่า","Brass Knuckles","ไม้กอล์ฟ","กระบอง","มีดสั้น","Baseball Bat","Shovel","ไม้สนุ๊กเกอร์","ดาบคาตะนะ","เลื่อยยนต์","ดิลโด้สีม่วง","ดิลโด้","เครื่องสั่น","เครื่องสั่นแบบเงิน",
	"ดอกไม้","ไม้เท้า","ระเบิดมือ","ระเบิดควัน","ระเบิดเพลิง","Jetpack"," "," ","ปืนสั้น 9มม.","ปืนสั้นเก็บเสียง","ดีเสิร์ท อีเกิล","ปืนลูกซอง","ปืนลูกซองคู่","SPAS-12",
	"Micro Uzi","MP5","AK-47","M4A1","TEC-9","ไรเฟิล","สไนเปอร์ ไรเฟิล","อาร์พีจี","อาร์พีจีติดตามเป้าหมาย","เครื่องพ่นไฟ","มินิกัน","ระเบิดแสวงเครื่อง","เครื่องจุดระเบิด","กระป๋องสเปรย์","ถังดับเพลิง",
	"กล้องถ่ายรูป","แว่นมองกลางคืน", "แว่นตรวจจับความร้อน","ร่มชูชีพ"
};

new WeaponNamesEn[47][] = // As below
{
	"Punch","Brass Knuckles","Golf Club","Nightstick","Knife","Baseball Bat","Shovel","Pool Cue","Katana","Chainsaw","Purple Dildo","Dildo","Vibrator","Silver Vibrator",
	"Flowers","Cane","Grenade","Tear Gas","Molotov Cocktail","Jetpack"," "," ","9mm","Silenced 9mm","Desert Eagle","Shotgun","Sawnoff Shotgun","Combat Shotgun",
	"Micro Uzi","MP5","AK-47","M4A1","TEC-9","Country Rifle","Sniper Rifle","RPG","HS Rocket","Flamethrower","Minigun","Satchel Charge","Detonator","Spraycan","Fire Extinguisher",
	"Camera","Night Vis Goggles", "Thermal Goggles","Parachute"
};

new weaponModels[] = {
	0, 331, 333, 334, 335, 336, 337, 338, 339, 341, 321, 322, 323, 324,
	325, 326, 342, 343, 344, 0, 0, 0, 346, 347, 348, 349, 350, 351, 352,
	353, 355, 356, 372, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 368, 368, 371
};

enum e_ItemArray
{
	e_ItemName[24],
	e_ItemModelID
};

new itemArray[][e_ItemArray] = {

	{ "Flower", 325 },
	{ "Dildo", 323 },
	{ "Pool Cue", 338 },
	{ "Golf Club", 333 },
	{ "Baseball Bat", 336 },
	{ "Shovel", 337 },
	{ "Brass Knuckles", 331 },
	{ "Katana", 339 },
	{ "Cane", 326 },
	{ "MP5", 353 },
	{ "Shell", 953 },
	{ "Pizza", 2814 },
	{ "Water Bottle", 19570 },
	{ "Phone", 18866 },
	{ "Toolbox", 19921 },
	{ "Driving License", 1581 },
	{ "Beef", 19582 },
	{ "Chicken", 19582 },
	{ "Hematite", 11708 },
	{ "Rock Salt", 11708 },
	{ "Coal Ore", 11708 },
	{ "Uranium Ore", 11708 },
	{ "Orange", 19574 },
	{ "Apple", 19574 },
	{ "Lemon", 19574 },
	{ "Woods", 19793 },
	{ "Hacksaw", 341 },
	{ "Fishing Rod", 18632 },
	{ "Bait", 19630 },
	{ "Grouper", 19630 },
	{ "Salmon", 19630 },
	{ "Stingray", 19630 },
	{ "Shark", 19630 },
	{ "Cocain", 1279 },
	{ "Cannabis", 19473 },
	{ "Knife", 335 },
	{ "Medic Kit", 11738 },
	{ "VehicleBox", 19921 },
	{ "Poon", 2060 },
	{ "Fuel Can", 1650 },
	{ "Kachapong", 19056 },

	{ "Wagyu Steak", 19882 },
	{ "Sushi", 19882 },
	{ "Orange Juice, 19575" },
	{ "Apple Juice", 19575 },
	{ "Vape", 11708 }
};

enum itemE {
	pItemID,
	pItemExists,
	pItemName[24],
	pItemType,
	pItemAmount
};

new playerItems[MAX_PLAYERS][MAX_PLAYER_ITEMS][itemE];

new PlayerText:tdhp[MAX_PLAYERS];
new PlayerText:tdarmour[MAX_PLAYERS];
new PlayerText:tdhungry[MAX_PLAYERS];
new PlayerText:tddrink[MAX_PLAYERS];
new PlayerText:tdexp[MAX_PLAYERS];
new PlayerText:tddollar[MAX_PLAYERS];
new PlayerText:tdredmoney[MAX_PLAYERS];
new PlayerText:tdgangicon[MAX_PLAYERS];
new PlayerText:tdidname[MAX_PLAYERS];
new PlayerText:tdlogo1[MAX_PLAYERS];
new PlayerText:tdlogo2[MAX_PLAYERS];
new PlayerText:tdlogo3[MAX_PLAYERS];
new PlayerText:tdlogo4[MAX_PLAYERS];
new PlayerBar:barhp[MAX_PLAYERS];
new PlayerBar:bararmour[MAX_PLAYERS];
new PlayerBar:barhungry[MAX_PLAYERS];
new PlayerBar:bardrink[MAX_PLAYERS];
new PlayerBar:barexp[MAX_PLAYERS];
new BloodObject[MAX_PLAYERS][3];
new PlayerText:AMZTextDraws[MAX_PLAYERS][23];

new PlayerText:SlotTD[MAX_PLAYERS][12];
new PlayerText:TextBacara[MAX_PLAYERS][1];
//new PlayerText:CopOnlineTextDraws[MAX_PLAYERS][6];

// คราฟอาวุธ
new Text:WeaponCraft[23];
new Text:ItemWPCraft[22];

// ไมล์ความเร็วรถ
new PlayerText:ui_speed[MAX_PLAYERS][20];
new PlayerText:ui_vehControl[MAX_PLAYERS][18];

// ค่าอาหาร
new Text:TD_uiStatsNew[8];
new PlayerText:pTD_StatsNew[MAX_PLAYERS][3];
new PlayerBar:PlayerProgressBar[MAX_PLAYERS][3];
new Text:logoServer[2];
new PlayerText:PlayerTD[MAX_PLAYERS][17];

stock const MONTH_DAY_SHORT[][] = {
	"Jan", "Feb", "Mar", "Apr",
	"May", "Jun", "Jul", "Aug", "Sep", "Oct",
	"Nov","Dec"
}
;

new Text:ui_clock;
new Text:ui_website;
//new Text:ui_logoWeedDay[3];
new PlayerText:ui_zone[MAX_PLAYERS];
//new PlayerText:ui_playerPing[MAX_PLAYERS];

#define BETRED (1)
#define BETBLACK (2)
#define BETGREEN (3)

new BacaraTableOneTime = 60;

new PlayerSelectBetColor[MAX_PLAYERS];
new PlayerMoneyBet[MAX_PLAYERS];

//new PlayerText:phoneMorganText[MAX_PLAYERS][21];
new PlayerText:PhoneTextDraws[MAX_PLAYERS][28];

new PlayerText:GachaTextDraws[MAX_PLAYERS][24];

new
    Menu:TuningMenu,
    Menu:TuningMenu1,
    Menu:Paintjobs,
    Menu:Colors,
    Menu:Colors1,
    Menu:Exhausts,
    Menu:Frontbumper,
    Menu:Rearbumper,
    Menu:Roof,
    Menu:Spoilers,
    Menu:Sideskirts,
    Menu:Bullbars,
    Menu:Wheels,
    Menu:Wheels1,
    Menu:Carstereo,
    Menu:Hydraulics,
    Menu:Nitro,
    pmodelid[MAX_PLAYERS],
    pvehicleid[MAX_PLAYERS];

new robCount;

new ProgressLimit[MAX_PLAYERS],
	ProgressCount[MAX_PLAYERS],
	Timer:ProgressTimer[MAX_PLAYERS],
	ProgressState[MAX_PLAYERS],
	ProgressObject[MAX_PLAYERS];

/* Event */
new	Float:EventX, Float:EventY, Float:EventZ,
	EventInterior = 0,
	EventWorld = 0,
	EventOn = 0;

// PlayerText : PlayerBar
new PlayerText:PlayerDeathTD[MAX_PLAYERS];

new PlayerText:PlayerSpeedoCountTD[MAX_PLAYERS];
new PlayerText:PlayerSpeedoKMHTD[MAX_PLAYERS];
new PlayerText:PlayerSpeedoFuelCountTD[MAX_PLAYERS];
new PlayerText:PlayerSpeedoFuelLitersTD[MAX_PLAYERS];

new PlayerText:PlayerJobCountTD[MAX_PLAYERS];
new PlayerBar:PlayerProgressJob[MAX_PLAYERS];


/* Earn Exp */
new PlayerText:PlayerExpEarnBoxTD1[MAX_PLAYERS];
new PlayerText:PlayerExpEarnBoxTD2[MAX_PLAYERS];
new PlayerText:PlayerEarnExpAmountTD[MAX_PLAYERS];

enum PLAYER_DATA
{
	pID,
	pRegisterDate[90],
	pGender,
	pBirthday[24],
	pAdmin,
	pKills,
	pDeaths,
	pMoney,
	pBankMoney,
	pRedMoney,
	pLevel,
	pExp,
	pMinutes,
	pHours,
	Float: pPos_X,
	Float: pPos_Y,
	Float: pPos_Z,
	Float: pPos_A,
	pSkin,
	pInterior,
	pWorld,
	pTutorial,
	pSpawnPoint,

	Float: pThirsty,
	Float: pHungry,
	Float: pHealth,

	pInjured,
	pInjuredTime,

	pHospital,

	pFactionOffer,
	pFactionOffered,
	pFaction,
	pFactionID,
	pFactionRank,
	pFactionEdit,
	pSelectedSlot,

	pDisableFaction,
	bool: pOnDuty,
	bool: pArmorOn,
	pCuffed,
	pDragged,
	pDraggedBy,
	pDragTimer,

	pPrisoned,
	pPrisonOut,
	pJailTime,

	pEntrance,

	pCarSeller,
	pCarOffered,
	pCarValue,

	pSpeedoTimer,

	pMaxItem,
	pItemAmount,
	pItemSelect,
	pItemOfferID,

	pMecOfferID,
	pMecOfferPrice,

	pMedicOfferID,
    pMedicOfferPrice,

    pRoadblock,

	pPhone,
	pPhoneOff,
	pContact,
	pEditingItem[32],
	pIncomingCall,
	pCallLine,
	pEmergency,
//	pPlaceAd,

	pMarker,

	pWanted,
	pWantedTime,

	pTransfer,

	pColor1,
	pColor2,

	pPaintjob,

	pDrivingTest,
	pTestStage,
	pTestCar,
	pTestWarns,

	Float: pEventBackX,
	Float: pEventBackY,
	Float: pEventBackZ,
	pEventBackInterior,
	pEventBackWorld,
	pEventGo,

	pOOCSpam,

	pVip,

	pExpShow,
	pExpTimer,

	pQuest,
	pQuestProgress,

	pBan,
	pBanReason[128],

	pVehicleKeys,
	pPVP,
	pPVPFreeze,

	pTazer,
	pStunned,

	bool: IsLoggedIn,
	LoginAttempts,
	LoginTimer,

	pHouse,
	pWhitelist,
	
	pWorkOn,
	
	bool: pHelmetOn,
	
	pSpectator,
	pCallTime,
	
	//
	pChaya,
	pLottoWin,
	pWeedWin,
	
	pSchoolType,
	pGradeType,
	pSchoolPoints,
	pBookPoints,
	pMaxSchool,
	
	pCoin,
	pSkillCraft,
	
	pMaterials,
	pIrons,
	pWoods,
	
	pExpCraft,
	
	pInventoryPage,
	pInventoryShown,
	pItemSelected,
	pStoreItem,
	pMarketSell,
	pCraftItem,
	pInventorySlots,
	pWeapons[13],
	pAmmo[13],
	pInvWeapons[5],
	pInvAmmo[5],
	pSelectedItem,

};
new playerData[MAX_PLAYERS][PLAYER_DATA];

new MapIconsShown[MAX_PLAYERS];

enum FACTION_DATA {
	factionID,
	factionExists,
	factionName[32],
	factionColor,
	factionType,
	factionRanks,
	Float:factionLockerPosX,
	Float:factionLockerPosY,
	Float:factionLockerPosZ,
	factionLockerInt,
	factionLockerWorld,
	factionSkins[8],
	factionWeapons[10],
	factionAmmo[10],
	Text3D:factionText3D,
	factionPickup,
	Float:SpawnX,
	Float:SpawnY,
	Float:SpawnZ,
	SpawnInterior,
	SpawnVW,
	factionEntrance,

	factionCannabis,
	factionCocain,
	factionPoon,
	factionRedMoney
};
new factionData[MAX_FACTIONS][FACTION_DATA];
new FactionRanks[MAX_FACTIONS][15][32];

enum ARREST_DATA {
	arrestID,
	arrestExists,
	Float:arrestPosX,
	Float:arrestPosY,
	Float:arrestPosZ,
	arrestInterior,
	arrestWorld,
	Text3D:arrestText3D,
	arrestPickup
};
new arrestData[MAX_ARREST][ARREST_DATA];

enum GPS_DATA {
	gpsID,
	gpsExists,
	gpsName[32],
	Float:gpsPosX,
	Float:gpsPosY,
	Float:gpsPosZ,
	gpsType
};
new gpsData[MAX_GPS][GPS_DATA];

enum CAR_DATA
{
	carID,
	carOwnerID,
	carOwner[MAX_PLAYER_NAME],
	carModel,
	carPrice,
	carTickets,
	carLocked,
	carPlate[32],
	Float:carHealth,
	Float:carPosX,
	Float:carPosY,
	Float:carPosZ,
	Float:carPosA,
	carColor1,
	carColor2,
	carPaintjob,
	carInterior,
	carWorld,
	carNeon,
	carNeonEnabled,
	carTrunk,
	carMods[14],
	carCash,
	carFaction,
	carObjects[2],
	carTimer,
	carDamage[4],
	
	carPoon,
	carCannabis,
	carCocain,
	carRedMoney,
};
new carData[MAX_VEHICLES][CAR_DATA];

enum SHOP_DATA {
	shopID,
	shopExists,
	Float:shopPosX,
	Float:shopPosY,
	Float:shopPosZ,
	shopInterior,
	shopWorld,
	shopType,
	Text3D:shopText3D,
	shopPickup
};
new shopData[MAX_SHOPS][SHOP_DATA];

enum PUMP_DATA {
	pumpID,
	pumpExists,
	Float:pumpPosX,
	Float:pumpPosY,
	Float:pumpPosZ,
	Text3D:pumpText3D,
	pumpPickup
};
new pumpData[MAX_PUMPS][PUMP_DATA];

enum GARAGE_DATA {
	garageID,
	garageExists,
	Float:garagePosX,
	Float:garagePosY,
	Float:garagePosZ,
	Text3D:garageText3D,
	garagePickup
};
new garageData[MAX_GARAGES][GARAGE_DATA];

enum ATM_DATA {
	atmID,
	atmExists,
	Float:atmPosX,
	Float:atmPosY,
	Float:atmPosZ,
	Float:atmPosA,
	atmInterior,
	atmWorld,
	atmObject,
	Text3D:atmText3D
};
new atmData[MAX_ATM_MACHINES][ATM_DATA];

enum CONTACT_DATA {
	contactID,
	contactExists,
	contactName[32],
	contactNumber
};
new contactData[MAX_PLAYERS][MAX_CONTACTS][CONTACT_DATA];
new ListedContacts[MAX_PLAYERS][MAX_CONTACTS];

// --> บาคาร่า
new StartPlayBacara[MAX_PLAYERS];
new BacaraTable[MAX_PLAYERS];

/*enum INV_DATA {
	invExists,
	invID,
	invItem[32],
	invQuantity
};
new invData[MAX_PLAYERS][MAX_INVENTORY][INV_DATA];

enum ITEM_NAME_DATA {
	itemName[32]
};

new const itemData[][ITEM_NAME_DATA] = {
	{ "Flower" },
	{ "Dildo" },
	{ "Pool Cue" },
	{ "Golf Club" },
	{ "Baseball Bat" },
	{ "Shovel" },
	{ "Brass Knuckles" },
	{ "Katana" },
	{ "Cane" },
	{ "MP5" },
	{ "Shell" },
	{ "Pizza" },
	{ "Water Bottle" },
	{ "Phone" },
	{ "Toolbox" },
	{ "Driving License" },
	{ "Beef" },
	{ "Chicken" },
	{ "Hematite" },
	{ "Rock Salt" },
	{ "Coal Ore" },
	{ "Uranium Ore" },
	{ "Orange" },
	{ "Apple" },
	{ "Lemon" },
	{ "Woods" },
	{ "Hacksaw" },
	{ "Fishing Rod" },
	{ "Bait" },
	{ "Grouper" },
	{ "Salmon" },
	{ "Stingray" },
	{ "Shark" },
	{ "Cocain" },
	{ "Cannabis" },
	{ "Knife" },
	{ "Medic Kit" },
	{ "VehicleBox" },
	{ "Poon" },
	{ "Fuel Can" },
	{ "Kachapong" },
	
	{ "Wagyu Steak" },
	{ "Sushi" },
	{ "Orange Juice" },
	{ "Apple Juice" },
	{ "Vape" }
};*/

enum ENTRANCE_DATA {
	entranceID,
	entranceExists,
	entranceName[32],
	entrancePass,
	entranceIcon,
	entranceLocked,
	Float:entrancePosX,
	Float:entrancePosY,
	Float:entrancePosZ,
	Float:entrancePosA,
	Float:entranceIntX,
	Float:entranceIntY,
	Float:entranceIntZ,
	Float:entranceIntA,
	entranceInterior,
	entranceExterior,
	entranceExteriorVW,
	entranceType,
	entranceCustom,
	entranceWorld,
	entranceFaction,
	entrancePickup,
	entranceMapIcon,
	Text3D:entranceText3D,
	entranceExPickup,
	Text3D:entranceExText3D
};
new entranceData[MAX_ENTRANCES][ENTRANCE_DATA];

enum
{
	VEHICLE_ENGINE,
	VEHICLE_LIGHTS,
	VEHICLE_ALARM,
	VEHICLE_DOORS,
	VEHICLE_BONNET,
	VEHICLE_BOOT,
	VEHICLE_OBJECTIVE
};

enum
{
	STASH_CAPACITY_CASH
};

enum
{
	LIMIT_VEHICLES
};

// --> ระบบบ้าน Dynamic

#define MAX_HOUSES 100
#define MAX_OWNABLE_HOUSES 1
enum houseData {
	houseID,
	houseExists,
	houseOwner,
	housePrice,
	houseAddress[32],
	Float:housePos[4],
	Float:houseInt[4],
	houseInterior,
	houseExterior,
	houseExteriorVW,
	houseLocked,
	houseMoney,
	houseMapIcon,
	Text3D:houseText3D,
	housePickup,
	houseLights,
	houseWeapons[10],
	houseAmmo[10]
};
new HouseData[MAX_HOUSES][houseData];

enum houseInteriors {
	eHouseInterior,
	Float:eHouseX,
	Float:eHouseY,
	Float:eHouseZ,
	Float:eHouseAngle
};

new const Float:arrHouseInteriors[20][houseInteriors] = {
	{10, 2269.8772, -1210.3240, 1047.5625, 90.0000},
    {2, 2468.2576, -1698.2361, 1013.5078, 90.0000},
	{3, 2495.8711, -1693.0996, 1014.7422, 180.0000},
	{5, 2233.7888, -1114.2689, 1050.8828, 0.0000},
	{9, 2317.8015, -1026.2113, 1050.2178, 0.0000},
	{3, 235.2923, 1187.3684, 1080.2578, 0.0000},
	{2, 226.2912, 1240.0554, 1082.1406, 90.0000},
	{1, 223.1618, 1287.5175, 1082.1406, 0.0000},
	{5, 226.9281, 1114.2813, 1080.9962, 270.0000},
	{15, 295.1485, 1473.1080, 1080.2578, 0.0000},
	{10, 23.9584, 1340.6075, 1084.3750, 0.0000},
	{4, 222.0425, 1140.7565, 1082.6094, 0.0000},
	{12, 2324.4209, -1148.9365, 1050.7101, 0.0000},
	{4, -261.1430, 1456.6396, 1084.3672, 90.0000},
	{5, 22.9676, 1403.8368, 1084.4297, 0.0000},
	{5, 140.3088, 1366.8196, 1083.8594, 0.0000},
	{6, 234.3149, 1064.2772, 1084.2114, 0.0000},
	{7, 225.7000, 1022.0012, 1084.0161, 0.0000},
	{5, 1298.9750, -796.4567, 1084.0078, 0.0000},
	{15, -283.8687, 1471.1174, 1084.3750, 90.0000}
};

// --> ระบบแต่งรถ

#define                 C_ADMIN             0x4169E1FF
#define                 C_AVISO             0xB22222FF

new Text:wTuning1[23];
new Text:wTuning2[9];
new Text:wTuning3[6];
new Text:wTuning4[3];
new Text:wTuning5[3];

enum carEnum
{
	carCategory[16],
	carModel,
	carPrice
};
new const vehicleArray[][carEnum] =
{
	{"จักรยาน",       	509, 3000},
	{"Kart",       	571, 10000},
	{"จักรยานยนต์",       	462, 50000},
	{"รถตู้",       	413, 80000},
	{"รถกะบะ",       	478, 120000},
	{"รถยนต์",       	410, 150000},
	{"SUV",       	404, 170000},
	{"รถกะบะ",       	422, 280000},
	{"SUV",       	479, 300000},
	{"จักรยานยนต์",       	586, 400000},
	{"รถยนต์",       	466, 450000},
	{"รถคลาสสิก",       	580, 600000},
	{"รถยนต์",       	421, 650000},
	{"SUV",       	561, 700000},
	{"รถคลาสสิก",       	576, 800000}
};

enum e_InteriorData {
	e_InteriorName[32],
	e_InteriorID,
	Float:e_InteriorX,
	Float:e_InteriorY,
	Float:e_InteriorZ
};
new const g_arrInteriorData[][e_InteriorData] = {
	{"24/7 1", 17, -25.884498, -185.868988, 1003.546875},
    {"24/7 2", 10, 6.091179, -29.271898, 1003.549438},
    {"24/7 3", 18, -30.946699, -89.609596, 1003.546875},
    {"24/7 4", 16, -25.132598, -139.066986, 1003.546875},
    {"24/7 5", 4, -27.312299, -29.277599, 1003.557250},
    {"24/7 6", 6, -26.691598, -55.714897, 1003.546875},
    {"Airport Ticket", 14, -1827.147338, 7.207417, 1061.143554},
    {"Airport Baggage", 14, -1861.936889, 54.908092, 1061.143554},
    {"Shamal", 1, 1.808619, 32.384357, 1199.593750},
    {"Andromada", 9, 315.745086, 984.969299, 1958.919067},
    {"Ammunation 1", 1, 286.148986, -40.644397, 1001.515625},
    {"Ammunation 2", 4, 286.800994, -82.547599, 1001.515625},
    {"Ammunation 3", 6, 296.919982, -108.071998, 1001.515625},
    {"Ammunation 4", 7, 314.820983, -141.431991, 999.601562},
    {"Ammunation 5", 6, 316.524993, -167.706985, 999.593750},
    {"Ammunation Booths", 7, 302.292877, -143.139099, 1004.062500},
    {"Ammunation Range", 7, 298.507934, -141.647048, 1004.054748},
    {"Blastin Fools Hallway", 3, 1038.531372, 0.111030, 1001.284484},
    {"Budget Inn Motel Room", 12, 444.646911, 508.239044, 1001.419494},
    {"Jefferson Motel", 15, 2215.454833, -1147.475585, 1025.796875},
    {"Off Track Betting Shop", 3, 833.269775, 10.588416, 1004.179687},
    {"Sex Shop", 3, -103.559165, -24.225606, 1000.718750},
    {"Meat Factory", 1, 963.418762, 2108.292480, 1011.030273},
    {"Zero's RC shop", 6, -2240.468505, 137.060440, 1035.414062},
    {"Dillimore Gas", 0, 663.836242, -575.605407, 16.343263},
    {"Catigula's Basement", 1, 2169.461181, 1618.798339, 999.976562},
    {"FC Janitor Room", 10, 1889.953369, 1017.438293, 31.882812},
    {"Woozie's Office", 1, -2159.122802, 641.517517, 1052.381713},
    {"Binco", 15, 207.737991, -109.019996, 1005.132812},
    {"Didier Sachs", 14, 204.332992, -166.694992, 1000.523437},
    {"Prolaps", 3, 207.054992, -138.804992, 1003.507812},
    {"Suburban", 1, 203.777999, -48.492397, 1001.804687},
    {"Victim", 5, 226.293991, -7.431529, 1002.210937},
    {"Zip", 18, 161.391006, -93.159156, 1001.804687},
    {"Club", 17, 493.390991, -22.722799, 1000.679687},
    {"Bar", 11, 501.980987, -69.150199, 998.757812},
    {"Lil' Probe Inn", 18, -227.027999, 1401.229980, 27.765625},
    {"Jay's Diner", 4, 457.304748, -88.428497, 999.554687},
    {"Gant Bridge Diner", 5, 454.973937, -110.104995, 1000.077209},
    {"Secret Valley Diner", 6, 435.271331, -80.958938, 999.554687},
    {"World of Coq", 1, 452.489990, -18.179698, 1001.132812},
    {"Welcome Pump", 1, 681.557861, -455.680053, -25.609874},
    {"Burger Shot", 10, 375.962463, -65.816848, 1001.507812},
    {"Cluckin' Bell", 9, 369.579528, -4.487294, 1001.858886},
    {"Well Stacked Pizza", 5, 373.825653, -117.270904, 1001.499511},
    {"Rusty Browns Donuts", 17, 381.169189, -188.803024, 1000.632812},
    {"Denise's Room", 1, 244.411987, 305.032989, 999.148437},
    {"Katie's Room", 2, 271.884979, 306.631988, 999.148437},
    {"Helena's Room", 3, 291.282989, 310.031982, 999.148437},
    {"Michelle's Room", 4, 302.180999, 300.722991, 999.148437},
    {"Barbara's Room", 5, 322.197998, 302.497985, 999.148437},
    {"Millie's Room", 6, 346.870025, 309.259033, 999.155700},
    {"Sherman Dam", 17, -959.564392, 1848.576782, 9.000000},
    {"Planning Dept", 3, 384.808624, 173.804992, 1008.382812},
    {"Area 51", 0, 223.431976, 1872.400268, 13.734375},
    {"LS Gym", 5, 772.111999, -3.898649, 1000.728820},
    {"SF Gym", 6, 774.213989, -48.924297, 1000.585937},
    {"LV Gym", 7, 773.579956, -77.096694, 1000.655029},
    {"B-Dup's House", 3, 1527.229980, -11.574499, 1002.097106},
    {"B-Dup's Crack Pad", 2, 1523.509887, -47.821197, 1002.130981},
    {"CJ's House", 3, 2496.049804, -1695.238159, 1014.742187},
    {"Madd Doggs Mansion", 5, 1267.663208, -781.323242, 1091.906250},
    {"OG Loc's House", 3, 513.882507, -11.269994, 1001.565307},
    {"Ryders House", 2, 2454.717041, -1700.871582, 1013.515197},
    {"Sweet's House", 1, 2527.654052, -1679.388305, 1015.498596},
    {"Crack Factory", 2, 2543.462646, -1308.379882, 1026.728393},
    {"Big Spread Ranch", 3, 1212.019897, -28.663099, 1000.953125},
    {"Fanny batters", 6, 761.412963, 1440.191650, 1102.703125},
    {"Strip Club", 2, 1204.809936, -11.586799, 1000.921875},
    {"Strip Club (Private Room)", 2, 1204.809936, 13.897239, 1000.921875},
    {"Unnamed Brothel", 3, 942.171997, -16.542755, 1000.929687},
    {"Tiger Skin Brothel", 3, 964.106994, -53.205497, 1001.124572},
    {"Pleasure Domes", 3, -2640.762939, 1406.682006, 906.460937},
    {"Liberty City Outside", 1, -729.276000, 503.086944, 1371.971801},
    {"Liberty City Inside", 1, -794.806396, 497.738037, 1376.195312},
    {"Gang House", 5, 2350.339843, -1181.649902, 1027.976562},
    {"Colonel Furhberger's", 8, 2807.619873, -1171.899902, 1025.570312},
    {"Crack Den", 5, 318.564971, 1118.209960, 1083.882812},
    {"Warehouse 1", 1, 1412.639892, -1.787510, 1000.924377},
    {"Warehouse 2", 18, 1302.519897, -1.787510, 1001.028259},
    {"Sweet's Garage", 0, 2522.000000, -1673.383911, 14.866223},
    {"Lil' Probe Inn Toilet", 18, -221.059051, 1408.984008, 27.773437},
    {"Unused Safe House", 12, 2324.419921, -1145.568359, 1050.710083},
    {"RC Battlefield", 10, -975.975708, 1060.983032, 1345.671875},
    {"Barber 1", 2, 411.625976, -21.433298, 1001.804687},
    {"Barber 2", 3, 418.652984, -82.639793, 1001.804687},
    {"Barber 3", 12, 412.021972, -52.649898, 1001.898437},
    {"Tatoo Parlor 1", 16, -204.439987, -26.453998, 1002.273437},
    {"Tatoo Parlor 2", 17, -204.439987, -8.469599, 1002.273437},
    {"Tatoo Parlor 3", 3, -204.439987, -43.652496, 1002.273437},
    {"LS Police HQ", 6, 246.783996, 63.900199, 1003.640625},
    {"SF Police HQ", 10, 246.375991, 109.245994, 1003.218750},
    {"LV Police HQ", 3, 288.745971, 169.350997, 1007.171875},
    {"Driving School", 3, -2029.798339, -106.675910, 1035.171875},
    {"8-Track", 7, -1398.065307, -217.028900, 1051.115844},
    {"Bloodbowl", 15, -1398.103515, 937.631164, 1036.479125},
    {"Dirt Track", 4, -1444.645507, -664.526000, 1053.572998},
    {"Kickstart", 14, -1465.268676, 1557.868286, 1052.531250},
    {"Vice Stadium", 1, -1401.829956, 107.051300, 1032.273437},
    {"SF Garage", 0, -1790.378295, 1436.949829, 7.187500},
    {"LS Garage", 0, 1643.839843, -1514.819580, 13.566620},
    {"SF Bomb Shop", 0, -1685.636474, 1035.476196, 45.210937},
    {"Blueberry Warehouse", 0, 76.632553, -301.156829, 1.578125},
    {"LV Warehouse 1", 0, 1059.895996, 2081.685791, 10.820312},
    {"LV Warehouse 2 (hidden part)", 0, 1059.180175, 2148.938720, 10.820312},
    {"Caligula's Hidden Room", 1, 2131.507812, 1600.818481, 1008.359375},
    {"Bank", 0, 2315.952880, -1.618174, 26.742187},
    {"Bank (Behind Desk)", 0, 2319.714843, -14.838361, 26.749565},
    {"LS Atrium", 18, 1710.433715, -1669.379272, 20.225049},
    {"Sheriff", 18, -702.1630, 2607.7188, 1006.1084}
    
};

new g_arrVehicleNames[][] = {
    "Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel", "Dumper", "Firetruck", "Trashmaster",
    "Stretch", "Manana", "Infernus", "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
    "Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection", "Hunter", "Premier", "Enforcer",
    "Securicar", "Banshee", "Predator", "Bus", "Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach",
    "Cabbie", "Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral", "Squalo", "Seasparrow",
    "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder", "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair",
    "Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale", "Oceanic",
    "Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy", "Hermes", "Sabre", "Rustler", "ZR-350", "Walton",
    "Regina", "Comet", "BMX", "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper", "Rancher",
    "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking", "Blista Compact", "Police Maverick",
    "Boxville", "Benson", "Mesa", "RC Goblin", "Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher",
    "Super GT", "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt", "Tanker", "Roadtrain",
    "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra", "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck",
    "Fortune", "Cadrona", "SWAT Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer", "Remington", "Slamvan",
    "Blade", "Streak", "Freight", "Vortex", "Vincent", "Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder",
    "Primo", "Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite", "Windsor", "Monster", "Monster",
    "Uranus", "Jester", "Sultan", "Stratum", "Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
    "Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper", "Broadway", "Tornado", "AT-400", "DFT-30",
    "Huntley", "Stafford", "BF-400", "News Van", "Tug", "Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
    "Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "LSPD Car", "SFPD Car", "LVPD Car",
    "Police Rancher", "Picador", "S.W.A.T", "Alpha", "Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs",
    "Boxville", "Tiller", "Utility Trailer"
};

enum VEHICLE_DATA
{
	Float:vFuel,
	Float:vSpeed
};
new vehicleData[][VEHICLE_DATA] =
{
//////น้ำมัน//////ความเร็ว//////
	{ 80.0, 159.00 },
	{ 40.0, 120.00 },
	{ 50.0, 188.00 },
	{ 150.0, 110.00 },
	{ 50.0, 134.00 },
	{ 45.0, 165.00 },
	{ 20.0, 111.00 },
	{ 120.0, 149.00 },
	{ 80.0, 101.00 },
	{ 80.0, 159.00 },
	{ 40.0, 131.00 },
	{ 80.0, 223.00 },
	{ 45.0, 170.00 },
	{ 60.0, 111.00 },
	{ 60.0, 106.00 },
	{ 65.0, 194.00 },
	{ 120.0, 155.00 },
	{ 50.0, 1.00 },
	{ 60.0, 116.00 },
	{ 40.0, 150.00 },
	{ 60.0, 146.00 },
	{ 50.0, 155.00 },
	{ 70.0, 141.00 },
	{ 60.0, 99.00 },
	{ 30.0, 136.00 },
	{ 50.0, 1.00 },
	{ 70.0, 175.00 },
	{ 120.0, 167.00 },
	{ 80.0, 158.00 },
	{ 65.0, 203.00 },
	{ 50.0, 1.00 },
	{ 180.0, 131.00 },
	{ 200.0, 95.00 },
	{ 150.0, 111.00 },
	{ 50.0, 168.00 },
	{ 50.0, 1.00 },
	{ 40.0, 150.00 },
	{ 150.0, 159.00 },
	{ 80.0, 144.00 },
	{ 60.0, 170.00 },
	{ 60.0, 137.00 },
	{ 50.0, 1.00 },
	{ 60.0, 140.00 },
	{ 150.0, 127.00 },
	{ 80.0, 111.00 },
	{ 65.0, 165.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 20.0, 116.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 80.0, 195.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 120.0, 159.00 },
	{ 50.0, 107.00 },
	{ 10.0, 96.00 },
	{ 80.0, 158.00 },
	{ 60.0, 137.00 },
	{ 50.0, 1.00 },
	{ 45.0, 167.00 },
	{ 20.0, 107.00 },
	{ 60.0, 142.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 148.00 },
	{ 50.0, 141.00 },
	{ 40.0, 143.00 },
	{ 50.0, 1.00 },
	{ 120.0, 158.00 },
	{ 25.0, 111.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 80.0, 150.00 },
	{ 45.0, 174.00 },
	{ 50.0, 1.00 },
	{ 60.0, 188.00 },
	{ 50.0, 118.00 },
	{ 80.0, 141.00 },
	{ 45.0, 186.00 },
	{ 50.0, 1.00 },
	{ 60.0, 158.00 },
	{ 50.0, 124.00 },
	{ 50.0, 1.00 },
	{ 20.0, 100.00 },
	{ 25.0, 65.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 90.0, 140.00 },
	{ 90.0, 158.00 },
	{ 45.0, 150.00 },
	{ 45.0, 141.00 },
	{ 50.0, 1.00 },
	{ 80.0, 216.00 },
	{ 60.0, 178.00 },
	{ 60.0, 164.00 },
	{ 50.0, 1.00 },
	{ 60.0, 109.00 },
	{ 70.0, 124.00 },
	{ 60.0, 141.00 },
	{ 50.0, 1.00 },
	{ 80.0, 216.00 },
	{ 80.0, 216.00 },
	{ 40.0, 174.00 },
	{ 80.0, 140.00 },
	{ 60.0, 180.00 },
	{ 65.0, 167.00 },
	{ 90.0, 108.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 130.0, 121.00 },
	{ 150.0, 143.00 },
	{ 60.0, 158.00 },
	{ 45.0, 158.00 },
	{ 50.0, 165.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 169.00 },
	{ 40.0, 190.00 },
	{ 60.0, 168.00 },
	{ 30.0, 131.00 },
	{ 60.0, 162.00 },
	{ 40.0, 159.00 },
	{ 45.0, 150.00 },
	{ 80.0, 178.00 },
	{ 55.0, 150.00 },
	{ 50.0, 61.00 },
	{ 30.0, 71.00 },
	{ 50.0, 111.00 },
	{ 50.0, 168.00 },
	{ 60.0, 170.00 },
	{ 60.0, 159.00 },
	{ 62.0, 174.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 20.0, 100.00 },
	{ 40.0, 150.00 },
	{ 60.0, 204.00 },
	{ 45.0, 165.00 },
	{ 60.0, 152.00 },
	{ 120.0, 149.00 },
	{ 80.0, 148.00 },
	{ 60.0, 150.00 },
	{ 55.0, 144.00 },
	{ 50.0, 1.00 },
	{ 60.0, 154.00 },
	{ 60.0, 146.00 },
	{ 55.0, 158.00 },
	{ 60.0, 122.00 },
	{ 50.0, 1.00 },
	{ 60.0, 145.00 },
	{ 45.0, 159.00 },
	{ 45.0, 111.00 },
	{ 60.0, 111.00 },
	{ 80.0, 157.00 },
	{ 60.0, 179.00 },
	{ 60.0, 170.00 },
	{ 60.0, 155.00 },
	{ 60.0, 179.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 60.0, 166.00 },
	{ 40.0, 161.00 },
	{ 50.0, 174.00 },
	{ 30.0, 147.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 10.0, 94.00 },
	{ 50.0, 61.00 },
	{ 80.0, 111.00 },
	{ 20.0, 61.00 },
	{ 45.0, 159.00 },
	{ 40.0, 159.00 },
	{ 50.0, 1.00 },
	{ 80.0, 131.00 },
	{ 80.0, 159.00 },
	{ 60.0, 154.00 },
	{ 35.0, 168.00 },
	{ 60.0, 137.00 },
	{ 15.0, 86.00 },
	{ 50.0, 1.00 },
	{ 60.0, 154.00 },
	{ 50.0, 158.00 },
	{ 50.0, 166.00 },
	{ 60.0, 109.00 },
	{ 65.0, 164.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 60.0, 177.00 },
	{ 60.0, 177.00 },
	{ 60.0, 177.00 },
	{ 90.0, 159.00 },
	{ 40.0, 152.00 },
	{ 30.0, 111.00 },
	{ 60.0, 170.00 },
	{ 60.0, 172.00 },
	{ 30.0, 148.00 },
	{ 40.0, 152.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 },
	{ 90.0, 108.00 },
	{ 50.0, 1.00 },
	{ 50.0, 1.00 }
};

new const Float:g_arrDrivingCheckpoints[][] = {
    {-2064.9561, -67.7125, 34.8247},
    {-2110.5261, -67.8857, 34.8247},
    {-2154.2473, -67.6854, 34.8231},
    {-2169.3850, -82.5202, 34.8302},
    {-2169.8767, -114.5743, 34.8188},
    {-2170.6482, -162.7804, 34.8249},
    {-2215.5796, -187.5162, 34.8745},
    {-2244.0376, -187.6771, 34.8235},
    {-2259.1860, -202.9163, 34.9007},
    {-2259.7864, -253.0544, 39.7875},
    {-2260.3638, -300.5378, 48.1640},
    {-2259.5361, -339.2552, 50.5190},
    {-2258.4385, -371.1333, 50.5193},
    {-2236.2454, -416.2657, 50.5155},
    {-2195.2356, -459.0606, 49.3517},
    {-2155.1711, -497.7458, 41.1217},
    {-2117.1301, -536.1792, 34.2394},
    {-2059.1565, -577.5410, 29.0998},
    {-1984.6453, -582.2720, 25.5633},
    {-1925.5862, -583.2345, 24.0926},
    {-1885.5591, -583.6432, 24.0940},
    {-1821.1207, -583.9514, 15.9855},
    {-1816.3672, -559.6774, 15.8619},
    {-1821.3180, -527.9517, 14.6263},
    {-1819.6934, -462.3056, 14.6151},
    {-1809.8923, -396.5690, 16.1884},
    {-1798.9331, -317.3351, 24.3122},
    {-1796.9186, -239.6917, 17.8804},
    {-1797.0546, -168.9667, 9.4126},
    {-1797.6467, -125.6053, 5.1712},
    {-1811.8171, -114.1203, 5.1504},
    {-1841.5179, -114.4944, 5.1483},
    {-1882.5660, -106.9792, 14.5634},
    {-1911.3077, -79.0253, 24.6949},
    {-1938.0209, -62.3110, 25.2069},
    {-1975.7996, -64.1764, 27.7167},
    {-2014.0769, -67.5033, 34.8182},
    {-2040.5736, -67.4500, 34.8250},
    {-2046.2883, -84.8129, 34.8103},
    {-2068.5259, -84.6942, 34.8201}
};

//#include "job/roulette.pwn"
#include "job/cocaine.pwn"
#include "job/weed.pwn"
//#include "job/oil.pwn"
//#include "job/lemon.pwn"
#include "job/fishing.pwn"
#include "job/shell.pwn"
#include "job/cow.pwn"
#include "job/chicken.pwn"
#include "job/orange.pwn"
#include "job/mining.pwn"
#include "job/apple.pwn"
#include "job/lumberjack.pwn"

#include "system/GPS.pwn"
//#include "system/sampvoice.pwn"

main()
{
}

public OnGameModeInit()
{
	mysql_log(ERROR | WARNING);
	new MySQLOpt: option_id = mysql_init_options();

	mysql_set_option(option_id, AUTO_RECONNECT, true);

	g_SQL = mysql_connect(MYSQL_HOST, MYSQL_USER, MYSQL_PASSWORD, MYSQL_DATABASE, option_id);
	if (g_SQL == MYSQL_INVALID_HANDLE || mysql_errno(g_SQL) != 0)
	{
		print("[MySQL]: Connection failed. Server is shutting down.");
		SendRconCommand("exit");
		return 1;
	}

	print("[MySQL]: Connection is successful.");

	mysql_set_charset("tis620");

	// ตลาดกลาง
	CowCash = randomEx(30,45), CKCash = randomEx(45,60), WoodCash = randomEx(35,50), MarketCash[0] = randomEx(5,20), MarketCash[1] = randomEx(15,30), MarketCash[2] = randomEx(25,40), MarketCash[3] = randomEx(35,50), MarketCash[4] = randomEx(20,35),
	MarketCash[5] = randomEx(25,40), MarketCash[6] = randomEx(25,35), MarketCash[7] = randomEx(35,45), MarketCash[8] = randomEx(45,55), MarketCash[9] = randomEx(75,100), MarketCash[10] = randomEx(15,30), MarketCash[11] = randomEx(20,30), MarketCash[12] = randomEx(30,40),
    MarketCash[13] = randomEx(40,50), MarketCash[14] = randomEx(60,80);

    Server_Load();
	mysql_tquery(g_SQL, "SELECT * FROM `factions`", "Faction_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `arrestpoints`", "Arrest_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `gps`", "GPS_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `atm`", "ATM_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `shops`", "Shop_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `pumps`", "Pump_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `garages`", "Garage_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `entrances`", "Entrance_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `vehicles` WHERE carOwnerID = 0", "Vehicle_Load", "");
	mysql_tquery(g_SQL, "SELECT * FROM `houses`", "House_Load", "");

    redzone = GangZoneCreate(1861.5453, -1451.8480, 1977.6833, -1350.6000);

	CreateDynamic3DTextLabel(""EMBED_YELLOW"ร้านขายอุปกรณ์กีฬา"EMBED_WHITE"\n/buyitem เพื่อดูรายชื่อเครื่องแต่งกายที่มีขาย", COLOR_WHITE, 1126.3021,-1370.0323,13.9844, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);
	CreateDynamic3DTextLabel(""EMBED_YELLOW"ร้านขายของแต่งตัว"EMBED_WHITE"\n/buyitem เพื่อดูรายชื่อเครื่องแต่งกายที่มีขาย", COLOR_WHITE, 1119.1003,-1370.0322,13.9844, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

    CreateDynamicPickup(1314, 23, 1099.5319,-1507.1245,15.7969, -1);
    CreateDynamic3DTextLabel("{15C903}[{FBE90A}คราฟชุดแฟชั่น{15C903}]\n{FFFFFF}กด 'N' เพื่อเลือก Craft ชุด", COLOR_LIGHTRED, 1099.5319,-1507.1245,15.7969, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

	//

    CreateDynamicPickup(1239, 23, 1404.0895,-1300.1901,13.5456, -1);
    CreateDynamic3DTextLabel("{FFFFFF}[{0AFB36}พ่อค้าอาวุธ{FFFFFF}]\n{FFFFFF}กด 'N' เพื่อเลือกอาวุธ", COLOR_LIGHTRED, 1404.0895,-1300.1901,13.5456, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

    CreateDynamicPickup(2060, 23, 1424.0990,-1319.2922,13.5547, -1);
    CreateDynamic3DTextLabel("{FFFFFF}[{0AFB36}พ่อค้าอาวุธ{FFFFFF}]\n{FFFFFF}กด 'N' เพื่อวิ่งดินปืน", COLOR_LIGHTRED, 1424.0990,-1319.2922,13.5547, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

	CreateDynamicActor(27, -85.5289,-22.5072,3.1172,338.0695, -1, -1);
	CreateDynamic3DTextLabel("{FFFFFF}[{0AFB36}พ่อค้าอาวุธ{FFFFFF}]\n{FFFFFF}จุดส่งดินปืน", COLOR_GREEN, -85.5289,-22.5072,3.1172+1.0, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	//

    CreateDynamicPickup(1314, 23, 1133.4094,-1370.0533,13.9844, -1);
    CreateDynamic3DTextLabel("{0477BD}[{2FAEFB}Craft ของสำหรับ VIP{0477BD}]\n{FFFFFF}กด 'N' เพื่อเลือก Craft ของ", COLOR_LIGHTRED,1133.4094,-1370.0533,13.9844, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

    //CreateDynamicPickup(1314, 23, 1126.2247,-1370.0314,13.9844, -1);
    //CreateDynamic3DTextLabel("{901805}[{FC4224}BBGUN{901805}]\n{FFFFFF}กด 'N' เพื่อเข้าสนาม!", COLOR_LIGHTRED,1126.2247,-1370.0314,13.9844, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

    CreateDynamicPickup(1314, 23, 1098.5930,-1473.5618,15.7969, -1);
    CreateDynamic3DTextLabel("{FFFFFF}[{FD411B}เรียนหนังสือ{FFFFFF}]\n{FFFFFF}กด 'N' เพื่อดูรายละเอียด", COLOR_LIGHTRED,1098.5930,-1473.5618,15.7969, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

	//

    CreateDynamicPickup(1239, 23, 2532.1333,-1281.7831,2048.2891, -1);
    CreateDynamic3DTextLabel("{0477BD}[{2FAEFB}ยกของภายในคุก{0477BD}]\n{FFFFFF}กด 'N' เพื่อหยิบกล่อง", COLOR_LIGHTRED,2532.1333,-1281.7831,2048.2891, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

    CreateDynamicPickup(1239, 23, 2531.8186,-1305.7249,2048.2891, -1);
    CreateDynamic3DTextLabel("{0477BD}[{2FAEFB}ส่งของ{0477BD}]\n{FFFFFF}กด 'N' เพื่อส่งของ", COLOR_LIGHTRED,2531.8186,-1305.7249,2048.2891, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

    CreateDynamicPickup(1239, 23, 2570.1372,-1293.9241,2044.1250, -1);
    CreateDynamic3DTextLabel("{0477BD}[{2FAEFB}จุดขายตะปู{0477BD}]\n{FFFFFF}กด 'N' เพื่อขายตะปู", COLOR_LIGHTRED,2570.1372,-1293.9241,2044.1250, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

	//
	
    CreateDynamicPickup(1239, 23, 402.4451,145.5249,1008.3578, -1);
    CreateDynamic3DTextLabel("{901805}[{FC4224}นอนเตียงพยาบาล{901805}]\n{FFFFFF}กด 'N' เพื่อนอนเตียงพยาบาล", COLOR_LIGHTRED,402.4451,145.5249,1008.3578, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

    CreateDynamicPickup(1239, 23, 402.1068,153.1273,1008.3578, -1);
    CreateDynamic3DTextLabel("{901805}[{FC4224}นอนเตียงพยาบาล{901805}]\n{FFFFFF}กด 'N' เพื่อนอนเตียงพยาบาล", COLOR_LIGHTRED,402.1068,153.1273,1008.3578, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

    CreateDynamicPickup(1239, 23, 414.4565,132.7102,1008.3651, -1);
    CreateDynamic3DTextLabel("{901805}[{FC4224}นอนเตียงพยาบาล{901805}]\n{FFFFFF}กด 'N' เพื่อนอนเตียงพยาบาล", COLOR_LIGHTRED,414.4565,132.7102,1008.3651, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

	//
	
	/*CreateDynamicObject(1978, 1152.7793,-1435.1268,15.7969, 0.0, 0.0, 178.8644, -1, -1);
	CreateDynamic3DTextLabel("{901805}[{FB200A}คาสิโน{901805}]\n{FFFFFF}กด 'Y' เพื่อเล่นบาคาร่า", COLOR_RED, 1152.7793,-1435.1268,15.7969+0.5, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);
	*/
	
	CreateDynamicObject(2640, 1152.7739,-1440.0431,15.7969-0.3, 0.0, 0.0, 270.2673, -1, -1);
	CreateDynamic3DTextLabel("{901805}[{FB200A}คาสิโน{901805}]\n{FFFFFF}กด 'N' เพื่อเล่นสล็อต", COLOR_RED, 1152.7739,-1440.0431,15.7969+0.5, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	//

    CreateDynamicPickup(1239, 23, 1114.9221,-1464.1208,15.7969, -1);
	CreateDynamic3DTextLabel("{901805}[{FC4224}ขายผัก{901805}]\n{FFFFFF}กด 'N' เพื่อขายผัก", COLOR_RED, 1114.9221,-1464.1208,15.7969, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicObject(870, 2281.2690,-683.3782,131.3686 - 0.6, 0.0, 0.0, 178.8644, -1, -1);
	CreateDynamic3DTextLabel("{901805}[{FC4224}เก็บผัก{901805}]\n{FFFFFF}กด 'N' เพื่อเก็บผัก", COLOR_RED, 2281.2690,-683.3782,131.3686+0.5, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicObject(870, 2282.4180,-691.8729,131.1454 - 0.6, 0.0, 0.0, 178.8644, -1, -1);
	CreateDynamic3DTextLabel("{901805}[{FC4224}เก็บผัก{901805}]\n{FFFFFF}กด 'N' เพื่อเก็บผัก", COLOR_RED, 2282.4180,-691.8729,131.1454+0.5, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicObject(870, 2283.5369,-703.7593,130.8552 - 0.6, 0.0, 0.0, 178.8644, -1, -1);
	CreateDynamic3DTextLabel("{901805}[{FC4224}เก็บผัก{901805}]\n{FFFFFF}กด 'N' เพื่อเก็บผัก", COLOR_RED, 2283.5369,-703.7593,130.8552+0.5, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	//

	CreateDynamicObject(1685, 2370.8875,-2543.9453,3.0000 - 0.4, 0.0, 0.0, 178.8644, -1, -1);
	CreateDynamic3DTextLabel("{535654}[จกปูน]\n{FFFFFF}กด 'N' เพื่อจกปูน", COLOR_RED, 2370.8875,-2543.9453,3.0000+1.2, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicObject(1685, 1105.7651,-2047.8694,69.0078 - 0.4, 0.0, 0.0, 178.8644, -1, -1);
	CreateDynamic3DTextLabel("{535654}[จกปูน]\n{FFFFFF}กด 'N' เพื่อจกปูน", COLOR_RED, 1105.7651,-2047.8694,69.0078+1.2, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

    CreateDynamicPickup(1239, 23, 313.7128,-133.5870,999.6016, -1);
    CreateDynamic3DTextLabel("{07B4B4}[{0FF5F5}คราฟอาวุธ{07B4B4}]\n{FFFFFF}กด 'N' เพื่อสร้างอาวุธ", COLOR_LIGHTRED,313.7128,-133.5870,999.6016, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

    CreateDynamicPickup(1239, 23, 376.7773,-113.7041,1001.4922, -1);
    CreateDynamic3DTextLabel("{FA9C0C}[{FADD0C}ทำอาหาร{FA9C0C}]\n{FFFFFF}กด 'N' เพื่อเลือกทำอาหาร", COLOR_LIGHTRED,376.7773,-113.7041,1001.4922, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

    CreateDynamicPickup(1239, 23, 1102.4517,-1457.9800,15.7969, -1);
    CreateDynamic3DTextLabel("{BB0B03}[{F8AC09}การคราฟของ{BB0B03}]\n{FFFFFF}กด 'N' เพื่อเลือกคราฟของ", COLOR_LIGHTRED,1102.4517,-1457.9800,15.7969, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

	// --> ซ่อมรถ
    CreateDynamicPickup(1239, 23, 1595.7762,-2166.4175,13.6591, -1);
    CreateDynamic3DTextLabel("{FFFFFF}[{02A007}ซ่อมรถ{FFFFFF}]\n{FFFFFF}กด 'Y' เพื่อซ่อมรถ\n(ต้องนั่งอยู่บนรถเท่านั้น)", COLOR_LIGHTRED, 1595.7762,-2166.4175,13.6591, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 40.0);

	CreateDynamicPickup(1239, 23, 33.4841, -2650.1504, 40.7285);
	CreateDynamic3DTextLabel("{535654}[ขายปูน]\n{FFFFFF}กด 'N' เพื่อขายปูน", COLOR_GREEN, 33.4841, -2650.1504, 40.7285, 30.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	/////////////////////////////////////
	CreateDynamicPickup(1239, 23, 1133.4116,-1438.7460,15.7969);
	CreateDynamic3DTextLabel("ร้านค้า:{FFFFFF} ปลาทะเล\nกดปุ่ม {FFFF00}N{FFFFFF}\nในการขายปลา", COLOR_GREEN, 1133.4116,-1438.7460,15.7969, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicPickup(1239, 23, 541.6196, -1292.8750, 17.2422);
	CreateDynamic3DTextLabel("ร้านขายรถยนต์:{FFFFFF} /buycar\nในการเลือกซื้อรถยนต์", COLOR_GREEN, 541.6196, -1292.8750, 17.2422, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicPickup(1581, 23, -2033.0439, -117.4885, 1035.1719);
	CreateDynamic3DTextLabel("กรมขนส่ง:{FFFFFF} /drivingtest\nในการสอบใบขับขี่", COLOR_GREEN, -2033.0439, -117.4885, 1035.1719, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	//CreateDynamicPickup(1550, 23, 2316.6187, -7.3258, 26.7422);
	//CreateDynamic3DTextLabel("ธนาคาร:{FFFFFF} /robbank\n ปล้นธนาคาร", COLOR_GREEN, 2316.6187, -7.3258, 26.7422, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicPickup(1581, 23, 1682.7462, -2331.0186, 13.5469);
	CreateDynamic3DTextLabel("--ยินดีร้อนรับ--{FFFFFF} \nเข้าสู่ประเทศ\n {FF0000}George {0080C0}Role{00FFFF}Play\n {FFFFFF}เชืฟเวอร์แนว {00FF00}FiveM{FFFFFF} ทำงาน \n /Help , /GPS ", COLOR_GREEN, 1682.7462, -2331.0186, 13.5469, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicPickup(1314, 23, 1664.0874, -2313.3625, 13.5454);
	CreateDynamic3DTextLabel("รถเด็กใหม่:{FFFFFF} รีรถทุก 15/20 นาที\n กรุณาอย่า DB ผู้เล่นอื่น", COLOR_GREEN, 1664.0874, -2313.3625, 13.5454, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicPickup(1240, 23, 1187.5989, -1323.8273, 13.5591);
	CreateDynamic3DTextLabel("--เขตสำคัญ--\n {FF0000}หน้าโรงพยาบาล \n{FFFFFF}ติดต่อ {00FF00}หมอ{FFFFFF} \nพิม /call 911 > หมอ > เรียก", COLOR_GREEN, 1187.5989, -1323.8273, 13.5591, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicPickup(1277, 23, 1540.5537, -1672.8007, 13.5508);
	CreateDynamic3DTextLabel("--เขตสำคัญ--\n {0000FF}สถานีตํารวจ \n{FFFFFF}ติดต่อ {00FF00}ตำรวจ{FFFFFF} \nพิม /call 911 > ตำรวจ > เรียก", COLOR_GREEN, 1540.5537, -1672.8007, 13.5508, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicPickup(1272, 23, 557.6133, -1258.3878, 17.2422);
	CreateDynamic3DTextLabel("--เขตสำคัญ--\n {808080}ร้านขายรถ \n{FFFFFF}คำสั่ง {00FF00}พิม{FFFFFF} \n /คำสั่งรถ ", COLOR_GREEN, 557.6133, -1258.3878, 17.2422, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicPickup(1314, 23, 554.4804 ,-1283.2258, 17.2482);
	CreateDynamic3DTextLabel("{FF0000}!! คำเตื่อน !! \n{FFFFFF}ทุกครั้งที่ {00FF00}/เรียกรถ{FFFFFF} \nกรุณา /เก็บรถ ด้วย \n{FF0000}รถหายรถพังแอดมินไม่รับผิดชอบ", COLOR_GREEN, 554.4804, -1283.2258, 17.2482, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

	CreateDynamicPickup(1314, 23, 1129.4006, -1415.8091, 13.6295);
	CreateDynamic3DTextLabel("!! ตลาดกลางเมือง !! \n{FFFFFF}ยินดีต้อนรับ \n{FF0000}พบบัค ติดต่อแอดมิน", COLOR_GREEN, 1129.4006, -1415.8091, 13.6295, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);

/////////////////////////////////////

	// ค่าอาหาร

    TD_uiStatsNew[0] = TextDrawCreate(431.000000, 6.000000, "LV");
    TextDrawFont(TD_uiStatsNew[0], 2);
    TextDrawLetterSize(TD_uiStatsNew[0], 0.212500, 1.250000);
    TextDrawTextSize(TD_uiStatsNew[0], 400.000000, 13.000000);
    TextDrawSetOutline(TD_uiStatsNew[0], 0);
    TextDrawSetShadow(TD_uiStatsNew[0], 0);
    TextDrawAlignment(TD_uiStatsNew[0], 2);
    TextDrawColor(TD_uiStatsNew[0], -1);
    TextDrawBackgroundColor(TD_uiStatsNew[0], 255);
    TextDrawBoxColor(TD_uiStatsNew[0], 2094792789);
    TextDrawUseBox(TD_uiStatsNew[0], 1);
    TextDrawSetProportional(TD_uiStatsNew[0], 1);
    TextDrawSetSelectable(TD_uiStatsNew[0], 0);

    TD_uiStatsNew[1] = TextDrawCreate(395.000000, 6.000000, "ID");
    TextDrawFont(TD_uiStatsNew[1], 2);
    TextDrawLetterSize(TD_uiStatsNew[1], 0.245833, 1.250000);
    TextDrawTextSize(TD_uiStatsNew[1], 400.000000, 8.500000);
    TextDrawSetOutline(TD_uiStatsNew[1], 0);
    TextDrawSetShadow(TD_uiStatsNew[1], 0);
    TextDrawAlignment(TD_uiStatsNew[1], 2);
    TextDrawColor(TD_uiStatsNew[1], -1);
    TextDrawBackgroundColor(TD_uiStatsNew[1], 255);
    TextDrawBoxColor(TD_uiStatsNew[1], 2094792826);
    TextDrawUseBox(TD_uiStatsNew[1], 1);
    TextDrawSetProportional(TD_uiStatsNew[1], 1);
    TextDrawSetSelectable(TD_uiStatsNew[1], 0);

    TD_uiStatsNew[2] = TextDrawCreate(467.000000, 6.000000, "EXP");
    TextDrawFont(TD_uiStatsNew[2], 2);
    TextDrawLetterSize(TD_uiStatsNew[2], 0.162500, 1.250000);
    TextDrawTextSize(TD_uiStatsNew[2], 400.000000, 15.000000);
    TextDrawSetOutline(TD_uiStatsNew[2], 0);
    TextDrawSetShadow(TD_uiStatsNew[2], 0);
    TextDrawAlignment(TD_uiStatsNew[2], 2);
    TextDrawColor(TD_uiStatsNew[2], -1);
    TextDrawBackgroundColor(TD_uiStatsNew[2], 255);
    TextDrawBoxColor(TD_uiStatsNew[2], 2094792789);
    TextDrawUseBox(TD_uiStatsNew[2], 1);
    TextDrawSetProportional(TD_uiStatsNew[2], 1);
    TextDrawSetSelectable(TD_uiStatsNew[2], 0);

    TD_uiStatsNew[3] = TextDrawCreate(502.000000, 6.000000, "_");
    TextDrawFont(TD_uiStatsNew[3], 1);
    TextDrawLetterSize(TD_uiStatsNew[3], 0.600000, 1.249998);
    TextDrawTextSize(TD_uiStatsNew[3], 293.500000, 50.500000);
    TextDrawSetOutline(TD_uiStatsNew[3], 1);
    TextDrawSetShadow(TD_uiStatsNew[3], 0);
    TextDrawAlignment(TD_uiStatsNew[3], 2);
    TextDrawColor(TD_uiStatsNew[3], -1);
    TextDrawBackgroundColor(TD_uiStatsNew[3], 255);
    TextDrawBoxColor(TD_uiStatsNew[3], 70);
    TextDrawUseBox(TD_uiStatsNew[3], 1);
    TextDrawSetProportional(TD_uiStatsNew[3], 1);
    TextDrawSetSelectable(TD_uiStatsNew[3], 0);

    TD_uiStatsNew[4] = TextDrawCreate(370.000000, 6.000000, "_");
    TextDrawFont(TD_uiStatsNew[4], 1);
    TextDrawLetterSize(TD_uiStatsNew[4], 0.633333, 1.299998);
    TextDrawTextSize(TD_uiStatsNew[4], 298.500000, 21.500000);
    TextDrawSetOutline(TD_uiStatsNew[4], 1);
    TextDrawSetShadow(TD_uiStatsNew[4], 0);
    TextDrawAlignment(TD_uiStatsNew[4], 2);
    TextDrawColor(TD_uiStatsNew[4], -1);
    TextDrawBackgroundColor(TD_uiStatsNew[4], 255);
    TextDrawBoxColor(TD_uiStatsNew[4], 1296911727);
    TextDrawUseBox(TD_uiStatsNew[4], 1);
    TextDrawSetProportional(TD_uiStatsNew[4], 1);
    TextDrawSetSelectable(TD_uiStatsNew[4], 0);

    TD_uiStatsNew[5] = TextDrawCreate(360.000000, 6.000000, "HUD:radar_datedrink");
    TextDrawFont(TD_uiStatsNew[5], 4);
    TextDrawLetterSize(TD_uiStatsNew[5], 0.600000, 2.000000);
    TextDrawTextSize(TD_uiStatsNew[5], 9.000000, 11.500000);
    TextDrawSetOutline(TD_uiStatsNew[5], 1);
    TextDrawSetShadow(TD_uiStatsNew[5], 0);
    TextDrawAlignment(TD_uiStatsNew[5], 1);
    TextDrawColor(TD_uiStatsNew[5], -1);
    TextDrawBackgroundColor(TD_uiStatsNew[5], 255);
    TextDrawBoxColor(TD_uiStatsNew[5], 50);
    TextDrawUseBox(TD_uiStatsNew[5], 1);
    TextDrawSetProportional(TD_uiStatsNew[5], 1);
    TextDrawSetSelectable(TD_uiStatsNew[5], 0);

    TD_uiStatsNew[6] = TextDrawCreate(342.000000, 6.000000, "_");
    TextDrawFont(TD_uiStatsNew[6], 1);
    TextDrawLetterSize(TD_uiStatsNew[6], 0.633333, 1.299998);
    TextDrawTextSize(TD_uiStatsNew[6], 298.500000, 21.500000);
    TextDrawSetOutline(TD_uiStatsNew[6], 1);
    TextDrawSetShadow(TD_uiStatsNew[6], 0);
    TextDrawAlignment(TD_uiStatsNew[6], 2);
    TextDrawColor(TD_uiStatsNew[6], -1);
    TextDrawBackgroundColor(TD_uiStatsNew[6], 255);
    TextDrawBoxColor(TD_uiStatsNew[6], 1296911727);
    TextDrawUseBox(TD_uiStatsNew[6], 1);
    TextDrawSetProportional(TD_uiStatsNew[6], 1);
    TextDrawSetSelectable(TD_uiStatsNew[6], 0);

    TD_uiStatsNew[7] = TextDrawCreate(332.000000, 6.000000, "HUD:radar_burgershot");
    TextDrawFont(TD_uiStatsNew[7], 4);
    TextDrawLetterSize(TD_uiStatsNew[7], 0.600000, 2.000000);
    TextDrawTextSize(TD_uiStatsNew[7], 9.000000, 11.500000);
    TextDrawSetOutline(TD_uiStatsNew[7], 1);
    TextDrawSetShadow(TD_uiStatsNew[7], 0);
    TextDrawAlignment(TD_uiStatsNew[7], 1);
    TextDrawColor(TD_uiStatsNew[7], -1);
    TextDrawBackgroundColor(TD_uiStatsNew[7], 255);
    TextDrawBoxColor(TD_uiStatsNew[7], 50);
    TextDrawUseBox(TD_uiStatsNew[7], 1);
    TextDrawSetProportional(TD_uiStatsNew[7], 1);
    TextDrawSetSelectable(TD_uiStatsNew[7], 0);

	logoServer[0] = TextDrawCreate(582.000000, 412.000000, "Alive");
	TextDrawFont(logoServer[0], 3);
	TextDrawLetterSize(logoServer[0], 0.420833, 1.900000);
	TextDrawTextSize(logoServer[0], 400.000000, 17.000000);
	TextDrawSetOutline(logoServer[0], 1);
	TextDrawSetShadow(logoServer[0], 0);
	TextDrawAlignment(logoServer[0], 1);
	TextDrawColor(logoServer[0], 200732927);
	TextDrawBackgroundColor(logoServer[0], 35839);
	TextDrawBoxColor(logoServer[0], 50);
	TextDrawUseBox(logoServer[0], 0);
	TextDrawSetProportional(logoServer[0], 1);
	TextDrawSetSelectable(logoServer[0], 0);

	logoServer[1] = TextDrawCreate(571.000000, 428.000000, "ROLEPLAY");
	TextDrawFont(logoServer[1], 3);
	TextDrawLetterSize(logoServer[1], 0.420833, 1.900000);
	TextDrawTextSize(logoServer[1], 400.000000, 17.000000);
	TextDrawSetOutline(logoServer[1], 1);
	TextDrawSetShadow(logoServer[1], 0);
	TextDrawAlignment(logoServer[1], 1);
	TextDrawColor(logoServer[1], -1);
	TextDrawBackgroundColor(logoServer[1], 35839);
	TextDrawBoxColor(logoServer[1], 50);
	TextDrawUseBox(logoServer[1], 0);
	TextDrawSetProportional(logoServer[1], 1);
	TextDrawSetSelectable(logoServer[1], 0);

    /*ui_logoWeedDay[0] = TextDrawCreate(5.537490, 399.417968, "");
    TextDrawLetterSize(ui_logoWeedDay[0], 0.412589, 2.234786);
    TextDrawAlignment(ui_logoWeedDay[0], 1);
    TextDrawColor(ui_logoWeedDay[0], -1);
    TextDrawSetShadow(ui_logoWeedDay[0], 0);
    TextDrawSetOutline(ui_logoWeedDay[0], 2);
    TextDrawBackgroundColor(ui_logoWeedDay[0], 8388863);
    TextDrawFont(ui_logoWeedDay[0], 3);
    TextDrawSetProportional(ui_logoWeedDay[0], 1);

    ui_logoWeedDay[1] = TextDrawCreate(11.851671, 415.184936, "Alive");
    TextDrawLetterSize(ui_logoWeedDay[1], 0.436522, 2.035702);
    TextDrawTextSize(ui_logoWeedDay[1], 208.000000, 0.000000);
    TextDrawAlignment(ui_logoWeedDay[1], 1);
    TextDrawColor(ui_logoWeedDay[1], 16711935);
    TextDrawSetShadow(ui_logoWeedDay[1], 0);
    TextDrawSetOutline(ui_logoWeedDay[1], 1);
    TextDrawBackgroundColor(ui_logoWeedDay[1], -2147450625);
    TextDrawFont(ui_logoWeedDay[1], 3);
    TextDrawSetProportional(ui_logoWeedDay[1], 1);

    ui_logoWeedDay[2] = TextDrawCreate(5.762197, 433.774383, "Roleplay");
    TextDrawLetterSize(ui_logoWeedDay[2], 0.145687, 1.078565);
    TextDrawAlignment(ui_logoWeedDay[2], 1);
    TextDrawColor(ui_logoWeedDay[2], -1);
    TextDrawSetShadow(ui_logoWeedDay[2], 1);
    TextDrawBackgroundColor(ui_logoWeedDay[2], 255);
    TextDrawFont(ui_logoWeedDay[2], 2);
    TextDrawSetProportional(ui_logoWeedDay[2], 1);*/

	// สร้างอาวุธ
	WeaponCraft[0] = TextDrawCreate(325.000000, 134.000000, "_");
	TextDrawFont(WeaponCraft[0], 1);
	TextDrawLetterSize(WeaponCraft[0], 0.600000, 22.100006);
	TextDrawTextSize(WeaponCraft[0], 298.500000, 385.000000);
	TextDrawSetOutline(WeaponCraft[0], 1);
	TextDrawSetShadow(WeaponCraft[0], 0);
	TextDrawAlignment(WeaponCraft[0], 2);
	TextDrawColor(WeaponCraft[0], -1);
	TextDrawBackgroundColor(WeaponCraft[0], 255);
	TextDrawBoxColor(WeaponCraft[0], 255);
	TextDrawUseBox(WeaponCraft[0], 1);
	TextDrawSetProportional(WeaponCraft[0], 1);
	TextDrawSetSelectable(WeaponCraft[0], 0);

	WeaponCraft[1] = TextDrawCreate(325.000000, 134.000000, "_");
	TextDrawFont(WeaponCraft[1], 1);
	TextDrawLetterSize(WeaponCraft[1], 0.600000, 1.600005);
	TextDrawTextSize(WeaponCraft[1], 298.500000, 385.000000);
	TextDrawSetOutline(WeaponCraft[1], 1);
	TextDrawSetShadow(WeaponCraft[1], 0);
	TextDrawAlignment(WeaponCraft[1], 2);
	TextDrawColor(WeaponCraft[1], -1);
	TextDrawBackgroundColor(WeaponCraft[1], 255);
	TextDrawBoxColor(WeaponCraft[1], 16777215);
	TextDrawUseBox(WeaponCraft[1], 1);
	TextDrawSetProportional(WeaponCraft[1], 1);
	TextDrawSetSelectable(WeaponCraft[1], 0);

	WeaponCraft[2] = TextDrawCreate(270.000000, 134.000000, "Alive Weapon Craft");
	TextDrawFont(WeaponCraft[2], 2);
	TextDrawLetterSize(WeaponCraft[2], 0.266665, 1.350000);
	TextDrawTextSize(WeaponCraft[2], 470.000000, 17.000000);
	TextDrawSetOutline(WeaponCraft[2], 1);
	TextDrawSetShadow(WeaponCraft[2], 0);
	TextDrawAlignment(WeaponCraft[2], 1);
	TextDrawColor(WeaponCraft[2], -1);
	TextDrawBackgroundColor(WeaponCraft[2], 255);
	TextDrawBoxColor(WeaponCraft[2], 50);
	TextDrawUseBox(WeaponCraft[2], 0);
	TextDrawSetProportional(WeaponCraft[2], 1);
	TextDrawSetSelectable(WeaponCraft[2], 0);

	WeaponCraft[3] = TextDrawCreate(325.000000, 319.000000, "_");
	TextDrawFont(WeaponCraft[3], 1);
	TextDrawLetterSize(WeaponCraft[3], 0.600000, 1.600005);
	TextDrawTextSize(WeaponCraft[3], 298.500000, 385.000000);
	TextDrawSetOutline(WeaponCraft[3], 1);
	TextDrawSetShadow(WeaponCraft[3], 0);
	TextDrawAlignment(WeaponCraft[3], 2);
	TextDrawColor(WeaponCraft[3], -1);
	TextDrawBackgroundColor(WeaponCraft[3], 255);
	TextDrawBoxColor(WeaponCraft[3], 16777215);
	TextDrawUseBox(WeaponCraft[3], 1);
	TextDrawSetProportional(WeaponCraft[3], 1);
	TextDrawSetSelectable(WeaponCraft[3], 0);

	WeaponCraft[4] = TextDrawCreate(509.000000, 124.000000, "X");
	TextDrawFont(WeaponCraft[4], 1);
	TextDrawLetterSize(WeaponCraft[4], 0.620832, 1.950000);
	TextDrawTextSize(WeaponCraft[4], 533.000000, 17.000000);
	TextDrawSetOutline(WeaponCraft[4], 1);
	TextDrawSetShadow(WeaponCraft[4], 0);
	TextDrawAlignment(WeaponCraft[4], 1);
	TextDrawColor(WeaponCraft[4], -1378294017);
	TextDrawBackgroundColor(WeaponCraft[4], 255);
	TextDrawBoxColor(WeaponCraft[4], 50);
	TextDrawUseBox(WeaponCraft[4], 0);
	TextDrawSetProportional(WeaponCraft[4], 1);
	TextDrawSetSelectable(WeaponCraft[4], 1);

	WeaponCraft[5] = TextDrawCreate(168.000000, 160.000000, "_");
	TextDrawFont(WeaponCraft[5], 1);
	TextDrawLetterSize(WeaponCraft[5], 0.600000, 4.250000);
	TextDrawTextSize(WeaponCraft[5], 298.500000, 50.000000);
	TextDrawSetOutline(WeaponCraft[5], 1);
	TextDrawSetShadow(WeaponCraft[5], 0);
	TextDrawAlignment(WeaponCraft[5], 2);
	TextDrawColor(WeaponCraft[5], -1);
	TextDrawBackgroundColor(WeaponCraft[5], 255);
	TextDrawBoxColor(WeaponCraft[5], -741092473);
	TextDrawUseBox(WeaponCraft[5], 1);
	TextDrawSetProportional(WeaponCraft[5], 1);
	TextDrawSetSelectable(WeaponCraft[5], 1);

	WeaponCraft[6] = TextDrawCreate(132.000000, 164.000000, "TextDraw");
	TextDrawFont(WeaponCraft[6], 5);
	TextDrawLetterSize(WeaponCraft[6], 0.600000, 2.000000);
	TextDrawTextSize(WeaponCraft[6], 58.000000, 41.000000);
	TextDrawSetOutline(WeaponCraft[6], 1);
	TextDrawSetShadow(WeaponCraft[6], 0);
	TextDrawAlignment(WeaponCraft[6], 1);
	TextDrawColor(WeaponCraft[6], -1);
	TextDrawBackgroundColor(WeaponCraft[6], 0);
	TextDrawBoxColor(WeaponCraft[6], 50);
	TextDrawUseBox(WeaponCraft[6], 1);
	TextDrawSetProportional(WeaponCraft[6], 1);
	TextDrawSetSelectable(WeaponCraft[6], 0);
	TextDrawSetPreviewModel(WeaponCraft[6], 326);
	TextDrawSetPreviewRot(WeaponCraft[6], -150.000000, -186.000000, -53.000000, 1.000000);
	TextDrawSetPreviewVehCol(WeaponCraft[6], 1, 1);

	WeaponCraft[7] = TextDrawCreate(159.000000, 201.000000, "Cane");
	TextDrawFont(WeaponCraft[7], 2);
	TextDrawLetterSize(WeaponCraft[7], 0.183332, 0.949999);
	TextDrawTextSize(WeaponCraft[7], 183.000000, 17.000000);
	TextDrawSetOutline(WeaponCraft[7], 1);
	TextDrawSetShadow(WeaponCraft[7], 0);
	TextDrawAlignment(WeaponCraft[7], 1);
	TextDrawColor(WeaponCraft[7], -1);
	TextDrawBackgroundColor(WeaponCraft[7], 255);
	TextDrawBoxColor(WeaponCraft[7], -16777166);
	TextDrawUseBox(WeaponCraft[7], 0);
	TextDrawSetProportional(WeaponCraft[7], 1);
	TextDrawSetSelectable(WeaponCraft[7], 1);

	WeaponCraft[8] = TextDrawCreate(231.000000, 160.000000, "_");
	TextDrawFont(WeaponCraft[8], 1);
	TextDrawLetterSize(WeaponCraft[8], 0.600000, 4.250000);
	TextDrawTextSize(WeaponCraft[8], 298.500000, 50.000000);
	TextDrawSetOutline(WeaponCraft[8], 1);
	TextDrawSetShadow(WeaponCraft[8], 0);
	TextDrawAlignment(WeaponCraft[8], 2);
	TextDrawColor(WeaponCraft[8], -1);
	TextDrawBackgroundColor(WeaponCraft[8], 255);
	TextDrawBoxColor(WeaponCraft[8], -741092473);
	TextDrawUseBox(WeaponCraft[8], 1);
	TextDrawSetProportional(WeaponCraft[8], 1);
	TextDrawSetSelectable(WeaponCraft[8], 1);

	WeaponCraft[9] = TextDrawCreate(185.000000, 164.000000, "TextDraw");
	TextDrawFont(WeaponCraft[9], 5);
	TextDrawLetterSize(WeaponCraft[9], 0.600000, 2.000000);
	TextDrawTextSize(WeaponCraft[9], 77.000000, 31.000000);
	TextDrawSetOutline(WeaponCraft[9], 1);
	TextDrawSetShadow(WeaponCraft[9], 0);
	TextDrawAlignment(WeaponCraft[9], 1);
	TextDrawColor(WeaponCraft[9], -1);
	TextDrawBackgroundColor(WeaponCraft[9], 0);
	TextDrawBoxColor(WeaponCraft[9], 50);
	TextDrawUseBox(WeaponCraft[9], 1);
	TextDrawSetProportional(WeaponCraft[9], 1);
	TextDrawSetSelectable(WeaponCraft[9], 0);
	TextDrawSetPreviewModel(WeaponCraft[9], 338);
	TextDrawSetPreviewRot(WeaponCraft[9], -135.000000, -185.000000, -16.000000, 1.000000);
	TextDrawSetPreviewVehCol(WeaponCraft[9], 1, 1);

	WeaponCraft[10] = TextDrawCreate(218.000000, 202.000000, "POOL CUE");
	TextDrawFont(WeaponCraft[10], 2);
	TextDrawLetterSize(WeaponCraft[10], 0.141665, 0.850000);
	TextDrawTextSize(WeaponCraft[10], 263.000000, 17.000000);
	TextDrawSetOutline(WeaponCraft[10], 1);
	TextDrawSetShadow(WeaponCraft[10], 0);
	TextDrawAlignment(WeaponCraft[10], 1);
	TextDrawColor(WeaponCraft[10], -1);
	TextDrawBackgroundColor(WeaponCraft[10], 255);
	TextDrawBoxColor(WeaponCraft[10], -16777166);
	TextDrawUseBox(WeaponCraft[10], 0);
	TextDrawSetProportional(WeaponCraft[10], 1);
	TextDrawSetSelectable(WeaponCraft[10], 1);

	WeaponCraft[11] = TextDrawCreate(295.000000, 160.000000, "_");
	TextDrawFont(WeaponCraft[11], 1);
	TextDrawLetterSize(WeaponCraft[11], 0.600000, 4.250000);
	TextDrawTextSize(WeaponCraft[11], 298.500000, 50.000000);
	TextDrawSetOutline(WeaponCraft[11], 1);
	TextDrawSetShadow(WeaponCraft[11], 0);
	TextDrawAlignment(WeaponCraft[11], 2);
	TextDrawColor(WeaponCraft[11], -1);
	TextDrawBackgroundColor(WeaponCraft[11], 255);
	TextDrawBoxColor(WeaponCraft[11], -741092473);
	TextDrawUseBox(WeaponCraft[11], 1);
	TextDrawSetProportional(WeaponCraft[11], 1);
	TextDrawSetSelectable(WeaponCraft[11], 1);

	WeaponCraft[12] = TextDrawCreate(249.000000, 164.000000, "TextDraw");
	TextDrawFont(WeaponCraft[12], 5);
	TextDrawLetterSize(WeaponCraft[12], 0.600000, 2.000000);
	TextDrawTextSize(WeaponCraft[12], 84.000000, 37.000000);
	TextDrawSetOutline(WeaponCraft[12], 1);
	TextDrawSetShadow(WeaponCraft[12], 0);
	TextDrawAlignment(WeaponCraft[12], 1);
	TextDrawColor(WeaponCraft[12], -1);
	TextDrawBackgroundColor(WeaponCraft[12], 0);
	TextDrawBoxColor(WeaponCraft[12], 50);
	TextDrawUseBox(WeaponCraft[12], 1);
	TextDrawSetProportional(WeaponCraft[12], 1);
	TextDrawSetSelectable(WeaponCraft[12], 0);
	TextDrawSetPreviewModel(WeaponCraft[12], 336);
	TextDrawSetPreviewRot(WeaponCraft[12], -135.000000, -185.000000, -16.000000, 1.000000);
	TextDrawSetPreviewVehCol(WeaponCraft[12], 1, 1);

	WeaponCraft[13] = TextDrawCreate(274.000000, 202.000000, "BASEBALL Bat");
	TextDrawFont(WeaponCraft[13], 2);
	TextDrawLetterSize(WeaponCraft[13], 0.141665, 0.850000);
	TextDrawTextSize(WeaponCraft[13], 333.000000, 17.000000);
	TextDrawSetOutline(WeaponCraft[13], 1);
	TextDrawSetShadow(WeaponCraft[13], 0);
	TextDrawAlignment(WeaponCraft[13], 1);
	TextDrawColor(WeaponCraft[13], -1);
	TextDrawBackgroundColor(WeaponCraft[13], 255);
	TextDrawBoxColor(WeaponCraft[13], -16777166);
	TextDrawUseBox(WeaponCraft[13], 0);
	TextDrawSetProportional(WeaponCraft[13], 1);
	TextDrawSetSelectable(WeaponCraft[13], 1);

	WeaponCraft[14] = TextDrawCreate(359.000000, 160.000000, "_");
	TextDrawFont(WeaponCraft[14], 1);
	TextDrawLetterSize(WeaponCraft[14], 0.600000, 4.250000);
	TextDrawTextSize(WeaponCraft[14], 298.500000, 50.000000);
	TextDrawSetOutline(WeaponCraft[14], 1);
	TextDrawSetShadow(WeaponCraft[14], 0);
	TextDrawAlignment(WeaponCraft[14], 2);
	TextDrawColor(WeaponCraft[14], -1);
	TextDrawBackgroundColor(WeaponCraft[14], 255);
	TextDrawBoxColor(WeaponCraft[14], -741092473);
	TextDrawUseBox(WeaponCraft[14], 1);
	TextDrawSetProportional(WeaponCraft[14], 1);
	TextDrawSetSelectable(WeaponCraft[14], 1);

	WeaponCraft[15] = TextDrawCreate(334.000000, 202.000000, "Brass Knuckles");
	TextDrawFont(WeaponCraft[15], 2);
	TextDrawLetterSize(WeaponCraft[15], 0.141665, 0.850000);
	TextDrawTextSize(WeaponCraft[15], 398.000000, 17.000000);
	TextDrawSetOutline(WeaponCraft[15], 1);
	TextDrawSetShadow(WeaponCraft[15], 0);
	TextDrawAlignment(WeaponCraft[15], 1);
	TextDrawColor(WeaponCraft[15], -1);
	TextDrawBackgroundColor(WeaponCraft[15], 255);
	TextDrawBoxColor(WeaponCraft[15], -16777166);
	TextDrawUseBox(WeaponCraft[15], 0);
	TextDrawSetProportional(WeaponCraft[15], 1);
	TextDrawSetSelectable(WeaponCraft[15], 1);

	WeaponCraft[16] = TextDrawCreate(303.000000, 156.000000, "TextDraw");
	TextDrawFont(WeaponCraft[16], 5);
	TextDrawLetterSize(WeaponCraft[16], 0.600000, 2.000000);
	TextDrawTextSize(WeaponCraft[16], 109.000000, 63.500000);
	TextDrawSetOutline(WeaponCraft[16], 1);
	TextDrawSetShadow(WeaponCraft[16], 0);
	TextDrawAlignment(WeaponCraft[16], 1);
	TextDrawColor(WeaponCraft[16], -1);
	TextDrawBackgroundColor(WeaponCraft[16], 0);
	TextDrawBoxColor(WeaponCraft[16], 50);
	TextDrawUseBox(WeaponCraft[16], 1);
	TextDrawSetProportional(WeaponCraft[16], 1);
	TextDrawSetSelectable(WeaponCraft[16], 0);
	TextDrawSetPreviewModel(WeaponCraft[16], 331);
	TextDrawSetPreviewRot(WeaponCraft[16], -103.000000, -255.000000, -57.000000, 1.000000);
	TextDrawSetPreviewVehCol(WeaponCraft[16], 1, 1);

	WeaponCraft[17] = TextDrawCreate(483.000000, 160.000000, "_");
	TextDrawFont(WeaponCraft[17], 1);
	TextDrawLetterSize(WeaponCraft[17], 0.600000, 4.250000);
	TextDrawTextSize(WeaponCraft[17], 298.500000, 50.000000);
	TextDrawSetOutline(WeaponCraft[17], 1);
	TextDrawSetShadow(WeaponCraft[17], 0);
	TextDrawAlignment(WeaponCraft[17], 2);
	TextDrawColor(WeaponCraft[17], -1);
	TextDrawBackgroundColor(WeaponCraft[17], 255);
	TextDrawBoxColor(WeaponCraft[17], -741092473);
	TextDrawUseBox(WeaponCraft[17], 1);
	TextDrawSetProportional(WeaponCraft[17], 1);
	TextDrawSetSelectable(WeaponCraft[17], 1);

	WeaponCraft[18] = TextDrawCreate(473.000000, 202.000000, "Katana");
	TextDrawFont(WeaponCraft[18], 2);
	TextDrawLetterSize(WeaponCraft[18], 0.141665, 0.850000);
	TextDrawTextSize(WeaponCraft[18], 499.000000, 17.000000);
	TextDrawSetOutline(WeaponCraft[18], 1);
	TextDrawSetShadow(WeaponCraft[18], 0);
	TextDrawAlignment(WeaponCraft[18], 1);
	TextDrawColor(WeaponCraft[18], -1);
	TextDrawBackgroundColor(WeaponCraft[18], 255);
	TextDrawBoxColor(WeaponCraft[18], -16777166);
	TextDrawUseBox(WeaponCraft[18], 0);
	TextDrawSetProportional(WeaponCraft[18], 1);
	TextDrawSetSelectable(WeaponCraft[18], 1);

	WeaponCraft[19] = TextDrawCreate(447.000000, 165.000000, "TextDraw");
	TextDrawFont(WeaponCraft[19], 5);
	TextDrawLetterSize(WeaponCraft[19], 0.600000, 2.000000);
	TextDrawTextSize(WeaponCraft[19], 78.000000, 36.000000);
	TextDrawSetOutline(WeaponCraft[19], 1);
	TextDrawSetShadow(WeaponCraft[19], 0);
	TextDrawAlignment(WeaponCraft[19], 1);
	TextDrawColor(WeaponCraft[19], -1);
	TextDrawBackgroundColor(WeaponCraft[19], 0);
	TextDrawBoxColor(WeaponCraft[19], 50);
	TextDrawUseBox(WeaponCraft[19], 1);
	TextDrawSetProportional(WeaponCraft[19], 1);
	TextDrawSetSelectable(WeaponCraft[19], 0);
	TextDrawSetPreviewModel(WeaponCraft[19], 339);
	TextDrawSetPreviewRot(WeaponCraft[19], -206.000000, -211.000000, 64.000000, 1.000000);
	TextDrawSetPreviewVehCol(WeaponCraft[19], 1, 1);

	WeaponCraft[20] = TextDrawCreate(421.000000, 160.000000, "_");
	TextDrawFont(WeaponCraft[20], 1);
	TextDrawLetterSize(WeaponCraft[20], 0.600000, 4.250000);
	TextDrawTextSize(WeaponCraft[20], 298.500000, 50.000000);
	TextDrawSetOutline(WeaponCraft[20], 1);
	TextDrawSetShadow(WeaponCraft[20], 0);
	TextDrawAlignment(WeaponCraft[20], 2);
	TextDrawColor(WeaponCraft[20], -1);
	TextDrawBackgroundColor(WeaponCraft[20], 255);
	TextDrawBoxColor(WeaponCraft[20], -741092473);
	TextDrawUseBox(WeaponCraft[20], 1);
	TextDrawSetProportional(WeaponCraft[20], 1);
	TextDrawSetSelectable(WeaponCraft[20], 1);

	WeaponCraft[21] = TextDrawCreate(408.000000, 202.000000, "Golf Club");
	TextDrawFont(WeaponCraft[21], 2);
	TextDrawLetterSize(WeaponCraft[21], 0.141665, 0.850000);
	TextDrawTextSize(WeaponCraft[21], 444.000000, 17.000000);
	TextDrawSetOutline(WeaponCraft[21], 1);
	TextDrawSetShadow(WeaponCraft[21], 0);
	TextDrawAlignment(WeaponCraft[21], 1);
	TextDrawColor(WeaponCraft[21], -1);
	TextDrawBackgroundColor(WeaponCraft[21], 255);
	TextDrawBoxColor(WeaponCraft[21], -16777166);
	TextDrawUseBox(WeaponCraft[21], 0);
	TextDrawSetProportional(WeaponCraft[21], 1);
	TextDrawSetSelectable(WeaponCraft[21], 1);

	WeaponCraft[22] = TextDrawCreate(388.000000, 167.000000, "TextDraw");
	TextDrawFont(WeaponCraft[22], 5);
	TextDrawLetterSize(WeaponCraft[22], 0.600000, 2.000000);
	TextDrawTextSize(WeaponCraft[22], 78.000000, 36.000000);
	TextDrawSetOutline(WeaponCraft[22], 1);
	TextDrawSetShadow(WeaponCraft[22], 0);
	TextDrawAlignment(WeaponCraft[22], 1);
	TextDrawColor(WeaponCraft[22], -1);
	TextDrawBackgroundColor(WeaponCraft[22], 0);
	TextDrawBoxColor(WeaponCraft[22], 50);
	TextDrawUseBox(WeaponCraft[22], 1);
	TextDrawSetProportional(WeaponCraft[22], 1);
	TextDrawSetSelectable(WeaponCraft[22], 0);
	TextDrawSetPreviewModel(WeaponCraft[22], 333);
	TextDrawSetPreviewRot(WeaponCraft[22], -161.000000, -211.000000, 63.000000, 1.000000);
	TextDrawSetPreviewVehCol(WeaponCraft[22], 1, 1);

	//
	
	ItemWPCraft[0] = TextDrawCreate(322.000000, 151.000000, "_");
	TextDrawFont(ItemWPCraft[0], 1);
	TextDrawLetterSize(ItemWPCraft[0], 0.600000, 20.300003);
	TextDrawTextSize(ItemWPCraft[0], 298.500000, 295.000000);
	TextDrawSetOutline(ItemWPCraft[0], 1);
	TextDrawSetShadow(ItemWPCraft[0], 0);
	TextDrawAlignment(ItemWPCraft[0], 2);
	TextDrawColor(ItemWPCraft[0], -1);
	TextDrawBackgroundColor(ItemWPCraft[0], 255);
	TextDrawBoxColor(ItemWPCraft[0], 255);
	TextDrawUseBox(ItemWPCraft[0], 1);
	TextDrawSetProportional(ItemWPCraft[0], 1);
	TextDrawSetSelectable(ItemWPCraft[0], 0);

	ItemWPCraft[1] = TextDrawCreate(322.000000, 263.000000, "_");
	TextDrawFont(ItemWPCraft[1], 1);
	TextDrawLetterSize(ItemWPCraft[1], 0.600000, 6.550008);
	TextDrawTextSize(ItemWPCraft[1], 298.500000, 272.000000);
	TextDrawSetOutline(ItemWPCraft[1], 1);
	TextDrawSetShadow(ItemWPCraft[1], 0);
	TextDrawAlignment(ItemWPCraft[1], 2);
	TextDrawColor(ItemWPCraft[1], -1);
	TextDrawBackgroundColor(ItemWPCraft[1], 255);
	TextDrawBoxColor(ItemWPCraft[1], 1296911871);
	TextDrawUseBox(ItemWPCraft[1], 1);
	TextDrawSetProportional(ItemWPCraft[1], 1);
	TextDrawSetSelectable(ItemWPCraft[1], 0);

	ItemWPCraft[2] = TextDrawCreate(322.000000, 176.000000, "_");
	TextDrawFont(ItemWPCraft[2], 1);
	TextDrawLetterSize(ItemWPCraft[2], 0.587499, 7.800010);
	TextDrawTextSize(ItemWPCraft[2], 298.500000, 96.000000);
	TextDrawSetOutline(ItemWPCraft[2], 1);
	TextDrawSetShadow(ItemWPCraft[2], 0);
	TextDrawAlignment(ItemWPCraft[2], 2);
	TextDrawColor(ItemWPCraft[2], -1);
	TextDrawBackgroundColor(ItemWPCraft[2], 255);
	TextDrawBoxColor(ItemWPCraft[2], 1296911871);
	TextDrawUseBox(ItemWPCraft[2], 1);
	TextDrawSetProportional(ItemWPCraft[2], 1);
	TextDrawSetSelectable(ItemWPCraft[2], 0);

	ItemWPCraft[3] = TextDrawCreate(247.000000, 153.000000, "Alive Weapon Craft");
	TextDrawFont(ItemWPCraft[3], 2);
	TextDrawLetterSize(ItemWPCraft[3], 0.329165, 1.750000);
	TextDrawTextSize(ItemWPCraft[3], 500.000000, 17.000000);
	TextDrawSetOutline(ItemWPCraft[3], 1);
	TextDrawSetShadow(ItemWPCraft[3], 0);
	TextDrawAlignment(ItemWPCraft[3], 1);
	TextDrawColor(ItemWPCraft[3], 16777215);
	TextDrawBackgroundColor(ItemWPCraft[3], 255);
	TextDrawBoxColor(ItemWPCraft[3], 50);
	TextDrawUseBox(ItemWPCraft[3], 0);
	TextDrawSetProportional(ItemWPCraft[3], 1);
	TextDrawSetSelectable(ItemWPCraft[3], 0);

	ItemWPCraft[4] = TextDrawCreate(311.000000, 248.000000, "Cane");
	TextDrawFont(ItemWPCraft[4], 2);
	TextDrawLetterSize(ItemWPCraft[4], 0.204165, 1.149999);
	TextDrawTextSize(ItemWPCraft[4], 500.000000, 17.000000);
	TextDrawSetOutline(ItemWPCraft[4], 1);
	TextDrawSetShadow(ItemWPCraft[4], 0);
	TextDrawAlignment(ItemWPCraft[4], 1);
	TextDrawColor(ItemWPCraft[4], -1);
	TextDrawBackgroundColor(ItemWPCraft[4], 255);
	TextDrawBoxColor(ItemWPCraft[4], 50);
	TextDrawUseBox(ItemWPCraft[4], 0);
	TextDrawSetProportional(ItemWPCraft[4], 1);
	TextDrawSetSelectable(ItemWPCraft[4], 0);

	ItemWPCraft[5] = TextDrawCreate(182.000000, 255.000000, "ITEM USE");
	TextDrawFont(ItemWPCraft[5], 2);
	TextDrawLetterSize(ItemWPCraft[5], 0.204165, 1.049999);
	TextDrawTextSize(ItemWPCraft[5], 500.000000, 17.000000);
	TextDrawSetOutline(ItemWPCraft[5], 1);
	TextDrawSetShadow(ItemWPCraft[5], 0);
	TextDrawAlignment(ItemWPCraft[5], 1);
	TextDrawColor(ItemWPCraft[5], -1);
	TextDrawBackgroundColor(ItemWPCraft[5], 255);
	TextDrawBoxColor(ItemWPCraft[5], 50);
	TextDrawUseBox(ItemWPCraft[5], 0);
	TextDrawSetProportional(ItemWPCraft[5], 1);
	TextDrawSetSelectable(ItemWPCraft[5], 0);

	ItemWPCraft[6] = TextDrawCreate(461.000000, 140.000000, "X");
	TextDrawFont(ItemWPCraft[6], 1);
	TextDrawLetterSize(ItemWPCraft[6], 0.600000, 2.000000);
	TextDrawTextSize(ItemWPCraft[6], 474.500000, 17.000000);
	TextDrawSetOutline(ItemWPCraft[6], 1);
	TextDrawSetShadow(ItemWPCraft[6], 0);
	TextDrawAlignment(ItemWPCraft[6], 1);
	TextDrawColor(ItemWPCraft[6], -1);
	TextDrawBackgroundColor(ItemWPCraft[6], 255);
	TextDrawBoxColor(ItemWPCraft[6], 50);
	TextDrawUseBox(ItemWPCraft[6], 0);
	TextDrawSetProportional(ItemWPCraft[6], 1);
	TextDrawSetSelectable(ItemWPCraft[6], 1);

	ItemWPCraft[7] = TextDrawCreate(231.000000, 273.000000, "_");
	TextDrawFont(ItemWPCraft[7], 1);
	TextDrawLetterSize(ItemWPCraft[7], 0.600000, 3.900000);
	TextDrawTextSize(ItemWPCraft[7], 298.500000, 49.000000);
	TextDrawSetOutline(ItemWPCraft[7], 1);
	TextDrawSetShadow(ItemWPCraft[7], 0);
	TextDrawAlignment(ItemWPCraft[7], 2);
	TextDrawColor(ItemWPCraft[7], -1);
	TextDrawBackgroundColor(ItemWPCraft[7], 255);
	TextDrawBoxColor(ItemWPCraft[7], -1378294137);
	TextDrawUseBox(ItemWPCraft[7], 1);
	TextDrawSetProportional(ItemWPCraft[7], 1);
	TextDrawSetSelectable(ItemWPCraft[7], 0);

	ItemWPCraft[8] = TextDrawCreate(294.000000, 273.000000, "_");
	TextDrawFont(ItemWPCraft[8], 1);
	TextDrawLetterSize(ItemWPCraft[8], 0.600000, 3.900000);
	TextDrawTextSize(ItemWPCraft[8], 298.500000, 49.000000);
	TextDrawSetOutline(ItemWPCraft[8], 1);
	TextDrawSetShadow(ItemWPCraft[8], 0);
	TextDrawAlignment(ItemWPCraft[8], 2);
	TextDrawColor(ItemWPCraft[8], -1);
	TextDrawBackgroundColor(ItemWPCraft[8], 255);
	TextDrawBoxColor(ItemWPCraft[8], -1378294137);
	TextDrawUseBox(ItemWPCraft[8], 1);
	TextDrawSetProportional(ItemWPCraft[8], 1);
	TextDrawSetSelectable(ItemWPCraft[8], 0);

	ItemWPCraft[9] = TextDrawCreate(356.000000, 273.000000, "_");
	TextDrawFont(ItemWPCraft[9], 1);
	TextDrawLetterSize(ItemWPCraft[9], 0.600000, 3.900000);
	TextDrawTextSize(ItemWPCraft[9], 298.500000, 49.000000);
	TextDrawSetOutline(ItemWPCraft[9], 1);
	TextDrawSetShadow(ItemWPCraft[9], 0);
	TextDrawAlignment(ItemWPCraft[9], 2);
	TextDrawColor(ItemWPCraft[9], -1);
	TextDrawBackgroundColor(ItemWPCraft[9], 255);
	TextDrawBoxColor(ItemWPCraft[9], -1378294137);
	TextDrawUseBox(ItemWPCraft[9], 1);
	TextDrawSetProportional(ItemWPCraft[9], 1);
	TextDrawSetSelectable(ItemWPCraft[9], 0);

	ItemWPCraft[10] = TextDrawCreate(418.000000, 273.000000, "_");
	TextDrawFont(ItemWPCraft[10], 1);
	TextDrawLetterSize(ItemWPCraft[10], 0.600000, 3.900000);
	TextDrawTextSize(ItemWPCraft[10], 298.500000, 49.000000);
	TextDrawSetOutline(ItemWPCraft[10], 1);
	TextDrawSetShadow(ItemWPCraft[10], 0);
	TextDrawAlignment(ItemWPCraft[10], 2);
	TextDrawColor(ItemWPCraft[10], -1);
	TextDrawBackgroundColor(ItemWPCraft[10], 255);
	TextDrawBoxColor(ItemWPCraft[10], -1378294137);
	TextDrawUseBox(ItemWPCraft[10], 1);
	TextDrawSetProportional(ItemWPCraft[10], 1);
	TextDrawSetSelectable(ItemWPCraft[10], 0);

	ItemWPCraft[11] = TextDrawCreate(205.000000, 270.000000, "TextDraw");
	TextDrawFont(ItemWPCraft[11], 5);
	TextDrawLetterSize(ItemWPCraft[11], 0.600000, 2.000000);
	TextDrawTextSize(ItemWPCraft[11], 47.500000, 39.000000);
	TextDrawSetOutline(ItemWPCraft[11], 1);
	TextDrawSetShadow(ItemWPCraft[11], 0);
	TextDrawAlignment(ItemWPCraft[11], 1);
	TextDrawColor(ItemWPCraft[11], -1);
	TextDrawBackgroundColor(ItemWPCraft[11], 0);
	TextDrawBoxColor(ItemWPCraft[11], 0);
	TextDrawUseBox(ItemWPCraft[11], 1);
	TextDrawSetProportional(ItemWPCraft[11], 1);
	TextDrawSetSelectable(ItemWPCraft[11], 0);
	TextDrawSetPreviewModel(ItemWPCraft[11], 2057);
	TextDrawSetPreviewRot(ItemWPCraft[11], -8.000000, 0.000000, 35.000000, 1.000000);
	TextDrawSetPreviewVehCol(ItemWPCraft[11], 1, 1);

	ItemWPCraft[12] = TextDrawCreate(269.000000, 270.000000, "TextDraw");
	TextDrawFont(ItemWPCraft[12], 5);
	TextDrawLetterSize(ItemWPCraft[12], 0.600000, 2.000000);
	TextDrawTextSize(ItemWPCraft[12], 47.500000, 39.000000);
	TextDrawSetOutline(ItemWPCraft[12], 1);
	TextDrawSetShadow(ItemWPCraft[12], 0);
	TextDrawAlignment(ItemWPCraft[12], 1);
	TextDrawColor(ItemWPCraft[12], -1);
	TextDrawBackgroundColor(ItemWPCraft[12], 0);
	TextDrawBoxColor(ItemWPCraft[12], 0);
	TextDrawUseBox(ItemWPCraft[12], 1);
	TextDrawSetProportional(ItemWPCraft[12], 1);
	TextDrawSetSelectable(ItemWPCraft[12], 0);
	TextDrawSetPreviewModel(ItemWPCraft[12], 19793);
	TextDrawSetPreviewRot(ItemWPCraft[12], -10.000000, 0.000000, 4.000000, 1.000000);
	TextDrawSetPreviewVehCol(ItemWPCraft[12], 1, 1);

	ItemWPCraft[13] = TextDrawCreate(333.000000, 270.000000, "TextDraw");
	TextDrawFont(ItemWPCraft[13], 5);
	TextDrawLetterSize(ItemWPCraft[13], 0.600000, 2.000000);
	TextDrawTextSize(ItemWPCraft[13], 47.500000, 39.000000);
	TextDrawSetOutline(ItemWPCraft[13], 1);
	TextDrawSetShadow(ItemWPCraft[13], 0);
	TextDrawAlignment(ItemWPCraft[13], 1);
	TextDrawColor(ItemWPCraft[13], -1);
	TextDrawBackgroundColor(ItemWPCraft[13], 0);
	TextDrawBoxColor(ItemWPCraft[13], 0);
	TextDrawUseBox(ItemWPCraft[13], 1);
	TextDrawSetProportional(ItemWPCraft[13], 1);
	TextDrawSetSelectable(ItemWPCraft[13], 0);
	TextDrawSetPreviewModel(ItemWPCraft[13], 19941);
	TextDrawSetPreviewRot(ItemWPCraft[13], -10.000000, 0.000000, 4.000000, 1.000000);
	TextDrawSetPreviewVehCol(ItemWPCraft[13], 1, 1);

	ItemWPCraft[14] = TextDrawCreate(393.000000, 270.000000, "TextDraw");
	TextDrawFont(ItemWPCraft[14], 5);
	TextDrawLetterSize(ItemWPCraft[14], 0.600000, 2.000000);
	TextDrawTextSize(ItemWPCraft[14], 47.500000, 39.000000);
	TextDrawSetOutline(ItemWPCraft[14], 1);
	TextDrawSetShadow(ItemWPCraft[14], 0);
	TextDrawAlignment(ItemWPCraft[14], 1);
	TextDrawColor(ItemWPCraft[14], -1);
	TextDrawBackgroundColor(ItemWPCraft[14], 0);
	TextDrawBoxColor(ItemWPCraft[14], 0);
	TextDrawUseBox(ItemWPCraft[14], 1);
	TextDrawSetProportional(ItemWPCraft[14], 1);
	TextDrawSetSelectable(ItemWPCraft[14], 0);
	TextDrawSetPreviewModel(ItemWPCraft[14], 1212);
	TextDrawSetPreviewRot(ItemWPCraft[14], -10.000000, 0.000000, 4.000000, 1.000000);
	TextDrawSetPreviewVehCol(ItemWPCraft[14], 1, 1);

	ItemWPCraft[15] = TextDrawCreate(204.000000, 311.000000, "Gun Powder (50 EA)");
	TextDrawFont(ItemWPCraft[15], 2);
	TextDrawLetterSize(ItemWPCraft[15], 0.129166, 0.949999);
	TextDrawTextSize(ItemWPCraft[15], 400.000000, 17.000000);
	TextDrawSetOutline(ItemWPCraft[15], 0);
	TextDrawSetShadow(ItemWPCraft[15], 0);
	TextDrawAlignment(ItemWPCraft[15], 1);
	TextDrawColor(ItemWPCraft[15], -1);
	TextDrawBackgroundColor(ItemWPCraft[15], 255);
	TextDrawBoxColor(ItemWPCraft[15], 50);
	TextDrawUseBox(ItemWPCraft[15], 0);
	TextDrawSetProportional(ItemWPCraft[15], 1);
	TextDrawSetSelectable(ItemWPCraft[15], 0);

	ItemWPCraft[16] = TextDrawCreate(273.000000, 311.000000, "Woods (100 EA)");
	TextDrawFont(ItemWPCraft[16], 2);
	TextDrawLetterSize(ItemWPCraft[16], 0.129166, 0.949999);
	TextDrawTextSize(ItemWPCraft[16], 400.000000, 17.000000);
	TextDrawSetOutline(ItemWPCraft[16], 0);
	TextDrawSetShadow(ItemWPCraft[16], 0);
	TextDrawAlignment(ItemWPCraft[16], 1);
	TextDrawColor(ItemWPCraft[16], -1);
	TextDrawBackgroundColor(ItemWPCraft[16], 255);
	TextDrawBoxColor(ItemWPCraft[16], 50);
	TextDrawUseBox(ItemWPCraft[16], 0);
	TextDrawSetProportional(ItemWPCraft[16], 1);
	TextDrawSetSelectable(ItemWPCraft[16], 0);

	ItemWPCraft[17] = TextDrawCreate(340.000000, 310.000000, "ORE (100 EA)");
	TextDrawFont(ItemWPCraft[17], 2);
	TextDrawLetterSize(ItemWPCraft[17], 0.129166, 0.949999);
	TextDrawTextSize(ItemWPCraft[17], 400.000000, 17.000000);
	TextDrawSetOutline(ItemWPCraft[17], 0);
	TextDrawSetShadow(ItemWPCraft[17], 0);
	TextDrawAlignment(ItemWPCraft[17], 1);
	TextDrawColor(ItemWPCraft[17], -1);
	TextDrawBackgroundColor(ItemWPCraft[17], 255);
	TextDrawBoxColor(ItemWPCraft[17], 50);
	TextDrawUseBox(ItemWPCraft[17], 0);
	TextDrawSetProportional(ItemWPCraft[17], 1);
	TextDrawSetSelectable(ItemWPCraft[17], 0);

	ItemWPCraft[18] = TextDrawCreate(394.000000, 310.000000, "Money ($20,000)");
	TextDrawFont(ItemWPCraft[18], 2);
	TextDrawLetterSize(ItemWPCraft[18], 0.129166, 0.949999);
	TextDrawTextSize(ItemWPCraft[18], 470.000000, 17.000000);
	TextDrawSetOutline(ItemWPCraft[18], 0);
	TextDrawSetShadow(ItemWPCraft[18], 0);
	TextDrawAlignment(ItemWPCraft[18], 1);
	TextDrawColor(ItemWPCraft[18], -1);
	TextDrawBackgroundColor(ItemWPCraft[18], 255);
	TextDrawBoxColor(ItemWPCraft[18], 50);
	TextDrawUseBox(ItemWPCraft[18], 0);
	TextDrawSetProportional(ItemWPCraft[18], 1);
	TextDrawSetSelectable(ItemWPCraft[18], 0);

	ItemWPCraft[19] = TextDrawCreate(251.000000, 174.000000, "TextDraw");
	TextDrawFont(ItemWPCraft[19], 5);
	TextDrawLetterSize(ItemWPCraft[19], 0.600000, 2.000000);
	TextDrawTextSize(ItemWPCraft[19], 135.500000, 57.000000);
	TextDrawSetOutline(ItemWPCraft[19], 1);
	TextDrawSetShadow(ItemWPCraft[19], 0);
	TextDrawAlignment(ItemWPCraft[19], 1);
	TextDrawColor(ItemWPCraft[19], -1);
	TextDrawBackgroundColor(ItemWPCraft[19], 0);
	TextDrawBoxColor(ItemWPCraft[19], 0);
	TextDrawUseBox(ItemWPCraft[19], 1);
	TextDrawSetProportional(ItemWPCraft[19], 1);
	TextDrawSetSelectable(ItemWPCraft[19], 0);
	TextDrawSetPreviewModel(ItemWPCraft[19], 326);
	TextDrawSetPreviewRot(ItemWPCraft[19], 14.000000, -155.000000, -118.000000, 1.000000);
	TextDrawSetPreviewVehCol(ItemWPCraft[19], 1, 1);

	ItemWPCraft[20] = TextDrawCreate(386.000000, 220.000000, "Craft");
	TextDrawFont(ItemWPCraft[20], 1);
	TextDrawLetterSize(ItemWPCraft[20], 0.600000, 2.000000);
	TextDrawTextSize(ItemWPCraft[20], 440.000000, 17.000000);
	TextDrawSetOutline(ItemWPCraft[20], 1);
	TextDrawSetShadow(ItemWPCraft[20], 0);
	TextDrawAlignment(ItemWPCraft[20], 1);
	TextDrawColor(ItemWPCraft[20], 16711935);
	TextDrawBackgroundColor(ItemWPCraft[20], 255);
	TextDrawBoxColor(ItemWPCraft[20], -206);
	TextDrawUseBox(ItemWPCraft[20], 1);
	TextDrawSetProportional(ItemWPCraft[20], 1);
	TextDrawSetSelectable(ItemWPCraft[20], 1);

	ItemWPCraft[21] = TextDrawCreate(385.000000, 241.000000, "Click to craft weapon");
	TextDrawFont(ItemWPCraft[21], 2);
	TextDrawLetterSize(ItemWPCraft[21], 0.137500, 0.850000);
	TextDrawTextSize(ItemWPCraft[21], 475.000000, 17.000000);
	TextDrawSetOutline(ItemWPCraft[21], 1);
	TextDrawSetShadow(ItemWPCraft[21], 0);
	TextDrawAlignment(ItemWPCraft[21], 1);
	TextDrawColor(ItemWPCraft[21], -1);
	TextDrawBackgroundColor(ItemWPCraft[21], 255);
	TextDrawBoxColor(ItemWPCraft[21], 50);
	TextDrawUseBox(ItemWPCraft[21], 0);
	TextDrawSetProportional(ItemWPCraft[21], 1);
	TextDrawSetSelectable(ItemWPCraft[21], 0);
	
    ui_clock = TextDrawCreate(55.033103, 433.651580, "6 May 18:50:07");
    TextDrawLetterSize(ui_clock, 0.198361, 1.194994);
    TextDrawTextSize(ui_clock, 378.000000, 0.000000);
    TextDrawAlignment(ui_clock, 1);
    TextDrawColor(ui_clock, -2147450625);
    TextDrawSetShadow(ui_clock, 1);
    TextDrawSetOutline(ui_clock, 1);
    TextDrawBackgroundColor(ui_clock, 255);
    TextDrawFont(ui_clock, 2);
    TextDrawSetProportional(ui_clock, 1);

	PVPZone = CreateDynamicRectangle(1862.2203, -1450.5480, 1976.4160, -1350.7289, -1, -1, -1);

	SendRconCommand("hostname "SERVER_NAME" v"SERVER_VERSION"");
	SendRconCommand("gamemodetext "SERVER_MODE"");
	SendRconCommand("language "SERVER_LANGUAGE"");
	SendRconCommand("weburl "SERVER_WEBSITE"");

    SetWeather(globalWeather);
    UpdateTime();
    ManualVehicleEngineAndLights();
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	CreateMap();
	CreateVehicles();
	LimitPlayerMarkerRadius(20.0);
	StockAddMenuItem();

	FixHour(ghour);
	ghour = shifthour;
	SetWorldTime(ghour);

	warFlagOn = 0;
	FlagOnPlayer = -1;
    
    SetTimer("LuckyTimerLast", 600, 1);
    SetTimerEx("RespawnAllVehicles", 60000*60, false, "d", 1);

	// --> เลเบล

	CreateDynamicPickup(1313, 23, 1907.2549,-1400.3376,14.0000, -1, -1, -1, 40);
	CreateDynamic3DTextLabel("{FFFFFF}[{F5E30B}Label{FFFFFF}]\n{FFFFFF}ยินดีต้อนรับเข้าสู่สนามรบ Battle", COLOR_YELLOW, 1907.2549,-1400.3376,14.0000, 40.0);

	// --> ระบบแต่งรถ
	
	wTuning1[0] = TextDrawCreate(560.000000, 102.000000, "_");
	TextDrawBackgroundColor(wTuning1[0], 255);
	TextDrawFont(wTuning1[0], 1);
	TextDrawLetterSize(wTuning1[0], 0.709999, 1.599998);
	TextDrawColor(wTuning1[0], 852308735);
	TextDrawSetOutline(wTuning1[0], 0);
	TextDrawSetProportional(wTuning1[0], 1);
	TextDrawSetShadow(wTuning1[0], 1);
	TextDrawUseBox(wTuning1[0], 1);
	TextDrawBoxColor(wTuning1[0], 793726975);
	TextDrawTextSize(wTuning1[0], 72.000000, 20.000000);
	TextDrawSetSelectable(wTuning1[0], 0);

	wTuning1[1] = TextDrawCreate(560.000000, 120.000000, "_");
	TextDrawBackgroundColor(wTuning1[1], 255);
	TextDrawFont(wTuning1[1], 1);
	TextDrawLetterSize(wTuning1[1], 0.709999, 1.699998);
	TextDrawColor(wTuning1[1], -1);
	TextDrawSetOutline(wTuning1[1], 0);
	TextDrawSetProportional(wTuning1[1], 1);
	TextDrawSetShadow(wTuning1[1], 1);
	TextDrawUseBox(wTuning1[1], 1);
	TextDrawBoxColor(wTuning1[1], 150);
	TextDrawTextSize(wTuning1[1], 72.000000, 20.000000);
	TextDrawSetSelectable(wTuning1[1], 0);

	wTuning1[2] = TextDrawCreate(243.000000, 144.000000, "_");
	TextDrawBackgroundColor(wTuning1[2], 255);
	TextDrawFont(wTuning1[2], 1);
	TextDrawLetterSize(wTuning1[2], 0.709999, 21.299999);
	TextDrawColor(wTuning1[2], -1);
	TextDrawSetOutline(wTuning1[2], 0);
	TextDrawSetProportional(wTuning1[2], 1);
	TextDrawSetShadow(wTuning1[2], 1);
	TextDrawUseBox(wTuning1[2], 1);
	TextDrawBoxColor(wTuning1[2], 150);
	TextDrawTextSize(wTuning1[2], 72.000000, 19.000000);
	TextDrawSetSelectable(wTuning1[2], 0);

	wTuning1[3] = TextDrawCreate(271.000000, 105.000000, "Tuning Car");
	TextDrawBackgroundColor(wTuning1[3], 255);
	TextDrawFont(wTuning1[3], 2);
	TextDrawLetterSize(wTuning1[3], 0.300000, 1.000000);
	TextDrawColor(wTuning1[3], -1);
	TextDrawSetOutline(wTuning1[3], 0);
	TextDrawSetProportional(wTuning1[3], 1);
	TextDrawSetShadow(wTuning1[3], 0);
	TextDrawSetSelectable(wTuning1[3], 0);

	wTuning1[4] = TextDrawCreate(368.000000, 152.000000, "Welcome to Tuning Menu");
	TextDrawBackgroundColor(wTuning1[4], 255);
	TextDrawFont(wTuning1[4], 2);
	TextDrawLetterSize(wTuning1[4], 0.250000, 1.100000);
	TextDrawColor(wTuning1[4], -1);
	TextDrawSetOutline(wTuning1[4], 0);
	TextDrawSetProportional(wTuning1[4], 1);
	TextDrawSetShadow(wTuning1[4], 0);
	TextDrawSetSelectable(wTuning1[4], 0);

	wTuning1[5] = TextDrawCreate(560.000000, 144.000000, "_");
	TextDrawBackgroundColor(wTuning1[5], 255);
	TextDrawFont(wTuning1[5], 1);
	TextDrawLetterSize(wTuning1[5], 0.709999, 2.900000);
	TextDrawColor(wTuning1[5], -1);
	TextDrawSetOutline(wTuning1[5], 0);
	TextDrawSetProportional(wTuning1[5], 1);
	TextDrawSetShadow(wTuning1[5], 1);
	TextDrawUseBox(wTuning1[5], 1);
	TextDrawBoxColor(wTuning1[5], 793726975);
	TextDrawTextSize(wTuning1[5], 247.000000, 19.000000);
	TextDrawSetSelectable(wTuning1[5], 0);

	wTuning1[6] = TextDrawCreate(538.000000, 105.000000, "X");
	TextDrawBackgroundColor(wTuning1[6], 255);
	TextDrawFont(wTuning1[6], 1);
	TextDrawLetterSize(wTuning1[6], 0.500000, 1.000000);
	TextDrawColor(wTuning1[6], 255);
	TextDrawSetOutline(wTuning1[6], 0);
	TextDrawSetProportional(wTuning1[6], 1);
	TextDrawSetShadow(wTuning1[6], 0);
	TextDrawUseBox(wTuning1[6], 1);
	TextDrawBoxColor(wTuning1[6], 0);
	TextDrawTextSize(wTuning1[6], 550.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[6], 1);

	wTuning1[7] = TextDrawCreate(88.000000, 123.000000, "Wheels");
	TextDrawBackgroundColor(wTuning1[7], 255);
	TextDrawFont(wTuning1[7], 2);
	TextDrawLetterSize(wTuning1[7], 0.300000, 1.000000);
	TextDrawColor(wTuning1[7], -1);
	TextDrawSetOutline(wTuning1[7], 0);
	TextDrawSetProportional(wTuning1[7], 1);
	TextDrawSetShadow(wTuning1[7], 0);
	TextDrawUseBox(wTuning1[7], 1);
	TextDrawBoxColor(wTuning1[7], 0);
	TextDrawTextSize(wTuning1[7], 137.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[7], 0);

	wTuning1[8] = TextDrawCreate(150.000000, 123.000000, "Color");
	TextDrawBackgroundColor(wTuning1[8], 255);
	TextDrawFont(wTuning1[8], 2);
	TextDrawLetterSize(wTuning1[8], 0.300000, 1.000000);
	TextDrawColor(wTuning1[8], -1);
	TextDrawSetOutline(wTuning1[8], 0);
	TextDrawSetProportional(wTuning1[8], 1);
	TextDrawSetShadow(wTuning1[8], 0);
	TextDrawUseBox(wTuning1[8], 1);
	TextDrawBoxColor(wTuning1[8], 0);
	TextDrawTextSize(wTuning1[8], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[8], 0);

	wTuning1[9] = TextDrawCreate(204.000000, 123.000000, "paintjobs");
	TextDrawBackgroundColor(wTuning1[9], 255);
	TextDrawFont(wTuning1[9], 2);
	TextDrawLetterSize(wTuning1[9], 0.300000, 1.000000);
	TextDrawColor(wTuning1[9], -1);
	TextDrawSetOutline(wTuning1[9], 0);
	TextDrawSetProportional(wTuning1[9], 1);
	TextDrawSetShadow(wTuning1[9], 0);
	TextDrawUseBox(wTuning1[9], 1);
	TextDrawBoxColor(wTuning1[9], 0);
	TextDrawTextSize(wTuning1[9], 274.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[9], 0);

	/*wTuning1[10] = TextDrawCreate(284.000000, 123.000000, "nitro");
	TextDrawBackgroundColor(wTuning1[10], 255);
	TextDrawFont(wTuning1[10], 2);
	TextDrawLetterSize(wTuning1[10], 0.300000, 1.000000);
	TextDrawColor(wTuning1[10], -1);
	TextDrawSetOutline(wTuning1[10], 0);
	TextDrawSetProportional(wTuning1[10], 1);
	TextDrawSetShadow(wTuning1[10], 0);
	TextDrawUseBox(wTuning1[10], 1);
	TextDrawBoxColor(wTuning1[10], 0);
	TextDrawTextSize(wTuning1[10], 320.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[10], 0);*/

	wTuning1[11] = TextDrawCreate(334.000000, 123.000000, "hydraulics");
	TextDrawBackgroundColor(wTuning1[11], 255);
	TextDrawFont(wTuning1[11], 2);
	TextDrawLetterSize(wTuning1[11], 0.300000, 1.000000);
	TextDrawColor(wTuning1[11], -1);
	TextDrawSetOutline(wTuning1[11], 0);
	TextDrawSetProportional(wTuning1[11], 1);
	TextDrawSetShadow(wTuning1[11], 0);
	TextDrawUseBox(wTuning1[11], 1);
	TextDrawBoxColor(wTuning1[11], 0);
	TextDrawTextSize(wTuning1[11], 411.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[11], 0);

	wTuning1[12] = TextDrawCreate(424.000000, 123.000000, "- Delete");
	TextDrawBackgroundColor(wTuning1[12], 255);
	TextDrawFont(wTuning1[12], 2);
	TextDrawLetterSize(wTuning1[12], 0.300000, 1.000000);
	TextDrawColor(wTuning1[12], -1);
	TextDrawSetOutline(wTuning1[12], 0);
	TextDrawSetProportional(wTuning1[12], 1);
	TextDrawSetShadow(wTuning1[12], 0);
	TextDrawUseBox(wTuning1[12], 1);
	TextDrawBoxColor(wTuning1[12], 0);
	TextDrawTextSize(wTuning1[12], 457.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[12], 0);

	wTuning1[13] = TextDrawCreate(466.000000, 123.000000, "- Delete");
	TextDrawBackgroundColor(wTuning1[13], 255);
	TextDrawFont(wTuning1[13], 2);
	TextDrawLetterSize(wTuning1[13], 0.300000, 1.000000);
	TextDrawColor(wTuning1[13], -1);
	TextDrawSetOutline(wTuning1[13], 0);
	TextDrawSetProportional(wTuning1[13], 1);
	TextDrawSetShadow(wTuning1[13], 0);
	TextDrawUseBox(wTuning1[13], 1);
	TextDrawBoxColor(wTuning1[13], 0);
	TextDrawTextSize(wTuning1[13], 542.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[13], 0);

	wTuning1[14] = TextDrawCreate(88.000000, 149.000000, "Black___________________");
	TextDrawBackgroundColor(wTuning1[14], 255);
	TextDrawFont(wTuning1[14], 2);
	TextDrawLetterSize(wTuning1[14], 0.300000, 1.000000);
	TextDrawColor(wTuning1[14], -1);
	TextDrawSetOutline(wTuning1[14], 0);
	TextDrawSetProportional(wTuning1[14], 1);
	TextDrawSetShadow(wTuning1[14], 0);
	TextDrawUseBox(wTuning1[14], 1);
	TextDrawBoxColor(wTuning1[14], 0);
	TextDrawTextSize(wTuning1[14], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[14], 0);

	wTuning1[15] = TextDrawCreate(88.000000, 168.000000, "White____________________");
	TextDrawBackgroundColor(wTuning1[15], 255);
	TextDrawFont(wTuning1[15], 2);
	TextDrawLetterSize(wTuning1[15], 0.300000, 1.000000);
	TextDrawColor(wTuning1[15], -1);
	TextDrawSetOutline(wTuning1[15], 0);
	TextDrawSetProportional(wTuning1[15], 1);
	TextDrawSetShadow(wTuning1[15], 0);
	TextDrawUseBox(wTuning1[15], 1);
	TextDrawBoxColor(wTuning1[15], 0);
	TextDrawTextSize(wTuning1[15], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[15], 0);

	wTuning1[16] = TextDrawCreate(88.000000, 190.000000, "Green___________________");
	TextDrawBackgroundColor(wTuning1[16], 255);
	TextDrawFont(wTuning1[16], 2);
	TextDrawLetterSize(wTuning1[16], 0.300000, 1.000000);
	TextDrawColor(wTuning1[16], -1);
	TextDrawSetOutline(wTuning1[16], 0);
	TextDrawSetProportional(wTuning1[16], 1);
	TextDrawSetShadow(wTuning1[16], 0);
	TextDrawUseBox(wTuning1[16], 1);
	TextDrawBoxColor(wTuning1[16], 0);
	TextDrawTextSize(wTuning1[16], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[16], 0);

	wTuning1[17] = TextDrawCreate(88.000000, 213.000000, "Cyan_____________________");
	TextDrawBackgroundColor(wTuning1[17], 255);
	TextDrawFont(wTuning1[17], 2);
	TextDrawLetterSize(wTuning1[17], 0.300000, 1.000000);
	TextDrawColor(wTuning1[17], -1);
	TextDrawSetOutline(wTuning1[17], 0);
	TextDrawSetProportional(wTuning1[17], 1);
	TextDrawSetShadow(wTuning1[17], 0);
	TextDrawUseBox(wTuning1[17], 1);
	TextDrawBoxColor(wTuning1[17], 0);
	TextDrawTextSize(wTuning1[17], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[17], 0);

	wTuning1[18] = TextDrawCreate(88.000000, 233.000000, "Blue_____________________");
	TextDrawBackgroundColor(wTuning1[18], 255);
	TextDrawFont(wTuning1[18], 2);
	TextDrawLetterSize(wTuning1[18], 0.300000, 1.000000);
	TextDrawColor(wTuning1[18], -1);
	TextDrawSetOutline(wTuning1[18], 0);
	TextDrawSetProportional(wTuning1[18], 1);
	TextDrawSetShadow(wTuning1[18], 0);
	TextDrawUseBox(wTuning1[18], 1);
	TextDrawBoxColor(wTuning1[18], 0);
	TextDrawTextSize(wTuning1[18], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[18], 0);

	wTuning1[19] = TextDrawCreate(87.000000, 254.000000, "Yellow________________");
	TextDrawBackgroundColor(wTuning1[19], 255);
	TextDrawFont(wTuning1[19], 2);
	TextDrawLetterSize(wTuning1[19], 0.300000, 1.000000);
	TextDrawColor(wTuning1[19], -1);
	TextDrawSetOutline(wTuning1[19], 0);
	TextDrawSetProportional(wTuning1[19], 1);
	TextDrawSetShadow(wTuning1[19], 0);
	TextDrawUseBox(wTuning1[19], 1);
	TextDrawBoxColor(wTuning1[19], 0);
	TextDrawTextSize(wTuning1[19], 180.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[19], 0);

	wTuning1[20] = TextDrawCreate(87.000000, 275.000000, "gray_____________________");
	TextDrawBackgroundColor(wTuning1[20], 255);
	TextDrawFont(wTuning1[20], 2);
	TextDrawLetterSize(wTuning1[20], 0.300000, 1.000000);
	TextDrawColor(wTuning1[20], -1);
	TextDrawSetOutline(wTuning1[20], 0);
	TextDrawSetProportional(wTuning1[20], 1);
	TextDrawSetShadow(wTuning1[20], 0);
	TextDrawUseBox(wTuning1[20], 1);
	TextDrawBoxColor(wTuning1[20], 0);
	TextDrawTextSize(wTuning1[20], 229.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[20], 0);

	wTuning1[21] = TextDrawCreate(87.000000, 293.000000, "Pink_____________________");
	TextDrawBackgroundColor(wTuning1[21], 255);
	TextDrawFont(wTuning1[21], 2);
	TextDrawLetterSize(wTuning1[21], 0.300000, 1.000000);
	TextDrawColor(wTuning1[21], -1);
	TextDrawSetOutline(wTuning1[21], 0);
	TextDrawSetProportional(wTuning1[21], 1);
	TextDrawSetShadow(wTuning1[21], 0);
	TextDrawUseBox(wTuning1[21], 1);
	TextDrawBoxColor(wTuning1[21], 0);
	TextDrawTextSize(wTuning1[21], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[21], 0);

	wTuning1[22] = TextDrawCreate(87.000000, 312.000000, "Orange________________");
	TextDrawBackgroundColor(wTuning1[22], 255);
	TextDrawFont(wTuning1[22], 2);
	TextDrawLetterSize(wTuning1[22], 0.300000, 1.000000);
	TextDrawColor(wTuning1[22], -1);
	TextDrawSetOutline(wTuning1[22], 0);
	TextDrawSetProportional(wTuning1[22], 1);
	TextDrawSetShadow(wTuning1[22], 0);
	TextDrawUseBox(wTuning1[22], 1);
	TextDrawBoxColor(wTuning1[22], 0);
	TextDrawTextSize(wTuning1[22], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning1[22], 0);

	wTuning2[0] = TextDrawCreate(88.000000, 149.000000, "shadow________________");
	TextDrawBackgroundColor(wTuning2[0], 255);
	TextDrawFont(wTuning2[0], 2);
	TextDrawLetterSize(wTuning2[0], 0.300000, 1.000000);
	TextDrawColor(wTuning2[0], -1);
	TextDrawSetOutline(wTuning2[0], 0);
	TextDrawSetProportional(wTuning2[0], 1);
	TextDrawSetShadow(wTuning2[0], 0);
	TextDrawUseBox(wTuning2[0], 1);
	TextDrawBoxColor(wTuning2[0], 0);
	TextDrawTextSize(wTuning2[0], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[0], 0);

	wTuning2[1] = TextDrawCreate(88.000000, 168.000000, "mega_____________________");
	TextDrawBackgroundColor(wTuning2[1], 255);
	TextDrawFont(wTuning2[1], 2);
	TextDrawLetterSize(wTuning2[1], 0.300000, 1.000000);
	TextDrawColor(wTuning2[1], -1);
	TextDrawSetOutline(wTuning2[1], 0);
	TextDrawSetProportional(wTuning2[1], 1);
	TextDrawSetShadow(wTuning2[1], 0);
	TextDrawUseBox(wTuning2[1], 1);
	TextDrawBoxColor(wTuning2[1], 0);
	TextDrawTextSize(wTuning2[1], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[1], 0);

	wTuning2[2] = TextDrawCreate(88.000000, 190.000000, "rimshine_____________");
	TextDrawBackgroundColor(wTuning2[2], 255);
	TextDrawFont(wTuning2[2], 2);
	TextDrawLetterSize(wTuning2[2], 0.300000, 1.000000);
	TextDrawColor(wTuning2[2], -1);
	TextDrawSetOutline(wTuning2[2], 0);
	TextDrawSetProportional(wTuning2[2], 1);
	TextDrawSetShadow(wTuning2[2], 0);
	TextDrawUseBox(wTuning2[2], 1);
	TextDrawBoxColor(wTuning2[2], 0);
	TextDrawTextSize(wTuning2[2], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[2], 0);

	wTuning2[3] = TextDrawCreate(88.000000, 213.000000, "Wires___________________");
	TextDrawBackgroundColor(wTuning2[3], 255);
	TextDrawFont(wTuning2[3], 2);
	TextDrawLetterSize(wTuning2[3], 0.300000, 1.000000);
	TextDrawColor(wTuning2[3], -1);
	TextDrawSetOutline(wTuning2[3], 0);
	TextDrawSetProportional(wTuning2[3], 1);
	TextDrawSetShadow(wTuning2[3], 0);
	TextDrawUseBox(wTuning2[3], 1);
	TextDrawBoxColor(wTuning2[3], 0);
	TextDrawTextSize(wTuning2[3], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[3], 0);

	wTuning2[4] = TextDrawCreate(88.000000, 233.000000, "classic________________");
	TextDrawBackgroundColor(wTuning2[4], 255);
	TextDrawFont(wTuning2[4], 2);
	TextDrawLetterSize(wTuning2[4], 0.300000, 1.000000);
	TextDrawColor(wTuning2[4], -1);
	TextDrawSetOutline(wTuning2[4], 0);
	TextDrawSetProportional(wTuning2[4], 1);
	TextDrawSetShadow(wTuning2[4], 0);
	TextDrawUseBox(wTuning2[4], 1);
	TextDrawBoxColor(wTuning2[4], 0);
	TextDrawTextSize(wTuning2[4], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[4], 0);

	wTuning2[5] = TextDrawCreate(87.000000, 254.000000, "twist____________________");
	TextDrawBackgroundColor(wTuning2[5], 255);
	TextDrawFont(wTuning2[5], 2);
	TextDrawLetterSize(wTuning2[5], 0.300000, 1.000000);
	TextDrawColor(wTuning2[5], -1);
	TextDrawSetOutline(wTuning2[5], 0);
	TextDrawSetProportional(wTuning2[5], 1);
	TextDrawSetShadow(wTuning2[5], 0);
	TextDrawUseBox(wTuning2[5], 1);
	TextDrawBoxColor(wTuning2[5], 0);
	TextDrawTextSize(wTuning2[5], 180.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[5], 0);

	wTuning2[6] = TextDrawCreate(87.000000, 275.000000, "cutter_________________");
	TextDrawBackgroundColor(wTuning2[6], 255);
	TextDrawFont(wTuning2[6], 2);
	TextDrawLetterSize(wTuning2[6], 0.300000, 1.000000);
	TextDrawColor(wTuning2[6], -1);
	TextDrawSetOutline(wTuning2[6], 0);
	TextDrawSetProportional(wTuning2[6], 1);
	TextDrawSetShadow(wTuning2[6], 0);
	TextDrawUseBox(wTuning2[6], 1);
	TextDrawBoxColor(wTuning2[6], 0);
	TextDrawTextSize(wTuning2[6], 180.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[6], 0);

	wTuning2[7] = TextDrawCreate(87.000000, 293.000000, "Dollar_________________");
	TextDrawBackgroundColor(wTuning2[7], 255);
	TextDrawFont(wTuning2[7], 2);
	TextDrawLetterSize(wTuning2[7], 0.300000, 1.000000);
	TextDrawColor(wTuning2[7], -1);
	TextDrawSetOutline(wTuning2[7], 0);
	TextDrawSetProportional(wTuning2[7], 1);
	TextDrawSetShadow(wTuning2[7], 0);
	TextDrawUseBox(wTuning2[7], 1);
	TextDrawBoxColor(wTuning2[7], 0);
	TextDrawTextSize(wTuning2[7], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[7], 0);

	wTuning2[8] = TextDrawCreate(87.000000, 312.000000, "Atomic__________________");
	TextDrawBackgroundColor(wTuning2[8], 255);
	TextDrawFont(wTuning2[8], 2);
	TextDrawLetterSize(wTuning2[8], 0.300000, 1.000000);
	TextDrawColor(wTuning2[8], -1);
	TextDrawSetOutline(wTuning2[8], 0);
	TextDrawSetProportional(wTuning2[8], 1);
	TextDrawSetShadow(wTuning2[8], 0);
	TextDrawUseBox(wTuning2[8], 1);
	TextDrawBoxColor(wTuning2[8], 0);
	TextDrawTextSize(wTuning2[8], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning2[8], 0);

	wTuning3[0] = TextDrawCreate(88.000000, 149.000000, "Blue");
	TextDrawBackgroundColor(wTuning3[0], 255);
	TextDrawFont(wTuning3[0], 2);
	TextDrawLetterSize(wTuning3[0], 0.300000, 1.000000);
	TextDrawColor(wTuning3[0], -1);
	TextDrawSetOutline(wTuning3[0], 0);
	TextDrawSetProportional(wTuning3[0], 1);
	TextDrawSetShadow(wTuning3[0], 0);
	TextDrawUseBox(wTuning3[0], 1);
	TextDrawBoxColor(wTuning3[0], 0);
	TextDrawTextSize(wTuning3[0], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[0], 0);

	wTuning3[1] = TextDrawCreate(88.000000, 168.000000, "Yellow");
	TextDrawBackgroundColor(wTuning3[1], 255);
	TextDrawFont(wTuning3[1], 2);
	TextDrawLetterSize(wTuning3[1], 0.300000, 1.000000);
	TextDrawColor(wTuning3[1], -1);
	TextDrawSetOutline(wTuning3[1], 0);
	TextDrawSetProportional(wTuning3[1], 1);
	TextDrawSetShadow(wTuning3[1], 0);
	TextDrawUseBox(wTuning3[1], 1);
	TextDrawBoxColor(wTuning3[1], 0);
	TextDrawTextSize(wTuning3[1], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[1], 0);

	wTuning3[2] = TextDrawCreate(88.000000, 190.000000, "White");
	TextDrawBackgroundColor(wTuning3[2], 255);
	TextDrawFont(wTuning3[2], 2);
	TextDrawLetterSize(wTuning3[2], 0.300000, 1.000000);
	TextDrawColor(wTuning3[2], -1);
	TextDrawSetOutline(wTuning3[2], 0);
	TextDrawSetProportional(wTuning3[2], 1);
	TextDrawSetShadow(wTuning3[2], 0);
	TextDrawUseBox(wTuning3[2], 1);
	TextDrawBoxColor(wTuning3[2], 0);
	TextDrawTextSize(wTuning3[2], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[2], 0);

	wTuning3[3] = TextDrawCreate(88.000000, 213.000000, "Pink");
	TextDrawBackgroundColor(wTuning3[3], 255);
	TextDrawFont(wTuning3[3], 2);
	TextDrawLetterSize(wTuning3[3], 0.300000, 1.000000);
	TextDrawColor(wTuning3[3], -1);
	TextDrawSetOutline(wTuning3[3], 0);
	TextDrawSetProportional(wTuning3[3], 1);
	TextDrawSetShadow(wTuning3[3], 0);
	TextDrawUseBox(wTuning3[3], 1);
	TextDrawBoxColor(wTuning3[3], 0);
	TextDrawTextSize(wTuning3[3], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[3], 0);

	wTuning3[4] = TextDrawCreate(88.000000, 233.000000, "green");
	TextDrawBackgroundColor(wTuning3[4], 255);
	TextDrawFont(wTuning3[4], 2);
	TextDrawLetterSize(wTuning3[4], 0.300000, 1.000000);
	TextDrawColor(wTuning3[4], -1);
	TextDrawSetOutline(wTuning3[4], 0);
	TextDrawSetProportional(wTuning3[4], 1);
	TextDrawSetShadow(wTuning3[4], 0);
	TextDrawUseBox(wTuning3[4], 1);
	TextDrawBoxColor(wTuning3[4], 0);
	TextDrawTextSize(wTuning3[4], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[4], 0);

	wTuning3[5] = TextDrawCreate(88.000000, 252.000000, "remove_neon");
	TextDrawBackgroundColor(wTuning3[5], 255);
	TextDrawFont(wTuning3[5], 2);
	TextDrawLetterSize(wTuning3[5], 0.300000, 1.000000);
	TextDrawColor(wTuning3[5], -1);
	TextDrawSetOutline(wTuning3[5], 0);
	TextDrawSetProportional(wTuning3[5], 1);
	TextDrawSetShadow(wTuning3[5], 0);
	TextDrawUseBox(wTuning3[5], 1);
	TextDrawBoxColor(wTuning3[5], 0);
	TextDrawTextSize(wTuning3[5], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning3[5], 0);

	wTuning4[0] = TextDrawCreate(88.000000, 149.000000, "PAINTJOB_1");
	TextDrawBackgroundColor(wTuning4[0], 255);
	TextDrawFont(wTuning4[0], 2);
	TextDrawLetterSize(wTuning4[0], 0.300000, 1.000000);
	TextDrawColor(wTuning4[0], -1);
	TextDrawSetOutline(wTuning4[0], 0);
	TextDrawSetProportional(wTuning4[0], 1);
	TextDrawSetShadow(wTuning4[0], 0);
	TextDrawUseBox(wTuning4[0], 1);
	TextDrawBoxColor(wTuning4[0], 0);
	TextDrawTextSize(wTuning4[0], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning4[0], 0);

	wTuning4[1] = TextDrawCreate(88.000000, 168.000000, "PaintJob_2");
	TextDrawBackgroundColor(wTuning4[1], 255);
	TextDrawFont(wTuning4[1], 2);
	TextDrawLetterSize(wTuning4[1], 0.300000, 1.000000);
	TextDrawColor(wTuning4[1], -1);
	TextDrawSetOutline(wTuning4[1], 0);
	TextDrawSetProportional(wTuning4[1], 1);
	TextDrawSetShadow(wTuning4[1], 0);
	TextDrawUseBox(wTuning4[1], 1);
	TextDrawBoxColor(wTuning4[1], 0);
	TextDrawTextSize(wTuning4[1], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning4[1], 0);

	wTuning4[2] = TextDrawCreate(88.000000, 190.000000, "PaintJob_3");
	TextDrawBackgroundColor(wTuning4[2], 255);
	TextDrawFont(wTuning4[2], 2);
	TextDrawLetterSize(wTuning4[2], 0.300000, 1.000000);
	TextDrawColor(wTuning4[2], -1);
	TextDrawSetOutline(wTuning4[2], 0);
	TextDrawSetProportional(wTuning4[2], 1);
	TextDrawSetShadow(wTuning4[2], 0);
	TextDrawUseBox(wTuning4[2], 1);
	TextDrawBoxColor(wTuning4[2], 0);
	TextDrawTextSize(wTuning4[2], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning4[2], 0);

	/*wTuning5[0] = TextDrawCreate(88.000000, 149.000000, "Nitro 2X");
	TextDrawBackgroundColor(wTuning5[0], 255);
	TextDrawFont(wTuning5[0], 2);
	TextDrawLetterSize(wTuning5[0], 0.300000, 1.000000);
	TextDrawColor(wTuning5[0], -1);
	TextDrawSetOutline(wTuning5[0], 0);
	TextDrawSetProportional(wTuning5[0], 1);
	TextDrawSetShadow(wTuning5[0], 0);
	TextDrawUseBox(wTuning5[0], 1);
	TextDrawBoxColor(wTuning5[0], 0);
	TextDrawTextSize(wTuning5[0], 190.000000, 10.000000);
	TextDrawSetSelectable(wTuning5[0], 0);

	wTuning5[1] = TextDrawCreate(88.000000, 169.000000, "NITRo 5x");
	TextDrawBackgroundColor(wTuning5[1], 255);
	TextDrawFont(wTuning5[1], 2);
	TextDrawLetterSize(wTuning5[1], 0.300000, 1.000000);
	TextDrawColor(wTuning5[1], -1);
	TextDrawSetOutline(wTuning5[1], 0);
	TextDrawSetProportional(wTuning5[1], 1);
	TextDrawSetShadow(wTuning5[1], 0);
	TextDrawUseBox(wTuning5[1], 1);
	TextDrawBoxColor(wTuning5[1], 0);
	TextDrawTextSize(wTuning5[1], 170.000000, 10.000000);
	TextDrawSetSelectable(wTuning5[1], 0);

	wTuning5[2] = TextDrawCreate(88.000000, 190.000000, "nitro 10x");
	TextDrawBackgroundColor(wTuning5[2], 255);
	TextDrawFont(wTuning5[2], 2);
	TextDrawLetterSize(wTuning5[2], 0.300000, 1.000000);
	TextDrawColor(wTuning5[2], -1);
	TextDrawSetOutline(wTuning5[2], 0);
	TextDrawSetProportional(wTuning5[2], 1);
	TextDrawSetShadow(wTuning5[2], 0);
	TextDrawUseBox(wTuning5[2], 1);
	TextDrawBoxColor(wTuning5[2], 0);
	TextDrawTextSize(wTuning5[2], 171.000000, 10.000000);
	TextDrawSetSelectable(wTuning5[2], 0);*/

	for(new i = 5; i < sizeof(wTuning1); i++) { TextDrawSetSelectable(Text:wTuning1[i], true); }
	for(new i = 0; i < sizeof(wTuning2); i++) { TextDrawSetSelectable(Text:wTuning2[i], true); }
	for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawSetSelectable(Text:wTuning3[i], true); }
	for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawSetSelectable(Text:wTuning4[i], true); }
	for(new i = 0; i < sizeof(wTuning5); i++) { TextDrawSetSelectable(Text:wTuning5[i], true); }

	return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if(areaid == PVPZone)
	{
	    playerData[playerid][pPVP] = 1;
	}
	return 1;
}
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	if(areaid == PVPZone)
	{
        playerData[playerid][pPVP] = 0;
	}
	return 1;
}
public OnGameModeExit()
{
	foreach (new i : Player){
		if(playerData[i][IsLoggedIn]){
            UpdateplayerData(i);
		}
	}

	mysql_close(g_SQL);
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	// --> ช่องเก็บของ
	if(playerData[playerid][pInventoryShown])
	{
	    new string[256];
		if(playertextid == inventoryTextdraws[playerid][3]) {
		    toggleInventory(playerid);
		}
		else if(playertextid == inventoryTextdraws[playerid][62] && playerData[playerid][pInventoryPage] > 1) {
		    playerData[playerid][pInventoryPage]--;
			refreshInventory(playerid);
			return 1;
		}
		else if(playertextid == inventoryTextdraws[playerid][64] && playerData[playerid][pInventoryPage] < (MAX_PLAYER_ITEMS / 8)) {
		    playerData[playerid][pInventoryPage]++;
			refreshInventory(playerid);
			return 1;
		}

		if(playerData[playerid][pItemSelected] >= 0) {
		    if(playertextid == inventoryTextdraws[playerid][40])
			{
          		for(new x = 0; x < sizeof(craftFoods); x ++) {
		            if(!strcmp(craftFoods[x], playerItems[playerid][playerData[playerid][pItemSelected]][pItemName])) {
		                playerEatFood(playerid, craftFoods[x]);
		            }
		        }

		        refreshInventory(playerid);
		    }
		    else if(playertextid == inventoryTextdraws[playerid][42]) {
		        if(playerItems[playerid][playerData[playerid][pItemSelected]][pItemAmount] > 1) {

					format(string, sizeof(string), "คุณมี %s เป็นจำนวน %i\n\nกรุณาระบุจำนวนที่คุณต้องการวางลงพื้น:", playerItems[playerid][playerData[playerid][pItemSelected]][pItemName], playerItems[playerid][playerData[playerid][pItemSelected]][pItemAmount]);
					Dialog_Show(playerid, DIALOG_DROPITEM, DIALOG_STYLE_INPUT, "Drop Item", string, "วางลง", "ยกเลิก");
				}
				else {
				    DropPlayerItem(playerid, playerData[playerid][pItemSelected], playerItems[playerid][playerData[playerid][pItemSelected]][pItemAmount]);
		        }
		        return 1;
		    }
		}

		if(playertextid == inventoryTextdraws[playerid][65])
		    dropWeaponFromInventory(playerid, 1);
		else if(playertextid == inventoryTextdraws[playerid][66])
		    dropWeaponFromInventory(playerid, 2);
		else if(playertextid == inventoryTextdraws[playerid][67])
		    dropWeaponFromInventory(playerid, 3);
		else if(playertextid == inventoryTextdraws[playerid][68])
		    dropWeaponFromInventory(playerid, 4);
		else if(playertextid == inventoryTextdraws[playerid][69])
		    dropWeaponFromInventory(playerid, 5);

		/* -------------------------- [Inv Weapons] --------------------------- */
		for(new i = 0; i < 5; i ++) {
			new
			    indexID = (i * 4) + 12;

		    if(playertextid == inventoryTextdraws[playerid][indexID + 2]) {
		        if(!playerData[playerid][pInvWeapons][i]) {
		            new
						weaponID = GetPlayerWeapon(playerid);

				    if(!weaponID) {
				        return SendClientMessage(playerid, COLOR_GREY, "คุณจะต้องถืออาวุธที่คุณต้องการเก็บไว้ในคลังอาวุธ");
					}

					playerData[playerid][pInvWeapons][i] = weaponID;
					playerData[playerid][pInvAmmo][i] = GetPlayerAmmo(playerid);

                    removePlayerWeapon(playerid, weaponID);
                    refreshInventory(playerid);

					format(string, sizeof(string), "** %s ได้นำอาวุธ %s (%i) เก็บไว้ในคลังอาวุธ", GetPlayerNameEx(playerid), WeaponNames[playerData[playerid][pInvWeapons][i]], playerData[playerid][pInvAmmo][i]);
	                SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, string);

					return 1;
				}
				else {
				    //new string[512];

				    if(!givePlayerValidWeapon(playerid, playerData[playerid][pInvWeapons][i], playerData[playerid][pInvAmmo][i])) {
						return notEnoughWeaponSpace(playerid);
					}

		            format(string, sizeof(string), "** %s ได้นำอาวุธ %s (%i) ออกมาจากคลังอาวุธ", GetPlayerNameEx(playerid), WeaponNames[playerData[playerid][pInvWeapons][i]], playerData[playerid][pInvAmmo][i]);
                    SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, string);

	        	    playerData[playerid][pInvWeapons][i] = 0;
	            	playerData[playerid][pInvAmmo][i] = 0;

	            	refreshInventory(playerid);
	            	return 1;
				}
			}
		}
		/* -------------------------- [Inv Items] --------------------------- */
		new start = (playerData[playerid][pInventoryPage] - 1) * 8;

		for(new i = start; i < start + 8; i ++) {
		    new
		        indexID = ((i % 8) * 2) + 46;

            if(playertextid == inventoryTextdraws[playerid][indexID]) {
                if(playerItems[playerid][i][pItemExists]) {
					selectInventoryItem(playerid, i);
				}
			}
		}
		return 1;
	}

	// ไมล์ความเร็วรถ
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER){
	
		new vehicleID = GetPlayerVehicleID(playerid), szMessage[256];
		if(playertextid == ui_vehControl[playerid][4]){
			callcmd::en(playerid, "\1");
			refreshVehControl(playerid);

		}else if(playertextid == ui_vehControl[playerid][11]){
			callcmd::lock(playerid, "\1");
			refreshVehControl(playerid);

		}else if(playertextid == ui_vehControl[playerid][12]){
			callcmd::lights(playerid, "\1");
			refreshVehControl(playerid);

		}else if(playertextid == ui_vehControl[playerid][13]){
			if (!getHoodState(vehicleID)) {

				setHoodState(vehicleID, true);
				SendClientMessage(playerid, COLOR_WHITE, "คุณได้ทำการเปิดประโปรงหน้ารถ");

				format(szMessage, sizeof(szMessage), "* %s เปิดฝากระโปรงหน้ารถขึ้น", GetPlayerNameEx(playerid));
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, szMessage);
				
				refreshVehControl(playerid);
			}
			else {

				setHoodState(vehicleID, false);
				SendClientMessage(playerid, COLOR_WHITE, "คุณได้ทำการปิดประโปรงหน้ารถ");

				format(szMessage, sizeof(szMessage), "* %s ปิดฝากระโปรงหน้ารถลงมา", GetPlayerNameEx(playerid));
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, szMessage);
				refreshVehControl(playerid);
			}

		}else if(playertextid == ui_vehControl[playerid][14]){
			if (!getTrunkState(vehicleID)) {

				setTrunkState(vehicleID, true);
				SendClientMessage(playerid, COLOR_WHITE, "คุณได้ทำการเปิดประโปรงหลัง");

				format(szMessage, sizeof(szMessage), "* %s เปิดช่องเก็บของหลังรถขึ้น", GetPlayerNameEx(playerid));
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, szMessage);
				refreshVehControl(playerid);
			}
			else {

				setTrunkState(vehicleID, false);
				SendClientMessage(playerid, COLOR_WHITE, "คุณได้ทำการปิดประโปรงหลัง");

				format(szMessage, sizeof(szMessage), "* %s ปิดช่องเก็บของหลังรถลง", GetPlayerNameEx(playerid));
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, szMessage);
				refreshVehControl(playerid);
			}

		}else if(playertextid == ui_vehControl[playerid][15]){
			callcmd::vtrunk(playerid, "\1");
		}else if(playertextid == ui_vehControl[playerid][17]){
			/*foreach(new v : Player) {
				for (new i = 0; i < MAX_PLAYER_VEHICLES; i ++) {
					if(GetPlayerVehicleID(playerid) == playerVehicles[v][i][pCarID]) {
						SavePlayerVehicle(v, i);
						SendClientMessage(playerid, COLOR_WHITE, "คุณได้ทำการบันทึกข้อมูลยานพาหนะนี้เสร็จสิ้น");
					}
				}
			}*/
			callcmd::park(playerid, "\1");
		}else if(playertextid == ui_vehControl[playerid][7]){ //cancel
			CancelSelectTextDraw(playerid);
			for(new i = 0; i < 18; i ++) {
				PlayerTextDrawHide(playerid, ui_vehControl[playerid][i]);
			}
			TogglePlayerControllable(playerid, 1);
		}
	}
	
	// --> กาชาปอง
    if(playertextid == GachaTextDraws[playerid][9])
    {
		if (!Inventory_HasItem(playerid, "Kachapong"))
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่มี 'กล่องกาชาปอง'");

		if (Lucky_ActiveLast[playerid] == 1)
		    return SendClientMessage(playerid, COLOR_GREY, "คุณอยู่ระหว่างการสุ่มกาชาปอง");

		if (GetSpawnedVehicles(playerid) >= MAX_SPAWNED_VEHICLES)
		{
			return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถส่วนตัวของคุณจอดครบ %d คันแล้ว กรุณาเก็บคันใดคันนึง", MAX_SPAWNED_VEHICLES);
		}

       	Inventory_Remove(playerid, "Kachapong", 1);

		new Msg[128];
		format(Msg, sizeof(Msg), "Key: %d", Inventory_Count(playerid, "Kachapong"));
		PlayerTextDrawSetString(playerid, GachaTextDraws[playerid][11], Msg);

        Lucky_ActiveLast[playerid] = 1;
        SendClientMessage(playerid, COLOR_GREEN, "* คุณได้เริ่มต้นการสุ่มกล่องกาชาปองแล้ว");

        PlayAudioStreamForPlayer(playerid, "https://www.mboxdrive.com/loot.mp4");
    }

	if (playertextid == PhoneTextDraws[playerid][27])
	{
	    HidePhone(playerid);
	}
	
	if (playertextid == PhoneTextDraws[playerid][21]) // หมอ
	{
		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบมือถือขึ้นมาแล้วโทรออก", GetPlayerNameEx(playerid));

		playerData[playerid][pEmergency] = 3;
		SendClientMessage(playerid, COLOR_HOSPITAL, "[พนักงาน]:{FFFFFF} สายถูกโอนไปที่โรงพยาบาล โปรดระบุเหตุฉุกเฉินของคุณ");
        HidePhone(playerid);
	}

	if (playertextid == PhoneTextDraws[playerid][22]) // ตำรวจ
	{
		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบมือถือขึ้นมาแล้วโทรออก", GetPlayerNameEx(playerid));

 		playerData[playerid][pEmergency] = 2;
 		SendClientMessage(playerid, COLOR_LIGHTBLUE, "[พนักงาน]:{FFFFFF} สายถูกโอนไปที่สถานีตำรวจ โปรดระบุเหตุฉุกเฉินของคุณ");
        HidePhone(playerid);
	}

	if (playertextid == PhoneTextDraws[playerid][23]) // ช่างซ่อมรถ
	{
		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบมือถือขึ้นมาแล้วโทรออก", GetPlayerNameEx(playerid));

 		playerData[playerid][pEmergency] = 4;
 		SendClientMessage(playerid, COLOR_LIGHTBLUE, "[พนักงาน]:{FFFFFF} สายถูกโอนไปที่ช่างซ่อมรถ โปรดระบุข้อความที่ต้องการแจ้ง");
        HidePhone(playerid);
	}

	if (playertextid == PhoneTextDraws[playerid][24]) // Call
	{
		if (playerData[playerid][pPhoneOff])
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

		Dialog_Show(playerid, DIALOG_DIALNUMBER, DIALOG_STYLE_INPUT, "[หมายเลขที่ต้องการโทร]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะติดต่อ", "โทร", "กลับ");
        HidePhone(playerid);
	}

	if (playertextid == PhoneTextDraws[playerid][25]) // Contact
	{
		if (playerData[playerid][pPhoneOff])
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

		ShowContacts(playerid);
        HidePhone(playerid);
	}

	if (playertextid == PhoneTextDraws[playerid][26]) // Twitter
	{
		if (playerData[playerid][pPhoneOff])
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

		Dialog_Show(playerid, DIALOG_TWITTER, DIALOG_STYLE_INPUT, "[กรุณาระบุข้อความ Twitter]", "{FFFFFF}กรุณาระบุข้อความที่คุณต้องการจะโพสต์ :", "ตกลง", "ยกเลิก");
        HidePhone(playerid);
	}

	// --> หน้าเมนูช่วยเหลือกด Y

    if (playertextid == AMZTextDraws[playerid][13])
    {
        toggleInventory(playerid);
        HideYMenuTextDraws(playerid);
        return 1;
    }

    if (playertextid == AMZTextDraws[playerid][14])
    {
        if (GetFactionType(playerid) == FACTION_POLICE)
        {
            HideYMenuTextDraws(playerid);
			return Dialog_Show(playerid, DIALOG_POLICE, DIALOG_STYLE_LIST, "[เมนูตำรวจ]", "{FFFFFF}+ ใส่กุญแจมือ\n+ ค้นตัว\n+ ยึดของผิดกฎหมาย\n+ ค้นรถส่วนตัว\n+ ปลดกุญแจมือ\n+ ลาก\n+ ลากขึ้น/ลงรถ\n+ ปรับเงิน\n+ ปืนช็อตไฟฟ้า\n+ ค้นหา", "ตกลง", "ยกเลิก");
        }

        if (GetFactionType(playerid) == FACTION_MEDIC)
        {
            HideYMenuTextDraws(playerid);
			return Dialog_Show(playerid, DIALOG_MEDIC, DIALOG_STYLE_LIST, "[เมนูแพทย์]", "{FFFFFF}+ รักษา\n+ ชุบชีวิต\n+ ค้นหา", "ตกลง", "ยกเลิก");
        }

        if (GetFactionType(playerid) == FACTION_MEC)
        {
            HideYMenuTextDraws(playerid);
			return Dialog_Show(playerid, DIALOG_MECHANIC_KEY, DIALOG_STYLE_LIST, "[เมนูช่างซ่อมรถ]", "{FFFFFF}+ ซ่อมรถ\n+ เติมน้ำมัน\n+ แต่งรถ\n+ ค้นหา", "ตกลง", "ยกเลิก");
        }
        
        else
        {
            return callcmd::help(playerid, "\1");
        }
    }

    if (playertextid == AMZTextDraws[playerid][15])
    {
        callcmd::car(playerid, "\1");
        HideYMenuTextDraws(playerid);
        return 1;
    }

    if (playertextid == AMZTextDraws[playerid][16])
    {
        callcmd::gps(playerid, "\1");
        HideYMenuTextDraws(playerid);
        return 1;
    }

    if (playertextid == AMZTextDraws[playerid][17])
    {
		//callcmd::wp(playerid, "\1");
		HideYMenuTextDraws(playerid);
		return 1;
    }
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{

	// คราฟอาวุธ
	if(clickedid == WeaponCraft[4])
	{
		HideCraftWeapon(playerid);
	}
	if(clickedid == WeaponCraft[7])
	{
	    ShowCraftWeaponType(playerid, 1);
	}
	if(clickedid == WeaponCraft[10])
	{
	    ShowCraftWeaponType(playerid, 2);
	}
	if(clickedid == WeaponCraft[13])
	{
	    ShowCraftWeaponType(playerid, 3);
	}
	if(clickedid == WeaponCraft[15])
	{
	    ShowCraftWeaponType(playerid, 4);
	}
	if(clickedid == WeaponCraft[21])
	{
	    ShowCraftWeaponType(playerid, 5);
	}
	if(clickedid == WeaponCraft[18])
	{
	    ShowCraftWeaponType(playerid, 6);
	}
	//
	if(clickedid == ItemWPCraft[6])
	{
	    HideCraftWeaponType(playerid);
	}
	
	// คราฟอาวุธ
	if(clickedid == ItemWPCraft[20])
	{
	    switch (CraftType[playerid])
	    {
	        case 0: { }
	        case 1:
	        {
	            if (playerData[playerid][pMaterials] < 50)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีดินปืนไม่เพียงพอ! (50)");

	            if (playerData[playerid][pWoods] < 100)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีไม้ไม่เพียงพอ! (100)");

	            if (playerData[playerid][pIrons] < 100)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีเหล็กไม่เพียงพอ! (100)");

	            if (GetPlayerMoneyEx(playerid) < 20000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินเขียวไม่เพียงพอ! ($20,000)");

			    if (shellTake[playerid] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการสร้างอาวุธ");

				ApplyAnimation(playerid, "BD_FIRE", "wash_up", 4.0, 1, 0, 0, 0, 0, 1);
				StartProgress(playerid, 100, 0, 0);
				shellTake[playerid] = 2;
	        }
	        case 2:
	        {
	            if (playerData[playerid][pMaterials] < 80)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีดินปืนไม่เพียงพอ! (80)");

	            if (playerData[playerid][pWoods] < 50)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีไม้ไม่เพียงพอ! (50)");

	            if (playerData[playerid][pIrons] < 150)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีเหล็กไม่เพียงพอ! (150)");

	            if (GetPlayerMoneyEx(playerid) < 30000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินเขียวไม่เพียงพอ! ($30,000)");

			    if (shellTake[playerid] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการสร้างอาวุธ");

				ApplyAnimation(playerid, "BD_FIRE", "wash_up", 4.0, 1, 0, 0, 0, 0, 1);
				StartProgress(playerid, 100, 0, 0);
				shellTake[playerid] = 2;
	        }
	        case 3:
	        {
	            if (playerData[playerid][pMaterials] < 100)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีดินปืนไม่เพียงพอ! (100)");

	            if (playerData[playerid][pWoods] < 200)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีไม้ไม่เพียงพอ! (200)");

	            if (playerData[playerid][pIrons] < 200)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีเหล็กไม่เพียงพอ! (200)");

	            if (GetPlayerMoneyEx(playerid) < 40000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินเขียวไม่เพียงพอ! ($40,000)");

			    if (shellTake[playerid] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการสร้างอาวุธ");

				ApplyAnimation(playerid, "BD_FIRE", "wash_up", 4.0, 1, 0, 0, 0, 0, 1);
				StartProgress(playerid, 100, 0, 0);
				shellTake[playerid] = 2;
	        }
	        case 4:
	        {
	            if (playerData[playerid][pMaterials] < 130)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีดินปืนไม่เพียงพอ! (130)");

	            if (playerData[playerid][pWoods] < 150)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีไม้ไม่เพียงพอ! (150)");

	            if (playerData[playerid][pIrons] < 150)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีเหล็กไม่เพียงพอ! (150)");

	            if (GetPlayerMoneyEx(playerid) < 40000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินเขียวไม่เพียงพอ! ($40,000)");

			    if (shellTake[playerid] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการสร้างอาวุธ");

				ApplyAnimation(playerid, "BD_FIRE", "wash_up", 4.0, 1, 0, 0, 0, 0, 1);
				StartProgress(playerid, 100, 0, 0);
				shellTake[playerid] = 2;
	        }
	        case 5:
	        {
	            if (playerData[playerid][pMaterials] < 200)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีดินปืนไม่เพียงพอ! (200)");

	            if (playerData[playerid][pWoods] < 250)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีไม้ไม่เพียงพอ! (250)");

	            if (playerData[playerid][pIrons] < 300)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีเหล็กไม่เพียงพอ! (300)");

	            if (GetPlayerMoneyEx(playerid) < 50000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินเขียวไม่เพียงพอ! ($50,000)");

			    if (shellTake[playerid] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการสร้างอาวุธ");

				ApplyAnimation(playerid, "BD_FIRE", "wash_up", 4.0, 1, 0, 0, 0, 0, 1);
				StartProgress(playerid, 100, 0, 0);
				shellTake[playerid] = 2;
	        }
	        case 6:
	        {
	            if (playerData[playerid][pMaterials] < 200)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีดินปืนไม่เพียงพอ! (200)");

	            if (playerData[playerid][pWoods] < 250)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีไม้ไม่เพียงพอ! (250)");

	            if (playerData[playerid][pIrons] < 300)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คลังของคุณมีเหล็กไม่เพียงพอ! (300)");

	            if (GetPlayerMoneyEx(playerid) < 50000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินเขียวไม่เพียงพอ! ($50,000)");

			    if (shellTake[playerid] != 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการสร้างอาวุธ");

				ApplyAnimation(playerid, "BD_FIRE", "wash_up", 4.0, 1, 0, 0, 0, 0, 1);
				StartProgress(playerid, 100, 0, 0);
				shellTake[playerid] = 2;
	        }
	    }
		return 1;
	}

	//
    new wVeiculo; wVeiculo = GetPlayerVehicleID(playerid);
    if(clickedid == wTuning1[6]) // X CLOSE
    {
            for(new i = 0; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++)       { TextDrawHideForPlayer(playerid, wTuning5[i]); }
            CancelSelectTextDraw(playerid);
    }

    if(clickedid == wTuning1[7]) //WHEELS
    {

            for(new i = 14; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++)       { TextDrawHideForPlayer(playerid, wTuning5[i]); }

            for(new i = 0; i < sizeof(wTuning2); i++) { TextDrawShowForPlayer(playerid, wTuning2[i]); }
    }
    if(clickedid == wTuning1[8]) // COLOR
    {

            for(new i = 14; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++) { TextDrawHideForPlayer(playerid, wTuning5[i]); }

            for(new i = 11; i < sizeof(wTuning1); i++) { TextDrawShowForPlayer(playerid, wTuning1[i]); }
    }
    if(clickedid == wTuning1[9]) // PAINTJOBS
    {

            for(new i = 14; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++) { TextDrawHideForPlayer(playerid, wTuning5[i]); }

            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawShowForPlayer(playerid, wTuning4[i]); }
    }
    /*if(clickedid == wTuning1[10]) // NITRO
    {

            for(new i = 14; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }

            for(new i = 0; i < sizeof(wTuning5); i++) { TextDrawShowForPlayer(playerid, wTuning5[i]); }
    }*/
    if(clickedid == wTuning1[11]) // HYDRAULICS
    {
            AddVehicleComponent(wVeiculo,1087);
    }
    /*if(clickedid == wTuning1[12]) //NEON
    {

            for(new i = 14; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++) { TextDrawHideForPlayer(playerid, wTuning5[i]); }

            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawShowForPlayer(playerid, wTuning3[i]); }
    }
    if(clickedid == wTuning1[13]) //AUTO TUNING
    {
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 483)
            {

                    AddVehicleComponent(wVeiculo,1027);
                    ChangeVehiclePaintjob(wVeiculo, 0);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
            {
                    AddVehicleComponent(wVeiculo,1046);
                    AddVehicleComponent(wVeiculo,1171);
                    AddVehicleComponent(wVeiculo,1149);
                    AddVehicleComponent(wVeiculo,1035);
                    AddVehicleComponent(wVeiculo,1147);
                    AddVehicleComponent(wVeiculo,1036);
                    AddVehicleComponent(wVeiculo,1040);
                    ChangeVehiclePaintjob(wVeiculo, 2);
                    ChangeVehicleColor(wVeiculo, 6, 6);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
            {
                    AddVehicleComponent(wVeiculo,1028);
                    AddVehicleComponent(wVeiculo,1169);
                    AddVehicleComponent(wVeiculo,1141);
                    AddVehicleComponent(wVeiculo,1032);
                    AddVehicleComponent(wVeiculo,1138);
                    AddVehicleComponent(wVeiculo,1026);
                    AddVehicleComponent(wVeiculo,1027);
                    ChangeVehiclePaintjob(wVeiculo, 2);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
            {


                    AddVehicleComponent(wVeiculo,1046);
                    AddVehicleComponent(wVeiculo,1153);
                    AddVehicleComponent(wVeiculo,1150);
                    AddVehicleComponent(wVeiculo,1054);
                    AddVehicleComponent(wVeiculo,1049);
                    AddVehicleComponent(wVeiculo,1047);
                    AddVehicleComponent(wVeiculo,1051);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 2);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
            {

                    AddVehicleComponent(wVeiculo,1065);
                    AddVehicleComponent(wVeiculo,1160);
                    AddVehicleComponent(wVeiculo,1159);
                    AddVehicleComponent(wVeiculo,1067);
                    AddVehicleComponent(wVeiculo,1162);
                    AddVehicleComponent(wVeiculo,1069);
                    AddVehicleComponent(wVeiculo,1071);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 1);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
            {

                    AddVehicleComponent(wVeiculo,1064);
                    AddVehicleComponent(wVeiculo,1155);
                    AddVehicleComponent(wVeiculo,1154);
                    AddVehicleComponent(wVeiculo,1055);
                    AddVehicleComponent(wVeiculo,1158);
                    AddVehicleComponent(wVeiculo,1056);
                    AddVehicleComponent(wVeiculo,1062);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 2);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
            {
                    AddVehicleComponent(wVeiculo,1089);
                    AddVehicleComponent(wVeiculo,1166);
                    AddVehicleComponent(wVeiculo,1168);
                    AddVehicleComponent(wVeiculo,1088);
                    AddVehicleComponent(wVeiculo,1164);
                    AddVehicleComponent(wVeiculo,1090);
                    AddVehicleComponent(wVeiculo,1094);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 2);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575)
            {
                    AddVehicleComponent(wVeiculo,1044);
                    AddVehicleComponent(wVeiculo,1174);
                    AddVehicleComponent(wVeiculo,1176);
                    AddVehicleComponent(wVeiculo,1042);
                    AddVehicleComponent(wVeiculo,1099);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 0);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
            {
                    AddVehicleComponent(wVeiculo,1126);
                    AddVehicleComponent(wVeiculo,1179);
                    AddVehicleComponent(wVeiculo,1180);
                    AddVehicleComponent(wVeiculo,1122);
                    AddVehicleComponent(wVeiculo,1101);
                    AddVehicleComponent(wVeiculo,1125);
                    AddVehicleComponent(wVeiculo,1123);
                    AddVehicleComponent(wVeiculo,1100);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 2);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
            {
                    AddVehicleComponent(wVeiculo,1104);
                    AddVehicleComponent(wVeiculo,1182);
                    AddVehicleComponent(wVeiculo,1184);
                    AddVehicleComponent(wVeiculo,1108);
                    AddVehicleComponent(wVeiculo,1107);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 1);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
            {
                    AddVehicleComponent(wVeiculo,1129);
                    AddVehicleComponent(wVeiculo,1189);
                    AddVehicleComponent(wVeiculo,1187);
                    AddVehicleComponent(wVeiculo,1102);
                    AddVehicleComponent(wVeiculo,1133);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    ChangeVehiclePaintjob(wVeiculo, 2);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420)
            {
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1087);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1139);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 400)
            {
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1087);
                    AddVehicleComponent(wVeiculo,1018);
                    AddVehicleComponent(wVeiculo,1013);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1086);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 401)
            {
                    AddVehicleComponent(wVeiculo,1086);
                    AddVehicleComponent(wVeiculo,1139);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1087);
                    AddVehicleComponent(wVeiculo,1012);
                    AddVehicleComponent(wVeiculo,1013);
                    AddVehicleComponent(wVeiculo,1042);
                    AddVehicleComponent(wVeiculo,1043);
                    AddVehicleComponent(wVeiculo,1018);
                    AddVehicleComponent(wVeiculo,1006);
                    AddVehicleComponent(wVeiculo,1007);
                    AddVehicleComponent(wVeiculo,1017);
            }
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
            {
                    ChangeVehiclePaintjob(wVeiculo,2);
                    AddVehicleComponent(wVeiculo,1191);
                    AddVehicleComponent(wVeiculo,1193);
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1018);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
                    AddVehicleComponent(wVeiculo,1134);
                    AddVehicleComponent(wVeiculo,1137);
            }
            else
            {
                    AddVehicleComponent(wVeiculo,1010);
                    AddVehicleComponent(wVeiculo,1079);
                    AddVehicleComponent(wVeiculo,1087);
            }
            return 1;
    }*/
    if(clickedid == wTuning2[0]){ // SHADOW
            AddVehicleComponent(wVeiculo,1073);
            return 1;
    }
    if(clickedid == wTuning2[1]){ // MEGA
            AddVehicleComponent(wVeiculo, 1074);
            return 1;
    }
    if(clickedid == wTuning2[2]){  // RINSHIME
            AddVehicleComponent(wVeiculo,1075);
            return 1;
    }
    if(clickedid == wTuning2[3]){ // WIRES
            AddVehicleComponent(wVeiculo,1076);
            return 1;
    }
    if(clickedid == wTuning2[4]){ // CLASSIC
            AddVehicleComponent(wVeiculo,1077);
            return 1;
    }
    if(clickedid == wTuning2[5]){ // TWIST
            AddVehicleComponent(wVeiculo,1078);
            return 1;
    }
    if(clickedid == wTuning2[6]){ // CUTTER
            AddVehicleComponent(wVeiculo,1079);
            return 1;
    }
    if(clickedid == wTuning2[7]){ // DOLLAR
            AddVehicleComponent(wVeiculo,1083);
            return 1;
    }
    if(clickedid == wTuning2[8]){ // ATOMIC
            AddVehicleComponent(wVeiculo,1085);
            return 1;
    }

    if(clickedid == wTuning1[14]){ // BLACK
            SetVehicleColor(wVeiculo, 0, 0);
            return 1;
    }
    if(clickedid == wTuning1[15]){ // WHITE
            SetVehicleColor(wVeiculo, 1, 1);
            return 1;
    }
    if(clickedid == wTuning1[16]){ // GREEN
            SetVehicleColor(wVeiculo, 128, 128);
            return 1;
    }
    if(clickedid == wTuning1[17]){ // CYAN
            SetVehicleColor(wVeiculo, 135, 135);
            return 1;
    }
    if(clickedid == wTuning1[18]){ // BLUE
            SetVehicleColor(wVeiculo, 152, 152);
            return 1;
    }
    if(clickedid == wTuning1[19]){ // YELLOW
            SetVehicleColor(wVeiculo, 6, 6);
            return 1;
    }
    if(clickedid == wTuning1[20]){ // GRAY
            SetVehicleColor(wVeiculo, 252, 252);
            return 1;
    }
    if(clickedid == wTuning1[21]){ // PINK
            SetVehicleColor(wVeiculo, 146, 146);
            return 1;
    }
    if(clickedid == wTuning1[22]){ // ORANGE
            SetVehicleColor(wVeiculo, 219, 219);
            return 1;
    }
    if(clickedid == wTuning4[0]){ // PAINTJOBS 1
            ChangeVehiclePaintjob(wVeiculo, 0);
            return 1;
    }
    if(clickedid == wTuning4[1]){ // PAINTJOBS 2
            ChangeVehiclePaintjob(wVeiculo, 2);
            return 1;
    }
    if(clickedid == wTuning4[2]){ // PAINTJOBS 2
            ChangeVehiclePaintjob(wVeiculo, 3);
            return 1;
    }
    /*if(clickedid == wTuning5[0]){ // NITRO 1
            AddVehicleComponent(wVeiculo,1009);
            return 1;
    }
    if(clickedid == wTuning5[1]){ // NITRO 2
            AddVehicleComponent(wVeiculo,1008);
            return 1;
    }
    if(clickedid == wTuning5[2]){ // NITRO 3
            AddVehicleComponent(wVeiculo,1010);
            return 1;
    }*/

    /*if(clickedid == wTuning3[0]){
            SetPVarInt(playerid, "neon", 1);
            SetPVarInt(playerid, "blue", CreateObject(18648,0,0,0,0,0,0));
            SetPVarInt(playerid, "blue1", CreateObject(18648,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "blue"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "blue1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            return 1;
    }

    if(clickedid == wTuning3[1]){
            SetPVarInt(playerid, "neon", 1);
            SetPVarInt(playerid, "yellow", CreateObject(18650,0,0,0,0,0,0));
            SetPVarInt(playerid, "yellow1", CreateObject(18650,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "yellow"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "yellow1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            return 1;
    }
    if(clickedid == wTuning3[2]){
            SetPVarInt(playerid, "neon", 1);
            SetPVarInt(playerid, "white", CreateObject(18652,0,0,0,0,0,0));
            SetPVarInt(playerid, "white1", CreateObject(18652,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "white"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "white1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            return 1;
    }
    if(clickedid == wTuning3[3]){
            SetPVarInt(playerid, "neon", 1);
            SetPVarInt(playerid, "pink", CreateObject(18651,0,0,0,0,0,0));
            SetPVarInt(playerid, "pink1", CreateObject(18651,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "pink"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "pink1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            return 1;
    }
    if(clickedid == wTuning3[4]){
            SetPVarInt(playerid, "neon", 1);
            SetPVarInt(playerid, "green", CreateObject(18649,0,0,0,0,0,0));
            SetPVarInt(playerid, "green1", CreateObject(18649,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "green"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "green1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            return 1;
    }
    if(clickedid == wTuning3[5]){
            DestroyObject(GetPVarInt(playerid, "blue"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "blue1"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "green"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "green1"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "yellow"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "yellow1"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "white"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "white1"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "pink"));
            DeletePVar(playerid, "neon");
            DestroyObject(GetPVarInt(playerid, "pink1"));
            DeletePVar(playerid, "neon");
            return 1;
    }*/
    if(clickedid == Text:INVALID_TEXT_DRAW)
    {
            for(new i = 0; i < sizeof(wTuning1); i++) { TextDrawHideForPlayer(playerid, wTuning1[i]); }
            for(new i = 0; i < sizeof(wTuning2); i++)       { TextDrawHideForPlayer(playerid, wTuning2[i]); }
            for(new i = 0; i < sizeof(wTuning3); i++) { TextDrawHideForPlayer(playerid, wTuning3[i]); }
            for(new i = 0; i < sizeof(wTuning4); i++) { TextDrawHideForPlayer(playerid, wTuning4[i]); }
            for(new i = 0; i < sizeof(wTuning5); i++)       { TextDrawHideForPlayer(playerid, wTuning5[i]); }
    }

	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	if (!playerData[playerid][IsLoggedIn])
	{
	    TogglePlayerSpectating(playerid, 1);
		SetTimerEx("OnAccountCheck", 400, false, "d", playerid);
	}
	else
	{
	    SpawnPlayer(playerid);
	}
	return 1;
}

forward UpdateTime();
public UpdateTime()
{
	static
	    time[3];

	gettime(time[0], time[1], time[2]);

	foreach (new i : Player)
	{
		SetPlayerTime(i, time[0], time[1]);
	}
	SetTimer("UpdateTime", 30000, false);
}

forward OnAccountCheck(playerid);
public OnAccountCheck(playerid)
{
	OnAccountCheckCamera(playerid);
	OnAccountCheckMySQL(playerid);
	return 1;
}

OnAccountCheckCamera(playerid)
{
	SetPlayerCameraPos(playerid, -1762.7764, 886.1344, 305.2547);
	SetPlayerCameraLookAt(playerid, -1762.0156, 885.4888, 304.5006);
	return 1;
}

OnAccountCheckMySQL(playerid)
{
	new query[103];
	mysql_format(g_SQL, query, sizeof query, "SELECT * FROM `players` WHERE `playerName` = '%e' LIMIT 1", GetPlayerNameEx(playerid));
	mysql_tquery(g_SQL, query, "OnPlayerLoaded", "d", playerid);
	return 1;
}

CreatePlayerStuff(playerid)
{
	// Death message
	PlayerDeathTD[playerid] = CreatePlayerTextDraw(playerid, 216.000000, 357.000000, "Respawn available in 02 minutes 58 seconds");
	PlayerTextDrawFont(playerid, PlayerDeathTD[playerid], 2);
	PlayerTextDrawLetterSize(playerid, PlayerDeathTD[playerid], 0.212500, 1.499999);
	PlayerTextDrawTextSize(playerid, PlayerDeathTD[playerid], 446.000000, 31.000000);
	PlayerTextDrawSetOutline(playerid, PlayerDeathTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerDeathTD[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerDeathTD[playerid], 1);
	PlayerTextDrawColor(playerid, PlayerDeathTD[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerDeathTD[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerDeathTD[playerid], 50);
	PlayerTextDrawUseBox(playerid, PlayerDeathTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PlayerDeathTD[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerDeathTD[playerid], 0);

	PhoneTextDraws[playerid][0] = CreatePlayerTextDraw(playerid, 449.000000, 164.000000, "_");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][0], 0.600000, 18.600006);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][0], 298.500000, 110.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][0], 2);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][0], 255);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][0], 0);

	PhoneTextDraws[playerid][1] = CreatePlayerTextDraw(playerid, 449.000000, 177.000000, "_");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][1], 0.600000, 14.600008);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][1], 298.500000, 100.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][1], 2);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][1], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][1], 1296911871);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][1], 0);

	PhoneTextDraws[playerid][2] = CreatePlayerTextDraw(playerid, 450.000000, 184.000000, "_");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][2], 0.600000, 1.200010);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][2], 298.500000, 100.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][2], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][2], 2);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][2], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][2], -226);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][2], 0);

	PhoneTextDraws[playerid][3] = CreatePlayerTextDraw(playerid, 450.000000, 206.000000, "_");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][3], 0.600000, 1.200010);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][3], 298.500000, 100.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][3], 2);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][3], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][3], -226);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][3], 0);

	PhoneTextDraws[playerid][4] = CreatePlayerTextDraw(playerid, 450.000000, 228.000000, "_");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][4], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][4], 0.600000, 1.200010);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][4], 298.500000, 100.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][4], 2);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][4], -226);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][4], 0);

	PhoneTextDraws[playerid][5] = CreatePlayerTextDraw(playerid, 450.000000, 250.000000, "_");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][5], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][5], 0.600000, 1.200010);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][5], 298.500000, 100.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][5], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][5], 2);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][5], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][5], -226);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][5], 0);

	PhoneTextDraws[playerid][6] = CreatePlayerTextDraw(playerid, 450.000000, 273.000000, "_");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][6], 0.600000, 1.200010);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][6], 298.500000, 100.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][6], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][6], 2);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][6], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][6], -226);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][6], 0);

	PhoneTextDraws[playerid][7] = CreatePlayerTextDraw(playerid, 450.000000, 297.000000, "_");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][7], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][7], 0.600000, 1.200010);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][7], 298.500000, 100.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][7], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][7], 2);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][7], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][7], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][7], -226);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][7], 0);

	PhoneTextDraws[playerid][8] = CreatePlayerTextDraw(playerid, 400.000000, 183.000000, ">");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][8], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][8], 0.358333, 1.200000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][8], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][8], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][8], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][8], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][8], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][8], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][8], 0);

	PhoneTextDraws[playerid][9] = CreatePlayerTextDraw(playerid, 400.000000, 205.000000, ">");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][9], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][9], 0.358333, 1.200000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][9], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][9], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][9], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][9], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][9], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][9], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][9], 0);

	PhoneTextDraws[playerid][10] = CreatePlayerTextDraw(playerid, 400.000000, 227.000000, ">");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][10], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][10], 0.358333, 1.200000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][10], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][10], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][10], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][10], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][10], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][10], 0);

	PhoneTextDraws[playerid][11] = CreatePlayerTextDraw(playerid, 400.000000, 249.000000, ">");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][11], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][11], 0.358333, 1.200000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][11], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][11], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][11], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][11], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][11], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][11], 0);

	PhoneTextDraws[playerid][12] = CreatePlayerTextDraw(playerid, 400.000000, 272.000000, ">");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][12], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][12], 0.358333, 1.200000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][12], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][12], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][12], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][12], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][12], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][12], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][12], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][12], 0);

	PhoneTextDraws[playerid][13] = CreatePlayerTextDraw(playerid, 400.000000, 297.000000, ">");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][13], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][13], 0.358333, 1.200000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][13], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][13], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][13], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][13], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][13], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][13], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][13], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][13], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][13], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][13], 0);

	PhoneTextDraws[playerid][14] = CreatePlayerTextDraw(playerid, 414.000000, 184.000000, "HUD:radar_hostpital");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][14], 4);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][14], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][14], 12.500000, 10.500000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][14], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][14], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][14], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][14], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][14], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][14], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][14], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][14], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][14], 0);

	PhoneTextDraws[playerid][15] = CreatePlayerTextDraw(playerid, 414.000000, 206.000000, "HUD:radar_police");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][15], 4);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][15], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][15], 12.500000, 10.500000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][15], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][15], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][15], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][15], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][15], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][15], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][15], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][15], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][15], 0);

	PhoneTextDraws[playerid][16] = CreatePlayerTextDraw(playerid, 414.000000, 228.000000, "HUD:radar_modgarage");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][16], 4);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][16], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][16], 12.500000, 10.500000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][16], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][16], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][16], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][16], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][16], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][16], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][16], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][16], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][16], 0);

	PhoneTextDraws[playerid][17] = CreatePlayerTextDraw(playerid, 414.000000, 250.000000, "HUD:radar_runway");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][17], 4);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][17], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][17], 12.500000, 10.500000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][17], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][17], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][17], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][17], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][17], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][17], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][17], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][17], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][17], 0);

	PhoneTextDraws[playerid][18] = CreatePlayerTextDraw(playerid, 414.000000, 273.000000, "HUD:radar_savegame");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][18], 4);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][18], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][18], 12.500000, 10.500000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][18], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][18], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][18], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][18], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][18], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][18], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][18], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][18], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][18], 0);

	PhoneTextDraws[playerid][19] = CreatePlayerTextDraw(playerid, 414.000000, 297.000000, "HUD:radar_toreno");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][19], 4);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][19], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][19], 12.500000, 10.500000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][19], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][19], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][19], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][19], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][19], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][19], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][19], 1);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][19], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][19], 0);

	PhoneTextDraws[playerid][20] = CreatePlayerTextDraw(playerid, 437.000000, 163.000000, "iPhone");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][20], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][20], 0.200000, 1.100000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][20], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][20], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][20], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][20], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][20], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][20], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][20], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][20], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][20], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][20], 0);

	PhoneTextDraws[playerid][21] = CreatePlayerTextDraw(playerid, 433.000000, 184.000000, "Medic");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][21], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][21], 0.200000, 1.100000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][21], 465.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][21], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][21], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][21], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][21], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][21], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][21], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][21], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][21], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][21], 1);

	PhoneTextDraws[playerid][22] = CreatePlayerTextDraw(playerid, 433.000000, 206.000000, "Police");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][22], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][22], 0.200000, 1.100000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][22], 465.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][22], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][22], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][22], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][22], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][22], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][22], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][22], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][22], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][22], 1);

	PhoneTextDraws[playerid][23] = CreatePlayerTextDraw(playerid, 433.000000, 228.000000, "Mechanic");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][23], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][23], 0.200000, 1.100000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][23], 465.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][23], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][23], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][23], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][23], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][23], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][23], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][23], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][23], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][23], 1);

	PhoneTextDraws[playerid][24] = CreatePlayerTextDraw(playerid, 433.000000, 250.000000, "Call");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][24], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][24], 0.200000, 1.100000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][24], 465.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][24], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][24], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][24], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][24], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][24], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][24], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][24], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][24], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][24], 1);

	PhoneTextDraws[playerid][25] = CreatePlayerTextDraw(playerid, 433.000000, 273.000000, "Contact");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][25], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][25], 0.200000, 1.100000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][25], 465.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][25], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][25], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][25], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][25], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][25], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][25], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][25], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][25], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][25], 1);

	PhoneTextDraws[playerid][26] = CreatePlayerTextDraw(playerid, 433.000000, 297.000000, "Twitter");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][26], 1);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][26], 0.200000, 1.100000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][26], 465.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][26], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][26], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][26], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][26], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][26], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][26], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][26], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][26], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][26], 1);

	PhoneTextDraws[playerid][27] = CreatePlayerTextDraw(playerid, 441.000000, 315.000000, "ld_pool:ball");
	PlayerTextDrawFont(playerid, PhoneTextDraws[playerid][27], 4);
	PlayerTextDrawLetterSize(playerid, PhoneTextDraws[playerid][27], 0.200000, 1.100000);
	PlayerTextDrawTextSize(playerid, PhoneTextDraws[playerid][27], 15.500000, 13.000000);
	PlayerTextDrawSetOutline(playerid, PhoneTextDraws[playerid][27], 1);
	PlayerTextDrawSetShadow(playerid, PhoneTextDraws[playerid][27], 0);
	PlayerTextDrawAlignment(playerid, PhoneTextDraws[playerid][27], 1);
	PlayerTextDrawColor(playerid, PhoneTextDraws[playerid][27], -1);
	PlayerTextDrawBackgroundColor(playerid, PhoneTextDraws[playerid][27], 255);
	PlayerTextDrawBoxColor(playerid, PhoneTextDraws[playerid][27], 50);
	PlayerTextDrawUseBox(playerid, PhoneTextDraws[playerid][27], 0);
	PlayerTextDrawSetProportional(playerid, PhoneTextDraws[playerid][27], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneTextDraws[playerid][27], 1);

	// Hungry & Thirsty & Greenmoney & Redmoney & Point & Namejob
	PlayerTD[playerid][0] = CreatePlayerTextDraw(playerid, 534.000000, 118.000000, "10000000");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][0], 2);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][0], 0.208332, 1.549998);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][0], 512.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][0], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][0], 0);

	PlayerTD[playerid][1] = CreatePlayerTextDraw(playerid, 520.000000, 136.000000, "HUD:radar_school");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][1], 4);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][1], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][1], 12.000000, 10.500000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][1], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][1], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][1], 0);

	PlayerTD[playerid][2] = CreatePlayerTextDraw(playerid, 518.000000, 102.000000, "Name:");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][2], 3);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][2], 0.283333, 1.300000);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][2], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][2], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][2], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][2], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][2], 0);

	PlayerTD[playerid][3] = CreatePlayerTextDraw(playerid, 551.000000, 102.000000, "Namew");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][3], 2);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][3], 0.262500, 1.250000);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][3], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][3], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][3], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][3], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][3], 0);

	PlayerTD[playerid][4] = CreatePlayerTextDraw(playerid, 535.000000, 133.000000, "11000000");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][4], 2);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][4], 0.208332, 1.549998);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][4], 512.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][4], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][4], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][4], 0);

	PlayerTD[playerid][5] = CreatePlayerTextDraw(playerid, 520.000000, 121.000000, "HUD:radar_cash");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][5], 4);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][5], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][5], 12.000000, 10.500000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][5], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][5], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][5], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][5], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][5], 0);

	/*PlayerTD[playerid][6] = CreatePlayerTextDraw(playerid, 15.000000, 202.000000, "ld_pool:ball");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][6], 4);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][6], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][6], 20.000000, 21.000000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][6], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][6], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][6], 1097458175);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][6], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][6], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][6], 0);

	PlayerTD[playerid][7] = CreatePlayerTextDraw(playerid, 15.000000, 236.000000, "ld_pool:ball");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][7], 4);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][7], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][7], 20.000000, 21.500000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][7], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][7], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][7], -764862721);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][7], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][7], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][7], 0);

	PlayerTD[playerid][8] = CreatePlayerTextDraw(playerid, 19.000000, 241.000000, "HUD:radar_pizza");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][8], 4);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][8], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][8], 11.500000, 12.000000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][8], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][8], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][8], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][8], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][8], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][8], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][8], 0);*/

	PlayerTD[playerid][9] = CreatePlayerTextDraw(playerid, 503.000000, 102.000000, "HUD:radar_bulldozer");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][9], 4);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][9], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][9], 12.000000, 12.500000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][9], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][9], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][9], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][9], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][9], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][9], 0);

	PlayerTD[playerid][10] = CreatePlayerTextDraw(playerid, 523.000000, 147.000000, "C");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][10], 1);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][10], 0.345833, 1.399999);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][10], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][10], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][10], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][10], 0xFDFF32FF);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][10], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][10], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][10], 0);

	PlayerTD[playerid][11] = CreatePlayerTextDraw(playerid, 535.000000, 146.000000, "12000000");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][11], 2);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][11], 0.208332, 1.549998);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][11], 512.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][11], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][11], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][11], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][11], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][11], 0);

	/*PlayerTD[playerid][12] = CreatePlayerTextDraw(playerid, 20.000000, 205.000000, "HUD:radar_diner");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][12], 4);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][12], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][12], 11.500000, 13.500000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][12], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][12], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][12], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][12], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][12], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][12], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][12], 0);

	PlayerTD[playerid][13] = CreatePlayerTextDraw(playerid, 50.000000, 242.000000, "_");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][13], 1);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][13], 0.625000, 1.049998);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][13], 315.000000, 33.500000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][13], 0);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][13], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][13], 2);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][13], 1687547391);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][13], -2016478465);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][13], -764862763);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][13], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][13], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][13], 0);

	PlayerTD[playerid][14] = CreatePlayerTextDraw(playerid, 39.000000, 240.000000, "110");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][14], 2);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][14], 0.262499, 1.350000);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][14], 54.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][14], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][14], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][14], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][14], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][14], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][14], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][14], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][14], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][14], 0);

	PlayerTD[playerid][15] = CreatePlayerTextDraw(playerid, 50.000000, 208.000000, "_");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][15], 1);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][15], 0.625000, 1.049998);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][15], 315.000000, 33.500000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][15], 0);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][15], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][15], 2);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][15], 1687547391);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][15], -2016478465);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][15], 1097458126);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][15], 1);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][15], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][15], 0);

	PlayerTD[playerid][16] = CreatePlayerTextDraw(playerid, 39.000000, 206.000000, "120");
	PlayerTextDrawFont(playerid, PlayerTD[playerid][16], 2);
	PlayerTextDrawLetterSize(playerid, PlayerTD[playerid][16], 0.262499, 1.350000);
	PlayerTextDrawTextSize(playerid, PlayerTD[playerid][16], 54.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerTD[playerid][16], 1);
	PlayerTextDrawSetShadow(playerid, PlayerTD[playerid][16], 0);
	PlayerTextDrawAlignment(playerid, PlayerTD[playerid][16], 1);
	PlayerTextDrawColor(playerid, PlayerTD[playerid][16], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerTD[playerid][16], 255);
	PlayerTextDrawBoxColor(playerid, PlayerTD[playerid][16], 50);
	PlayerTextDrawUseBox(playerid, PlayerTD[playerid][16], 0);
	PlayerTextDrawSetProportional(playerid, PlayerTD[playerid][16], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerTD[playerid][16], 0);*/
	
	// ไมล์ความเร็วรถ
	/******* ui veh control */
	ui_vehControl[playerid][0] = CreatePlayerTextDraw(playerid, 431.000000, 164.000000, "_"); //Bg
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][0], 1);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][0], 0.600000, 15.150023);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][0], 303.000000, 121.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][0], 0);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][0], 2);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][0], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][0], 135);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][0], 0);

    ui_vehControl[playerid][1] = CreatePlayerTextDraw(playerid, 424.000000, 165.000000, "HUD:radar_impound"); //icon car header
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][1], 4);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][1], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][1], 13.000000, 13.500000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][1], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][1], 1);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][1], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][1], 50);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][1], 0);

    ui_vehControl[playerid][2] = CreatePlayerTextDraw(playerid, 435.000000, 176.000000, "Vehicl Control"); // header
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][2], 2);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][2], 0.183333, 0.900000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][2], 841.000000, 185.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][2], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][2], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][2], 2);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][2], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][2], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][2], 50);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][2], 0);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][2], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][2], 0);

    ui_vehControl[playerid][3] = CreatePlayerTextDraw(playerid, 382.000000, 193.000000, "ld_pool:ball"); // button engine
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][3], 4);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][3], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][3], 28.500000, 34.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][3], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][3], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][3], 1);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][3], 1296911871); //color red -1962934017
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][3], -1);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][3], -206);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][3], 1);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][3], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][3], 0);

    ui_vehControl[playerid][4] = CreatePlayerTextDraw(playerid, 397.000000, 204.000000, "ENGINE");
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][4], 1);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][4], 0.166667, 1.250000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][4], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][4], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][4], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][4], 2);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][4], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][4], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][4], 50);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][4], 0);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][4], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][4], 1);

    ui_vehControl[playerid][5] = CreatePlayerTextDraw(playerid, 417.000000, 193.000000, "ld_pool:ball"); // button lock
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][5], 4);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][5], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][5], 28.500000, 34.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][5], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][5], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][5], 1);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][5], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][5], -1);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][5], -206);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][5], 1);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][5], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][5], 0);

    ui_vehControl[playerid][6] = CreatePlayerTextDraw(playerid, 454.000000, 193.000000, "ld_pool:ball"); // button light
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][6], 4);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][6], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][6], 28.500000, 34.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][6], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][6], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][6], 1);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][6], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][6], -1);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][6], -206);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][6], 1);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][6], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][6], 0);

    ui_vehControl[playerid][7] = CreatePlayerTextDraw(playerid, 483.000000, 146.000000, "X"); //close
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][7], 1);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][7], 0.379166, 1.350000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][7], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][7], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][7], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][7], 2);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][7], -16776961);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][7], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][7], 50);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][7], 1);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][7], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][7], 1);

    ui_vehControl[playerid][8] = CreatePlayerTextDraw(playerid, 382.000000, 234.000000, "ld_pool:ball"); // button Hood
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][8], 4);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][8], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][8], 28.500000, 34.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][8], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][8], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][8], 1);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][8], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][8], -1);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][8], -206);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][8], 1);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][8], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][8], 0);

    ui_vehControl[playerid][9] = CreatePlayerTextDraw(playerid, 418.000000, 234.000000, "ld_pool:ball"); // button TRUCK
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][9], 4);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][9], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][9], 28.500000, 34.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][9], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][9], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][9], 1);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][9], 1296911871);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][9], -1);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][9], -206);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][9], 1);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][9], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][9], 0);

    ui_vehControl[playerid][10] = CreatePlayerTextDraw(playerid, 453.000000, 234.000000, "ld_pool:ball"); // button other
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][10], 4);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][10], 0.600000, 2.000000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][10], 28.500000, 34.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][10], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][10], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][10], 1);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][10], 1433087999);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][10], -1);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][10], -206);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][10], 1);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][10], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][10], 0);

    ui_vehControl[playerid][11] = CreatePlayerTextDraw(playerid, 432.000000, 203.000000, "LOCK");
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][11], 1);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][11], 0.233333, 1.350000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][11], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][11], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][11], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][11], 2);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][11], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][11], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][11], 50);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][11], 0);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][11], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][11], 1);

    ui_vehControl[playerid][12] = CreatePlayerTextDraw(playerid, 469.000000, 204.000000, "LIGHT");
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][12], 1);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][12], 0.220833, 1.150000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][12], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][12], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][12], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][12], 2);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][12], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][12], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][12], 50);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][12], 0);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][12], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][12], 1);

    ui_vehControl[playerid][13] = CreatePlayerTextDraw(playerid, 397.000000, 246.000000, "HOOD");
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][13], 1);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][13], 0.220833, 1.150000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][13], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][13], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][13], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][13], 2);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][13], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][13], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][13], 50);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][13], 0);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][13], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][13], 1);

    ui_vehControl[playerid][14] = CreatePlayerTextDraw(playerid, 433.000000, 247.000000, "TRUCK");
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][14], 1);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][14], 0.195833, 0.950000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][14], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][14], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][14], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][14], 2);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][14], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][14], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][14], 50);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][14], 0);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][14], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][14], 1);

    ui_vehControl[playerid][15] = CreatePlayerTextDraw(playerid, 468.000000, 247.000000, "Other");
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][15], 1);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][15], 0.195833, 0.950000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][15], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][15], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][15], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][15], 2);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][15], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][15], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][15], 50);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][15], 0);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][15], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][15], 1);

    ui_vehControl[playerid][16] = CreatePlayerTextDraw(playerid, 431.000000, 276.000000, "_"); // button save data veh
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][16], 1);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][16], 0.600000, 1.899998);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][16], 298.500000, 75.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][16], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][16], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][16], 2);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][16], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][16], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][16], -294256505);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][16], 1);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][16], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][16], 1);

    ui_vehControl[playerid][17] = CreatePlayerTextDraw(playerid, 431.000000, 280.000000, "Save data vehicle");
    PlayerTextDrawFont(playerid, ui_vehControl[playerid][17], 2);
    PlayerTextDrawLetterSize(playerid, ui_vehControl[playerid][17], 0.170833, 1.050000);
    PlayerTextDrawTextSize(playerid, ui_vehControl[playerid][17], 400.000000, 300.000000);
    PlayerTextDrawSetOutline(playerid, ui_vehControl[playerid][17], 1);
    PlayerTextDrawSetShadow(playerid, ui_vehControl[playerid][17], 0);
    PlayerTextDrawAlignment(playerid, ui_vehControl[playerid][17], 2);
    PlayerTextDrawColor(playerid, ui_vehControl[playerid][17], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_vehControl[playerid][17], 255);
    PlayerTextDrawBoxColor(playerid, ui_vehControl[playerid][17], 50);
    PlayerTextDrawUseBox(playerid, ui_vehControl[playerid][17], 0);
    PlayerTextDrawSetProportional(playerid, ui_vehControl[playerid][17], 1);
    PlayerTextDrawSetSelectable(playerid, ui_vehControl[playerid][17], 1);
    
	/******* ui speed ***********/
	ui_speed[playerid][0] = CreatePlayerTextDraw(playerid, 394.000000, 364.000000, "_");
	PlayerTextDrawFont(playerid, ui_speed[playerid][0], 0);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][0], 0.600000, 3.499978);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][0], 294.000000, 33.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][0], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][0], 161);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][0], 0);

	ui_speed[playerid][1] = CreatePlayerTextDraw(playerid, 431.000000, 390.000000, "_");
	PlayerTextDrawFont(playerid, ui_speed[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][1], 0.600000, 0.600001);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][1], 298.500000, 31.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][1], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][1], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][1], 9145223);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][1], 0);

	ui_speed[playerid][2] = CreatePlayerTextDraw(playerid, 431.000000, 380.000000, "_");
	PlayerTextDrawFont(playerid, ui_speed[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][2], 0.600000, 0.600001);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][2], 298.500000, 31.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][2], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][2], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][2], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][2], -1962934137);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][2], 0);

	ui_speed[playerid][3] = CreatePlayerTextDraw(playerid, 411.000000, 402.000000, "_");
	PlayerTextDrawFont(playerid, ui_speed[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][3], 0.600000, 3.649976);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][3], 293.000000, 66.500000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][3], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][3], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][3], 100);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][3], 0);

	ui_speed[playerid][4] = CreatePlayerTextDraw(playerid, 395.000000, 406.000000, "_");
	PlayerTextDrawFont(playerid, ui_speed[playerid][4], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][4], 0.600000, 1.000000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][4], 295.000000, 24.500000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][4], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][4], -1962934017);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][4], -1962934137);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][4], 0);

	ui_speed[playerid][5] = CreatePlayerTextDraw(playerid, 426.000000, 406.000000, "_");
	PlayerTextDrawFont(playerid, ui_speed[playerid][5], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][5], 0.600000, 1.000000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][5], 295.000000, 24.500000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][5], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][5], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][5], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][5], 135);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][5], 0);

	ui_speed[playerid][6] = CreatePlayerTextDraw(playerid, 426.000000, 421.000000, "_");
	PlayerTextDrawFont(playerid, ui_speed[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][6], 0.600000, 1.000000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][6], 295.000000, 24.500000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][6], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][6], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][6], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][6], 135);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][6], 0);

	ui_speed[playerid][7] = CreatePlayerTextDraw(playerid, 395.000000, 421.000000, "_");
	PlayerTextDrawFont(playerid, ui_speed[playerid][7], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][7], 0.600000, 1.000000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][7], 295.000000, 24.500000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][7], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][7], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][7], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][7], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][7], -1962934137);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][7], 0);

	ui_speed[playerid][8] = CreatePlayerTextDraw(playerid, 394.000000, 365.000000, "134");
	PlayerTextDrawFont(playerid, ui_speed[playerid][8], 3);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][8], 0.383332, 1.799998);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][8], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][8], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][8], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][8], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][8], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][8], 50);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][8], 0);

	ui_speed[playerid][9] = CreatePlayerTextDraw(playerid, 399.000000, 381.000000, "KM/H");
	PlayerTextDrawFont(playerid, ui_speed[playerid][9], 2);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][9], 0.095833, 0.500000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][9], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][9], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][9], 1);
	PlayerTextDrawColor(playerid, ui_speed[playerid][9], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][9], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][9], 50);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][9], 0);

	ui_speed[playerid][10] = CreatePlayerTextDraw(playerid, 394.000000, 389.000000, "1000 km");
	PlayerTextDrawFont(playerid, ui_speed[playerid][10], 2);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][10], 0.125000, 0.600000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][10], 400.000000, 35.500000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][10], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][10], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][10], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][10], 50);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][10], 0);

	ui_speed[playerid][11] = CreatePlayerTextDraw(playerid, 386.000000, 407.000000, "ENGINE");
	PlayerTextDrawFont(playerid, ui_speed[playerid][11], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][11], 0.174998, 0.750000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][11], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][11], 0);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][11], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][11], 1);
	PlayerTextDrawColor(playerid, ui_speed[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][11], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][11], 50);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][11], 0);

	ui_speed[playerid][12] = CreatePlayerTextDraw(playerid, 419.000000, 407.000000, "LOCK");
	PlayerTextDrawFont(playerid, ui_speed[playerid][12], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][12], 0.174998, 0.750000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][12], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][12], 0);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][12], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][12], 1);
	PlayerTextDrawColor(playerid, ui_speed[playerid][12], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][12], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][12], 50);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][12], 0);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][12], 0);

	ui_speed[playerid][13] = CreatePlayerTextDraw(playerid, 417.000000, 422.000000, "TRUCK");
	PlayerTextDrawFont(playerid, ui_speed[playerid][13], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][13], 0.174998, 0.750000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][13], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][13], 0);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][13], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][13], 1);
	PlayerTextDrawColor(playerid, ui_speed[playerid][13], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][13], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][13], 50);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][13], 0);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][13], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][13], 0);

	ui_speed[playerid][14] = CreatePlayerTextDraw(playerid, 386.000000, 422.000000, "LIGHTS");
	PlayerTextDrawFont(playerid, ui_speed[playerid][14], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][14], 0.174998, 0.750000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][14], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][14], 0);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][14], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][14], 1);
	PlayerTextDrawColor(playerid, ui_speed[playerid][14], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][14], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][14], 50);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][14], 0);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][14], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][14], 0);

	ui_speed[playerid][15] = CreatePlayerTextDraw(playerid, 442.000000, 389.000000, "FUEL: 100");
	PlayerTextDrawFont(playerid, ui_speed[playerid][15], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][15], 0.154161, 0.749999);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][15], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][15], 0);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][15], 1);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][15], 3);
	PlayerTextDrawColor(playerid, ui_speed[playerid][15], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][15], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][15], 50);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][15], 0);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][15], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][15], 0);

	ui_speed[playerid][16] = CreatePlayerTextDraw(playerid, 420.000000, 379.000000, "VHP: 1000");
	PlayerTextDrawFont(playerid, ui_speed[playerid][16], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][16], 0.154162, 0.750000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][16], 560.500000, 18.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][16], 0);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][16], 1);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][16], 1);
	PlayerTextDrawColor(playerid, ui_speed[playerid][16], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][16], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][16], 50);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][16], 0);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][16], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][16], 0);

	ui_speed[playerid][17] = CreatePlayerTextDraw(playerid, 431.000000, 370.000000, "_");
	PlayerTextDrawFont(playerid, ui_speed[playerid][17], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][17], 0.600000, 0.600001);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][17], 298.500000, 31.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][17], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][17], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][17], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][17], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][17], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][17], 9109639);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][17], 1);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][17], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][17], 0);

	ui_speed[playerid][18] = CreatePlayerTextDraw(playerid, 442.000000, 369.000000, "TIRE: 100");
	PlayerTextDrawFont(playerid, ui_speed[playerid][18], 1);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][18], 0.170829, 0.750000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][18], 400.000000, 15.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][18], 0);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][18], 1);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][18], 3);
	PlayerTextDrawColor(playerid, ui_speed[playerid][18], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][18], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][18], 50);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][18], 0);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][18], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][18], 0);

	ui_speed[playerid][19] = CreatePlayerTextDraw(playerid, 394.000000, 356.000000, "infernus");
	PlayerTextDrawFont(playerid, ui_speed[playerid][19], 2);
	PlayerTextDrawLetterSize(playerid, ui_speed[playerid][19], 0.100000, 0.550000);
	PlayerTextDrawTextSize(playerid, ui_speed[playerid][19], 400.000000, 33.000000);
	PlayerTextDrawSetOutline(playerid, ui_speed[playerid][19], 1);
	PlayerTextDrawSetShadow(playerid, ui_speed[playerid][19], 0);
	PlayerTextDrawAlignment(playerid, ui_speed[playerid][19], 2);
	PlayerTextDrawColor(playerid, ui_speed[playerid][19], -1);
	PlayerTextDrawBackgroundColor(playerid, ui_speed[playerid][19], 255);
	PlayerTextDrawBoxColor(playerid, ui_speed[playerid][19], 1296911746);
	PlayerTextDrawUseBox(playerid, ui_speed[playerid][19], 1);
	PlayerTextDrawSetProportional(playerid, ui_speed[playerid][19], 1);
	PlayerTextDrawSetSelectable(playerid, ui_speed[playerid][19], 0);
	
	// ค่าอาหาร
    PlayerProgressBar[playerid][0] = CreatePlayerProgressBar(playerid, 480.000000, 9.000000, 49.000000, 6.500000, 2094792857, 100.00, 0); //exp

    PlayerProgressBar[playerid][1] = CreatePlayerProgressBar(playerid, 382.000000, 20.000000, 9.500000, 14.000000, 16777151, 100.000000, 2); //water
    //SetPlayerProgressBarValue(playerid, PlayerProgressBar[playerid][1], 50.000000);

    PlayerProgressBar[playerid][2] = CreatePlayerProgressBar(playerid, 354.000000, 20.000000, 9.500000, 14.000000, -294256449, 100.000000, 2); //food
    //SetPlayerProgressBarValue(playerid, PlayerProgressBar[playerid][2], 50.000000);

    //
    pTD_StatsNew[playerid][0] = CreatePlayerTextDraw(playerid, 409.000000, 6.000000, "99");
    PlayerTextDrawFont(playerid, pTD_StatsNew[playerid][0], 2);
    PlayerTextDrawLetterSize(playerid, pTD_StatsNew[playerid][0], 0.195833, 1.250000);
    PlayerTextDrawTextSize(playerid, pTD_StatsNew[playerid][0], 419.000000, 15.000000);
    PlayerTextDrawSetOutline(playerid, pTD_StatsNew[playerid][0], 0);
    PlayerTextDrawSetShadow(playerid, pTD_StatsNew[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, pTD_StatsNew[playerid][0], 2);
    PlayerTextDrawColor(playerid, pTD_StatsNew[playerid][0], -1);
    PlayerTextDrawBackgroundColor(playerid, pTD_StatsNew[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, pTD_StatsNew[playerid][0], 50);
    PlayerTextDrawUseBox(playerid, pTD_StatsNew[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, pTD_StatsNew[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, pTD_StatsNew[playerid][0], 0);

    pTD_StatsNew[playerid][1] = CreatePlayerTextDraw(playerid, 447.000000, 6.000000, "98");
    PlayerTextDrawFont(playerid, pTD_StatsNew[playerid][1], 2);
    PlayerTextDrawLetterSize(playerid, pTD_StatsNew[playerid][1], 0.195833, 1.250000);
    PlayerTextDrawTextSize(playerid, pTD_StatsNew[playerid][1], 419.000000, 13.500000);
    PlayerTextDrawSetOutline(playerid, pTD_StatsNew[playerid][1], 0);
    PlayerTextDrawSetShadow(playerid, pTD_StatsNew[playerid][1], 0);
    PlayerTextDrawAlignment(playerid, pTD_StatsNew[playerid][1], 2);
    PlayerTextDrawColor(playerid, pTD_StatsNew[playerid][1], -1);
    PlayerTextDrawBackgroundColor(playerid, pTD_StatsNew[playerid][1], 255);
    PlayerTextDrawBoxColor(playerid, pTD_StatsNew[playerid][1], 50);
    PlayerTextDrawUseBox(playerid, pTD_StatsNew[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, pTD_StatsNew[playerid][1], 1);
    PlayerTextDrawSetSelectable(playerid, pTD_StatsNew[playerid][1], 0);

    pTD_StatsNew[playerid][2] = CreatePlayerTextDraw(playerid, 483.000000, 9.000000, "199/199");
    PlayerTextDrawFont(playerid, pTD_StatsNew[playerid][2], 1);
    PlayerTextDrawLetterSize(playerid, pTD_StatsNew[playerid][2], 0.141667, 0.650000);
    PlayerTextDrawTextSize(playerid, pTD_StatsNew[playerid][2], 400.000000, 17.000000);
    PlayerTextDrawSetOutline(playerid, pTD_StatsNew[playerid][2], 0);
    PlayerTextDrawSetShadow(playerid, pTD_StatsNew[playerid][2], 1);
    PlayerTextDrawAlignment(playerid, pTD_StatsNew[playerid][2], 1);
    PlayerTextDrawColor(playerid, pTD_StatsNew[playerid][2], -1);
    PlayerTextDrawBackgroundColor(playerid, pTD_StatsNew[playerid][2], 255);
    PlayerTextDrawBoxColor(playerid, pTD_StatsNew[playerid][2], 50);
    PlayerTextDrawUseBox(playerid, pTD_StatsNew[playerid][2], 0);
    PlayerTextDrawSetProportional(playerid, pTD_StatsNew[playerid][2], 1);
    PlayerTextDrawSetSelectable(playerid, pTD_StatsNew[playerid][2], 0);

    //---------------------------------------------------------------------------//

    // On Foot
    ui_zone[playerid] = CreatePlayerTextDraw(playerid, 635.000000, 428.000000, "");
    PlayerTextDrawFont(playerid, ui_zone[playerid], 2);
    PlayerTextDrawLetterSize(playerid, ui_zone[playerid], 0.258329, 1.499994);
    PlayerTextDrawTextSize(playerid, ui_zone[playerid], 431.500000, 0.500000);
    PlayerTextDrawSetOutline(playerid, ui_zone[playerid], 1);
    PlayerTextDrawSetShadow(playerid, ui_zone[playerid], 0);
    PlayerTextDrawAlignment(playerid, ui_zone[playerid], 3);
    PlayerTextDrawColor(playerid, ui_zone[playerid], -1);
    PlayerTextDrawBackgroundColor(playerid, ui_zone[playerid], 255);
    PlayerTextDrawBoxColor(playerid, ui_zone[playerid], 50);
    PlayerTextDrawUseBox(playerid, ui_zone[playerid], 0);
    PlayerTextDrawSetProportional(playerid, ui_zone[playerid], 1);
    PlayerTextDrawSetSelectable(playerid, ui_zone[playerid], 0);
	
	/*phoneMorganText[playerid][0] = CreatePlayerTextDraw(playerid, 441.000000, 183.000000, "_");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][0], 0.600000, 14.150006);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][0], 298.500000, 90.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][0], 2);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][0], 66);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][0], 0);

	phoneMorganText[playerid][1] = CreatePlayerTextDraw(playerid, 441.000000, 312.000000, "_");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][1], 0.600000, 0.800003);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][1], 298.500000, 90.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][1], 2);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][1], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][1], 1246382847);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][1], 0);

	phoneMorganText[playerid][2] = CreatePlayerTextDraw(playerid, 441.000000, 183.000000, "_");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][2], 0.600000, 0.800003);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][2], 298.500000, 90.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][2], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][2], 2);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][2], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][2], 1246382847);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][2], 0);

	phoneMorganText[playerid][3] = CreatePlayerTextDraw(playerid, 426.000000, 193.000000, "iPhone");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][3], 2);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][3], 0.195833, 1.500000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][3], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][3], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][3], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][3], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][3], 0);

	phoneMorganText[playerid][4] = CreatePlayerTextDraw(playerid, 434.000000, 309.000000, "ld_beat:cring");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][4], 4);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][4], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][4], 15.500000, 13.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][4], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][4], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][4], 1);

	phoneMorganText[playerid][5] = CreatePlayerTextDraw(playerid, 405.000000, 208.000000, "HUD:radar_hostpital");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][5], 4);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][5], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][5], 16.000000, 13.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][5], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][5], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][5], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][5], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][5], 0);

	phoneMorganText[playerid][6] = CreatePlayerTextDraw(playerid, 463.000000, 208.000000, "HUD:radar_police");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][6], 4);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][6], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][6], 15.500000, 13.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][6], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][6], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][6], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][6], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][6], 0);

	phoneMorganText[playerid][7] = CreatePlayerTextDraw(playerid, 463.000000, 233.000000, "HUD:radar_impound");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][7], 4);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][7], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][7], 15.500000, 13.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][7], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][7], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][7], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][7], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][7], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][7], 0);

	phoneMorganText[playerid][8] = CreatePlayerTextDraw(playerid, 406.000000, 233.000000, "HUD:radar_modgarage");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][8], 4);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][8], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][8], 15.500000, 13.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][8], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][8], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][8], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][8], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][8], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][8], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][8], 0);

	phoneMorganText[playerid][9] = CreatePlayerTextDraw(playerid, 452.000000, 254.000000, "TextDraw");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][9], 5);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][9], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][9], 34.500000, 21.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][9], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][9], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][9], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][9], 0);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][9], 0);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][9], 0);
	PlayerTextDrawSetPreviewModel(playerid, phoneMorganText[playerid][9], 1314);
	PlayerTextDrawSetPreviewRot(playerid, phoneMorganText[playerid][9], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, phoneMorganText[playerid][9], 1, 1);

	phoneMorganText[playerid][10] = CreatePlayerTextDraw(playerid, 405.000000, 257.000000, "hud:radar_waypoint");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][10], 4);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][10], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][10], 15.500000, 13.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][10], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][10], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][10], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][10], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][10], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][10], 0);

	phoneMorganText[playerid][11] = CreatePlayerTextDraw(playerid, 384.000000, 278.000000, "TextDraw");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][11], 5);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][11], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][11], 40.000000, 27.500000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][11], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][11], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][11], 0);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][11], 0);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][11], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][11], 0);
	PlayerTextDrawSetPreviewModel(playerid, phoneMorganText[playerid][11], 18871);
	PlayerTextDrawSetPreviewRot(playerid, phoneMorganText[playerid][11], -96.000000, 0.000000, -180.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, phoneMorganText[playerid][11], 1, 1);

	phoneMorganText[playerid][12] = CreatePlayerTextDraw(playerid, 462.000000, 288.000000, "HUD:radar_savegame");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][12], 4);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][12], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][12], 15.500000, 13.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][12], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][12], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][12], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][12], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][12], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][12], 1);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][12], 0);

	phoneMorganText[playerid][13] = CreatePlayerTextDraw(playerid, 402.000000, 221.000000, "Hospital");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][13], 2);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][13], 0.116666, 0.950000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][13], 427.500000, 21.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][13], 0);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][13], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][13], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][13], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][13], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][13], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][13], 0);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][13], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][13], 1);

	phoneMorganText[playerid][14] = CreatePlayerTextDraw(playerid, 464.000000, 221.000000, "POLICE");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][14], 2);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][14], 0.116666, 0.950000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][14], 483.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][14], 0);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][14], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][14], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][14], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][14], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][14], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][14], 0);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][14], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][14], 1);

	phoneMorganText[playerid][15] = CreatePlayerTextDraw(playerid, 402.000000, 245.000000, "Mechanic");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][15], 2);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][15], 0.116666, 0.950000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][15], 425.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][15], 0);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][15], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][15], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][15], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][15], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][15], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][15], 0);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][15], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][15], 1);

	phoneMorganText[playerid][16] = CreatePlayerTextDraw(playerid, 409.000000, 270.000000, "GPS");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][16], 2);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][16], 0.116666, 0.950000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][16], 421.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][16], 0);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][16], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][16], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][16], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][16], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][16], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][16], 0);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][16], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][16], 1);

	phoneMorganText[playerid][17] = CreatePlayerTextDraw(playerid, 406.000000, 300.000000, "CALL");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][17], 2);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][17], 0.116666, 0.950000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][17], 421.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][17], 0);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][17], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][17], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][17], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][17], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][17], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][17], 0);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][17], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][17], 1);

	phoneMorganText[playerid][18] = CreatePlayerTextDraw(playerid, 465.000000, 245.000000, "CAR");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][18], 2);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][18], 0.116666, 0.950000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][18], 479.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][18], 0);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][18], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][18], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][18], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][18], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][18], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][18], 0);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][18], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][18], 1);

	phoneMorganText[playerid][19] = CreatePlayerTextDraw(playerid, 462.000000, 271.000000, "Online");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][19], 2);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][19], 0.116666, 0.950000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][19], 481.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][19], 0);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][19], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][19], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][19], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][19], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][19], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][19], 0);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][19], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][19], 1);

	phoneMorganText[playerid][20] = CreatePlayerTextDraw(playerid, 460.000000, 300.000000, "CONTACT");
	PlayerTextDrawFont(playerid, phoneMorganText[playerid][20], 2);
	PlayerTextDrawLetterSize(playerid, phoneMorganText[playerid][20], 0.116666, 0.950000);
	PlayerTextDrawTextSize(playerid, phoneMorganText[playerid][20], 483.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, phoneMorganText[playerid][20], 0);
	PlayerTextDrawSetShadow(playerid, phoneMorganText[playerid][20], 0);
	PlayerTextDrawAlignment(playerid, phoneMorganText[playerid][20], 1);
	PlayerTextDrawColor(playerid, phoneMorganText[playerid][20], -1);
	PlayerTextDrawBackgroundColor(playerid, phoneMorganText[playerid][20], 255);
	PlayerTextDrawBoxColor(playerid, phoneMorganText[playerid][20], 50);
	PlayerTextDrawUseBox(playerid, phoneMorganText[playerid][20], 0);
	PlayerTextDrawSetProportional(playerid, phoneMorganText[playerid][20], 1);
	PlayerTextDrawSetSelectable(playerid, phoneMorganText[playerid][20], 1);
	*/
	
    TextBacara[playerid][0] = CreatePlayerTextDraw(playerid, 313.000000, 394.000000, "Start Bet In : 30 Seconds");
    PlayerTextDrawFont(playerid, TextBacara[playerid][0], 2);
    PlayerTextDrawLetterSize(playerid, TextBacara[playerid][0], 0.329166, 1.300000);
    PlayerTextDrawTextSize(playerid, TextBacara[playerid][0], 400.000000, 302.000000);
    PlayerTextDrawSetOutline(playerid, TextBacara[playerid][0], 1);
    PlayerTextDrawSetShadow(playerid, TextBacara[playerid][0], 0);
    PlayerTextDrawAlignment(playerid, TextBacara[playerid][0], 2);
    PlayerTextDrawColor(playerid, TextBacara[playerid][0], -16776961);
    PlayerTextDrawBackgroundColor(playerid, TextBacara[playerid][0], 255);
    PlayerTextDrawBoxColor(playerid, TextBacara[playerid][0], 50);
    PlayerTextDrawUseBox(playerid, TextBacara[playerid][0], 0);
    PlayerTextDrawSetProportional(playerid, TextBacara[playerid][0], 1);
    PlayerTextDrawSetSelectable(playerid, TextBacara[playerid][0], 0);

	/*CopOnlineTextDraws[playerid][0] = CreatePlayerTextDraw(playerid, 352.000000, 10.000000, "HUD:radar_police");
	PlayerTextDrawFont(playerid, CopOnlineTextDraws[playerid][0], 4);
	PlayerTextDrawLetterSize(playerid, CopOnlineTextDraws[playerid][0], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, CopOnlineTextDraws[playerid][0], 12.500000, 11.500000);
	PlayerTextDrawSetOutline(playerid, CopOnlineTextDraws[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, CopOnlineTextDraws[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, CopOnlineTextDraws[playerid][0], 1);
	PlayerTextDrawColor(playerid, CopOnlineTextDraws[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, CopOnlineTextDraws[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, CopOnlineTextDraws[playerid][0], 50);
	PlayerTextDrawUseBox(playerid, CopOnlineTextDraws[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, CopOnlineTextDraws[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, CopOnlineTextDraws[playerid][0], 0);

	CopOnlineTextDraws[playerid][1] = CreatePlayerTextDraw(playerid, 369.000000, 10.000000, "[1]");
	PlayerTextDrawFont(playerid, CopOnlineTextDraws[playerid][1], 3);
	PlayerTextDrawLetterSize(playerid, CopOnlineTextDraws[playerid][1], 0.316666, 1.200000);
	PlayerTextDrawTextSize(playerid, CopOnlineTextDraws[playerid][1], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, CopOnlineTextDraws[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, CopOnlineTextDraws[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, CopOnlineTextDraws[playerid][1], 1);
	PlayerTextDrawColor(playerid, CopOnlineTextDraws[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, CopOnlineTextDraws[playerid][1], 35839);
	PlayerTextDrawBoxColor(playerid, CopOnlineTextDraws[playerid][1], 50);
	PlayerTextDrawUseBox(playerid, CopOnlineTextDraws[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, CopOnlineTextDraws[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, CopOnlineTextDraws[playerid][1], 0);

	CopOnlineTextDraws[playerid][2] = CreatePlayerTextDraw(playerid, 397.000000, 10.000000, "HUD:radar_hostpital");
	PlayerTextDrawFont(playerid, CopOnlineTextDraws[playerid][2], 4);
	PlayerTextDrawLetterSize(playerid, CopOnlineTextDraws[playerid][2], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, CopOnlineTextDraws[playerid][2], 12.500000, 11.500000);
	PlayerTextDrawSetOutline(playerid, CopOnlineTextDraws[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, CopOnlineTextDraws[playerid][2], 0);
	PlayerTextDrawAlignment(playerid, CopOnlineTextDraws[playerid][2], 1);
	PlayerTextDrawColor(playerid, CopOnlineTextDraws[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, CopOnlineTextDraws[playerid][2], 255);
	PlayerTextDrawBoxColor(playerid, CopOnlineTextDraws[playerid][2], 50);
	PlayerTextDrawUseBox(playerid, CopOnlineTextDraws[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, CopOnlineTextDraws[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, CopOnlineTextDraws[playerid][2], 0);

	CopOnlineTextDraws[playerid][3] = CreatePlayerTextDraw(playerid, 412.000000, 10.000000, "[2]");
	PlayerTextDrawFont(playerid, CopOnlineTextDraws[playerid][3], 3);
	PlayerTextDrawLetterSize(playerid, CopOnlineTextDraws[playerid][3], 0.316666, 1.200000);
	PlayerTextDrawTextSize(playerid, CopOnlineTextDraws[playerid][3], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, CopOnlineTextDraws[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, CopOnlineTextDraws[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, CopOnlineTextDraws[playerid][3], 1);
	PlayerTextDrawColor(playerid, CopOnlineTextDraws[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, CopOnlineTextDraws[playerid][3], -16776961);
	PlayerTextDrawBoxColor(playerid, CopOnlineTextDraws[playerid][3], 50);
	PlayerTextDrawUseBox(playerid, CopOnlineTextDraws[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, CopOnlineTextDraws[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, CopOnlineTextDraws[playerid][3], 0);

	CopOnlineTextDraws[playerid][4] = CreatePlayerTextDraw(playerid, 442.000000, 10.000000, "HUD:radar_gym");
	PlayerTextDrawFont(playerid, CopOnlineTextDraws[playerid][4], 4);
	PlayerTextDrawLetterSize(playerid, CopOnlineTextDraws[playerid][4], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, CopOnlineTextDraws[playerid][4], 12.500000, 11.500000);
	PlayerTextDrawSetOutline(playerid, CopOnlineTextDraws[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, CopOnlineTextDraws[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, CopOnlineTextDraws[playerid][4], 1);
	PlayerTextDrawColor(playerid, CopOnlineTextDraws[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, CopOnlineTextDraws[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, CopOnlineTextDraws[playerid][4], 50);
	PlayerTextDrawUseBox(playerid, CopOnlineTextDraws[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, CopOnlineTextDraws[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, CopOnlineTextDraws[playerid][4], 0);

	CopOnlineTextDraws[playerid][5] = CreatePlayerTextDraw(playerid, 458.000000, 10.000000, "[3]");
	PlayerTextDrawFont(playerid, CopOnlineTextDraws[playerid][5], 3);
	PlayerTextDrawLetterSize(playerid, CopOnlineTextDraws[playerid][5], 0.316666, 1.200000);
	PlayerTextDrawTextSize(playerid, CopOnlineTextDraws[playerid][5], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, CopOnlineTextDraws[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, CopOnlineTextDraws[playerid][5], 0);
	PlayerTextDrawAlignment(playerid, CopOnlineTextDraws[playerid][5], 1);
	PlayerTextDrawColor(playerid, CopOnlineTextDraws[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, CopOnlineTextDraws[playerid][5], 1296911871);
	PlayerTextDrawBoxColor(playerid, CopOnlineTextDraws[playerid][5], 50);
	PlayerTextDrawUseBox(playerid, CopOnlineTextDraws[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid, CopOnlineTextDraws[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, CopOnlineTextDraws[playerid][5], 0);*/
	
	// --> ระบบ Slots

	SlotTD[playerid][0] = CreatePlayerTextDraw(playerid, 234.000000, 188.000000, "_");
	PlayerTextDrawFont(playerid, SlotTD[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][0], 0.600000, 6.300003);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][0], 298.500000, 66.500000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][0], 2);
	PlayerTextDrawColor(playerid, SlotTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][0], 135);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][0], 0);

	SlotTD[playerid][1] = CreatePlayerTextDraw(playerid, 276.000000, 145.000000, "George");
	PlayerTextDrawFont(playerid, SlotTD[playerid][1], 0);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][1], 0.687499, 2.049999);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][1], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, SlotTD[playerid][1], -16776961);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][1], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][1], 50);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][1], 0);

	SlotTD[playerid][2] = CreatePlayerTextDraw(playerid, 297.000000, 165.000000, "CASINO");
	PlayerTextDrawFont(playerid, SlotTD[playerid][2], 3);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][2], 0.483333, 1.250000);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][2], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][2], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, SlotTD[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][2], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][2], 50);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][2], 0);

	SlotTD[playerid][3] = CreatePlayerTextDraw(playerid, 234.000000, 191.000000, "_");
	PlayerTextDrawFont(playerid, SlotTD[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][3], 0.600000, 5.650006);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][3], 298.500000, 56.500000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][3], 2);
	PlayerTextDrawColor(playerid, SlotTD[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][3], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][3], -121);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][3], 0);

	SlotTD[playerid][4] = CreatePlayerTextDraw(playerid, 319.000000, 188.000000, "_");
	PlayerTextDrawFont(playerid, SlotTD[playerid][4], 1);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][4], 0.600000, 6.300003);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][4], 298.500000, 66.500000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][4], 2);
	PlayerTextDrawColor(playerid, SlotTD[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][4], 135);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][4], 0);

	SlotTD[playerid][5] = CreatePlayerTextDraw(playerid, 407.000000, 188.000000, "_");
	PlayerTextDrawFont(playerid, SlotTD[playerid][5], 1);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][5], 0.600000, 6.300003);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][5], 298.500000, 66.500000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][5], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][5], 2);
	PlayerTextDrawColor(playerid, SlotTD[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][5], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][5], 135);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][5], 0);

	SlotTD[playerid][6] = CreatePlayerTextDraw(playerid, 319.000000, 191.000000, "_");
	PlayerTextDrawFont(playerid, SlotTD[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][6], 0.600000, 5.650006);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][6], 298.500000, 56.500000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][6], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][6], 2);
	PlayerTextDrawColor(playerid, SlotTD[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][6], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][6], -121);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][6], 0);

	SlotTD[playerid][7] = CreatePlayerTextDraw(playerid, 407.000000, 191.000000, "_");
	PlayerTextDrawFont(playerid, SlotTD[playerid][7], 1);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][7], 0.600000, 5.650006);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][7], 298.500000, 56.500000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][7], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][7], 2);
	PlayerTextDrawColor(playerid, SlotTD[playerid][7], -1);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][7], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][7], -121);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][7], 0);

	SlotTD[playerid][8] = CreatePlayerTextDraw(playerid, 225.000000, 184.000000, "7");
	PlayerTextDrawFont(playerid, SlotTD[playerid][8], 2);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][8], 0.766666, 6.500000);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][8], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][8], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][8], 1);
	PlayerTextDrawColor(playerid, SlotTD[playerid][8], -1);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][8], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][8], 50);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][8], 0);

	SlotTD[playerid][9] = CreatePlayerTextDraw(playerid, 309.000000, 184.000000, "7");
	PlayerTextDrawFont(playerid, SlotTD[playerid][9], 2);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][9], 0.766666, 6.500000);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][9], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][9], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][9], 1);
	PlayerTextDrawColor(playerid, SlotTD[playerid][9], -1);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][9], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][9], 50);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][9], 0);

	SlotTD[playerid][10] = CreatePlayerTextDraw(playerid, 398.000000, 184.000000, "7");
	PlayerTextDrawFont(playerid, SlotTD[playerid][10], 2);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][10], 0.766666, 6.500000);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][10], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][10], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][10], 1);
	PlayerTextDrawColor(playerid, SlotTD[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][10], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][10], 50);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][10], 0);

	SlotTD[playerid][11] = CreatePlayerTextDraw(playerid, 282.000000, 253.000000, "Have a good day");
	PlayerTextDrawFont(playerid, SlotTD[playerid][11], 3);
	PlayerTextDrawLetterSize(playerid, SlotTD[playerid][11], 0.266666, 1.100000);
	PlayerTextDrawTextSize(playerid, SlotTD[playerid][11], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, SlotTD[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, SlotTD[playerid][11], 0);
	PlayerTextDrawAlignment(playerid, SlotTD[playerid][11], 1);
	PlayerTextDrawColor(playerid, SlotTD[playerid][11], 2094792959);
	PlayerTextDrawBackgroundColor(playerid, SlotTD[playerid][11], 255);
	PlayerTextDrawBoxColor(playerid, SlotTD[playerid][11], 50);
	PlayerTextDrawUseBox(playerid, SlotTD[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid, SlotTD[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, SlotTD[playerid][11], 0);

	// --> ระบบกาชาปอง
	GachaTextDraws[playerid][0] = CreatePlayerTextDraw(playerid, 327.000000, 172.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][0], 0.600000, 12.200005);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][0], 298.500000, 550.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][0], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][0], -1523963137);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][0], 0);

	GachaTextDraws[playerid][1] = CreatePlayerTextDraw(playerid, 171.000000, 175.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][1], 0.591666, 5.600002);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][1], 298.500000, 71.500000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][1], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][1], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][1], -421070201);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][1], 0);

	GachaTextDraws[playerid][2] = CreatePlayerTextDraw(playerid, 93.000000, 175.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][2], 0.591666, 5.600002);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][2], 298.500000, 71.500000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][2], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][2], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][2], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][2], -421070201);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][2], 0);

	GachaTextDraws[playerid][3] = CreatePlayerTextDraw(playerid, 249.000000, 175.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][3], 0.591666, 5.600002);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][3], 298.500000, 71.500000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][3], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][3], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][3], -421070201);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][3], 0);

	GachaTextDraws[playerid][4] = CreatePlayerTextDraw(playerid, 327.000000, 175.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][4], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][4], 0.591666, 5.600002);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][4], 298.500000, 71.500000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][4], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][4], -421070201);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][4], 0);

	GachaTextDraws[playerid][5] = CreatePlayerTextDraw(playerid, 405.000000, 175.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][5], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][5], 0.591666, 5.600002);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][5], 298.500000, 71.500000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][5], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][5], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][5], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][5], -421070201);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][5], 0);

	GachaTextDraws[playerid][6] = CreatePlayerTextDraw(playerid, 483.000000, 175.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][6], 0.591666, 5.600002);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][6], 298.500000, 71.500000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][6], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][6], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][6], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][6], -421070201);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][6], 0);

	GachaTextDraws[playerid][7] = CreatePlayerTextDraw(playerid, 561.000000, 175.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][7], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][7], 0.591666, 5.600002);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][7], 298.500000, 71.500000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][7], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][7], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][7], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][7], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][7], -421070201);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][7], 0);

	GachaTextDraws[playerid][8] = CreatePlayerTextDraw(playerid, 327.000000, 265.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][8], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][8], 0.591666, 1.200002);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][8], 298.500000, 71.500000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][8], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][8], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][8], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][8], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][8], 9109759);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][8], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][8], 0);

	GachaTextDraws[playerid][9] = CreatePlayerTextDraw(playerid, 306.000000, 263.000000, "OPEN");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][9], 2);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][9], 0.329166, 1.249999);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][9], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][9], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][9], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][9], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][9], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][9], 50);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][9], 1);

	GachaTextDraws[playerid][10] = CreatePlayerTextDraw(playerid, 27.000000, 226.000000, "TextDraw");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][10], 5);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][10], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][10], 75.000000, 77.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][10], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][10], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][10], 0);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][10], 0);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][10], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][10], 0);
	PlayerTextDrawSetPreviewModel(playerid, GachaTextDraws[playerid][10], 11746);
	PlayerTextDrawSetPreviewRot(playerid, GachaTextDraws[playerid][10], -10.000000, 94.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, GachaTextDraws[playerid][10], 1, 1);

	GachaTextDraws[playerid][11] = CreatePlayerTextDraw(playerid, 75.000000, 265.000000, "KEY: 1");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][11], 2);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][11], 0.258333, 1.400000);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][11], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][11], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][11], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][11], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][11], 50);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][11], 0);

	GachaTextDraws[playerid][12] = CreatePlayerTextDraw(playerid, 327.000000, 149.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][12], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][12], 0.600000, 1.800004);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][12], 298.500000, 195.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][12], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][12], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][12], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][12], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][12], 145);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][12], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][12], 0);

	GachaTextDraws[playerid][13] = CreatePlayerTextDraw(playerid, 273.000000, 146.000000, "Lucky Box");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][13], 2);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][13], 0.474999, 2.000000);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][13], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][13], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][13], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][13], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][13], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][13], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][13], 50);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][13], 0);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][13], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][13], 0);

	GachaTextDraws[playerid][14] = CreatePlayerTextDraw(playerid, 56.000000, 172.000000, "TextDraw");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][14], 5);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][14], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][14], 75.000000, 57.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][14], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][14], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][14], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][14], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][14], 0);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][14], 50);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][14], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][14], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][14], 0);
	PlayerTextDrawSetPreviewModel(playerid, GachaTextDraws[playerid][14], 18631);
	PlayerTextDrawSetPreviewRot(playerid, GachaTextDraws[playerid][14], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, GachaTextDraws[playerid][14], 1, 1);

	GachaTextDraws[playerid][15] = CreatePlayerTextDraw(playerid, 134.000000, 172.000000, "TextDraw");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][15], 5);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][15], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][15], 75.000000, 57.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][15], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][15], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][15], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][15], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][15], 0);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][15], 50);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][15], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][15], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][15], 0);
	PlayerTextDrawSetPreviewModel(playerid, GachaTextDraws[playerid][15], 18631);
	PlayerTextDrawSetPreviewRot(playerid, GachaTextDraws[playerid][15], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, GachaTextDraws[playerid][15], 1, 1);

	GachaTextDraws[playerid][16] = CreatePlayerTextDraw(playerid, 209.000000, 172.000000, "TextDraw");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][16], 5);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][16], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][16], 75.000000, 57.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][16], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][16], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][16], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][16], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][16], 0);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][16], 50);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][16], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][16], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][16], 0);
	PlayerTextDrawSetPreviewModel(playerid, GachaTextDraws[playerid][16], 18631);
	PlayerTextDrawSetPreviewRot(playerid, GachaTextDraws[playerid][16], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, GachaTextDraws[playerid][16], 1, 1);

	GachaTextDraws[playerid][17] = CreatePlayerTextDraw(playerid, 287.000000, 172.000000, "TextDraw");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][17], 5);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][17], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][17], 75.000000, 57.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][17], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][17], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][17], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][17], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][17], 0);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][17], 50);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][17], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][17], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][17], 0);
	PlayerTextDrawSetPreviewModel(playerid, GachaTextDraws[playerid][17], 18631);
	PlayerTextDrawSetPreviewRot(playerid, GachaTextDraws[playerid][17], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, GachaTextDraws[playerid][17], 1, 1);

	GachaTextDraws[playerid][18] = CreatePlayerTextDraw(playerid, 366.000000, 172.000000, "TextDraw");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][18], 5);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][18], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][18], 75.000000, 57.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][18], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][18], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][18], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][18], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][18], 0);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][18], 50);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][18], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][18], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][18], 0);
	PlayerTextDrawSetPreviewModel(playerid, GachaTextDraws[playerid][18], 18631);
	PlayerTextDrawSetPreviewRot(playerid, GachaTextDraws[playerid][18], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, GachaTextDraws[playerid][18], 1, 1);

	GachaTextDraws[playerid][19] = CreatePlayerTextDraw(playerid, 443.000000, 172.000000, "TextDraw");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][19], 5);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][19], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][19], 75.000000, 57.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][19], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][19], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][19], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][19], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][19], 0);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][19], 50);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][19], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][19], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][19], 0);
	PlayerTextDrawSetPreviewModel(playerid, GachaTextDraws[playerid][19], 18631);
	PlayerTextDrawSetPreviewRot(playerid, GachaTextDraws[playerid][19], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, GachaTextDraws[playerid][19], 1, 1);

	GachaTextDraws[playerid][20] = CreatePlayerTextDraw(playerid, 522.000000, 172.000000, "TextDraw");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][20], 5);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][20], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][20], 75.000000, 57.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][20], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][20], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][20], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][20], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][20], 0);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][20], 50);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][20], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][20], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][20], 0);
	PlayerTextDrawSetPreviewModel(playerid, GachaTextDraws[playerid][20], 18631);
	PlayerTextDrawSetPreviewRot(playerid, GachaTextDraws[playerid][20], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, GachaTextDraws[playerid][20], 1, 1);

	GachaTextDraws[playerid][21] = CreatePlayerTextDraw(playerid, 327.000000, 175.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][21], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][21], 0.591666, 5.600002);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][21], 298.500000, -5.500000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][21], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][21], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][21], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][21], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][21], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][21], -421070081);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][21], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][21], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][21], 0);

	GachaTextDraws[playerid][22] = CreatePlayerTextDraw(playerid, 575.000000, 154.000000, "_");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][22], 1);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][22], 0.591666, 0.950002);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][22], 298.500000, 41.500000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][22], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][22], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][22], 2);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][22], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][22], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][22], -16776961);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][22], 1);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][22], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][22], 0);

	GachaTextDraws[playerid][23] = CreatePlayerTextDraw(playerid, 563.000000, 152.000000, "Close");
	PlayerTextDrawFont(playerid, GachaTextDraws[playerid][23], 2);
	PlayerTextDrawLetterSize(playerid, GachaTextDraws[playerid][23], 0.200000, 1.149999);
	PlayerTextDrawTextSize(playerid, GachaTextDraws[playerid][23], 690.000000, 127.000000);
	PlayerTextDrawSetOutline(playerid, GachaTextDraws[playerid][23], 1);
	PlayerTextDrawSetShadow(playerid, GachaTextDraws[playerid][23], 0);
	PlayerTextDrawAlignment(playerid, GachaTextDraws[playerid][23], 1);
	PlayerTextDrawColor(playerid, GachaTextDraws[playerid][23], -1);
	PlayerTextDrawBackgroundColor(playerid, GachaTextDraws[playerid][23], 255);
	PlayerTextDrawBoxColor(playerid, GachaTextDraws[playerid][23], 50);
	PlayerTextDrawUseBox(playerid, GachaTextDraws[playerid][23], 0);
	PlayerTextDrawSetProportional(playerid, GachaTextDraws[playerid][23], 1);
	PlayerTextDrawSetSelectable(playerid, GachaTextDraws[playerid][23], 1);

	// Speedo Cars
	PlayerSpeedoCountTD[playerid] = CreatePlayerTextDraw(playerid, 198.000000, 386.000000, "999");
	PlayerTextDrawFont(playerid, PlayerSpeedoCountTD[playerid], 2);
	PlayerTextDrawLetterSize(playerid, PlayerSpeedoCountTD[playerid], 0.508333, 2.699999);
	PlayerTextDrawTextSize(playerid, PlayerSpeedoCountTD[playerid], 168.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerSpeedoCountTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerSpeedoCountTD[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerSpeedoCountTD[playerid], 3);
	PlayerTextDrawColor(playerid, PlayerSpeedoCountTD[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerSpeedoCountTD[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerSpeedoCountTD[playerid], 50);
	PlayerTextDrawUseBox(playerid, PlayerSpeedoCountTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PlayerSpeedoCountTD[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerSpeedoCountTD[playerid], 0);

	PlayerSpeedoKMHTD[playerid] = CreatePlayerTextDraw(playerid, 200.000000, 395.000000, "KM/H");
	PlayerTextDrawFont(playerid, PlayerSpeedoKMHTD[playerid], 2);
	PlayerTextDrawLetterSize(playerid, PlayerSpeedoKMHTD[playerid], 0.225000, 1.550000);
	PlayerTextDrawTextSize(playerid, PlayerSpeedoKMHTD[playerid], 168.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerSpeedoKMHTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerSpeedoKMHTD[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerSpeedoKMHTD[playerid], 1);
	PlayerTextDrawColor(playerid, PlayerSpeedoKMHTD[playerid], -16776961);
	PlayerTextDrawBackgroundColor(playerid, PlayerSpeedoKMHTD[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerSpeedoKMHTD[playerid], 50);
	PlayerTextDrawUseBox(playerid, PlayerSpeedoKMHTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PlayerSpeedoKMHTD[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerSpeedoKMHTD[playerid], 0);

	PlayerSpeedoFuelCountTD[playerid] = CreatePlayerTextDraw(playerid, 196.000000, 410.000000, "999.9");
	PlayerTextDrawFont(playerid, PlayerSpeedoFuelCountTD[playerid], 2);
	PlayerTextDrawLetterSize(playerid, PlayerSpeedoFuelCountTD[playerid], 0.216666, 1.999999);
	PlayerTextDrawTextSize(playerid, PlayerSpeedoFuelCountTD[playerid], 168.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerSpeedoFuelCountTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerSpeedoFuelCountTD[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerSpeedoFuelCountTD[playerid], 3);
	PlayerTextDrawColor(playerid, PlayerSpeedoFuelCountTD[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerSpeedoFuelCountTD[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerSpeedoFuelCountTD[playerid], 50);
	PlayerTextDrawUseBox(playerid, PlayerSpeedoFuelCountTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PlayerSpeedoFuelCountTD[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerSpeedoFuelCountTD[playerid], 0);

	PlayerSpeedoFuelLitersTD[playerid] = CreatePlayerTextDraw(playerid, 200.000000, 413.000000, "L");
	PlayerTextDrawFont(playerid, PlayerSpeedoFuelLitersTD[playerid], 2);
	PlayerTextDrawLetterSize(playerid, PlayerSpeedoFuelLitersTD[playerid], 0.224996, 1.549998);
	PlayerTextDrawTextSize(playerid, PlayerSpeedoFuelLitersTD[playerid], 168.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerSpeedoFuelLitersTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerSpeedoFuelLitersTD[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerSpeedoFuelLitersTD[playerid], 1);
	PlayerTextDrawColor(playerid, PlayerSpeedoFuelLitersTD[playerid], 852308735);
	PlayerTextDrawBackgroundColor(playerid, PlayerSpeedoFuelLitersTD[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerSpeedoFuelLitersTD[playerid], 50);
	PlayerTextDrawUseBox(playerid, PlayerSpeedoFuelLitersTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PlayerSpeedoFuelLitersTD[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerSpeedoFuelLitersTD[playerid], 0);

	// Earn EXP
	PlayerExpEarnBoxTD1[playerid] = CreatePlayerTextDraw(playerid, 70.000000, 295.000000, "_");
	PlayerTextDrawFont(playerid, PlayerExpEarnBoxTD1[playerid], 1);
	PlayerTextDrawLetterSize(playerid, PlayerExpEarnBoxTD1[playerid], 0.779165, 2.599992);
	PlayerTextDrawTextSize(playerid, PlayerExpEarnBoxTD1[playerid], 299.500000, 75.500000);
	PlayerTextDrawSetOutline(playerid, PlayerExpEarnBoxTD1[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerExpEarnBoxTD1[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerExpEarnBoxTD1[playerid], 2);
	PlayerTextDrawColor(playerid, PlayerExpEarnBoxTD1[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerExpEarnBoxTD1[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerExpEarnBoxTD1[playerid], -1094795521);
	PlayerTextDrawUseBox(playerid, PlayerExpEarnBoxTD1[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PlayerExpEarnBoxTD1[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerExpEarnBoxTD1[playerid], 0);

	PlayerExpEarnBoxTD2[playerid] = CreatePlayerTextDraw(playerid, 70.000000, 296.000000, "_");
	PlayerTextDrawFont(playerid, PlayerExpEarnBoxTD2[playerid], 1);
	PlayerTextDrawLetterSize(playerid, PlayerExpEarnBoxTD2[playerid], 0.737498, 2.299993);
	PlayerTextDrawTextSize(playerid, PlayerExpEarnBoxTD2[playerid], 298.500000, 73.000000);
	PlayerTextDrawSetOutline(playerid, PlayerExpEarnBoxTD2[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerExpEarnBoxTD2[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerExpEarnBoxTD2[playerid], 2);
	PlayerTextDrawColor(playerid, PlayerExpEarnBoxTD2[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerExpEarnBoxTD2[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerExpEarnBoxTD2[playerid], 255);
	PlayerTextDrawUseBox(playerid, PlayerExpEarnBoxTD2[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PlayerExpEarnBoxTD2[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerExpEarnBoxTD2[playerid], 0);

	PlayerEarnExpAmountTD[playerid] = CreatePlayerTextDraw(playerid, 71.000000, 300.000000, "EXP+100000");
	PlayerTextDrawFont(playerid, PlayerEarnExpAmountTD[playerid], 2);
	PlayerTextDrawLetterSize(playerid, PlayerEarnExpAmountTD[playerid], 0.233332, 1.500000);
	PlayerTextDrawTextSize(playerid, PlayerEarnExpAmountTD[playerid], 99.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, PlayerEarnExpAmountTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PlayerEarnExpAmountTD[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerEarnExpAmountTD[playerid], 2);
	PlayerTextDrawColor(playerid, PlayerEarnExpAmountTD[playerid], 2094792959);
	PlayerTextDrawBackgroundColor(playerid, PlayerEarnExpAmountTD[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerEarnExpAmountTD[playerid], 16711730);
	PlayerTextDrawUseBox(playerid, PlayerEarnExpAmountTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PlayerEarnExpAmountTD[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerEarnExpAmountTD[playerid], 0);

	PlayerProgressJob[playerid] = CreatePlayerProgressBar(playerid, 267.500000, 371.500000, 100.000000, 16.000000, -293409025, 100.000000, 0);

	PlayerJobCountTD[playerid] = CreatePlayerTextDraw(playerid, 316.000000, 374.000000, "100%"); // Loading...
	PlayerTextDrawFont(playerid, PlayerJobCountTD[playerid], 2);
	PlayerTextDrawLetterSize(playerid, PlayerJobCountTD[playerid], 0.158333, 1.050000);
	PlayerTextDrawTextSize(playerid, PlayerJobCountTD[playerid], 348.500000, 14.500000);
	PlayerTextDrawSetOutline(playerid, PlayerJobCountTD[playerid], 0);
	PlayerTextDrawSetShadow(playerid, PlayerJobCountTD[playerid], 0);
	PlayerTextDrawAlignment(playerid, PlayerJobCountTD[playerid], 2);
	PlayerTextDrawColor(playerid, PlayerJobCountTD[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, PlayerJobCountTD[playerid], 255);
	PlayerTextDrawBoxColor(playerid, PlayerJobCountTD[playerid], 50);
	PlayerTextDrawUseBox(playerid, PlayerJobCountTD[playerid], 0);
	PlayerTextDrawSetProportional(playerid, PlayerJobCountTD[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerJobCountTD[playerid], 0);


	barhp[playerid] = CreatePlayerProgressBar(playerid, 288.000000, 442.000000, 19.000000, 28.000000, -16776961, 100.000000, 2);
	bararmour[playerid] = CreatePlayerProgressBar(playerid, 314.000000, 442.000000, 19.000000, 28.000000, -1, 100.000000, 2);
	barhungry[playerid] = CreatePlayerProgressBar(playerid, 340.000000, 442.000000, 19.000000, 28.000000, 16711935, 100.000000, 2);
	bardrink[playerid] = CreatePlayerProgressBar(playerid, 366.000000, 442.000000, 19.000000, 28.000000, 16777215, 100.000000, 2);
	barexp[playerid] = CreatePlayerProgressBar(playerid, 268.000000, 395.000000, 99.000000, 16.000000, 255, 100.000000, 0);

	tdhp[playerid] = CreatePlayerTextDraw(playerid, 273.000000, 422.000000, "HUD:radar_girlfriend");
	PlayerTextDrawFont(playerid, tdhp[playerid], 4);
	PlayerTextDrawLetterSize(playerid, tdhp[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, tdhp[playerid], 8.000000, 10.000000);
	PlayerTextDrawSetOutline(playerid, tdhp[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tdhp[playerid], 0);
	PlayerTextDrawAlignment(playerid, tdhp[playerid], 1);
	PlayerTextDrawColor(playerid, tdhp[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, tdhp[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tdhp[playerid], 50);
	PlayerTextDrawUseBox(playerid, tdhp[playerid], 1);
	PlayerTextDrawSetProportional(playerid, tdhp[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tdhp[playerid], 0);

	tdarmour[playerid] = CreatePlayerTextDraw(playerid, 299.000000, 422.000000, "HUD:radar_tshirt");
	PlayerTextDrawFont(playerid, tdarmour[playerid], 4);
	PlayerTextDrawLetterSize(playerid, tdarmour[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, tdarmour[playerid], 8.000000, 10.000000);
	PlayerTextDrawSetOutline(playerid, tdarmour[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tdarmour[playerid], 0);
	PlayerTextDrawAlignment(playerid, tdarmour[playerid], 1);
	PlayerTextDrawColor(playerid, tdarmour[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, tdarmour[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tdarmour[playerid], 50);
	PlayerTextDrawUseBox(playerid, tdarmour[playerid], 1);
	PlayerTextDrawSetProportional(playerid, tdarmour[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tdarmour[playerid], 0);

	tdhungry[playerid] = CreatePlayerTextDraw(playerid, 325.000000, 422.000000, "HUD:radar_pizza");
	PlayerTextDrawFont(playerid, tdhungry[playerid], 4);
	PlayerTextDrawLetterSize(playerid, tdhungry[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, tdhungry[playerid], 8.000000, 10.000000);
	PlayerTextDrawSetOutline(playerid, tdhungry[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tdhungry[playerid], 0);
	PlayerTextDrawAlignment(playerid, tdhungry[playerid], 1);
	PlayerTextDrawColor(playerid, tdhungry[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, tdhungry[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tdhungry[playerid], 50);
	PlayerTextDrawUseBox(playerid, tdhungry[playerid], 1);
	PlayerTextDrawSetProportional(playerid, tdhungry[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tdhungry[playerid], 0);

	tddrink[playerid] = CreatePlayerTextDraw(playerid, 351.000000, 422.000000, "HUD:radar_datedrink");
	PlayerTextDrawFont(playerid, tddrink[playerid], 4);
	PlayerTextDrawLetterSize(playerid, tddrink[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, tddrink[playerid], 8.000000, 10.000000);
	PlayerTextDrawSetOutline(playerid, tddrink[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tddrink[playerid], 0);
	PlayerTextDrawAlignment(playerid, tddrink[playerid], 1);
	PlayerTextDrawColor(playerid, tddrink[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, tddrink[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tddrink[playerid], 50);
	PlayerTextDrawUseBox(playerid, tddrink[playerid], 1);
	PlayerTextDrawSetProportional(playerid, tddrink[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tddrink[playerid], 0);

	tdexp[playerid] = CreatePlayerTextDraw(playerid, 315.000000, 395.000000, "LEVEL 100 (100)");
	PlayerTextDrawFont(playerid, tdexp[playerid], 2);
	PlayerTextDrawLetterSize(playerid, tdexp[playerid], 0.183332, 1.549999);
	PlayerTextDrawTextSize(playerid, tdexp[playerid], 400.000000, 91.500000);
	PlayerTextDrawSetOutline(playerid, tdexp[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tdexp[playerid], 0);
	PlayerTextDrawAlignment(playerid, tdexp[playerid], 2);
	PlayerTextDrawColor(playerid, tdexp[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, tdexp[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tdexp[playerid], 50);
	PlayerTextDrawUseBox(playerid, tdexp[playerid], 0);
	PlayerTextDrawSetProportional(playerid, tdexp[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tdexp[playerid], 0);

	tddollar[playerid] = CreatePlayerTextDraw(playerid, 13.000000, 306.000000, "$");
	PlayerTextDrawFont(playerid, tddollar[playerid], 3);
	PlayerTextDrawLetterSize(playerid, tddollar[playerid], 0.437500, 1.700000);
	PlayerTextDrawTextSize(playerid, tddollar[playerid], 23.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, tddollar[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tddollar[playerid], 0);
	PlayerTextDrawAlignment(playerid, tddollar[playerid], 1);
	PlayerTextDrawColor(playerid, tddollar[playerid], -16776961);
	PlayerTextDrawBackgroundColor(playerid, tddollar[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tddollar[playerid], 50);
	PlayerTextDrawUseBox(playerid, tddollar[playerid], 0);
	PlayerTextDrawSetProportional(playerid, tddollar[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tddollar[playerid], 0);

	tdredmoney[playerid] = CreatePlayerTextDraw(playerid, 30.000000, 308.000000, "999,999,999,999");
	PlayerTextDrawFont(playerid, tdredmoney[playerid], 3);
	PlayerTextDrawLetterSize(playerid, tdredmoney[playerid], 0.220833, 1.399999);
	PlayerTextDrawTextSize(playerid, tdredmoney[playerid], 146.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, tdredmoney[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tdredmoney[playerid], 0);
	PlayerTextDrawAlignment(playerid, tdredmoney[playerid], 1);
	PlayerTextDrawColor(playerid, tdredmoney[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, tdredmoney[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tdredmoney[playerid], 50);
	PlayerTextDrawUseBox(playerid, tdredmoney[playerid], 0);
	PlayerTextDrawSetProportional(playerid, tdredmoney[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tdredmoney[playerid], 0);

	tdgangicon[playerid] = CreatePlayerTextDraw(playerid, 8.000000, 285.000000, "hud:radar_gangn");
	PlayerTextDrawFont(playerid, tdgangicon[playerid], 4);
	PlayerTextDrawLetterSize(playerid, tdgangicon[playerid], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, tdgangicon[playerid], 17.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, tdgangicon[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tdgangicon[playerid], 0);
	PlayerTextDrawAlignment(playerid, tdgangicon[playerid], 1);
	PlayerTextDrawColor(playerid, tdgangicon[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, tdgangicon[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tdgangicon[playerid], 50);
	PlayerTextDrawUseBox(playerid, tdgangicon[playerid], 1);
	PlayerTextDrawSetProportional(playerid, tdgangicon[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tdgangicon[playerid], 0);

	tdidname[playerid] = CreatePlayerTextDraw(playerid, 30.000000, 288.000000, "999 Woody_Dawson");
	PlayerTextDrawFont(playerid, tdidname[playerid], 3);
	PlayerTextDrawLetterSize(playerid, tdidname[playerid], 0.220833, 1.399999);
	PlayerTextDrawTextSize(playerid, tdidname[playerid], 143.000000, 193.500000);
	PlayerTextDrawSetOutline(playerid, tdidname[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tdidname[playerid], 0);
	PlayerTextDrawAlignment(playerid, tdidname[playerid], 1);
	PlayerTextDrawColor(playerid, tdidname[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, tdidname[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tdidname[playerid], 50);
	PlayerTextDrawUseBox(playerid, tdidname[playerid], 0);
	PlayerTextDrawSetProportional(playerid, tdidname[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tdidname[playerid], 0);

	tdlogo1[playerid] = CreatePlayerTextDraw(playerid, 576.000000, 404.000000, "O");
	PlayerTextDrawFont(playerid, tdlogo1[playerid], 1);
	PlayerTextDrawLetterSize(playerid, tdlogo1[playerid], 0.366665, 1.899999);
	PlayerTextDrawTextSize(playerid, tdlogo1[playerid], 143.000000, 38.000000);
	PlayerTextDrawSetOutline(playerid, tdlogo1[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tdlogo1[playerid], 0);
	PlayerTextDrawAlignment(playerid, tdlogo1[playerid], 2);
	PlayerTextDrawColor(playerid, tdlogo1[playerid], -16776961);
	PlayerTextDrawBackgroundColor(playerid, tdlogo1[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tdlogo1[playerid], 50);
	PlayerTextDrawUseBox(playerid, tdlogo1[playerid], 0);
	PlayerTextDrawSetProportional(playerid, tdlogo1[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tdlogo1[playerid], 0);

	tdlogo2[playerid] = CreatePlayerTextDraw(playerid, 603.000000, 404.000000, "HIO");
	PlayerTextDrawFont(playerid, tdlogo2[playerid], 1);
	PlayerTextDrawLetterSize(playerid, tdlogo2[playerid], 0.366665, 1.899999);
	PlayerTextDrawTextSize(playerid, tdlogo2[playerid], 143.000000, 38.000000);
	PlayerTextDrawSetOutline(playerid, tdlogo2[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tdlogo2[playerid], 0);
	PlayerTextDrawAlignment(playerid, tdlogo2[playerid], 2);
	PlayerTextDrawColor(playerid, tdlogo2[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, tdlogo2[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tdlogo2[playerid], 50);
	PlayerTextDrawUseBox(playerid, tdlogo2[playerid], 0);
	PlayerTextDrawSetProportional(playerid, tdlogo2[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tdlogo2[playerid], 0);

	tdlogo3[playerid] = CreatePlayerTextDraw(playerid, 592.000000, 421.000000, "Role");
	PlayerTextDrawFont(playerid, tdlogo3[playerid], 1);
	PlayerTextDrawLetterSize(playerid, tdlogo3[playerid], 0.366665, 1.899999);
	PlayerTextDrawTextSize(playerid, tdlogo3[playerid], 143.000000, 38.000000);
	PlayerTextDrawSetOutline(playerid, tdlogo3[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tdlogo3[playerid], 0);
	PlayerTextDrawAlignment(playerid, tdlogo3[playerid], 2);
	PlayerTextDrawColor(playerid, tdlogo3[playerid], 1097458175);
	PlayerTextDrawBackgroundColor(playerid, tdlogo3[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tdlogo3[playerid], 50);
	PlayerTextDrawUseBox(playerid, tdlogo3[playerid], 0);
	PlayerTextDrawSetProportional(playerid, tdlogo3[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tdlogo3[playerid], 0);

	tdlogo4[playerid] = CreatePlayerTextDraw(playerid, 620.000000, 421.000000, "Play");
	PlayerTextDrawFont(playerid, tdlogo4[playerid], 1);
	PlayerTextDrawLetterSize(playerid, tdlogo4[playerid], 0.366665, 1.899999);
	PlayerTextDrawTextSize(playerid, tdlogo4[playerid], 143.000000, 38.000000);
	PlayerTextDrawSetOutline(playerid, tdlogo4[playerid], 1);
	PlayerTextDrawSetShadow(playerid, tdlogo4[playerid], 0);
	PlayerTextDrawAlignment(playerid, tdlogo4[playerid], 2);
	PlayerTextDrawColor(playerid, tdlogo4[playerid], 16777215);
	PlayerTextDrawBackgroundColor(playerid, tdlogo4[playerid], 255);
	PlayerTextDrawBoxColor(playerid, tdlogo4[playerid], 50);
	PlayerTextDrawUseBox(playerid, tdlogo4[playerid], 0);
	PlayerTextDrawSetProportional(playerid, tdlogo4[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, tdlogo4[playerid], 0);
	
	// --> หน้าเมนูช่วยเหลือ
	
	AMZTextDraws[playerid][0] = CreatePlayerTextDraw(playerid, 314.000000, 153.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][0], 0.600000, 19.800003);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][0], 298.500000, 144.500000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][0], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][0], 135);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][0], 0);

	AMZTextDraws[playerid][1] = CreatePlayerTextDraw(playerid, 314.000000, 153.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][1], 0.600000, 1.150002);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][1], 298.500000, 144.500000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][1], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][1], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][1], -16711681);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][1], 0);

	AMZTextDraws[playerid][2] = CreatePlayerTextDraw(playerid, 293.000000, 152.000000, "Inventory");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][2], 3);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][2], 0.266666, 1.149999);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][2], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][2], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][2], 1);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][2], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][2], 50);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][2], 0);

	AMZTextDraws[playerid][3] = CreatePlayerTextDraw(playerid, 314.000000, 263.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][3], 0.600000, 1.150002);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][3], 298.500000, 88.500000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][3], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][3], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][3], 0);

	AMZTextDraws[playerid][4] = CreatePlayerTextDraw(playerid, 268.000000, 263.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][4], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][4], 0.600000, 1.150002);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][4], 298.500000, -7.500000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][4], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][4], 16711935);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][4], 0);

	AMZTextDraws[playerid][5] = CreatePlayerTextDraw(playerid, 289.000000, 284.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][5], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][5], 0.600000, 1.150002);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][5], 298.500000, 41.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][5], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][5], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][5], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][5], -1);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][5], 0);

	AMZTextDraws[playerid][6] = CreatePlayerTextDraw(playerid, 338.000000, 284.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][6], 0.600000, 1.150002);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][6], 298.500000, 41.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][6], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][6], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][6], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][6], -1);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][6], 0);

	AMZTextDraws[playerid][7] = CreatePlayerTextDraw(playerid, 289.000000, 303.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][7], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][7], 0.600000, 1.150002);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][7], 298.500000, 41.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][7], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][7], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][7], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][7], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][7], -1);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][7], 0);

	AMZTextDraws[playerid][8] = CreatePlayerTextDraw(playerid, 338.000000, 303.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][8], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][8], 0.600000, 1.150002);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][8], 298.500000, 41.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][8], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][8], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][8], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][8], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][8], -1);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][8], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][8], 0);

	AMZTextDraws[playerid][9] = CreatePlayerTextDraw(playerid, 268.000000, 284.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][9], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][9], 0.600000, 1.150002);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][9], 298.500000, -7.500000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][9], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][9], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][9], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][9], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][9], -2686721);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][9], 0);

	AMZTextDraws[playerid][10] = CreatePlayerTextDraw(playerid, 317.000000, 284.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][10], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][10], 0.600000, 1.150002);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][10], 298.500000, -7.500000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][10], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][10], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][10], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][10], -2686721);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][10], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][10], 0);

	AMZTextDraws[playerid][11] = CreatePlayerTextDraw(playerid, 268.000000, 303.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][11], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][11], 0.600000, 1.150002);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][11], 298.500000, -7.500000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][11], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][11], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][11], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][11], -16776961);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][11], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][11], 0);

	AMZTextDraws[playerid][12] = CreatePlayerTextDraw(playerid, 317.000000, 303.000000, "_");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][12], 1);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][12], 0.600000, 1.150002);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][12], 298.500000, -7.500000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][12], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][12], 2);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][12], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][12], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][12], -16776961);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][12], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][12], 0);

	AMZTextDraws[playerid][13] = CreatePlayerTextDraw(playerid, 298.000000, 262.000000, "Item");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][13], 3);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][13], 0.333333, 1.250000);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][13], 400.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][13], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][13], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][13], 1);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][13], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][13], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][13], 50);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][13], 0);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][13], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][13], 1);

	AMZTextDraws[playerid][14] = CreatePlayerTextDraw(playerid, 276.000000, 283.000000, "HELP");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][14], 3);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][14], 0.333333, 1.250000);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][14], 317.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][14], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][14], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][14], 1);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][14], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][14], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][14], 50);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][14], 0);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][14], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][14], 1);

	AMZTextDraws[playerid][15] = CreatePlayerTextDraw(playerid, 326.000000, 283.000000, "CAR");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][15], 3);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][15], 0.333333, 1.250000);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][15], 392.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][15], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][15], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][15], 1);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][15], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][15], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][15], 50);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][15], 0);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][15], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][15], 1);

	AMZTextDraws[playerid][16] = CreatePlayerTextDraw(playerid, 276.000000, 302.000000, "GPS");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][16], 3);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][16], 0.333333, 1.250000);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][16], 317.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][16], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][16], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][16], 1);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][16], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][16], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][16], 50);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][16], 0);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][16], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][16], 1);

	AMZTextDraws[playerid][17] = CreatePlayerTextDraw(playerid, 326.000000, 302.000000, "WP");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][17], 3);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][17], 0.225000, 1.250000);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][17], 392.500000, 17.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][17], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][17], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][17], 1);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][17], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][17], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][17], 50);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][17], 0);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][17], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][17], 1);

	AMZTextDraws[playerid][18] = CreatePlayerTextDraw(playerid, 214.000000, 176.000000, "TextDraw");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][18], 5);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][18], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][18], 135.000000, 82.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][18], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][18], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][18], 1);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][18], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][18], 0);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][18], 0);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][18], 1);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][18], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][18], 0);
	PlayerTextDrawSetPreviewModel(playerid, AMZTextDraws[playerid][18], 2);
	PlayerTextDrawSetPreviewRot(playerid, AMZTextDraws[playerid][18], -10.000000, 0.000000, -20.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, AMZTextDraws[playerid][18], 1, 1);

	AMZTextDraws[playerid][19] = CreatePlayerTextDraw(playerid, 308.000000, 198.000000, "IP : -");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][19], 3);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][19], 0.195833, 0.800000);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][19], 590.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][19], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][19], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][19], 1);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][19], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][19], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][19], 50);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][19], 0);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][19], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][19], 0);

	AMZTextDraws[playerid][20] = CreatePlayerTextDraw(playerid, 308.000000, 209.000000, "OHIO Roleplay");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][20], 3);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][20], 0.195833, 0.800000);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][20], 590.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][20], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][20], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][20], 1);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][20], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][20], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][20], 50);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][20], 0);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][20], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][20], 0);

	AMZTextDraws[playerid][21] = CreatePlayerTextDraw(playerid, 307.000000, 232.000000, "~g~$ ~w~5000");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][21], 3);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][21], 0.270833, 1.049999);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][21], 500.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][21], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][21], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][21], 1);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][21], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][21], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][21], 50);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][21], 0);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][21], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][21], 0);

	AMZTextDraws[playerid][22] = CreatePlayerTextDraw(playerid, 307.000000, 244.000000, "~r~$ ~w~6000");
	PlayerTextDrawFont(playerid, AMZTextDraws[playerid][22], 3);
	PlayerTextDrawLetterSize(playerid, AMZTextDraws[playerid][22], 0.270833, 1.049999);
	PlayerTextDrawTextSize(playerid, AMZTextDraws[playerid][22], 500.000000, 17.000000);
	PlayerTextDrawSetOutline(playerid, AMZTextDraws[playerid][22], 1);
	PlayerTextDrawSetShadow(playerid, AMZTextDraws[playerid][22], 0);
	PlayerTextDrawAlignment(playerid, AMZTextDraws[playerid][22], 1);
	PlayerTextDrawColor(playerid, AMZTextDraws[playerid][22], -1);
	PlayerTextDrawBackgroundColor(playerid, AMZTextDraws[playerid][22], 255);
	PlayerTextDrawBoxColor(playerid, AMZTextDraws[playerid][22], 50);
	PlayerTextDrawUseBox(playerid, AMZTextDraws[playerid][22], 0);
	PlayerTextDrawSetProportional(playerid, AMZTextDraws[playerid][22], 1);
	PlayerTextDrawSetSelectable(playerid, AMZTextDraws[playerid][22], 0);
}

ShowPlayerExpEarn(playerid, exp, time = 3000)
{
	if (playerData[playerid][pExpShow])
	{
		PlayerTextDrawHide(playerid, PlayerExpEarnBoxTD1[playerid]);
		PlayerTextDrawHide(playerid, PlayerExpEarnBoxTD2[playerid]);
		PlayerTextDrawHide(playerid, PlayerEarnExpAmountTD[playerid]);
	    KillTimer(playerData[playerid][pExpTimer]);
	}
	new string[15];
	format(string, sizeof(string), "EXP+%d", exp);
	PlayerTextDrawSetString(playerid, PlayerEarnExpAmountTD[playerid], string);
	PlayerTextDrawShow(playerid, PlayerExpEarnBoxTD1[playerid]);
	PlayerTextDrawShow(playerid, PlayerExpEarnBoxTD2[playerid]);
	PlayerTextDrawShow(playerid, PlayerEarnExpAmountTD[playerid]);

	playerData[playerid][pExpShow] = true;
	playerData[playerid][pExpTimer] = SetTimerEx("HidePlayerExpEarn", time, false, "d", playerid);
}

forward HidePlayerExpEarn(playerid);
public HidePlayerExpEarn(playerid)
{
	if (!playerData[playerid][pExpShow])
	    return 0;

	playerData[playerid][pExpShow] = false;
	PlayerTextDrawHide(playerid, PlayerExpEarnBoxTD1[playerid]);
	PlayerTextDrawHide(playerid, PlayerExpEarnBoxTD2[playerid]);
	PlayerTextDrawHide(playerid, PlayerEarnExpAmountTD[playerid]);
	return 1;
}

ShowPlayerSpeedo(playerid, bool:enable)
{
	if(enable == true)
	{
		for(new i = 0; i < 20; i ++) {
		    PlayerTextDrawShow(playerid, ui_speed[playerid][i]);
		}
	}
	else
	{
		for(new i = 0; i < 20; i ++) {
		    PlayerTextDrawHide(playerid, ui_speed[playerid][i]);
		}
	}
}

DestroyPlayerStuff(playerid)
{
	PlayerTextDrawDestroy(playerid, PlayerSpeedoCountTD[playerid]);
	PlayerTextDrawDestroy(playerid, PlayerSpeedoKMHTD[playerid]);
	PlayerTextDrawDestroy(playerid, PlayerSpeedoFuelCountTD[playerid]);
	PlayerTextDrawDestroy(playerid, PlayerSpeedoFuelLitersTD[playerid]);
	PlayerTextDrawDestroy(playerid, PlayerJobCountTD[playerid]);
	DestroyPlayerProgressBar(playerid, PlayerProgressJob[playerid]);
	PlayerTextDrawDestroy(playerid, tdhp[playerid]);
	PlayerTextDrawDestroy(playerid, tdarmour[playerid]);
	PlayerTextDrawDestroy(playerid, tdhungry[playerid]);
	PlayerTextDrawDestroy(playerid, tddrink[playerid]);
	PlayerTextDrawDestroy(playerid, tdexp[playerid]);
	PlayerTextDrawDestroy(playerid, tddollar[playerid]);
	PlayerTextDrawDestroy(playerid, tdredmoney[playerid]);
	PlayerTextDrawDestroy(playerid, tdgangicon[playerid]);
	PlayerTextDrawDestroy(playerid, tdidname[playerid]);
	PlayerTextDrawDestroy(playerid, tdlogo1[playerid]);
	PlayerTextDrawDestroy(playerid, tdlogo2[playerid]);
	PlayerTextDrawDestroy(playerid, tdlogo3[playerid]);
	PlayerTextDrawDestroy(playerid, tdlogo4[playerid]);
	DestroyPlayerProgressBar(playerid, barhp[playerid]);
	DestroyPlayerProgressBar(playerid, bararmour[playerid]);
	DestroyPlayerProgressBar(playerid, barhungry[playerid]);
	DestroyPlayerProgressBar(playerid, bardrink[playerid]);
	DestroyPlayerProgressBar(playerid, barexp[playerid]);
}

public OnPlayerConnect(playerid)
{
 	isRepairVehicle[playerid] = 0;
 	repairPoints[playerid] = 0;
 	
 	buyMaterials[playerid] = 0;
 	
 	StorageType[playerid] = 0;
 	CraftType[playerid] = 0;

 	mechanicID[playerid] = -1;
 	mechanicPrice[playerid] = 0;

	fineID[playerid] = -1;
	finePrice[playerid] = 0;
	format(fineText[playerid], 64, "(null)");

 	BBGunOn[playerid] = 0;

	ClothingCooldown[playerid] = 0;
	EditClothing[playerid] = 0;
 	
 	seatbelt{playerid} = false;
	old_vehicle[playerid] = -1;
	old_veh_seat[playerid] = 0;

    for(new i=0;i!=MAX_CLOTHES; ++i) cl_dataslot[playerid][i] = -1, ClothingData[playerid][i][cl_object] = INVALID_OBJECT_ID;

 	factionLocker[playerid] = -1;

 	isUseMedicKit[playerid] = 0;
 	medicPoints[playerid] = 0;

 	isHarvest[playerid] = 0;
 	harvestPoints[playerid] = 0;

 	isPoonStart[playerid] = 0;
 	poonPoints[playerid] = 0;
 	
 	WeaponType[playerid] = 0;
 	VehicleType[playerid] = -1;
 	
 	warJoin[playerid] = 0;
 	isHospital[playerid] = 0;
 	hospitalPoints[playerid] = 0;
 	
 	prisonJob[playerid] = 0;

	//เซเว่น
	RemoveBuildingForPlayer(playerid, 5409, 1918.849, -1776.329, 16.976, 0.250);
	RemoveBuildingForPlayer(playerid, 5535, 1918.849, -1776.329, 16.976, 0.250);
	RemoveBuildingForPlayer(playerid, 5681, 1921.479, -1778.910, 18.578, 0.250);
	RemoveBuildingForPlayer(playerid, 1524, 1910.160, -1779.660, 18.750, 0.250);
	RemoveBuildingForPlayer(playerid, 1676, 1941.660, -1778.449, 14.140, 0.250);
	RemoveBuildingForPlayer(playerid, 1676, 1941.660, -1774.310, 14.140, 0.250);
	RemoveBuildingForPlayer(playerid, 1676, 1941.660, -1771.339, 14.140, 0.250);
	RemoveBuildingForPlayer(playerid, 1676, 1941.660, -1767.290, 14.140, 0.250);
	RemoveBuildingForPlayer(playerid, 955, 1928.729, -1772.449, 12.945, 0.250);

	//prison
	RemoveBuildingForPlayer(playerid, 3244, 2535.0938, -2131.8750, 12.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, 2532.0313, -2074.6250, 12.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 2484.4141, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 2496.0625, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2503.1250, -2073.3750, 12.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2515.4219, -2073.3750, 12.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3288, 2432.7266, -2133.0234, 12.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3686, 2448.1328, -2075.6328, 16.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2475.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2482.0234, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2489.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2496.0938, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2452.9609, -2129.0156, 25.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3756, 2484.2344, -2118.5547, 17.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3755, 2484.2344, -2118.5547, 17.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 5295, 2413.0547, -2106.4219, 23.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 3257, 2432.7266, -2133.0234, 12.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 2484.4141, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 2496.0625, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2452.9609, -2129.0156, 25.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3567, 2446.8281, -2075.8438, 13.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3567, 2438.3594, -2075.8438, 13.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3627, 2448.1328, -2075.6328, 16.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2489.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2482.0234, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2475.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2496.0938, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2515.4219, -2073.3750, 12.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2503.1250, -2073.3750, 12.4297, 0.25);

	//รวมแมพ
	RemoveBuildingForPlayer(playerid, 620, 1831.9609, -1381.0703, 13.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1831.2813, -1354.1016, 14.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 5044, 1818.9141, -2543.6719, 13.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3769, 1961.4453, -2216.1719, 14.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2061.5313, -2209.8125, 14.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2082.4063, -2269.6563, 14.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2082.4375, -2298.2266, 14.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 3744, 2082.4063, -2370.0156, 14.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3769, 2060.6875, -2305.9609, 14.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3769, 2060.6875, -2371.8828, 14.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3780, 1884.1719, -2541.3750, 14.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3780, 1652.3438, -2541.3750, 14.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3780, 1381.1172, -2541.3750, 14.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3665, 1652.3438, -2541.3750, 14.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3665, 1884.1719, -2541.3750, 14.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3664, 2042.7734, -2442.1875, 19.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 3625, 2060.6875, -2371.8828, 14.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2082.4063, -2370.0156, 14.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3625, 2060.6875, -2305.9609, 14.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2082.4063, -2269.6563, 14.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2082.4375, -2298.2266, 14.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 3625, 1961.4453, -2216.1719, 14.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2054.9219, -2208.4609, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2054.9219, -2203.1875, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3574, 2061.5313, -2209.8125, 14.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2054.9297, -2181.3594, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2054.9297, -2186.6328, 13.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3665, 1381.1172, -2541.3750, 14.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3664, 1388.0078, -2593.0000, 19.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 3664, 1388.0078, -2494.2656, 19.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 5032, 1567.7109, -2543.6328, 13.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1261, 1862.9609, -1449.0547, 26.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 1266, 1976.9453, -1426.9922, 24.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 708, 1966.7109, -1360.0938, 17.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1971.8203, -1411.8750, 14.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1856.3984, -1398.2656, 15.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1958.8828, -1395.1953, 13.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1856.3984, -1370.5703, 15.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 5400, 1913.1328, -1370.5000, 17.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1933.2422, -1376.1719, 13.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 1926.0313, -1350.5469, 16.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 1876.9219, -1350.6875, 12.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1893.0234, -1345.6563, 15.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1920.7656, -1345.6563, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 5464, 1902.4297, -1309.5391, 29.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1856.3984, -1442.8672, 15.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1858.1875, -1439.6875, 11.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1856.3984, -1417.4688, 15.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 1267, 1862.9609, -1449.0547, 26.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1976.9453, -1426.9922, 24.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 6189, 836.4453, -2003.5234, -2.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 6191, 836.4453, -2003.5234, -2.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.1484, -2061.0625, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.1484, -2055.2422, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 820.2813, -2019.0000, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 820.2813, -2015.0625, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 820.2813, -1999.0313, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 820.2813, -1977.1797, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 820.3438, -2058.1641, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -2066.1797, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -2036.6953, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -2008.9141, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.7891, -2011.7969, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -1991.4922, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 821.0078, -1986.0938, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -1973.4922, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 820.7891, -1980.5625, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 820.9297, -1950.1719, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 821.5469, -2048.8984, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 821.8125, -2042.2969, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 824.7969, -2036.6797, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 821.8125, -2031.3516, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 821.1094, -2023.7422, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 821.0703, -1996.2500, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 821.8125, -1956.0469, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 821.8125, -1945.1016, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 824.1563, -1950.4297, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.7969, -2049.0000, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.7969, -2066.3594, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 852.4531, -2060.3359, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 852.7344, -2055.2422, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 852.5313, -2058.1641, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 852.6094, -2042.5547, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 852.4531, -2039.6875, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 638, 852.5313, -2036.3906, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1461, 852.7344, -2033.4688, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 852.6094, -2030.4531, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 851.7578, -2023.7422, 14.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 852.6094, -2026.5234, 12.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.7969, -2018.0313, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 848.5625, -1986.6719, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 792, 851.9766, -1986.8828, 12.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1281, 851.0078, -1981.6328, 12.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 5919, 1200.9063, -1337.9922, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 5929, 1230.8906, -1337.9844, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1341.8516, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1328.0938, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1356.2109, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 1085.7031, -1361.0234, 13.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1210.8047, -1367.3828, 15.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1374.6094, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1356.5547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1374.6094, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1356.5547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1190.7734, -1320.8594, 15.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 5794, 1200.9063, -1337.9922, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1335.0547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1317.7422, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 5812, 1230.8906, -1337.9844, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1335.0547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1317.7422, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1300.9219, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1300.9219, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 6459, 387.8906, -1900.4375, 9.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 6460, 387.5781, -1918.3672, 8.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 6465, 368.0547, -2028.2422, 8.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 6516, 717.6875, -1357.2813, 18.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1415, 732.8516, -1332.8984, 12.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1439, 732.7266, -1341.7734, 12.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 6462, 368.0547, -2028.2422, 8.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 6466, 374.6953, -2054.8828, 8.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 384.4297, -1929.8047, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 384.4297, -1904.1328, 7.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 6299, 387.5781, -1918.3672, 8.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 6289, 387.8906, -1900.4375, 9.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 4344, 801.6563, -1996.7734, -31.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4477, 801.6563, -1996.7734, -31.5781, 0.25);


	// Sprunk machines
 	RemoveBuildingForPlayer(playerid, 1302, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1209, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 955, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 956, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1775, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1776, 0.0, 0.0, 0.0, 6000.0);
    RemoveBuildingForPlayer(playerid, 1977, 0.0, 0.0, 0.0, 6000.0);

	RemoveBuildingForPlayer(playerid, 1413, -969.6172, -544.6250, 26.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1447, -970.2031, -539.3281, 26.3281, 0.25);
	RemoveBuildingForPlayer(playerid, 727, -964.3359, -535.3906, 24.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 1451, -960.5391, -533.6719, 25.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1451, -960.5391, -530.5625, 25.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, -936.4141, -537.1641, 24.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 3171, -927.9609, -520.4219, 24.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1451, -960.5391, -527.4609, 25.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1451, -960.5391, -524.3594, 25.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1452, -946.1406, -512.9453, 26.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 1462, -935.9922, -514.8594, 24.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 3168, -938.9688, -516.0781, 24.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1370, -934.2266, -515.6641, 25.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, -940.7031, -513.0078, 24.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, -958.8516, -512.7813, 24.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 727, -929.3125, -514.2422, 24.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3169, -941.3750, -493.1641, 24.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 3170, -962.8359, -507.4688, 24.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 1370, -937.7422, -491.6641, 25.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 727, -959.3672, -496.8281, 24.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 3171, -923.2813, -537.5469, 24.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 727, -911.2578, -541.5703, 24.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 3172, -912.6016, -532.3203, 24.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1370, -921.3516, -534.7109, 25.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1462, -925.4453, -536.5859, 24.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, -913.2188, -519.3516, 24.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 1457, -913.6797, -522.8594, 26.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1370, -915.1797, -526.3047, 25.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1370, -926.0313, -517.9922, 25.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, -907.5859, -499.4063, 24.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 1475, -920.9141, -498.2969, 27.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1470, -920.8828, -498.2969, 25.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1472, -923.9063, -497.9219, 25.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1471, -922.3516, -497.9297, 25.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1474, -922.3672, -497.9375, 27.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 727, -906.5547, -503.7031, 24.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 3168, -923.8281, -495.1406, 24.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 1370, -918.2031, -495.7422, 25.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, -915.1406, -494.5313, 24.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 1476, -925.2578, -497.2031, 25.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1477, -925.2578, -497.2109, 27.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1473, -923.8125, -497.5703, 28.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, -912.6484, -490.4297, 26.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1462, -926.3438, -492.4375, 24.9766, 0.25);

	CreatePlayerStuff(playerid);
	ResetPlayerConnection(playerid);

	ClearPlayerChat(playerid, 20);

	return 1;
}

public OnPlayerDisconnect(playerid, reason)//เมื่อออกเกมส์
{
	new weaponid, ammo;
	for (new i; i <= 12; i++)
	{
		GetPlayerWeaponData(playerid, i, weaponid, ammo);

		if(weaponid != 0 && ammo > 1 && gPlayerWeaponData[playerid][weaponid])
		{
		    //callcmd::wp(playerid, "\1");
		    UpdateplayerData(playerid);
		}
	}

    if (playerData[playerid][pRoadblock] != -1)
    {
		DestroyDynamicObject(playerData[playerid][pRoadblock]);
		playerData[playerid][pRoadblock] = -1;
	}
    for (new i = 0; i <= 9; i++)
    {
        RemovePlayerAttachedObject(playerid, i);
    }
	if (GetPlayerWantedLevelEx(playerid) > 0)
	{
	    playerData[playerid][pPrisoned] = 1;
	    playerData[playerid][pJailTime] = GetPlayerWantedLevelEx(playerid)*120;
	}

	if(playerData[playerid][IsLoggedIn])
	{
		for(new i = 1; i < MAX_VEHICLES; i ++)
		{
	    	if(IsValidVehicle(i) && IsVehicleOwner(playerid, i) && carData[i][carTimer] == -1)
		    {
				carData[i][carTimer] = SetTimerEx("DespawnTimer", 600000, false, "d", i);
	   		}
		}
	}
    DestroyPlayerStuff(playerid);
	UpdateplayerData(playerid);

	if (playerData[playerid][LoginTimer])
	{
		KillTimer(playerData[playerid][LoginTimer]);
		playerData[playerid][LoginTimer] = 0;
	}
	ResetPlayerDisconnection(playerid);

	playerData[playerid][IsLoggedIn] = false;
	return 1;
}

public OnPlayerSpawn(playerid)
{
    GangZoneShowForAll(redzone, 0xFF0000AA);

	// ค่าอาหาร
    PlayerTextDrawShow(playerid, ui_zone[playerid]);
    //PlayerTextDrawShow(playerid, ui_playerPing[playerid]);

    PlayerTextDrawShow(playerid, pTD_StatsNew[playerid][0]);
    PlayerTextDrawShow(playerid, pTD_StatsNew[playerid][1]);
    PlayerTextDrawShow(playerid, pTD_StatsNew[playerid][2]);
    
    TextDrawShowForPlayer(playerid, TD_uiStatsNew[0]);
    TextDrawShowForPlayer(playerid, TD_uiStatsNew[1]);
    TextDrawShowForPlayer(playerid, TD_uiStatsNew[2]);
    TextDrawShowForPlayer(playerid, TD_uiStatsNew[3]);
    TextDrawShowForPlayer(playerid, TD_uiStatsNew[4]);
    TextDrawShowForPlayer(playerid, TD_uiStatsNew[5]);
    TextDrawShowForPlayer(playerid, TD_uiStatsNew[6]);
    TextDrawShowForPlayer(playerid, TD_uiStatsNew[7]);

	ShowPlayerProgressBar(playerid, PlayerProgressBar[playerid][0]);
	ShowPlayerProgressBar(playerid, PlayerProgressBar[playerid][1]);
    ShowPlayerProgressBar(playerid, PlayerProgressBar[playerid][2]);

    TextDrawShowForPlayer(playerid, ui_website);
    TextDrawShowForPlayer(playerid, ui_clock);
    
    TextDrawShowForPlayer(playerid, logoServer[0]);
    TextDrawShowForPlayer(playerid, logoServer[1]);

	PlayerTextDrawShow(playerid, PlayerTD[playerid][0]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][1]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][2]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][3]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][4]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][5]);
	
	/*PlayerTextDrawShow(playerid, PlayerTD[playerid][6]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][7]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][8]);*/
	
	PlayerTextDrawShow(playerid, PlayerTD[playerid][9]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][10]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][11]);
	
	/*PlayerTextDrawShow(playerid, PlayerTD[playerid][12]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][13]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][14]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][15]);
	PlayerTextDrawShow(playerid, PlayerTD[playerid][16]);*/
		
	/*TextDrawShowForPlayer(playerid, ui_logoWeedDay[0]);
    TextDrawShowForPlayer(playerid, ui_logoWeedDay[1]);
    TextDrawShowForPlayer(playerid, ui_logoWeedDay[2]);*/
    
    if(MapIconsShown[playerid] != 1)
    {
       SetPlayerMapIcon(playerid, 1, 2103.1360,-1806.4854,13.5547,29, COLOR_WHITE);//อาหาร
       SetPlayerMapIcon(playerid, 2, 1186.8645,-1324.8997,13.5593,22, COLOR_WHITE);//โรงบาล
       SetPlayerMapIcon(playerid, 3, 2048.7759,-1918.5503,13.5469,37, COLOR_WHITE);//ทำใบขับขี
       SetPlayerMapIcon(playerid, 4, 541.1357,-1289.7466,17.2422,55, COLOR_WHITE);//ขายรถ
       SetPlayerMapIcon(playerid, 5, 1461.6660,-1141.7620,24.3906,45, COLOR_WHITE);//ร้านเสื้อ
       SetPlayerMapIcon(playerid, 6, 1542.0471,-1675.8102,13.5537,30, COLOR_WHITE);//ตำรวจ
       SetPlayerMapIcon(playerid, 7, 369.8507,-2033.3075,7.6719,9, COLOR_WHITE);//ตกปลา
       SetPlayerMapIcon(playerid, 8, 814.1260,-1616.1510,13.5469,10, COLOR_WHITE);//แฮมเบอร์เกอร์
       SetPlayerMapIcon(playerid, 9, 1682.7418,-2333.0972,13.5469,5, COLOR_WHITE);//เครื่องบิน
       SetPlayerMapIcon(playerid, 10, 2488.5427,-1669.8381,13.3359,15, COLOR_WHITE);//CJ
       SetPlayerMapIcon(playerid, 11, 1480.7601,-1767.3545,18.7958,52, COLOR_WHITE);//BANK
       SetPlayerMapIcon(playerid, 12, 1366.8224,-1279.7825,13.5469,18, COLOR_WHITE);//ขายปืน
       SetPlayerMapIcon(playerid, 13, 1833.0233,-1682.3911,13.4907,17, COLOR_WHITE);//ผับ
       SetPlayerMapIcon(playerid, 14, 1086.0706,-1380.7538,13.7813,20, COLOR_WHITE);//น้ำมัน
       SetPlayerMapIcon(playerid, 15, 1944.9172,-1772.6554,13.3906,20, COLOR_WHITE);//น้ำมัน
       SetPlayerMapIcon(playerid, 16, -91.0461,-1169.0923,2.4227,20, COLOR_WHITE);//น้ำมัน
       SetPlayerMapIcon(playerid, 17, 1381.0107,457.4898,19.9355,20, COLOR_WHITE);//น้ำมัน
       SetPlayerMapIcon(playerid, 18, 655.4745,-564.5762,16.3359,20, COLOR_WHITE);//น้ำมัน
       SetPlayerMapIcon(playerid, 19, 1237.8000,-1816.6465,13.4261,35, COLOR_WHITE);//เกิดเด็กใหม่
       SetPlayerMapIcon(playerid, 20, 767.4355,-1363.0724,13.5200,63, COLOR_WHITE);//ซ่อมรถ
       SetPlayerMapIcon(playerid, 21, 100.8042,-161.6376,2.5344,63, COLOR_WHITE);//ซ่อมรถ
       SetPlayerMapIcon(playerid, 22, 1367.5941,248.1204,19.5669,29, COLOR_WHITE);//อาหาร
       SetPlayerMapIcon(playerid, 23, 103.6848,-161.0363,2.2763,23, COLOR_WHITE);//PVP
       SetPlayerMapIcon(playerid, 24, 2485.0144,-1464.2155,24.0185,36, COLOR_WHITE);//เงินแดง
    }

	SetPlayerSkin(playerid, playerData[playerid][pSkin]);

	if (warJoin[playerid] == 1)
	{
		SetPlayerPos(playerid, -975.1812,1061.1890,1345.6719);
		SetPlayerFacingAngle(playerid, 88.2425);
		SetPlayerInterior(playerid, 10);
		SetPlayerVirtualWorld(playerid, 0);
		return 1;
	}

	if (playerData[playerid][pJailTime] > 0)
	{
	    SetPlayerInPrison(playerid);
	    SetPlayerWeather(playerid, globalWeather);
	    ResetPlayerWantedLevelEx(playerid);
	}
	else
	{
	    if (playerData[playerid][pInjured])
	    {
			SetPlayerInterior(playerid, playerData[playerid][pInterior]);
			SetPlayerVirtualWorld(playerid, playerData[playerid][pWorld]);
			SetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
			SetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);
			PlayerTextDrawShow(playerid, PlayerDeathTD[playerid]);

			SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน]:{FFFFFF} คุณกำลังอยู่ในสถานะบาดเจ็บ กรุณาโทรเรียก /call 911 เพื่อขอความช่วยเหลือ");
		}
	    else
	    {
	        if (playerData[playerid][pHospital] != -1)
	        {
	            SetPlayerPos(playerid, 1183.7822,-1323.1835,13.5760);
	            SetPlayerFacingAngle(playerid, 271.4739);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				PlayerTextDrawHide(playerid, PlayerDeathTD[playerid]);
				playerData[playerid][pHospital] = -1;

				playerData[playerid][pHungry] = 20;
				playerData[playerid][pThirsty] = 20;

				ClearAnimations(playerid);
				TogglePlayerControllable(playerid, true);
				SetPlayerWeather(playerid, globalWeather);
				
				SetPlayerHealth(playerid, 10.0);
				GivePlayerMoneyEx(playerid, -2000);
				SendClientMessage(playerid, COLOR_LIGHTRED, "* EMT : คุณได้เสียค่ารักษาพยาบาลจำนวน $2,000");
			}
	        else
	        {
				if (playerData[playerid][pSpawnPoint] == 0)
			    {
				    SetPlayerPos(playerid, 1685.6648,-2332.9873,13.5469);
				    SetPlayerFacingAngle(playerid, 359.5448);
				    SetPlayerVirtualWorld(playerid, 0);
				    SetPlayerInterior(playerid, 0);
			    }
				if (playerData[playerid][pSpawnPoint] == 1)
				{
				    new faction = playerData[playerid][pFaction];
/*				    if(playerData[playerid][pFactionID] == -1)
				    {
				        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณเป็นประชาชนธรรมดา ระบบจึงส่งคุณมาที่จุดเกิด ''สาธารณะ''");
				        SetPlayerPos(playerid, 1220.9487,-1812.9459,16.5938);
				    	SetPlayerFacingAngle(playerid, 180.4311);
					    SetPlayerVirtualWorld(playerid, 0);
					    SetPlayerInterior(playerid, 0);
					}*/
					SetPlayerPos(playerid, factionData[faction][SpawnX],factionData[faction][SpawnY],factionData[faction][SpawnZ]);
					SetPlayerInterior(playerid,factionData[faction][SpawnInterior]);
					SetPlayerVirtualWorld(playerid, factionData[faction][SpawnVW]);
					playerData[playerid][pEntrance] = factionData[faction][factionEntrance];
				}
				if (playerData[playerid][pSpawnPoint] == 2)
				{
					SetPlayerInterior(playerid, playerData[playerid][pInterior]);
					SetPlayerVirtualWorld(playerid, playerData[playerid][pWorld]);
					SetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
					SetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);
				}
				SetPlayerWeather(playerid, globalWeather);
			}
		}
	}
	SetPlayerHealth(playerid, playerData[playerid][pHealth]);
	SetCameraBehindPlayer(playerid);
	return 1;
}
public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
	new Float:armor, Float:hp;
	GetPlayerHealth(playerid, hp);
	GetPlayerArmour(playerid, armor);

	if (issuerid != INVALID_PLAYER_ID)
	{
		if (playerData[issuerid][pTazer] && weaponid == 23)
		{
		    amount = 0.0;
		    SetPlayerHealth(playerid, hp);
		}

        if (!PVPStats)
		{
		    if (GetFactionType(issuerid) != FACTION_POLICE)
		    {
			    amount = 0.0;
				TogglePlayerControllable(issuerid, false);
				SendClientMessage(issuerid, COLOR_RED, "> ตอนนี้อยู่ในโหมด PVE ทำให้คุณไม่สามารถทำร้ายใครได้!");
				playerData[issuerid][pPVPFreeze] = 20;
				SetPlayerHealth(playerid, hp);
				return 1;
			}
		}

		switch(weaponid)
		{
			case WEAPON_FLOWER:
			{
				if(armor > 0)
				{
					SetPlayerArmour(playerid, armor-1);
				}
				else
				{
					SetPlayerHealth(playerid, hp-1);
				}
			}
			case WEAPON_BRASSKNUCKLE:
			{
				if(armor > 0)
				{
					SetPlayerArmour(playerid, armor-2);
				}
				else
				{
					SetPlayerHealth(playerid, hp-2);
				}
			}
			case WEAPON_DILDO:
			{
				if(armor > 0)
				{
					SetPlayerArmour(playerid, armor-3);
				}
				else
				{
					SetPlayerHealth(playerid, hp-3);
				}
			}
			case WEAPON_POOLSTICK:
			{
				if(armor > 0)
				{
					SetPlayerArmour(playerid, armor-12);
				}
				else
				{
					SetPlayerHealth(playerid, hp-12);
				}
			}
			case WEAPON_GOLFCLUB:
			{
				if(armor > 0)
				{
					SetPlayerArmour(playerid, armor-15);
				}
				else
				{
					SetPlayerHealth(playerid, hp-15);
				}
			}
			case WEAPON_BAT:
			{
				if(armor > 0)
				{
					SetPlayerArmour(playerid, armor-7);
				}
				else
				{
					SetPlayerHealth(playerid, hp-7);
				}
			}
			case WEAPON_SHOVEL:
			{
				if(armor > 0)
				{
					SetPlayerArmour(playerid, armor-10);
				}
				else
				{
					SetPlayerHealth(playerid, hp-10);
				}
			}
			case WEAPON_KATANA:
			{
				if(armor > 0)
				{
					SetPlayerArmour(playerid, armor-30);
				}
				else
				{
					SetPlayerHealth(playerid, hp-30);
				}
			}
			case WEAPON_KNIFE:
			{
				if(armor > 0)
				{
					SetPlayerArmour(playerid, armor-20);
				}
				else
				{
					SetPlayerHealth(playerid, hp-20);
				}
			}
			case WEAPON_NITESTICK:
			{
				if(armor > 0)
				{
					SetPlayerArmour(playerid, armor-8);
				}
				else
				{
					SetPlayerHealth(playerid, hp-8);
				}
			}
		}
		return 1;
	}

	return 1;
}
public OnPlayerDeath(playerid, killerid, reason)
{
    playerData[playerid][pHealth] = 10.0;

    ResetPlayerWeaponsEx(playerid);
    ResetPlayer(playerid);
    
    /*if (BBGunOn[playerid] == 1)
    {
		BBGunOn[playerid] = 1;
		playerData[playerid][pInjured] = 0;

		SetPlayerInterior(playerid, 10);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, -974.9974,1060.9995,1345.6719);
		SetPlayerFacingAngle(playerid, 86.7228);

		GivePlayerWeaponEx(playerid, 24, 100);
		GivePlayerWeaponEx(playerid, 25, 100);
		GivePlayerWeaponEx(playerid, 29, 200);
		GivePlayerWeaponEx(playerid, 31, 200);

		SendClientMessage(playerid, COLOR_RED, "BBGUN > {FFFFFF}คุณได้เข้าร่วม 'ทีมแดง' แล้ว!");
		SendClientMessage(playerid, COLOR_YELLOW, "แนะนำ > '/ออกสนาม' เพื่อออกจากสนาม BB GUN");
        return 1;
    }

    if (BBGunOn[playerid] == 2)
    {
		BBGunOn[playerid] = 2;
		playerData[playerid][pInjured] = 0;

		SetPlayerInterior(playerid, 10);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, -1130.9403,1057.7700,1346.4141);
		SetPlayerFacingAngle(playerid, 269.8561);

		GivePlayerWeaponEx(playerid, 24, 100);
		GivePlayerWeaponEx(playerid, 25, 100);
		GivePlayerWeaponEx(playerid, 29, 200);
		GivePlayerWeaponEx(playerid, 31, 200);

		SendClientMessage(playerid, COLOR_GREEN, "BBGUN > {FFFFFF}คุณได้เข้าร่วม 'ทีมเขียว' แล้ว!");
		SendClientMessage(playerid, COLOR_YELLOW, "แนะนำ > '/ออกสนาม' เพื่อออกจากสนาม BB GUN");
		return 1;
    }*/

	if (warFlagOn == 1)
	{
		if (FlagOnPlayer == playerid)
		{
		    FlagOnPlayer = killerid;

		    SendClientMessageEx(killerid, COLOR_LIGHTRED, "* คุณได้รับธงต่อจาก %s เรียบร้อยแล้ว", GetPlayerNameEx(playerid));
		    SendClientMessageEx(playerid, COLOR_LIGHTRED, "* คุณได้เสียธงให้กับ %s เรียบร้อยแล้ว", GetPlayerNameEx(killerid));
			return 1;
		}

		if (warJoin[playerid] == 1)
		{
			SetPlayerPos(playerid, -975.1812,1061.1890,1345.6719);
			SetPlayerFacingAngle(playerid, 88.2425);
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 0);
			return 1;
		}
	}
	
	if (playerData[playerid][pArmorOn])
	{
	    RemovePlayerAttachedObject(playerid, 9);
	    playerData[playerid][pArmorOn] = false;
	}
	if (playerData[playerid][pTazer])
	{
	    playerData[playerid][pTazer] = 0;
	}
	if (playerData[playerid][pStunned] > 0)
	{
	    playerData[playerid][pStunned] = 0;
	}
	if (GetPlayerWantedLevelEx(playerid) > 0)
	{
	    playerData[playerid][pPrisoned] = 1;
	    playerData[playerid][pJailTime] = GetPlayerWantedLevelEx(playerid)*240;
	}
	else
	{
	    if (playerData[playerid][pInjured] == 0)
		{
	        playerData[playerid][pInjured] = 1;

	        if (GetFactionOnline(FACTION_MEDIC) > 0)
	        {
				playerData[playerid][pInjuredTime] = 600;
			}
			else
			{
			    playerData[playerid][pInjuredTime] = 240;
			}

	        playerData[playerid][pInterior] = GetPlayerInterior(playerid);
	    	playerData[playerid][pWorld] = GetPlayerVirtualWorld(playerid);

	    	GetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
	    	GetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);
		}
		else
		{
		    playerData[playerid][pInjured] = 0;
		    playerData[playerid][pInjuredTime] = 0;
		    playerData[playerid][pHospital] = 1;
		}
	}
	ResetPlayerDeath(playerid);
    UpdatePlayerDeaths(playerid);
	UpdatePlayerKills(killerid, playerid);
//	SendClientMessageEx(playerid, COLOR_WHITE, "DEBUG: OnPlayerDeath (playerid: %d, killerid: %d)", playerid, killerid);
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	return 1;
}

Float:ExpToPecentage(playerid)
{
	new Float:exp = (playerData[playerid][pExp]*100/GetPlayerRequiredExp(playerid));
	return exp;
}

public OnPlayerUpdate(playerid)
{
	/*new string[128], Float:hp, Float:armour;

	new Msg[128];

	format(Msg, sizeof(Msg), "[%d]", CopOnline());
	PlayerTextDrawSetString(playerid, CopOnlineTextDraws[playerid][1], Msg);

	format(Msg, sizeof(Msg), "[%d]", MedicOnline());
	PlayerTextDrawSetString(playerid, CopOnlineTextDraws[playerid][3], Msg);

	format(Msg, sizeof(Msg), "[%d]", MechanicOnline());
	PlayerTextDrawSetString(playerid, CopOnlineTextDraws[playerid][5], Msg);*/

	if (warFlagOn == 1)
	{
		if (FlagOnPlayer == playerid)
		{
		    SetPlayerColor(playerid, COLOR_RED);
		}
		else
		{
		    SetPlayerColor(playerid, DEFAULT_COLOR);
		}
	}
	
	/*GetPlayerHealth(playerid, hp);
	GetPlayerArmour(playerid, armour);
	
	format(string, sizeof(string), "%s", GetPlayerNameEx(playerid));
	PlayerTextDrawSetString(playerid, OHIOTextDraws[playerid][3], string);

	format(string, sizeof(string), "%s", FormatNumber(playerData[playerid][pRedMoney]));
	PlayerTextDrawSetString(playerid, OHIOTextDraws[playerid][5], string);

	format(string, sizeof(string), "%.0f%", hp);
	PlayerTextDrawSetString(playerid, OHIOTextDraws[playerid][14], string);

	format(string, sizeof(string), "%.0f%", armour);
	PlayerTextDrawSetString(playerid, OHIOTextDraws[playerid][15], string);

	format(string, sizeof(string), "%.0f%", playerData[playerid][pHungry]);
	PlayerTextDrawSetString(playerid, OHIOTextDraws[playerid][16], string);

	format(string, sizeof(string), "%.0f%", playerData[playerid][pThirsty]);
	PlayerTextDrawSetString(playerid, OHIOTextDraws[playerid][17], string);

	format(string, sizeof(string), "Exp : %d/%d", playerData[playerid][pExp], GetPlayerRequiredExp(playerid));
	PlayerTextDrawSetString(playerid, OHIOTextDraws[playerid][18], string);

	format(string, sizeof(string), "Level : %d", playerData[playerid][pLevel]);
	PlayerTextDrawSetString(playerid, OHIOTextDraws[playerid][19], string);*/

	if (GetPlayerExp(playerid) >= GetPlayerRequiredExp(playerid))
	{
		GivePlayerLevel(playerid, 1);
		SetPlayerExp(playerid, 0);
		SendClientMessageEx(playerid, COLOR_YELLOW, "*** {FFFFFF}คุณเลเวลอัพเป็นเลเวล {00FF00}%d{FFFFFF} ยินดีด้วย", GetPlayerLevel(playerid));
	}
	if (GetPlayerMoney(playerid) != playerData[playerid][pMoney])
	{
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, playerData[playerid][pMoney]);
	}
	new weaponid, ammo;
	for (new i; i <= 12; i++)
	{
		GetPlayerWeaponData(playerid, i, weaponid, ammo);

		if(weaponid != 0 && ammo > 1 && !gPlayerWeaponData[playerid][weaponid] && weaponid != 40 && weaponid != 46)
		{
			RemovePlayerWeapon(playerid, weaponid);
			/*SendClientMessageToAllEx(COLOR_LIGHTRED, "[AC-ALERT] ผู้เล่น %s โดนเตะออกจากเซิร์ฟเวอร์เพราะใช้โปรแกรมช่วยเล่น: Weapon hack", GetPlayerNameEx(playerid));
			SendClientMessageEx(playerid, COLOR_WHITE, "วันที่โดนเตะ: %s", ReturnDate());
			return DelayedKick(playerid);*/
		}
	}
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if (newkeys & KEY_YES)
	{
	    if (playerData[playerid][pJailTime] > 0)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณติดคุกอยู่ ไม่สามารถเปิดกระเป๋าได้");

        if (playerData[playerid][pCuffed] > 0)
            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณถูกจับอยู่ ไม่สามารถเปิดกระเป๋าได้");

		// --> ระบบบาคาร่า
		/*if(PlayerToPoint(5.0, playerid, 1152.7793,-1435.1268,15.7969))
		{
			if(StartPlayBacara[playerid] == 0)
			{
				StartPlayBacara[playerid] = 1;
				BacaraTable[playerid] = 1;
				PlayerTextDrawShow(playerid, TextBacara[playerid][0]);
				TogglePlayerControllable(playerid, 0);
				SendClientMessage(playerid, COLOR_YELLOW, "คุณได้เริ่มเล่นบาคาร่าแล้ว!!");
				SendClientMessage(playerid, COLOR_YELLOW, "คำแนะนำ: กดปุ่ม 'Y' อีกครั้งเพื่อเลิกเล่น");
				SendClientMessage(playerid, COLOR_YELLOW, "คำแนะนำ: กดปุ่ม 'N' เพื่อเริ่มลงเงิน");
				//SetPlayerCameraBacara(playerid);
			}
			else
			{

				StartPlayBacara[playerid] = 0;
				BacaraTable[playerid] = 0;
				PlayerMoneyBet[playerid] = 0;
				PlayerSelectBetColor[playerid] = 0;
				PlayerTextDrawHide(playerid, TextBacara[playerid][0]);
				TogglePlayerControllable(playerid, 1);
				SendClientMessage(playerid, COLOR_RED, "คุณได้เลิกเล่นบาคาร่าแล้ว");
				SetCameraBehindPlayer(playerid);
			}
			return 1;
		}*/

		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1595.7762,-2166.4175,13.6591))
		{
			if (GetFactionType(playerid) != FACTION_MEC)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "> สำหรับช่างซ่อมรถ");

			if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
			    if (TuningStats == 1)
			        return SendClientMessage(playerid, COLOR_GREY, "มีช่างกำลังใช้งานแท่นซ่อมอยู่");

			    if (isRepairVehicle[playerid] == 1)
			        return SendClientMessage(playerid, COLOR_GREY, "คุณอยู่ระหว่างการซ่อมรถ");

			    isRepairVehicle[playerid] = 1;
			    TogglePlayerControllable(playerid, 0);

			    new Float:oX, Float:oY, Float:oZ, Float:rX, Float:rY, Float:rZ;

			    GetDynamicObjectPos(TuningGate, oX, oY, oZ);
			    GetDynamicObjectRot(TuningGate, rX, rY, rZ);

			    MoveDynamicObject(TuningGate, oX, oY, oZ + 2.0, 1.0, rX, rY, rZ);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้เริ่มต้นการซ่อมรถแล้ว");

			    TuningStats = 1;

			    return 1;
			}
			else return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องเป็นคนขับรถ!");
		}

	    //OpenInventory(playerid);
	    ShowYMenuTextDraws(playerid);
	}
	if (newkeys & KEY_CTRL_BACK && !IsPlayerInAnyVehicle(playerid))
	{
		static
			id = -1;

		if ((id = Entrance_Nearest(playerid)) != -1)
	    {
	        if (entranceData[id][entranceLocked])
	            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ประตูนี้ถูกล็อคชั่วคราว");

			if (entranceData[id][entranceFaction] == -1)
			{
			    SetPlayerPos(playerid, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]);
				SetPlayerFacingAngle(playerid, entranceData[id][entranceIntA]);

				SetPlayerInterior(playerid, entranceData[id][entranceInterior]);
				SetPlayerVirtualWorld(playerid, entranceData[id][entranceWorld]);

				SetCameraBehindPlayer(playerid);
				playerData[playerid][pEntrance] = entranceData[id][entranceID];
			}
			else
			{
			    if (playerData[playerid][pFaction] == entranceData[id][entranceFaction])
			    {
				    SetPlayerPos(playerid, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]);
					SetPlayerFacingAngle(playerid, entranceData[id][entranceIntA]);

					SetPlayerInterior(playerid, entranceData[id][entranceInterior]);
					SetPlayerVirtualWorld(playerid, entranceData[id][entranceWorld]);

					SetCameraBehindPlayer(playerid);
					playerData[playerid][pEntrance] = entranceData[id][entranceID];
				}
			}
			return 1;
		}
		if ((id = Entrance_Inside(playerid)) != -1 && IsPlayerInRangeOfPoint(playerid, 2.5, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]))
	    {
	        SetPlayerPos(playerid, entranceData[id][entrancePosX], entranceData[id][entrancePosY], entranceData[id][entrancePosZ]);
			SetPlayerFacingAngle(playerid, entranceData[id][entrancePosA] - 180.0);

			SetPlayerInterior(playerid, entranceData[id][entranceExterior]);
			SetPlayerVirtualWorld(playerid, entranceData[id][entranceExteriorVW]);

			SetCameraBehindPlayer(playerid);
			playerData[playerid][pEntrance] = Entrance_GetLink(playerid);
			return 1;
		}
	}

    if (newkeys & KEY_NO)
    {
    	new id = -1;

	    if ((id = House_Nearest(playerid)) != -1)
	    {
			SetPlayerPos(playerid, HouseData[id][houseInt][0], HouseData[id][houseInt][1], HouseData[id][houseInt][2]);
			SetPlayerFacingAngle(playerid, HouseData[id][houseInt][3]);

			SetPlayerInterior(playerid, HouseData[id][houseInterior]);
			SetPlayerVirtualWorld(playerid, HouseData[id][houseID] + 5000);

			SetCameraBehindPlayer(playerid);
			playerData[playerid][pHouse] = HouseData[id][houseID];
			return 1;
		}

		if ((id = House_Inside(playerid)) != -1 && IsPlayerInRangeOfPoint(playerid, 2.5, HouseData[id][houseInt][0], HouseData[id][houseInt][1], HouseData[id][houseInt][2]))
	    {
			SetPlayerPos(playerid, HouseData[id][housePos][0], HouseData[id][housePos][1], HouseData[id][housePos][2]);
			SetPlayerFacingAngle(playerid, HouseData[id][housePos][3] - 180.0);

			SetPlayerInterior(playerid, HouseData[id][houseExterior]);
			SetPlayerVirtualWorld(playerid, HouseData[id][houseExteriorVW]);

			SetCameraBehindPlayer(playerid);
			playerData[playerid][pHouse] = -1;

			return 1;
		}
		
		if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
		    refreshVehControl(playerid);
			TogglePlayerControllable(playerid, 0);
			SelectTextDraw(playerid, 0xFF0000FF);
		}
	}

    if (newkeys & KEY_NO && !IsPlayerInAnyVehicle(playerid))
    {
	    if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	    {
	        new string[256];
		    for(new i = 0; i < MAX_DROPPED_ITEMS; i ++) {
		    	if(droppedItems[i][dItemExists] && IsPlayerInRangeOfPoint(playerid, 2.0, droppedItems[i][dItemX], droppedItems[i][dItemY], droppedItems[i][dItemZ]) && GetPlayerInterior(playerid) == droppedItems[i][dItemInterior] && GetPlayerVirtualWorld(playerid) == droppedItems[i][dItemVirtual]) {
					if(droppedItems[i][dItemWeaponID] > 0) {
					    if(!givePlayerValidWeaponEx(playerid, droppedItems[i][dItemWeaponID], droppedItems[i][dItemAmount])) {
					        return notEnoughWeaponSpace(playerid);
						}
					}
					else if(GiveItemToPlayer(playerid, droppedItems[i][dItemName], droppedItems[i][dItemAmount]) == -1) {
					    return notEnoughInventorySpace(playerid);
					}

					DestroyDynamic3DTextLabel(droppedItems[i][dItemText]);
					DestroyDynamicObject(droppedItems[i][dItemObjectID]);

					format(string, sizeof(string), "** %s ทำการเก็บ %s จำนวน %i ขึ้นมาจากพื้น", GetPlayerNameEx(playerid), droppedItems[i][dItemName], droppedItems[i][dItemAmount]);
					SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, string);

					droppedItems[i][dItemExists] = 0;
					droppedItems[i][dItemText] = Text3D:INVALID_3DTEXT_ID;

					ApplyAnimation(playerid, "BOMBER", "BOM_PLANT", 4.1, 0, 0, 0, 0, 0);
					return 1;
				}
			}
		}
		
		/*if(PlayerToPoint(3.0, playerid, 1152.7793,-1435.1268,15.7969)) //Bacara โต๊ะที่ 1
		{
			if(StartPlayBacara[playerid] == 0)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณยังไม่ได้เข้าโต๊ะบาคาร่า");

			if(PlayerSelectBetColor[playerid] != 0)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณลงพนันไปแล้วรอผลออกก่อน");

			Dialog_Show(playerid, BacaraDailog, DIALOG_STYLE_LIST, "เลือกสีที่จะลงเงิน", "สีดำ\nสีแดง\nสีเขียว", "เลือก", "ยกเลิก");
		}*/
		
		/*if (IsPlayerInRangeOfPoint(playerid, 3.0, 1126.2247,-1370.0314,13.9844))
		{
			Dialog_Show(playerid,DIALOG_BBGUN,DIALOG_STYLE_LIST,"{FFFFFF}[{F12606}BBGUN{FFFFFF}]","{F12606}+ แดง\n{33FD06}+ เขียว","ตกลง","ยกเลิก");
		}*/
		
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1424.0990,-1319.2922,13.5547))
		{
			Dialog_Show(playerid,getMaterials,DIALOG_STYLE_MSGBOX,"{FFFFFF}การวิ่งดินปืน","คุณต้องการที่จะวิ่งดินปืนเป็นจำนวน 2 ถุงและคุณต้องจ่ายเงินจำนวน $1,000 ในการวิ่งดินปืนครั้งนี้\nคุณต้องการจะวิ่งดินปืนหรือไม่?","ตกลง","ยกเลิก");
		}
		
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1404.0895,-1300.1901,13.5456))
		{
			Dialog_Show(playerid,infoCraft,DIALOG_STYLE_LIST,"{FFFFFF}คราฟอาวุธ","{FFFFFF}- คราฟอาวุธ\n- คลังวัตถุดิบสำหรับคราฟอาวุธ","เลือก","ยกเลิก");
		}
		
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1099.5319,-1507.1245,15.7969))
		{
			new string100[4096];
			new string2[4096];

			format(string100, sizeof(string100), "{FFFFFF}ชุดแฟชั่น\t{FFFFFF}ท่อนซุง\t{FFFFFF}แร่เฮมาไทต์\t{FFFFFF}ใบไม้\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FB570A}ชุดเผ่ามังกร\t{FFFFFF}200\t{FFFFFF}150\t{FFFFFF}100\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FB570A}ชุดลูบู\t{FFFFFF}250\t{FFFFFF}170\t{FFFFFF}120\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FB570A}ชุดหัวหน้าเผ่า\t{FFFFFF}230\t{FFFFFF}150\t{FFFFFF}100\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FB570A}ชุดปีกดำ\t{FFFFFF}170\t{FFFFFF}125\t{FFFFFF}90\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FB570A}ชุดปีกแดง\t{FFFFFF}180\t{FFFFFF}130\t{FFFFFF}110\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FB570A}ชุดแมลงเทพ\t{FFFFFF}220\t{FFFFFF}150\t{FFFFFF}150\n");
			strcat(string2,string100);

			Dialog_Show(playerid,infoFashion,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{FB0A0A}การคราฟชุดแฟชั่น{FFFFFF}]",string2,"ตกลง","ยกเลิก");
		}

		// การเรียนหนังสือ
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1098.5930,-1473.5618,15.7969))
		{
			new string100[4096];
			new string2[4096];

			format(string100, sizeof(string100), "{FFFFFF}รายการ\t{FFFFFF}รายละเอียด\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FDFA1B}ระดับชั้นการศึกษา\t%s\n", GradeType(playerid));
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FDFA1B}การเลื่อนชั้น\t{FFFFFF}เรียนหนังสือครบ {FDFA1B}%d/100 {FFFFFF}ครั้ง\n", playerData[playerid][pSchoolPoints]);
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FDFA1B}เรียนหนังสือ\t{FDFA1B}จำกัดวันละ {FFFFFF}%d/50 {FDFA1B}ครั้ง\n", playerData[playerid][pMaxSchool]);
			strcat(string2,string100);

			Dialog_Show(playerid,infoSchool,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{1BFD30}ข้อมูลการศึกษา{FFFFFF}]",string2,"ตกลง","ยกเลิก");
		}
		
		//
		
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1133.4094,-1370.0533,13.9844))
		{
		    if (playerData[playerid][pVip] == 0)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่ใช่ VIP");
		
			new string100[4096];
			new string2[4096];

			format(string100, sizeof(string100), "{FFFFFF}[สิ่งของ]\t{FFFFFF}[ราคา]\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}หูฉลาม\t(ปลามฉลาม 2 ตัว)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}น้ำผัก\t(ผักกาดขาว 2 ชิ้น)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}ผัดผักรวมมิตรทะเล\t(ผักคะน้า 2, มะเขือเทศ 2, ปลากระเบน 2, ปลาแซลม่อน 2)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}ไม้สนุ๊ก (VIP1) *โอกาสติด 10%\t(ท่อนซุง 20, ปูน 20, เงินแดง $25,000, เงินเขียว $50,000)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}มีดสั้น (VIP2) *โอกาสติด 5%\t(แร่ยูเรเนียม 20, แร่เฮมาไทต์ 20, ปูน 20, ท่อนซุง 10, เงินแดง $35,000, เงินเขียว $70,000)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}คาตานะ (VIP3) *โอกาสติด 2%\t(แร่ยูเรเนียม 20, แร่เฮมาไทต์ 20, ปูน 20, ท่อนซุง 10, หอย 20, เงินแดง $50,000, เงินเขียว $100,000)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}บุหรี่ไฟฟ้า\t(หอย 20 ชิ้น)\n");
			strcat(string2,string100);

			Dialog_Show(playerid,DIALOG_VIP_CRAFT,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{16D603}ตลาดกลาง{FFFFFF}]",string2,"ตกลง","ยกเลิก");
		}

		// --> ระบบ Slots
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1152.7739,-1440.0431,15.7969))
		{
            Dialog_Show(playerid, DIALOG_SLOT, DIALOG_STYLE_INPUT, "{04B331}[ระบบสล็อต]",  "{FFFFFF}กรุณาระบุจำนวนเงินที่คุณ้องการจะเดิมพัน Slots\n{2FFC64}(จำนวนเงินต้องอยู่ระหว่าง $500 - $1,000)", "ตกลง", "ยกเลิก");
		}

		// ส่งของในคุก
		if (prisonJob[playerid] == 1)
		{
		    if (IsPlayerInRangeOfPoint(playerid, 2.5, 2531.8186,-1305.7249,2048.2891))
		    {
				DisablePlayerCheckpoint(playerid);
		        Inventory_Add(playerid, "ตะปู", 1);
		        prisonJob[playerid] = 0;

				RemovePlayerAttachedObject(playerid, 9);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

				SendClientMessage(playerid, COLOR_RED, "|========= งานส่งของในคุก =========|");
				SendClientMessage(playerid, -1, "* คุณได้รับ 'ตะปู' + 1 จากการทำงานส่งของภายในคุก");
		    }
		}

        if (IsPlayerInRangeOfPoint(playerid, 2.0, 2532.1333,-1281.7831,2048.2891))
        {
            if (Inventory_Count(playerid, "ตะปู") >= 20)
            	return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีตะปูจำนวนสูงสุดแล้ว (20/20)");
        
		    if (prisonJob[playerid] == 1)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "> คุณอยู่ระหว่างการแบกสินค้า");

            if (playerData[playerid][pJailTime] == 0)
                return SendClientMessage(playerid, COLOR_LIGHTRED, "* สำหรับนักโทษเท่านั้น");

			SetPlayerAttachedObject(playerid, 9, 1220, 5, 0.184000, 0.330999, 0.112999, -84.099983, -9.500001, 20.700000);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);

			ApplyAnimation(playerid, "CARRY", "liftup", 4.1, 0, 0, 0, 0, 0, 1);
			SendClientMessage(playerid, COLOR_RED, "| ============ งานส่งของสำหรับนักโทษ ============ |");
			SendClientMessage(playerid, -1, "> นำของไปส่งที่จุด Checkpoint เพื่อรับเงินตอบแทน");

			SetPlayerCheckpoint(playerid, 2531.8186,-1305.7249,2048.2891, 2.0);
			prisonJob[playerid] = 1;
        }
        
        if (IsPlayerInRangeOfPoint(playerid, 2.0, 2570.1372,-1293.9241,2044.1250))
        {
            Dialog_Show(playerid, DIALOG_SELL_TAPU, DIALOG_STYLE_TABLIST_HEADERS, "[รายการรับซื้อ]", "\
				ชื่อรายการ\tราคา\n\
				ตะปู\t{00FF00}$5", "ขาย", "ออก");
        }
    
        //1.กระเพา (10$)2. มะเขือเทศ(20$) 3.ผักคะน้า(30$) 4.ผักกาดขาว(40$)

        if (IsPlayerInRangeOfPoint(playerid, 2.5, 1114.9221,-1464.1208,15.7969))
        {
            Dialog_Show(playerid, DIALOG_SELL_HARVEST, DIALOG_STYLE_TABLIST_HEADERS, "[รายการรับซื้อ]", "\
				ชื่อรายการ\tราคา\n\
				กระเพา\t{00FF00}$%d\n\
				มะเขือเทศ\t{00FF00}$%d\n\
				ผักคะน้า\t{00FF00}$%d\n\
				ผักกาดขาว\t{00FF00}$%d", "ขาย", "ออก", MarketCash[0], MarketCash[1], MarketCash[2], MarketCash[3]);
        }
        
        if (IsPlayerInRangeOfPoint(playerid, 2.0, 2281.2690,-683.3782,131.3686))
        {
            if (Inventory_Count(playerid, "กระเพา") >= 20 || Inventory_Count(playerid, "มะเขือเทศ") >= 20 || Inventory_Count(playerid, "ผักคะน้า") >= 20 || Inventory_Count(playerid, "ผักกาดขาว") >= 20)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "* ภายในกระเป๋าของคุณมีผักประเภทใดประเภทนึงเกิน Limit 20 แล้ว (นำไปขายก่อน)");

			if (isHarvest[playerid] != 0)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการเก็บผัก");
				
			isHarvest[playerid] = 1;
			SendClientMessage(playerid, COLOR_GREEN, "* คุณได้เริ่มต้นการเก็บผักในสวนแล้ว");
            TogglePlayerControllable(playerid, false);
        }

        if (IsPlayerInRangeOfPoint(playerid, 2.0, 2282.4180,-691.8729,131.1454))
        {
            if (Inventory_Count(playerid, "กระเพา") >= 20 || Inventory_Count(playerid, "มะเขือเทศ") >= 20 || Inventory_Count(playerid, "ผักคะน้า") >= 20 || Inventory_Count(playerid, "ผักกาดขาว") >= 20)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "* ภายในกระเป๋าของคุณมีผักประเภทใดประเภทนึงเกิน Limit 20 แล้ว (นำไปขายก่อน)");

			if (isHarvest[playerid] != 0)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการเก็บผัก");

			isHarvest[playerid] = 1;
			SendClientMessage(playerid, COLOR_GREEN, "* คุณได้เริ่มต้นการเก็บผักในสวนแล้ว");
            TogglePlayerControllable(playerid, false);
        }

        if (IsPlayerInRangeOfPoint(playerid, 2.0, 2283.5369,-703.7593,130.8552))
        {
            if (Inventory_Count(playerid, "กระเพา") >= 20 || Inventory_Count(playerid, "มะเขือเทศ") >= 20 || Inventory_Count(playerid, "ผักคะน้า") >= 20 || Inventory_Count(playerid, "ผักกาดขาว") >= 20)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "* ภายในกระเป๋าของคุณมีผักประเภทใดประเภทนึงเกิน Limit 20 แล้ว (นำไปขายก่อน)");

			if (isHarvest[playerid] != 0)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการเก็บผัก");

			isHarvest[playerid] = 1;
			SendClientMessage(playerid, COLOR_GREEN, "* คุณได้เริ่มต้นการเก็บผักในสวนแล้ว");
            TogglePlayerControllable(playerid, false);
        }

        //
    
        if (IsPlayerInRangeOfPoint(playerid, 2.0, 402.4451,145.5249,1008.3578))
        {
            new Float:hp;
            GetPlayerHealth(playerid, hp);
            
            if (hp >= 50)
                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมีเลือดน้อยกว่า 50.0");
        
            if (GetPlayerMoneyEx(playerid) < 500)
                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมีเงินมากกว่า $500");
        
            if (isHospital[playerid] != 0)
                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการนอนเตียงพยาบาล");
        
            SetPlayerPos(playerid, 402.5179,147.2198,1009.0206);
            SetPlayerFacingAngle(playerid, 176.7250);
            
            ApplyAnimation(playerid,"CRACK","crckidle2",4.1, 0, 1, 1, 1, 1, 1);
            isHospital[playerid] = 1;
            TogglePlayerControllable(playerid, false);
            
            SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้ขึ้นเตียงนอนห้องพยาบาลฉุกเฉิน");
        }
        
        if (IsPlayerInRangeOfPoint(playerid, 2.0, 402.1068,153.1273,1008.3578))
		{
            new Float:hp;
            GetPlayerHealth(playerid, hp);

            if (hp >= 50)
                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมีเลือดน้อยกว่า 50.0");

            if (GetPlayerMoneyEx(playerid) < 500)
                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมีเงินมากกว่า $500");

            if (isHospital[playerid] != 0)
                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการนอนเตียงพยาบาล");

            SetPlayerPos(playerid, 402.2623,154.7733,1009.0206);
            SetPlayerFacingAngle(playerid, 176.9426);

            ApplyAnimation(playerid,"CRACK","crckidle2",4.1, 0, 1, 1, 1, 1, 1);
            isHospital[playerid] = 2;
            TogglePlayerControllable(playerid, false);

            SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้ขึ้นเตียงนอนห้องพยาบาลฉุกเฉิน");
		}

        if (IsPlayerInRangeOfPoint(playerid, 2.0, 414.4565,132.7102,1008.3651))
		{
            new Float:hp;
            GetPlayerHealth(playerid, hp);

            if (hp >= 50)
                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมีเลือดน้อยกว่า 50.0");

            if (GetPlayerMoneyEx(playerid) < 500)
                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมีเงินมากกว่า $500");

            if (isHospital[playerid] != 0)
                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการนอนเตียงพยาบาล");

            SetPlayerPos(playerid, 415.8888,132.7380,1009.0206);
            SetPlayerFacingAngle(playerid, 267.1108);

            ApplyAnimation(playerid,"CRACK","crckidle2",4.1, 0, 1, 1, 1, 1, 1);
            isHospital[playerid] = 3;
            TogglePlayerControllable(playerid, false);

            SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้ขึ้นเตียงนอนห้องพยาบาลฉุกเฉิน");
		}

        //
    
		if (IsPlayerInRangeOfPoint(playerid, 2.0, 1102.4517,-1457.9800,15.7969))
		{
			new string100[4096];
			new string2[4096];

			format(string100, sizeof(string100), "{FFFFFF}[สิ่งของ]\t{CB1007}[{FF3A30}Level ที่ต้องการ{CB1007}]\t{FFFFFF}[วัตถุดิบ]\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}ถังน้ำมัน\t{CB1007}3\t{FFFFFF}(แร่ถ่านหิน 1 อัน)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}Medic Kit\t{CB1007}5\t{FFFFFF}(หอย 20, ท่อนซุง 15)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}กล่องซ่อมรถ\t{CB1007}5\t{FFFFFF}(หอย 10, แร่เฮมาไทต์ 10, แร่หินเกลือ 5, ท่อนซุง 10)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}กาชาปอง\t{CB1007}10\t{FFFFFF}(ปลาฉลาม 20, ปลากระเบน 20, แร่ยูเรเนียม 20, แร่ถ่านหิน 20)\n");
			strcat(string2,string100);

			Dialog_Show(playerid,DIALOG_CRAFT_ITEM,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{CB1007}คราฟของทั่วไป{FFFFFF}]",string2,"ตกลง","ยกเลิก");
			return 1;
		}

        if (IsPlayerInRangeOfPoint(playerid, 2.0, 376.7773,-113.7041,1001.4922))
		{
			new string100[4096];
			new string2[4096];

			format(string100, sizeof(string100), "{FFFFFF}[อาหาร]\t{35C005}[{FFFFFF}Level ที่ต้องการ{35C005}]\t{FFFFFF}[วัตถุดิบ]\n");
			strcat(string2,string100);

			/*format(string100, sizeof(string100), "{FFFFFF}พิซซ่า\t{16D603}2\t(ตัวละครต้องมี Level 2+, เนื้อไก่ 2 ชิ้น)\n");
			strcat(string2,string100);*/

			format(string100, sizeof(string100), "{FFFFFF}สเต็กวากิว\t{16D603}5\t(ตัวละครต้องมี Level 5+, เนื้อวัว 4 ชิ้น)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}ซูชิ\t{16D603}10\t(ตัวละครต้องมี Level 10+, ปลาแซลม่อน 5 ชิ้น)\n");
			strcat(string2,string100);

			/*format(string100, sizeof(string100), "{FFFFFF}น้ำเปล่า\t{16D603}2\t(ตัวละครต้องมี Level 2+)\n");
			strcat(string2,string100);*/

			format(string100, sizeof(string100), "{FFFFFF}นํ้าส้ม\t{16D603}5\t(ตัวละครต้องมี Level 5+, ส้ม 4 ลูก)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}นํ้าแอปเปิ้ล\t{16D603}10\t(ตัวละครต้องมี Level 10+, แอปเปิ้ล 5 ลูก)\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}กะเพาไก่\t{16D603}20\t(ใช้ เนื้อไก่ 5, กระเพา 5))\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}น้ำมะเขือเทศ\t{16D603}20\t(ใช้ มะเขือเทศ 4))\n");
			strcat(string2,string100);

			Dialog_Show(playerid,DIALOG_CRAFT_FOOD,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{1CBB03}ห้องครัวทำอาหาร{FFFFFF}]",string2,"ตกลง","ยกเลิก");
			return 1;
		}
    
        if (IsPlayerInRangeOfPoint(playerid, 2.0, 313.7128,-133.5870,999.6016))
        {
			new string100[4096];
			new string2[4096];

			format(string100, sizeof(string100), "{FFFFFF}[อาวุธ]\t{35C005}[{6BF939}โอกาสสำเร็จ{35C005}]\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}สนับมือ\t{16D603}[60 {FFFFFF}เปอร์เซ็นต์{16D603}]\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}Dildo\t{16D603}[50 {FFFFFF}เปอร์เซ็นต์{16D603}]\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}ไม้เบสบอล\t{16D603}[40 {FFFFFF}เปอร์เซ็นต์{16D603}]\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}Shovel\t{16D603}[30 {FFFFFF}เปอร์เซ็นต์{16D603}]\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}ไม้กอล์ฟ\t{16D603}[20 {FFFFFF}เปอร์เซ็นต์{16D603}]\n");
			strcat(string2,string100);

			Dialog_Show(playerid,DIALOG_CRAFT,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{16D603}สร้างอาวุธ{FFFFFF}]",string2,"ตกลง","ยกเลิก");
			return 1;
        }
    
		// --> จกปูน
		if (IsPlayerInRangeOfPoint(playerid, 2.0, 2370.8875,-2543.9453,3.0000))
		{
		    if (CopOnline() < 2)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "ต้องมี 'ตำรวจ' ออนไลน์และอยู่ระหว่างการปฏิบัติหน้าที่มากกว่า '2 คน'");

			if (playerData[playerid][pLevel] < 5)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้อง Level มากกว่า 5");

			if (Inventory_Count(playerid, "Poon") >= 20)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณสามารถมีปูนได้สูงสุด 20 เท่านั้น");

			if (GetFactionType(playerid) == FACTION_POLICE && GetFactionType(playerid) == FACTION_MEDIC && GetFactionType(playerid) == FACTION_GOV)
			    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับแก๊งเท่านั้น!");

		    if (isPoonStart[playerid] == 1)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณอยู่ระหว่างการ 'จกปูน'");

            TogglePlayerControllable(playerid, false);
			isPoonStart[playerid] = 1;
			SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้เริ่มต้นการจกปูนแล้ว");
			SendFactionMessageEx(FACTION_POLICE, COLOR_RED, "Dispatch : มีสายสืบแจ้งมาว่ากำลังมีคน 'จกปูน' อยู่ตอนนี้");
		}
		
		if (IsPlayerInRangeOfPoint(playerid, 2.0, 1105.7651,-2047.8694,69.0078))
		{
		    if (CopOnline() < 2)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "ต้องมี 'ตำรวจ' ออนไลน์และอยู่ระหว่างการปฏิบัติหน้าที่มากกว่า '2 คน'");

			if (playerData[playerid][pLevel] < 5)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้อง Level มากกว่า 5");

			if (Inventory_Count(playerid, "Poon") >= 20)
			    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณสามารถมีปูนได้สูงสุด 20 เท่านั้น");

			if (GetFactionType(playerid) == FACTION_POLICE && GetFactionType(playerid) == FACTION_MEDIC && GetFactionType(playerid) == FACTION_GOV)
			    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับแก๊งเท่านั้น!");

		    if (isPoonStart[playerid] == 1)
		        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณอยู่ระหว่างการ 'จกปูน'");

			isPoonStart[playerid] = 1;
			SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้เริ่มต้นการจกปูนแล้ว");
			SendFactionMessageEx(FACTION_POLICE, COLOR_RED, "Dispatch : มีสายสืบแจ้งมาว่ากำลังมีคน 'จกปูน' อยู่ตอนนี้");
		}

	    // --> ขายปูน
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 33.4841, -2650.1504, 40.7285))
		{
			Dialog_Show(playerid, DIALOG_SELL_POON, DIALOG_STYLE_INPUT, "{535654}[ขายปูน]", "{FFFFFF}กรุณาระบุจำนวนที่คุณต้องการจะขาย :", "ตกลง", "ออก");
		}
	}
	
	if (newkeys & KEY_NO && IsPlayerInAnyVehicle(playerid))
	{

		new vehicleid = GetPlayerVehicleID(playerid);
	    new Float:vehiclehealth;
	    GetVehicleHealth(vehicleid, vehiclehealth);

		if (!IsEngineVehicle(vehicleid))
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะคันนี้ไม่มีเครื่องยนต์");

		if (vehiclehealth <= 350)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะคันนี้มีความเสียหายมากเกินไป ไม่สามารถสตาร์ทได้");

		if (vehicleFuel[vehicleid] <= 0)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มีน้ำมันเลย");

		if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
			switch (GetEngineStatus(vehicleid))
			{
			    case false:
			    {
				    SetEngineStatus(vehicleid, true);
			        SendClientMessage(playerid, COLOR_WHITE, "คุณได้บิดกุญแจเพื่อ{00FF00}สตาร์ท{FFFFFF}เครื่องยนต์");
				}
				case true:
				{
					SetEngineStatus(vehicleid, false);
			        SendClientMessage(playerid, COLOR_WHITE, "คุณได้บิดกุญแจเพื่อ{FF0000}ดับ{FFFFFF}เครื่องยนต์");
				}
			}
		}
	}
	return 1;
}

Dialog:DIALOG_TYPE_PAINTJOBS(playerid, response, listitem, inputtext[])
{
	if(!response)
	{
		SetCameraBehindPlayer(playerid);
	}
	if(response)
	{
		switch(listitem)// Checking which list item was selected
		{
			case 0:// Paintjobs
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			{
				new car = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(car,0);
				SendClientMessage(playerid,COLOR_WHITE,"คุณได้แต่งยานพาหนะของคุณเรียบร้อย");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
				PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			}
				else
			{
				SendClientMessage(playerid,COLOR_WHITE,"คำสั่งนี้สำหรับยานพาหนะที่มี 4 ล้อเท่านั้น");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			}
			case 1: // Colors
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			{
				new car = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(car,1);
				SendClientMessage(playerid,COLOR_WHITE,"คุณได้แต่งยานพาหนะของคุณเรียบร้อย");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
				PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			}
				else
			{
				SendClientMessage(playerid,COLOR_WHITE,"คำสั่งนี้สำหรับยานพาหนะที่มี 4 ล้อเท่านั้น");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			}
			case 2: // Exhausts
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			{
				new car = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(car,2);
				SendClientMessage(playerid,COLOR_WHITE,"คุณได้แต่งยานพาหนะของคุณเรียบร้อย");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
				PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			}
				else
			{
				SendClientMessage(playerid,COLOR_WHITE,"คำสั่งนี้สำหรับยานพาหนะที่มี 4 ล้อเท่านั้น");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			}
			case 3: // Front Bumpers
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			{
				new car = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(car,3);
				SendClientMessage(playerid,COLOR_WHITE,"คุณได้แต่งยานพาหนะของคุณเรียบร้อย");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
				PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			}
				else
			{
				SendClientMessage(playerid,COLOR_WHITE,"คำสั่งนี้สำหรับยานพาหนะที่มี 4 ล้อเท่านั้น");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			}
			case 4: // Rear Bumpers
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
			GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			{
				new car = GetPlayerVehicleID(playerid);
				ChangeVehiclePaintjob(car,4);
				SendClientMessage(playerid,COLOR_WHITE,"คุณได้แต่งยานพาหนะของคุณเรียบร้อย");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
				PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
			}
				else
			{
				SendClientMessage(playerid,COLOR_WHITE,"คำสั่งนี้สำหรับยานพาหนะที่มี 4 ล้อเท่านั้น");
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			}
			case 5:
			{
				Dialog_Show(playerid, DIALOG_TYPE_PAINTJOBS, DIALOG_STYLE_LIST, "Paintjobs", "Paint Job 1\nPaint Job 2\nPaint Job 3\nPaint Job 4\nPaint Job 5\n \nBack", "ตกลง", "ยกเลิก");
			}
			case 6:
			{
				Dialog_Show(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics", "Enter", "Close");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_AGPS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				new
				    count,
				    var[32],
					string[512],
					string2[512];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 1)
				    {
						format(string, sizeof(string), "%d\t%s\n", i, gpsData[i][gpsName]);
						strcat(string2, string);
						format(var, sizeof(var), "AGPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ไอดี\tชื่อ\n%s", string2);
				Dialog_Show(playerid, DIALOG_AGPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[สถานที่ต่าง ๆ]", string, "เลือก", "ปิด");
		    }
		    case 1:
		    {
				new
				    count,
				    var[32],
					string[512],
					string2[512];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 2)
				    {
						format(string, sizeof(string), "%d\t%s\n", i, gpsData[i][gpsName]);
						strcat(string2, string);
						format(var, sizeof(var), "AGPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ไอดี\tชื่อ\n%s", string2);
				Dialog_Show(playerid, DIALOG_AGPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[สถานที่ต่าง ๆ]", string, "เลือก", "ปิด");
		    }
		    case 2:
		    {
				new
				    count,
				    var[32],
					string[512],
					string2[512];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 3)
				    {
						format(string, sizeof(string), "%d\t%s\n", i, gpsData[i][gpsName]);
						strcat(string2, string);
						format(var, sizeof(var), "AGPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ไอดี\tชื่อ\n%s", string2);
				Dialog_Show(playerid, DIALOG_AGPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[สถานที่ต่าง ๆ]", string, "เลือก", "ปิด");
		    }
		}
	}
	return 1;
}

Dialog:DIALOG_AGPSPICK(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new var[32];
	    format(var, sizeof(var), "AGPSID%d", listitem);
	    new gpsid = GetPVarInt(playerid, var);
		SetPlayerPos(playerid, gpsData[gpsid][gpsPosX], gpsData[gpsid][gpsPosY], gpsData[gpsid][gpsPosZ]);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้วาร์ปหา GPSID: %d, ชื่อสถานที่: %s, รูปแบบ GPS: %d", gpsid, gpsData[gpsid][gpsName], gpsData[gpsid][gpsType]);
	}
	return 1;
}

Dialog:DIALOG_GPS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				new
				    count,
				    var[32],
					string[512],
					string2[512];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 1)
				    {
						format(string, sizeof(string), "%s\t{FFA84D}(%.0f เมตร)\n", gpsData[i][gpsName], GetPlayerDistanceFromPoint(playerid, gpsData[i][gpsPosX], gpsData[i][gpsPosY], gpsData[i][gpsPosZ]));
						strcat(string2, string);
						format(var, sizeof(var), "GPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ชื่อสถานที่\tระยะทาง\n%s", string2);
				Dialog_Show(playerid, DIALOG_GPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[สถานที่ทั่วไป]", string, "เลือก", "ปิด");
		    }
		    case 1:
		    {
				new
				    count,
				    var[32],
					string[512],
					string2[512];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 2)
				    {
						format(string, sizeof(string), "%s\t{FFA84D}(%.0f เมตร)\n", gpsData[i][gpsName], GetPlayerDistanceFromPoint(playerid, gpsData[i][gpsPosX], gpsData[i][gpsPosY], gpsData[i][gpsPosZ]));
						strcat(string2, string);
						format(var, sizeof(var), "GPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ชื่อสถานที่\tระยะทาง\n%s", string2);
				Dialog_Show(playerid, DIALOG_GPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[งานถูกกฎหมาย]", string, "เลือก", "ปิด");
		    }
		    case 2:
		    {
				new
				    count,
				    var[32],
					string[512],
					string2[512];

				for (new i = 0; i != MAX_GPS; i ++) if (gpsData[i][gpsExists])
				{
				    if(gpsData[i][gpsType] == 3)
				    {
						format(string, sizeof(string), "%s\t{FFA84D}(%.0f เมตร)\n", gpsData[i][gpsName], GetPlayerDistanceFromPoint(playerid, gpsData[i][gpsPosX], gpsData[i][gpsPosY], gpsData[i][gpsPosZ]));
						strcat(string2, string);
						format(var, sizeof(var), "GPSID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ยังไม่ได้เพิ่ม GPS");
					return 1;
				}
				format(string, sizeof(string), "ชื่อสถานที่\tระยะทาง\n%s", string2);
				Dialog_Show(playerid, DIALOG_GPSPICK, DIALOG_STYLE_TABLIST_HEADERS, "[งานผิดกฎหมาย]", string, "เลือก", "ปิด");
		    }
		}
	}
	return 1;
}

Dialog:DIALOG_GPSPICK(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new var[32];
	    format(var, sizeof(var), "GPSID%d", listitem);
	    new gpsid = GetPVarInt(playerid, var);
		SetPlayerCheckpoint(playerid, gpsData[gpsid][gpsPosX], gpsData[gpsid][gpsPosY], gpsData[gpsid][gpsPosZ], 3.0);
		SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้เปิดระบบ GPS ค้นหาสถานที่ชื่อ %s", gpsData[gpsid][gpsName]);
		if (gpsid == 0)
		{
			if (playerData[playerid][pQuest] == 0)
			{
				SetPVarInt(playerid, "GPSQUEST", 1);
			}
		}
		else if (gpsid == 11)
		{
			if (playerData[playerid][pQuest] == 2)
			{
				SetPVarInt(playerid, "GPSQUEST", 1);
			}
		}
	}
	return 1;
}

/*Dialog:DIALOG_INVENTORYMENU1(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        OnPlayerUseItem(playerid, invData[playerid][playerData[playerid][pItemSelect]][invItem]);
		    }
		    case 1:
			{
		        new string[128],
				itemquantity = invData[playerid][playerData[playerid][pItemSelect]][invQuantity];
		        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่ต้องการจะทิ้ง คุณมีอยู่ {00FF00}%d", itemquantity);
				Dialog_Show(playerid, DIALOG_INVENTORYDROP, DIALOG_STYLE_INPUT, invData[playerid][playerData[playerid][pItemSelect]][invItem], string, "ตกลง", "ปิด");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_INVENTORYMENU(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        OnPlayerUseItem(playerid, invData[playerid][playerData[playerid][pItemSelect]][invItem]);
		    }
		    case 1:
			{
				new string[1000], var[15], count;
				foreach(new i : Player)
				{
				    if (i == playerid) continue;
					if (IsPlayerNearPlayer(playerid, i, 5.0))
					{
						format(string, sizeof(string), "[ID: %d]\t%s\n", i, GetPlayerNameEx(i));
						format(var, sizeof(var), "PID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครอยู่รอบ ๆ คุณเลย");
					return 1;
				}
				Dialog_Show(playerid, DIALOG_INVENTORYGIVEID, DIALOG_STYLE_TABLIST, invData[playerid][playerData[playerid][pItemSelect]][invItem], string, "เลือก", "ปิด");
		    }
		    case 2:
			{
		        new string[128],
				itemquantity = invData[playerid][playerData[playerid][pItemSelect]][invQuantity];
		        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่ต้องการจะทิ้ง คุณมีอยู่ {00FF00}%d", itemquantity);
				Dialog_Show(playerid, DIALOG_INVENTORYDROP, DIALOG_STYLE_INPUT, invData[playerid][playerData[playerid][pItemSelect]][invItem], string, "ตกลง", "ปิด");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_INVENTORYGIVEID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new string[256], var[15];
	    new itemid = playerData[playerid][pItemSelect];
		format(var, sizeof(var), "PID%d", listitem);
		new userid = GetPVarInt(playerid, var);
		playerData[playerid][pItemOfferID] = userid;
        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่คุณต้องการจะให้ {00FF00}%s {FFFFFF}กับ {33CCFF}%s", invData[playerid][itemid][invItem], GetPlayerNameEx(userid));
		Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
	}
	return 1;
}

Dialog:DIALOG_INVENTORYGIVE(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new amount, string[256],
	    itemid = playerData[playerid][pItemSelect],
		itemquantity = invData[playerid][itemid][invQuantity],
		userid = playerData[playerid][pItemOfferID],
		count = Inventory_Count(userid, invData[playerid][itemid][invItem])+amount;
		if (sscanf(inputtext, "d", amount))
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่คุณต้องการจะให้ {00FF00}%s{FFFFFF} กับ {33CCFF}%s", invData[playerid][itemid][invItem], GetPlayerNameEx(userid));
			Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
	    	return 1;
		}
		if (amount < 1)
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่คุณต้องการจะให้ {00FF00}%s{FFFFFF} กับ {33CCFF}%s\n{FF0000}*** จำนวนต้องไม่ต่ำกว่า 1", invData[playerid][itemid][invItem], GetPlayerNameEx(userid));
			Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
	    	return 1;
		}
		if (invData[playerid][itemid][invQuantity] < amount)
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่คุณต้องการจะให้ {00FF00}%s{FFFFFF} กับ {33CCFF}%s\n{FF0000}*** %s ของคุณมีไม่เพียงพอที่จะให้ {FFFFFF}(%d/%d)", invData[playerid][itemid][invItem], GetPlayerNameEx(userid), invData[playerid][itemid][invItem], amount, itemquantity);
			Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "เลือก", "ปิด");
		    return 1;
		}
		if (count > playerData[userid][pItemAmount])
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่คุณต้องการจะให้ {00FF00}%s{FFFFFF} กับ {33CCFF}%s\n{FF0000}*** %s ของผู้เล่นไอดีนี้เต็มแล้ว {FFFFFF}(%d/%d)", invData[playerid][itemid][invItem], GetPlayerNameEx(userid), invData[playerid][itemid][invItem], amount, count);
			Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "เลือก", "ปิด");
		    return 1;
		}
		if (!IsPlayerNearPlayer(playerid, userid, 4.0))
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่คุณต้องการจะให้ {00FF00}%s{FFFFFF} กับ {33CCFF}%s\n{FF0000}*** ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ", invData[playerid][itemid][invItem], GetPlayerNameEx(userid));
			Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "เลือก", "ปิด");
		    return 1;
		}
//		Inventory_Add(playerData[playerid][pItemOfferID], invData[playerid][itemid][invItem], amount);
		new id = Inventory_Add(playerData[playerid][pItemOfferID], invData[playerid][itemid][invItem], amount);

		if (id == -1)
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่คุณต้องการจะให้ {00FF00}%s{FFFFFF} กับ {33CCFF}%s\n{FF0000}*** ผู้เล่นไอดีนี้กระเป๋าเต็มแล้ว {FFFFFF}(%d/%d)", invData[playerid][itemid][invItem], GetPlayerNameEx(userid), Inventory_Items(userid), playerData[userid][pMaxItem]);
			Dialog_Show(playerid, DIALOG_INVENTORYGIVE, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "เลือก", "ปิด");
			return 1;
		}
		Inventory_Remove(playerid, invData[playerid][itemid][invItem], amount);
		SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s{FFFFFF} ได้ให้ไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} กับคุณ", GetPlayerNameEx(playerid), invData[playerid][itemid][invItem], amount);
		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ให้ไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} กับ {33CCFF}%s", invData[playerid][itemid][invItem], amount, GetPlayerNameEx(userid));
        playerData[playerid][pItemOfferID] = INVALID_PLAYER_ID;
	}
	return 1;
}

Dialog:DIALOG_INVENTORYDROP(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new amount, string[256],
	    itemid = playerData[playerid][pItemSelect],
		itemquantity = invData[playerid][itemid][invQuantity];
		if (sscanf(inputtext, "d", amount))
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่ต้องการจะทิ้ง คุณมีอยู่ {00FF00}%d", itemquantity);
			Dialog_Show(playerid, DIALOG_INVENTORYDROP, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
	    	return 1;
		}
		if (amount < 1 || amount > 20)
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่ต้องการจะทิ้ง คุณมีอยู่ {00FF00}%d\n{FF0000}*** จำนวนต้องไม่ต่ำกว่า 1 และไม่เกิน 20", itemquantity);
			Dialog_Show(playerid, DIALOG_INVENTORYDROP, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
	    	return 1;
		}
		if (invData[playerid][itemid][invQuantity] < amount)
		{
	        format(string, sizeof(string), "{FFFFFF}ใส่จำนวนที่ต้องการจะทิ้ง คุณมีอยู่ {00FF00}%d\n{FF0000}*** %s ของคุณมีไม่เพียงพอที่จะทิ้ง {FFFFFF}(%d/%d)", itemquantity, invData[playerid][itemid][invItem], amount, itemquantity);
			Dialog_Show(playerid, DIALOG_INVENTORYDROP, DIALOG_STYLE_INPUT, invData[playerid][itemid][invItem], string, "ตกลง", "ปิด");
		    return 1;
		}
		
		if (!strcmp(invData[playerid][itemid][invItem], "Cannabis", true))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถทิ้งกัญชาได้!");

		if (!strcmp(invData[playerid][itemid][invItem], "Cocain", true))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถทิ้งโคเคนได้!");

		if (!strcmp(invData[playerid][itemid][invItem], "Poon", true))
			return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่สามารถทิ้งปูนได้!");
		
		Inventory_Remove(playerid, invData[playerid][itemid][invItem], amount);
		ApplyAnimation(playerid, "GRENADE", "WEAPON_throwu", 3.0, 0, 0, 0, 0, 0);
		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ทิ้งไอเท็ม {00FF00}%s {FFFFFF}จำนวน {00FF00}%d {FFFFFF}ชิ้น", invData[playerid][itemid][invItem], amount);
	}
	return 1;
}

Dialog:DIALOG_INVENTORY(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new var[32];
		format(var, sizeof(var), "itemlist%d", listitem);
		new item = GetPVarInt(playerid, var);

        OnPlayerClickItem(playerid, item, invData[playerid][item][invItem]);
	}
	return 1;
}*/

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new vehicleid = GetPlayerVehicleID(playerid);

	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_PASSENGER)
	{
	    if(seatbelt{playerid}) { PutPlayerInVehicle(playerid,old_vehicle[playerid],old_veh_seat[playerid]); return 1; }
	}

	if (newstate == PLAYER_STATE_DRIVER)
	{
		if (NewbieCar[0] <= vehicleid <= NewbieCar[10])
		{
			if (playerData[playerid][pLevel] >= 3)
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะสำหรับเด็กใหม่ที่เวลต่ำกว่า 3 เท่านั้น!");
			}
			if (GetPlayerWantedLevelEx(playerid) > 0)
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใช้จักรยานได้หากคุณมีคดีติดตัว!");
			}
			if (IsABike(vehicleid))
			{
				SetEngineStatus(vehicleid, true);
			}
			return 1;
		}

		pvehicleid[playerid] = GetPlayerVehicleID(playerid);
		pmodelid[playerid] = GetVehicleModel(pvehicleid[playerid]);

	    if(carData[vehicleid][carFaction] >= 0 && playerData[playerid][pFaction] != carData[vehicleid][carFaction])
	    {
	        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีกุญแจ");
	        RemovePlayerFromVehicle(playerid);
	        return 1;
	    }

	    if(IsVehicleOwner(playerid, vehicleid) && carData[vehicleid][carTickets] > 0)
	    {
	        SendClientMessageEx(playerid, COLOR_SERVER, "รถคันนี้โดนใบสั่งจำนวน %s ในการจ่ายใบสั่งสามารถใช้ /paytickets ได้เลย", FormatMoney(carData[vehicleid][carTickets]));
	    }
		if (IsABike(vehicleid))
		{
		    SetEngineStatus(vehicleid, true);
		}
		else
		{
			KillTimer(playerData[playerid][pSpeedoTimer]);
			switch(GetEngineStatus(vehicleid))
			{
				case false: SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน] {FFFFFF}กดปุ่ม N เพื่อสตาร์ทเครื่องยนต์");
			}
			ShowPlayerSpeedo(playerid, true);
			playerData[playerid][pSpeedoTimer] = SetTimerEx("SpeedoTimer", 250, true, "dd", playerid, vehicleid);
		}
	}
	else
	{
		ShowPlayerSpeedo(playerid, false);
		pvehicleid[playerid] = 0;
	    pmodelid[playerid] = 0;
	}
	return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    if(weaponid != 0 && weaponid != 46)
    {
        if(GetPlayerAmmo(playerid) <= 1) gPlayerWeaponData[playerid][weaponid] = false;
    }
    return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	// คราฟอาวุธ
	if (buyMaterials[playerid] == 1)
	{
	    if (IsPlayerInRangeOfPoint(playerid, 5.0, -85.5289,-22.5072,3.1172))
	    {
	        RemovePlayerAttachedObject(playerid, 4);
	        buyMaterials[playerid] = 0;
	        Inventory_Add(playerid, "ดินปืน", 2);
	        playerData[playerid][pExpCraft] += 2;
	        
	        SendClientMessage(playerid, COLOR_GREEN, "|==========================|");
	        SendClientMessage(playerid, -1, "- คุณได้รับดินปืน + 2");
	        SendClientMessage(playerid, -1, "- คุณได้รับ Exp ของสกิลการคราฟปืน + 2");
	        SendClientMessage(playerid, COLOR_GREEN, "|==========================|");
	        
	        DisablePlayerCheckpoint(playerid);
	    }
	    else
	    {
	        buyMaterials[playerid] = 0;
	        DisablePlayerCheckpoint(playerid);
	        SendClientMessage(playerid, COLOR_RED, "การวิ่งดินถูกยกเลิก! เนื่องจากคุณพยายามใช้บัค Checkpoint");
	    }
	}

	if (playerData[playerid][pDrivingTest])
	{
	    playerData[playerid][pTestStage]++;

	    if (playerData[playerid][pTestStage] < sizeof(g_arrDrivingCheckpoints))
		{
			SetPlayerCheckpoint(playerid, g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][0], g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][1], g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][2], 3.0);
		}
		else
		{
		    static
		        Float:health;

		    GetVehicleHealth(GetPlayerVehicleID(playerid), health);

		    if (health < 950.0)
				SendClientMessage(playerid, COLOR_LIGHTRED, "[กรมขนส่ง] {FFFFFF}คุณสอบไม่ผ่าน เพราะคุณสร้างความเสียหายให้รถยนต์มากเกินไป เสียใจด้วย");

		    else
			{
		        GivePlayerMoneyEx(playerid, -500);
		        GameTextForPlayer(playerid, "You've been charged ~r~$50~w~ for the test.", 5000, 1);

		        Inventory_Add(playerid, "Driving License", 1);
		        SendClientMessage(playerid, COLOR_GREEN, "[กรมขนส่ง] {FFFFFF}คุณสอบใบขับขี่ผ่านแล้ว ยินดีด้วย");
		        SendClientMessage(playerid, COLOR_GREEN, "[กรมขนส่ง] {FFFFFF}ทางเราขอมอบใบขับขี่รถยนต์ให้คุณ");
		        SendClientMessage(playerid, COLOR_GREEN, "[กรมขนส่ง] {FFFFFF}คุณสามารถดูใบขับขี่ได้โดยการกดปุ่ม {FFFF00}''Y''");
		    }
  			CancelDrivingTest(playerid);
		}
	}
	else
	{
		if (GetPVarInt(playerid, "GPSQUEST") == 1)
		{
			if (playerData[playerid][pQuest] == 0)
			{
				playerData[playerid][pQuestProgress] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "[ภารกิจ] {FFFFFF}คุณทำภารกิจสำเร็จ ใช้ /quest ในการส่งภารกิจ");
			}
			else if (playerData[playerid][pQuest] == 2)
			{
				playerData[playerid][pQuestProgress] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "[ภารกิจ] {FFFFFF}คุณทำภารกิจสำเร็จ ใช้ /quest ในการส่งภารกิจ");
			}
			DisablePlayerCheckpoint(playerid);
			SetPVarInt(playerid, "GPSQUEST", 0);
		}
		else
		{
			DisablePlayerCheckpoint(playerid);
		}
	}
	return 1;
}

//-----------------------------------------------------

public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
    return 1;
}

public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
	if(playerData[playerid][IsLoggedIn] == false)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องล็อคอินก่อน!");

    if (result == -1)
    {
        SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีคำสั่ง /%s อยู่ในระบบ", cmd);
        return 0;
    }

    return 1;
}

ResetPlayerConnection(playerid)
{
	/*for (new i = 0; i != MAX_INVENTORY; i ++)
	{
	    invData[playerid][i][invExists] = false;
	    invData[playerid][i][invQuantity] = 0;
	}*/
	for (new i = 0; i != MAX_CONTACTS; i ++)
	{
	    contactData[playerid][i][contactExists] = false;
	    contactData[playerid][i][contactID] = 0;
	    contactData[playerid][i][contactNumber] = 0;
	    ListedContacts[playerid][i] = -1;
	}
	playerData[playerid][pRegisterDate][0] = EOS;
	playerData[playerid][pGender] = 0;
	playerData[playerid][pBirthday][0] = EOS;
	playerData[playerid][pSpectator] = INVALID_PLAYER_ID;
	playerData[playerid][pAdmin] = 0;
	playerData[playerid][pKills] = 0;
	playerData[playerid][pDeaths] = 0;
	playerData[playerid][pMoney] = 0;
	playerData[playerid][pBankMoney] = 0;
	playerData[playerid][pRedMoney] = 0;
	playerData[playerid][pLevel] = 1;
	playerData[playerid][pExp] = 0;
	playerData[playerid][pMinutes] = 0;
	playerData[playerid][pHours] = 0;
	playerData[playerid][pPos_X] = 0.000;
	playerData[playerid][pPos_Y] = 0.000;
	playerData[playerid][pPos_Z] = 0.000;
	playerData[playerid][pPos_A] = 0.000;
	playerData[playerid][pSkin] = 0;
	playerData[playerid][pInterior] = 0;
	playerData[playerid][pWorld] = 0;
	playerData[playerid][pTutorial] = 0;
	playerData[playerid][pSpawnPoint] = 0;
	
	playerData[playerid][pCallTime] = 0;

	playerData[playerid][pThirsty] = 0;
	playerData[playerid][pHungry] = 0;

	playerData[playerid][pHealth] = 0.0;
	playerData[playerid][pInjured] = 0;
	playerData[playerid][pInjuredTime] = 0;

	playerData[playerid][pHospital] = -1;

	playerData[playerid][IsLoggedIn] = false;
	playerData[playerid][LoginAttempts] = 0;
	playerData[playerid][LoginTimer] = 0;

	playerData[playerid][pFactionOffer] = INVALID_PLAYER_ID;
	playerData[playerid][pFactionOffered] = -1;
	playerData[playerid][pFaction] = -1;
	playerData[playerid][pFactionID] = -1;
	playerData[playerid][pFactionRank] = 0;
	playerData[playerid][pFactionEdit] = -1;
	playerData[playerid][pSelectedSlot] = -1;

	playerData[playerid][pDisableFaction] = 0;
	playerData[playerid][pOnDuty] = false;
	playerData[playerid][pArmorOn] = false;
	playerData[playerid][pCuffed] = 0;

	playerData[playerid][pPrisoned] = 0;
	playerData[playerid][pPrisonOut] = 0;
	playerData[playerid][pJailTime] = 0;

	playerData[playerid][pEntrance] = -1;

	playerData[playerid][pCarSeller] = INVALID_PLAYER_ID;
	playerData[playerid][pCarOffered] = -1;
	playerData[playerid][pCarValue] = 0;

	playerData[playerid][pMaxItem] = 8;
	playerData[playerid][pItemAmount] = 20;
	playerData[playerid][pItemSelect] = 0;
	playerData[playerid][pItemOfferID] = INVALID_PLAYER_ID;

	playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
	playerData[playerid][pMecOfferPrice] = 0;

	playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
	playerData[playerid][pMedicOfferPrice] = 0;

	playerData[playerid][pRoadblock] = -1;

	playerData[playerid][pPhone] = 0;
	playerData[playerid][pPhoneOff] = 0;

	playerData[playerid][pIncomingCall] = 0;
	playerData[playerid][pCallLine] = INVALID_PLAYER_ID;

	playerData[playerid][pEmergency] = 0;
//	playerData[playerid][pPlaceAd] = 0;

	playerData[playerid][pMarker] = 0;

	playerData[playerid][pWanted] = 0;
	playerData[playerid][pWantedTime] = 0;

	playerData[playerid][pTransfer] = INVALID_PLAYER_ID;

	playerData[playerid][pColor1] = -1;
	playerData[playerid][pColor2] = -1;

	playerData[playerid][pPaintjob] = -1;

	playerData[playerid][pDrivingTest] = 0;
	playerData[playerid][pTestStage] = 0;
	playerData[playerid][pTestWarns] = 0;

	playerData[playerid][pEventBackX] = 0.000;
	playerData[playerid][pEventBackY] = 0.000;
	playerData[playerid][pEventBackZ] = 0.000;

	playerData[playerid][pEventBackInterior] = 0;
	playerData[playerid][pEventBackWorld] = 0;
	playerData[playerid][pEventGo] = 0;

	playerData[playerid][pOOCSpam] = 0;

	playerData[playerid][pVip] = 0;

	playerData[playerid][pQuest] = 0;
	playerData[playerid][pQuestProgress] = 0;

	playerData[playerid][pBan] = 0;
	playerData[playerid][pBanReason][0] = EOS;

	playerData[playerid][pVehicleKeys] = INVALID_VEHICLE_ID;

	playerData[playerid][pTazer] = 0;
	playerData[playerid][pStunned] = 0;

	playerData[playerid][pPVP] = 0;
	playerData[playerid][pPVPFreeze] = 0;
	playerData[playerid][pHelmetOn] = false;
	
	playerData[playerid][pWorkOn] = INVALID_STREAMER_ID;
	
	playerData[playerid][pCoin] = 0;
	playerData[playerid][pSkillCraft] = 1;
	
	if(!playerData[playerid][pInventorySlots]) playerData[playerid][pInventorySlots] = 16;

	if(playerData[playerid][pInventorySlots] >= MAX_PLAYER_ITEMS) {
		playerData[playerid][pInventorySlots] = MAX_PLAYER_ITEMS;
	}

    playerData[playerid][pInventoryShown] = 0;
    playerData[playerid][pInventoryPage] = 0;
    playerData[playerid][pItemSelected] = -1;
}

ResetPlayerDeath(playerid)
{
	if (playerData[playerid][pDrivingTest])
	    DestroyVehicle(playerData[playerid][pTestCar]);

    playerData[playerid][pDrivingTest] = 0;
}

ResetPlayerDisconnection(playerid)
{
	if (playerData[playerid][pDragged])
	    KillTimer(playerData[playerid][pDragTimer]);

	if (playerData[playerid][pDrivingTest])
	    DestroyVehicle(playerData[playerid][pTestCar]);

	if (playerData[playerid][pExpShow])
	    KillTimer(playerData[playerid][pExpTimer]);
	    
	if (playerData[playerid][pWorkOn] != INVALID_STREAMER_ID)
	    playerData[playerid][pWorkOn] = INVALID_STREAMER_ID;

	foreach (new i : Player)
	{
		if (playerData[i][pFactionOffer] == playerid)
		{
		    playerData[i][pFactionOffer] = INVALID_PLAYER_ID;
		    playerData[i][pFactionOffered] = -1;
		}
		if (playerData[i][pDraggedBy] == playerid)
		{
		    KillTimer(playerData[i][pDragTimer]);

		    playerData[i][pDragged] = 0;
            playerData[i][pDraggedBy] = INVALID_PLAYER_ID;
		}
		if (playerData[i][pCarSeller] == playerid)
		{
		    playerData[i][pCarSeller] = INVALID_PLAYER_ID;
		    playerData[i][pCarOffered] = -1;
		}
		if (playerData[i][pMecOfferID] == playerid)
		{
		    playerData[i][pMecOfferID] = INVALID_PLAYER_ID;
		    playerData[i][pMecOfferPrice] = 0;
		}
		if (playerData[i][pMedicOfferID] == playerid)
		{
			playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
			playerData[playerid][pMedicOfferPrice] = 0;
		}
	}
}

CancelDrivingTest(playerid)
{
	if (playerData[playerid][pDrivingTest])
	{
 		SetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
 		SetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);

  		SetPlayerInterior(playerid, playerData[playerid][pInterior]);
  		SetPlayerVirtualWorld(playerid, playerData[playerid][pWorld]);

		DisablePlayerCheckpoint(playerid);
  		SetCameraBehindPlayer(playerid);

		DestroyVehicle(playerData[playerid][pTestCar]);
  		playerData[playerid][pDrivingTest] = false;
	}
	return 1;
}

ResetPlayerWantedLevelEx(playerid)
{
	SetPlayerWantedLevel(playerid, 0);
	playerData[playerid][pWanted] = 0;
	playerData[playerid][pWantedTime] = 0;
	return 1;
}

GivePlayerWanted(playerid, level)
{
	SetPlayerWantedLevel(playerid, GetPlayerWantedLevelEx(playerid)+level);
	playerData[playerid][pWanted] += level;
	return 1;
}

GetPlayerWantedLevelEx(playerid)
{
	return (playerData[playerid][pWanted]);
}

Float:GetPlayerDistanceFromPlayer(playerid, targetid)
{
	new
	    Float:x,
	    Float:y,
	    Float:z;

	GetPlayerPos(targetid, x, y, z);
	return GetPlayerDistanceFromPoint(playerid, x, y, z);
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
    new Float:hp, Float:armor;
    GetPlayerHealth(damagedid, hp);
    GetPlayerArmour(damagedid, armor);
	if (damagedid != INVALID_PLAYER_ID)
	{
        if (!PVPStats)
		{
		    if (GetFactionType(playerid) != FACTION_POLICE)
		    {
			    amount = 0.0;
				TogglePlayerControllable(playerid, false);
				SendClientMessage(playerid, COLOR_RED, "> ตอนนี้อยู่ในโหมด PVE ทำให้คุณไม่สามารถทำร้ายใครได้!");
				playerData[playerid][pPVPFreeze] = 20;
				SetPlayerHealth(damagedid, hp);
				return 1;
			}
		}
	
	    if (playerData[playerid][pJailTime] > 0)
		{
			TogglePlayerControllable(playerid, false);
			SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณโดนแช่แข็ง 10 วินาที เพราะคุณทำร้ายผู้อื่นระหว่างติดคุก!");
			playerData[playerid][pPVPFreeze] = 10;
		}
	
		if (playerData[playerid][pPVP] == 1)
		{
		    switch(weaponid)
		    {
				case WEAPON_FLOWER:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-1);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-1);
					}
				}
				case WEAPON_BRASSKNUCKLE:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-2);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-2);
					}
				}
				case WEAPON_DILDO:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-3);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-3);
					}
				}
				case WEAPON_POOLSTICK:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-12);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-12);
					}
				}
				case WEAPON_GOLFCLUB:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-15);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-15);
					}
				}
				case WEAPON_BAT:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-7);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-7);
					}
				}
				case WEAPON_SHOVEL:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-10);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-10);
					}
				}
				case WEAPON_KATANA:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-30);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-30);
					}
				}
				case WEAPON_KNIFE:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-20);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-20);
					}
				}
				case WEAPON_NITESTICK:
				{
				    if(armor > 0)
				    {
				        SetPlayerArmour(damagedid, armor-8);
				    }
				    else
				    {
						SetPlayerHealth(damagedid, hp-8);
					}
				}
			}
		}
		else
		{
			if (GetFactionType(playerid) == FACTION_POLICE)
			{
		        if (playerData[playerid][pTazer] && playerData[damagedid][pStunned] < 1 && weaponid == 23)
		        {
					/*if (GetPlayerState(damagedid) != PLAYER_STATE_ONFOOT)
					    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้ร้ายต้องไม่อยู่ในยานพาหนะ");*/

		            if (GetPlayerDistanceFromPlayer(playerid, damagedid) > 30.0)
		                return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้ร้ายต้องอยู่ในระยะเท่านั้น 30 เมตร");

		            playerData[damagedid][pStunned] = 10;
		            TogglePlayerControllable(damagedid, 0);

		            ApplyAnimation(damagedid, "CRACK", "crckdeth4", 4.0, 0, 0, 0, 1, 0, 1);

					SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ยิงปืนช็อตไฟฟ้าใส่ผู้ร้าย %s", GetPlayerNameEx(playerid), GetPlayerNameEx(damagedid));
		        }
			}
			/*else
			{
				TogglePlayerControllable(playerid, false);
				SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณโดนแช่แข็ง 10 วินาที เพราะคุณทำร้ายผู้อื่น");
				playerData[playerid][pPVPFreeze] = 10;
			}*/
		}
	}
	return 1;
}

forward StopChatting(playerid);
public StopChatting(playerid)
{
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
}

public OnPlayerText(playerid, text[])
{
	if ((!playerData[playerid][IsLoggedIn]) || playerData[playerid][pHospital] != -1)
	    return 0;

	new
		targetid = playerData[playerid][pCallLine];

	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);

    if (!IsPlayerOnPhone(playerid))
		SendNearbyMessage(playerid, 20.0, COLOR_WHITE, "%s {FFFFFF}%s พูดว่า: %s", ChayaName(playerid), GetPlayerNameEx(playerid), text);

	else SendNearbyMessage(playerid, 20.0, COLOR_WHITE, "(โทรศัพท์) %s พูดว่า: %s", GetPlayerNameEx(playerid), text);

	if (!IsPlayerInAnyVehicle(playerid) && !playerData[playerid][pInjured])
	{
	    SetPlayerChatBubble(playerid, text, COLOR_WHITE, 30.0, 10000);
		ApplyAnimation(playerid, "GANGS", "prtial_gngtlkA", 4.1, 0, 1, 1, 1, strlen(text) * 100, 1);
		SetTimerEx("StopChatting", strlen(text) * 100, false, "d", playerid);
	}
	switch (playerData[playerid][pEmergency])
	{
		case 1:
		{
			if (!strcmp(text, "ตำรวจ", true))
			{
			    playerData[playerid][pEmergency] = 2;
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "[พนักงาน]:{FFFFFF} สายถูกโอนไปที่สถานีตำรวจ โปรดระบุเหตุฉุกเฉินของคุณ");
			}
			else if (!strcmp(text, "หมอ", true))
			{
			    playerData[playerid][pEmergency] = 3;
			    SendClientMessage(playerid, COLOR_HOSPITAL, "[พนักงาน]:{FFFFFF} สายถูกโอนไปที่โรงพยาบาล โปรดระบุเหตุฉุกเฉินของคุณ");
			}
			else if (!strcmp(text, "ช่าง", true))
			{
			    playerData[playerid][pEmergency] = 4;
 				SendClientMessage(playerid, COLOR_LIGHTBLUE, "[พนักงาน]:{FFFFFF} สายถูกโอนไปที่ช่างซ่อมรถ โปรดระบุข้อความที่ต้องการแจ้ง");
			}
			else SendClientMessage(playerid, COLOR_LIGHTBLUE, "[พนักงาน]:{FFFFFF} ขออภัย, เราไม่เข้าใจที่คุณสื่อสาร \"ตำรวจ\" หรือ \"หมอ\"?");
		}
		case 2:
		{
			SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "911 CALL: %s พิกัด (%.4f, %.4f, %.4f)", GetPlayerNameEx(playerid), x, y, z);
    		SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "เหตุฉุกเฉิน: %s", text);

		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "[พนักงาน]:{FFFFFF} เราได้แจ้งทุกหน่วยในพื้นที่แล้ว ขอบคุณในการแจ้ง");
		    callcmd::hangup(playerid, "\1");

		    SetFactionMarkerEx(playerid, FACTION_POLICE, x, y, z);
		}
		case 3:
		{
		    SendFactionMessageEx(FACTION_MEDIC, COLOR_HOSPITAL, "911 CALL: %s พิกัด (%.4f, %.4f, %.4f)", GetPlayerNameEx(playerid), x, y, z);
   			SendFactionMessageEx(FACTION_MEDIC, COLOR_HOSPITAL, "เหตุฉุกเฉิน: %s", text);

		    SendClientMessage(playerid, COLOR_HOSPITAL, "[พนักงาน]:{FFFFFF} เราได้แจ้งทุกหน่วยในพื้นที่แล้ว ขอบคุณในการแจ้ง");
		    callcmd::hangup(playerid, "\1");

		    SetFactionMarkerEx(playerid, FACTION_MEDIC, x, y, z);
		}
		case 4:
		{
		    SendFactionMessageEx(FACTION_MEC, COLOR_ORANGE, "Dispatch : %s พิกัด (%.4f, %.4f, %.4f)", GetPlayerNameEx(playerid), x, y, z);
   			SendFactionMessageEx(FACTION_MEC, COLOR_ORANGE, "ข้อความ : %s", text);

		    SendClientMessage(playerid, COLOR_ORANGE, "[พนักงาน]:{FFFFFF} เราได้แจ้งช่างทุกคนในพื้นที่แล้ว ขอบคุณในการแจ้ง");
		    callcmd::hangup(playerid, "\1");

		    SetFactionMarkerEx(playerid, FACTION_MEC, x, y, z);
		}
	}
	if (targetid != INVALID_PLAYER_ID && !playerData[playerid][pIncomingCall])
	{
		SendClientMessageEx(targetid, COLOR_YELLOW, "(โทรศัพท์) %s พูดว่า: %s", GetPlayerNameEx(playerid), text);
	}
	return 0;
}

forward OnPlayerLoaded(playerid);
public OnPlayerLoaded(playerid)
{
	if(cache_num_rows())
	{
		ShowDialog_Login(playerid);

		playerData[playerid][LoginTimer] = SetTimerEx("OnLoginTimeout", SECONDS_TO_LOGIN * 1000, false, "d", playerid);

		ClearPlayerChat(playerid, 20);
		SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}ติดต่อข่าวสารการอัพเดตได้ที่กลุ่ม {FFA84D}"#SERVER_NAME"");
		SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}สามารถสนับสนุนเซิร์ฟเวอร์ได้ที่ {33CCFF}Facebook: {FFFF00}-");
		SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}ติดต่อโดเนทได้ที่ {FF0000}True{FFA84D}money: {FFFFFF}- 062-5656152");
		ClearPlayerChat(playerid, 1);
	}
	else
	{
		ClearPlayerChat(playerid, 20);
		SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}ติดต่อข่าวสารการอัพเดตได้ที่กลุ่ม {FFA84D}"#SERVER_NAME"");
		SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}สามารถสนับสนุนเซิร์ฟเวอร์ได้ที่ {33CCFF}Facebook: {FFFF00}-https://www.facebook.com/RiWANK6105");
		SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}ติดต่อโดเนทได้ที่ {FF0000}True{FFA84D}money: {FFFFFF}- 064-0727990");
		ClearPlayerChat(playerid, 1);
		ShowDialog_Register(playerid);
	}
	return 1;
}

forward OnLoginTimeout(playerid);
public OnLoginTimeout(playerid)
{
	playerData[playerid][LoginTimer] = 0;
	SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เวลาล็อคอินของคุณหมดลงแล้ว 60 วินาที ระบบจึงเตะคุณออกจากเกม");
	SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
	DelayedKick(playerid);
	return 1;
}

forward OnPlayerRegister(playerid);
public OnPlayerRegister(playerid)
{
	playerData[playerid][pID] = cache_insert_id();
	ShowDialog_Login(playerid);
	playerData[playerid][LoginTimer] = SetTimerEx("OnLoginTimeout", SECONDS_TO_LOGIN * 1000, false, "d", playerid);
	return 1;
}

forward _KickPlayerDelayed(playerid);
public _KickPlayerDelayed(playerid)
{
	Kick(playerid);
	return 1;
}

AssignplayerData(playerid)
{
	cache_get_value_name_int(0, "playerID", playerData[playerid][pID]);

    cache_get_value_name(0, "playerRegDate", playerData[playerid][pRegisterDate], 90);
	cache_get_value_name_int(0, "playerGender", playerData[playerid][pGender]);
	cache_get_value_name(0, "playerBirthday", playerData[playerid][pBirthday], 24);

	cache_get_value_name_int(0, "playerAdmin", playerData[playerid][pAdmin]);

	cache_get_value_name_int(0, "playerKills", playerData[playerid][pKills]);
	cache_get_value_name_int(0, "playerDeaths", playerData[playerid][pDeaths]);
	cache_get_value_name_int(0, "playerMoney", playerData[playerid][pMoney]);
	cache_get_value_name_int(0, "playerBank", playerData[playerid][pBankMoney]);
	cache_get_value_name_int(0, "playerRedMoney", playerData[playerid][pRedMoney]);
	cache_get_value_name_int(0, "playerLevel", playerData[playerid][pLevel]);
	cache_get_value_name_int(0, "playerExp", playerData[playerid][pExp]);
	cache_get_value_name_int(0, "playerMinutes", playerData[playerid][pMinutes]);
	cache_get_value_name_int(0, "playerHours", playerData[playerid][pHours]);

	cache_get_value_name_float(0, "playerPosX", playerData[playerid][pPos_X]);
	cache_get_value_name_float(0, "playerPosY", playerData[playerid][pPos_Y]);
	cache_get_value_name_float(0, "playerPosZ", playerData[playerid][pPos_Z]);
	cache_get_value_name_float(0, "playerPosA", playerData[playerid][pPos_A]);
	cache_get_value_name_int(0, "playerSkin", playerData[playerid][pSkin]);
	cache_get_value_name_int(0, "playerInterior", playerData[playerid][pInterior]);
	cache_get_value_name_int(0, "playerWorld", playerData[playerid][pWorld]);
	cache_get_value_name_int(0, "playerTutorial", playerData[playerid][pTutorial]);
	cache_get_value_name_int(0, "playerSpawn", playerData[playerid][pSpawnPoint]);

	cache_get_value_name_float(0, "playerThirsty", playerData[playerid][pThirsty]);
	cache_get_value_name_float(0, "playerHungry", playerData[playerid][pHungry]);

	cache_get_value_name_float(0, "playerHealth", playerData[playerid][pHealth]);
	cache_get_value_name_int(0, "playerInjured", playerData[playerid][pInjured]);
	cache_get_value_name_int(0, "playerInjuredTime", playerData[playerid][pInjuredTime]);

    cache_get_value_name_int(0, "playerFaction", playerData[playerid][pFactionID]);
    cache_get_value_name_int(0, "playerFactionRank", playerData[playerid][pFactionRank]);

    cache_get_value_name_int(0, "playerPrisoned", playerData[playerid][pPrisoned]);
    cache_get_value_name_int(0, "playerPrisonOut", playerData[playerid][pPrisonOut]);
    cache_get_value_name_int(0, "playerJailTime", playerData[playerid][pJailTime]);

    cache_get_value_name_int(0, "playerEntrance", playerData[playerid][pEntrance]);

    cache_get_value_name_int(0, "playerMaxItem", playerData[playerid][pMaxItem]);
    cache_get_value_name_int(0, "playerItemAmount", playerData[playerid][pItemAmount]);
    cache_get_value_name_int(0, "playerPhone", playerData[playerid][pPhone]);

    cache_get_value_name_int(0, "playerVIP", playerData[playerid][pVip]);

	cache_get_value_name_int(0, "playerQuest", playerData[playerid][pQuest]);
	cache_get_value_name_int(0, "playerQuestProgress", playerData[playerid][pQuestProgress]);

	cache_get_value_name_int(0, "playerBan", playerData[playerid][pBan]);
	cache_get_value_name(0, "playerBanReason", playerData[playerid][pBanReason], 128);

	cache_get_value_name_int(0, "playerWhitelist", playerData[playerid][pWhitelist]);
	
	cache_get_value_name_int(0, "Chaya", playerData[playerid][pChaya]);

	cache_get_value_name_int(0, "pLottoWin", playerData[playerid][pLottoWin]);
	cache_get_value_name_int(0, "pWeedWin", playerData[playerid][pWeedWin]);

	cache_get_value_name_int(0, "pSchoolType", playerData[playerid][pSchoolType]);
	cache_get_value_name_int(0, "pGradeType", playerData[playerid][pGradeType]);
	cache_get_value_name_int(0, "pSchoolPoints", playerData[playerid][pSchoolPoints]);
	cache_get_value_name_int(0, "pBookPoints", playerData[playerid][pBookPoints]);
	cache_get_value_name_int(0, "pMaxSchool", playerData[playerid][pMaxSchool]);

	cache_get_value_name_int(0, "pCoin", playerData[playerid][pCoin]);
	cache_get_value_name_int(0, "pSkillCraft", playerData[playerid][pSkillCraft]);

	cache_get_value_name_int(0, "pMaterials", playerData[playerid][pMaterials]);
	cache_get_value_name_int(0, "pIrons", playerData[playerid][pIrons]);
	cache_get_value_name_int(0, "pWoods", playerData[playerid][pWoods]);

	cache_get_value_name_int(0, "pExpCraft", playerData[playerid][pExpCraft]);

	if (playerData[playerid][pFactionID] != -1)
	{
	    playerData[playerid][pFaction] = GetFactionByID(playerData[playerid][pFactionID]);

	    if (playerData[playerid][pFaction] == -1)
		{
	        ResetFaction(playerid);
		}
	}

	for(new i = 1; i < MAX_VEHICLES; i ++)
	{
		if(IsValidVehicle(i) && IsVehicleOwner(playerid, i) && carData[i][carTimer] >= 0)
		{
			KillTimer(carData[i][carTimer]);
			carData[i][carTimer] = -1;
		}
	}


    new query[256];
    /*mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `inventory` WHERE `invOwner` = '%d'", playerData[playerid][pID]);
	mysql_tquery(g_SQL, query, "Inventory_Load", "d", playerid);*/

	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `playeritems` WHERE `pItemPlayerID` = '%d'", playerData[playerid][pID]);
	mysql_tquery(g_SQL, query, "Inventory_Load", "d", playerid);

    mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `contacts` WHERE `ID` = '%d'", playerData[playerid][pID]);
	mysql_tquery(g_SQL, query, "Contact_Load", "d", playerid);

	format(query, sizeof(query), "SELECT * FROM `clothing` WHERE `owner` = %d", playerData[playerid][pID]);
	mysql_tquery(g_SQL, query, "OnLoadClothing", "d", playerid);

	return 1;
}

forward KickTimePlayer(playerid);
public KickTimePlayer(playerid){
	Kick(playerid);
	return 1;
}

DelayedKick(playerid, time = 500)
{
	SetTimerEx("_KickPlayerDelayed", time, false, "d", playerid);
	return 1;
}

UpdateplayerData(playerid)
{
	if (playerData[playerid][IsLoggedIn] == false) return 0;

/*	if (reason == 1)
	{
		GetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
		GetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);
	}*/
	if (!playerData[playerid][pDrivingTest])
	{
	    playerData[playerid][pInterior] = GetPlayerInterior(playerid);
	    playerData[playerid][pWorld] = GetPlayerVirtualWorld(playerid);

	    GetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
	    GetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);

	    GetPlayerHealth(playerid, playerData[playerid][pHealth]);
	}
	if (playerData[playerid][pInjured] == 0)
	    GetPlayerHealth(playerid, playerData[playerid][pHealth]);

	playerData[playerid][pSkin] = GetPlayerSkin(playerid);

	new query[2048];
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerAdmin` = %d, `playerMoney` = %d, `playerBank` = %d, \
	`playerRedMoney` = %d, `playerLevel` = %d, `playerExp` = %d, `playerMinutes` = %d, `playerHours` = %d, `playerPosX` = %f, \
	`playerPosY` = %f, `playerPosZ` = %f, `playerPosA` = %f, `playerSkin` = %d, `playerInterior` = %d, `playerWorld` = %d, \
	`playerThirsty` = %.3f, `playerHungry` = %.3f, `playerHealth` = %.4f, `playerInjured` = %d, `playerInjuredTime` = %d, \
	`playerFaction` = %d, `playerFactionRank` = %d, `playerPrisoned` = %d, `playerPrisonOut` = %d, `playerJailTime` = %d, \
	`playerEntrance` = %d, `playerMaxItem` = %d, `playerItemAmount` = %d, `playerPhone` = %d, `playerVIP` = %d, \
	`playerQuest` = %d, `playerQuestProgress` = %d, `playerWhitelist` = %d, `Chaya` = %d, `pLottoWin` = %d, `pWeedWin` = %d, `pSchoolType` = %d, `pGradeType` = %d, `pSchoolPoints` = %d, `pBookPoints` = %d, `pMaxSchool` = %d, `pCoin` = %d, `pSkillCraft` = %d, `pMaterials` = %d, `pIrons` = %d, `pWoods` = %d, `pExpCraft` = %d WHERE `playerID` = %d",
	playerData[playerid][pAdmin],
	playerData[playerid][pMoney],
	playerData[playerid][pBankMoney],
	playerData[playerid][pRedMoney],
	playerData[playerid][pLevel],
	playerData[playerid][pExp],
	playerData[playerid][pMinutes],
	playerData[playerid][pHours],
	playerData[playerid][pPos_X],
	playerData[playerid][pPos_Y],
	playerData[playerid][pPos_Z],
	playerData[playerid][pPos_A],
	playerData[playerid][pSkin],
	playerData[playerid][pInterior],
	playerData[playerid][pWorld],
	playerData[playerid][pThirsty],
	playerData[playerid][pHungry],
	playerData[playerid][pHealth],
	playerData[playerid][pInjured],
	playerData[playerid][pInjuredTime],
	playerData[playerid][pFactionID],
	playerData[playerid][pFactionRank],
	playerData[playerid][pPrisoned],
	playerData[playerid][pPrisonOut],
	playerData[playerid][pJailTime],
	playerData[playerid][pEntrance],
	playerData[playerid][pMaxItem],
	playerData[playerid][pItemAmount],
	playerData[playerid][pPhone],
	playerData[playerid][pVip],
	playerData[playerid][pQuest],
	playerData[playerid][pQuestProgress],
	playerData[playerid][pWhitelist],
	playerData[playerid][pChaya],
	
	playerData[playerid][pLottoWin],
	playerData[playerid][pWeedWin],
	
	playerData[playerid][pSchoolType],
	playerData[playerid][pGradeType],
	playerData[playerid][pSchoolPoints],
	playerData[playerid][pBookPoints],
	playerData[playerid][pMaxSchool],
	
	playerData[playerid][pCoin],
	playerData[playerid][pSkillCraft],
	
	playerData[playerid][pMaterials],
	playerData[playerid][pIrons],
	playerData[playerid][pWoods],
	
	playerData[playerid][pExpCraft],
	
	playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);
	return 1;
}

UpdatePlayerRegister(playerid)
{
	if (playerData[playerid][IsLoggedIn] == false) return 0;

	new query[256];
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerGender` = %d, `playerBirthday` = '%s', `playerTutorial` = %d, `playerRegDate` = '%e' WHERE `playerID` = %d LIMIT 1",
	playerData[playerid][pGender], playerData[playerid][pBirthday], playerData[playerid][pTutorial], playerData[playerid][pRegisterDate], playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);
	return 1;
}

UpdatePlayerDeaths(playerid)
{
	if (playerData[playerid][IsLoggedIn] == false) return 0;
	if (playerData[playerid][pInjured] == 1) return 0;

	playerData[playerid][pDeaths]++;

	new query[90];
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerDeaths` = %d WHERE `playerID` = %d LIMIT 1", playerData[playerid][pDeaths], playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);
	return 1;
}

UpdatePlayerKills(killerid, deadid)
{
    if (killerid == INVALID_PLAYER_ID) return 0;
    if (playerData[killerid][IsLoggedIn] == false) return 0;
	if (playerData[deadid][pInjured] == 1) return 0;

	playerData[killerid][pKills]++;

	new query[90];
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerKills` = %d WHERE `playerID` = %d LIMIT 1", playerData[killerid][pKills], playerData[killerid][pID]);
	mysql_tquery(g_SQL, query);
	return 1;
}

GetPlayerNameEx(playerid)
{
    new string[MAX_PLAYER_NAME + 1];
    GetPlayerName(playerid, string, sizeof(string));
    return string;
}

ReturnDate()
{
	new sendString[90], MonthStr[6], month, day, year;
	new hour, minute, second;
	gettime(hour, minute, second);
	getdate(year, month, day);
	switch(month)
	{
	    case 1:  MonthStr = "ม.ค";
	    case 2:  MonthStr = "ก.พ";
	    case 3:  MonthStr = "มี.ค";
	    case 4:  MonthStr = "เม.ย";
	    case 5:  MonthStr = "พ.ค";
	    case 6:  MonthStr = "มิ.ย";
	    case 7:  MonthStr = "ก.ค";
	    case 8:  MonthStr = "ส.ค";
	    case 9:  MonthStr = "ก.ย";
	    case 10: MonthStr = "ต.ค";
	    case 11: MonthStr = "พ.ย";
	    case 12: MonthStr = "ธ.ค";
	}
	format(sendString, sizeof(sendString), "%02d-%02d-%04d %02d:%02d:%02d", day, month, year, hour, minute, second);
	return sendString;
}

ReturnDateEx()
{
	new sendString[90], MonthStr[11], month, day, year;
	new hour, minute, second;
	gettime(hour, minute, second);
	getdate(year, month, day);
	switch(month)
	{
	    case 1:  MonthStr = "มกราคม";
	    case 2:  MonthStr = "กุมภาพันธ์";
	    case 3:  MonthStr = "มีนาคม";
	    case 4:  MonthStr = "เมษายน";
	    case 5:  MonthStr = "พฤษภาคม";
	    case 6:  MonthStr = "มิถุนายน";
	    case 7:  MonthStr = "กรกฎาคม";
	    case 8:  MonthStr = "สิงหาคม";
	    case 9:  MonthStr = "กันยายน";
	    case 10: MonthStr = "ตุลาคม";
	    case 11: MonthStr = "พฤศจิกายน";
	    case 12: MonthStr = "ธันวาคม";
	}
	format(sendString, sizeof(sendString), "%d %s %d %02d:%02d:%02d", day, MonthStr, year, hour, minute, second);
	return sendString;
}

ClearPlayerChat(playerid, lines)
{
	for(new i = 0; i <= lines; i++)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "");
	}
	return 1;
}

SendClientMessageEx(playerid, color, const text[], {Float, _}:...)
{
	static
	    args,
	    str[144];

	/*
     *  Custom function that uses #emit to format variables into a string.
     *  This code is very fragile; touching any code here will cause crashing!
	*/
	if ((args = numargs()) == 3)
	{
	    SendClientMessage(playerid, color, text);
	}
	else
	{
		while (--args >= 3)
		{
			#emit LCTRL 5
			#emit LOAD.alt args
			#emit SHL.C.alt 2
			#emit ADD.C 12
			#emit ADD
			#emit LOAD.I
			#emit PUSH.pri
		}
		#emit PUSH.S text
		#emit PUSH.C 144
		#emit PUSH.C str
		#emit PUSH.S 8
		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

		SendClientMessage(playerid, color, str);

		#emit RETN
	}
	return 1;
}

SendClientMessageToAllEx(color, const text[], {Float, _}:...)
{
	static
	    args,
	    str[144];

	/*
     *  Custom function that uses #emit to format variables into a string.
     *  This code is very fragile; touching any code here will cause crashing!
	*/
	if ((args = numargs()) == 2)
	{
	    SendClientMessageToAll(color, text);
	}
	else
	{
		while (--args >= 2)
		{
			#emit LCTRL 5
			#emit LOAD.alt args
			#emit SHL.C.alt 2
			#emit ADD.C 12
			#emit ADD
			#emit LOAD.I
			#emit PUSH.pri
		}
		#emit PUSH.S text
		#emit PUSH.C 144
		#emit PUSH.C str
		#emit LOAD.S.pri 8
		#emit ADD.C 4
		#emit PUSH.pri
		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

		SendClientMessageToAll(color, str);

		#emit RETN
	}
	return 1;
}

// Red Money

GivePlayerRedMoney(playerid, amount)
{
	playerData[playerid][pRedMoney] += amount;
	PlayerLoadRedMoney(playerid);
	return 1;
}

GetPlayerRedMoney(playerid)
{
	return (playerData[playerid][pRedMoney]);
}

SetPlayerRedMoney(playerid, amount)
{
	playerData[playerid][pRedMoney] = amount;
	PlayerLoadRedMoney(playerid);
	return 1;
}

PlayerLoadRedMoney(playerid)
{
	new redmoney[12];
    format(redmoney, sizeof(redmoney), "%s", FormatNumber(GetPlayerRedMoney(playerid)));
    PlayerTextDrawSetString(playerid, tdredmoney[playerid], redmoney);
    return 1;
}

// Exp

GetPlayerRequiredExp(playerid)
{
    new requiredexp = playerData[playerid][pLevel] * 2000;
	return requiredexp;
}

GetPlayerRequiredExpCraft(playerid)
{
	new requiredexp;

	if (playerData[playerid][pSkillCraft] == 1) requiredexp = 100;
	if (playerData[playerid][pSkillCraft] == 2) requiredexp = 150;
	if (playerData[playerid][pSkillCraft] == 3) requiredexp = 200;
	if (playerData[playerid][pSkillCraft] == 4) requiredexp = 250;
	if (playerData[playerid][pSkillCraft] == 4) requiredexp = 300;

	return requiredexp;
}

GivePlayerExp(playerid, amount)
{
	if (GetPlayerExp(playerid) > GetPlayerRequiredExp(playerid))
		return 0;

	playerData[playerid][pExp] += amount;
	ShowPlayerExpEarn(playerid, amount);
	PlayerLoadStats(playerid);
	PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
    return 1;
}

GetPlayerExp(playerid)
{
	return playerData[playerid][pExp];
}

SetPlayerExp(playerid, amount)
{
	playerData[playerid][pExp] = amount;
	PlayerLoadStats(playerid);
	return 1;
}

PlayerLoadStats(playerid)
{
    new exp[64];
    format(exp, sizeof(exp), "LEVEL %d (%.0f%c)", playerData[playerid][pLevel], ExpToPecentage(playerid), '%');
    PlayerTextDrawSetString(playerid, tdexp[playerid], exp);
	SetPlayerProgressBarValue(playerid, barexp[playerid], ExpToPecentage(playerid));
    return 1;
}

// Level

GivePlayerLevel(playerid, amount)
{
	playerData[playerid][pLevel] += amount;
	PlayerLoadStats(playerid);
    return 1;
}

GetPlayerLevel(playerid)
{
	return playerData[playerid][pLevel];
}

SetPlayerLevel(playerid, amount)
{
	playerData[playerid][pLevel] = amount;
	PlayerLoadStats(playerid);
	return 1;
}

// Anti Money Hack

GivePlayerMoneyEx(playerid, amount)
{
	playerData[playerid][pMoney] += amount;
	GivePlayerMoney(playerid, amount);
	return 1;
}

GetPlayerMoneyEx(playerid)
{
	return (playerData[playerid][pMoney]);
}

SetPlayerMoneyEx(playerid, amount)
{
	ResetPlayerMoney(playerid);
	playerData[playerid][pMoney] = amount;
	GivePlayerMoney(playerid, amount);
	return 1;
}

SetPlayerRedMoneyEx(playerid, amount)
{
	playerData[playerid][pRedMoney] = amount;
	return 1;
}

GivePlayerWeaponEx(playerid, weaponid, ammo)
{
    if(!weaponid) return 0;

    gPlayerWeaponData[playerid][weaponid] = true;
    return GivePlayerWeapon(playerid, weaponid, ammo);
}

ResetPlayerWeaponsEx(playerid)
{
    for(new weaponid; weaponid < 46; weaponid++)
    gPlayerWeaponData[playerid][weaponid] = false;
    return ResetPlayerWeapons(playerid);
}

RemovePlayerWeapon(playerid, weaponid)
{
    new plyWeapons[12], plyAmmo[12];

    for(new slot; slot != 12; slot ++)
    {
        new weap, ammo;

        GetPlayerWeaponData(playerid, slot, weap, ammo);
        if(weap != weaponid)
        {
            GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
        }
    }

    ResetPlayerWeaponsEx(playerid);

    for(new slot; slot != 12; slot ++)
    {
        GivePlayerWeaponEx(playerid, plyWeapons[slot], plyAmmo[slot]);
    }
}

FormatMoney(number, const prefix[] = "$")
{
	static
		value[32],
		length;

	format(value, sizeof(value), "%d", (number < 0) ? (-number) : (number));

	if ((length = strlen(value)) > 3)
	{
		for (new i = length, l = 0; --i >= 0; l ++)
		{
		    if ((l > 0) && (l % 3 == 0)) strins(value, ",", i + 1);
		}
	}
	if (prefix[0] != 0)
	    strins(value, prefix, 0);

	if (number < 0)
		strins(value, "-", 0);

	return value;
}

FormatNumber(number)
{
	static
		value[32],
		length;

	format(value, sizeof(value), "%d", (number < 0) ? (-number) : (number));

	if ((length = strlen(value)) > 3)
	{
		for (new i = length, l = 0; --i >= 0; l ++)
		{
		    if ((l > 0) && (l % 3 == 0)) strins(value, ",", i + 1);
		}
	}
	if (number < 0)
		strins(value, "-", 0);

	return value;
}

ShowDialog_Register(playerid)
{
	new string[256];
	format(string, sizeof(string), "\
		{FFFFFF}สวัสดีคุณ {33CCFF}%s{FFFFFF}, ยินดีต้อนรับเข้าสู่ {FFA84D}"SERVER_NAME"\n\n\
		{FF0000}** คุณยังไม่ได้ลงทะเบียน\n\
		{FFFFFF}กรุณาใส่รหัสผ่านที่ต้องการเพื่อลงทะเบียน",
	GetPlayerNameEx(playerid));
	Dialog_Show(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "[หน้าต่างลงทะเบียน]", string, "ลงทะเบียน", "ออกเกม");
	return 1;
}

ShowDialog_Login(playerid)
{
	new string[256];
	format(string, sizeof string, "\
		{FFFFFF}สวัสดีคุณ {33CCFF}%s{FFFFFF}, ยินดีต้อนรับเข้าสู่ {FFA84D}"SERVER_NAME"\n\n\
		{00FF00}* คุณลงทะเบียนไว้แล้ว\n\
		{FFFFFF}กรุณาใส่รหัสผ่านเพื่อล็อคอิน",
	GetPlayerNameEx(playerid));
	Dialog_Show(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "[หน้าต่างล็อคอิน]", string, "ล็อคอิน", "ออกเกม");
	return 1;
}

ShowDialog_Tutorial(playerid)
{
	new string[256];
	static const aGender[3][10] = {"แก้ไข", "ชาย", "หญิง"};
	format(string, sizeof(string), "\
		ลำดับไอดี:\t{00FF00}%d\n\
		วันที่ลงทะเบียน:\t{00FF00}%s\n\
		ชื่อ:\t{00FF00}%s\n\
		เพศ:\t{00FF00}%s\n\
		วันเดือนปีเกิด:\t{00FF00}%s\n\
		{FFFF00}>> เสร็จสิ้น",
	playerData[playerid][pID], playerData[playerid][pRegisterDate], GetPlayerNameEx(playerid), aGender[playerData[playerid][pGender]], playerData[playerid][pBirthday]);
	Dialog_Show(playerid, DIALOG_TUTORIAL, DIALOG_STYLE_TABLIST, "[ข้อมูลตัวละคร]", string, "เลือก", "ออกเกม");
	return 1;
}

IsVehicleSeatUsed(vehicleid, seat)
{
	foreach (new i : Player) if (IsPlayerInVehicle(i, vehicleid) && GetPlayerVehicleSeat(i) == seat) {
	    return 1;
	}
	return 0;
}

GetVehicleMaxSeats(vehicleid)
{
    static const g_arrMaxSeats[] = {
		4, 2, 2, 2, 4, 4, 1, 2, 2, 4, 2, 2, 2, 4, 2, 2, 4, 2, 4, 2, 4, 4, 2, 2, 2, 1, 4, 4, 4, 2,
		1, 7, 1, 2, 2, 0, 2, 7, 4, 2, 4, 1, 2, 2, 2, 4, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 2, 2, 4, 4,
		2, 2, 2, 2, 1, 1, 4, 4, 2, 2, 4, 2, 1, 1, 2, 2, 1, 2, 2, 4, 2, 1, 4, 3, 1, 1, 1, 4, 2, 2,
		4, 2, 4, 1, 2, 2, 2, 4, 4, 2, 2, 1, 2, 2, 2, 2, 2, 4, 2, 1, 1, 2, 1, 1, 2, 2, 4, 2, 2, 1,
		1, 2, 2, 2, 2, 2, 2, 2, 2, 4, 1, 1, 1, 2, 2, 2, 2, 7, 7, 1, 4, 2, 2, 2, 2, 2, 4, 4, 2, 2,
		4, 4, 2, 1, 2, 2, 2, 2, 2, 2, 4, 4, 2, 2, 1, 2, 4, 4, 1, 0, 0, 1, 1, 2, 1, 2, 2, 1, 2, 4,
		4, 2, 4, 1, 0, 4, 2, 2, 2, 2, 0, 0, 7, 2, 2, 1, 4, 4, 4, 2, 2, 2, 2, 2, 4, 2, 0, 0, 0, 4,
		0, 0
	};
	new
	    model = GetVehicleModel(vehicleid);

	if (400 <= model <= 611)
	    return g_arrMaxSeats[model - 400];

	return 0;
}

GetAvailableSeat(vehicleid, start = 1)
{
	new seats = GetVehicleMaxSeats(vehicleid);

	for (new i = start; i < seats; i ++) if (!IsVehicleSeatUsed(vehicleid, i)) {
	    return i;
	}
	return -1;
}

GetNearestVehicle(playerid)
{
	static
	    Float:fX,
	    Float:fY,
	    Float:fZ;

	for (new i = 1; i != MAX_VEHICLES; i ++) if (IsValidVehicle(i) && GetVehiclePos(i, fX, fY, fZ))
	{
	    if (IsPlayerInRangeOfPoint(playerid, 3.5, fX, fY, fZ)) return i;
	}
	return INVALID_VEHICLE_ID;
}

ReturnVehicleName(vehicleid)
{
	new
		model = GetVehicleModel(vehicleid),
		name[32] = "None";

    if (model < 400 || model > 611)
	    return name;

	format(name, sizeof(name), g_arrVehicleNames[model - 400]);
	return name;
}

IsWindowsVehicle(vehicleid)
{
    static const vehicleWindows[] = {
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0,
		1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0,
		0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1,
		0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
		1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,
		0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0
	};

	new
	    model = GetVehicleModel(vehicleid);

	if(400 <= model <= 611)
	{
	    return vehicleWindows[model - 400];
	}

	return 0;
}

IsEngineVehicle(vehicleid)
{
	static const g_aEngineStatus[] = {
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	    1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0
	};
    new modelid = GetVehicleModel(vehicleid);

    if (modelid < 400 || modelid > 611)
        return 0;

    return (g_aEngineStatus[modelid - 400]);
}

GetEngineStatus(vehicleid)
{
	static
	    engine,
	    lights,
	    alarm,
	    doors,
	    bonnet,
	    boot,
	    objective;

	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

	if (engine != 1)
		return 0;

	return 1;
}

SetEngineStatus(vehicleid, status)
{
	static
	    engine,
	    lights,
	    alarm,
	    doors,
	    bonnet,
	    boot,
	    objective;

	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return SetVehicleParamsEx(vehicleid, status, lights, alarm, doors, bonnet, boot, objective);
}

SetVehicleParams(vehicleid, param, status)
{
	new
	    params[7];

	GetVehicleParamsEx(vehicleid, params[0], params[1], params[2], params[3], params[4], params[5], params[6]);

	params[param] = status;

	return SetVehicleParamsEx(vehicleid, params[0], params[1], params[2], params[3], params[4], params[5], params[6]);
}

/*SetFactionMarker(playerid, type, color)
{
    foreach (new i : Player) if (GetFactionType(i) == type)
	{
    	SetPlayerMarkerForPlayer(i, playerid, color);
	}
	playerData[playerid][pMarker] = 1;
	SetTimerEx("ExpireMarker", 300000, false, "d", playerid);
	return 1;
}*/

SetFactionMarkerEx(playerid, type, Float:x, Float:y, Float:z)
{
    foreach (new i : Player) if (GetFactionType(i) == type)
	{
    	SetPlayerCheckpoint(i, x, y, z, 5.0);
	}
	playerData[playerid][pMarker] = 1;
	SetTimerEx("ExpireMarker", 300000, false, "d", playerid);
	return 1;
}

forward ExpireMarker(playerid);
public ExpireMarker(playerid)
{
	if (!playerData[playerid][pMarker])
	    return 0;

	playerData[playerid][pMarker] = 0;
	DisablePlayerCheckpoint(playerid);
	return 1;
}
/*
forward ExpireMarker(playerid);
public ExpireMarker(playerid)
{
	if (!playerData[playerid][pMarker])
	    return 0;

    if (GetFactionType(playerid) == FACTION_GANG || (GetFactionType(playerid) != FACTION_GANG && playerData[playerid][pOnDuty]))
		SetFactionColor(playerid);

	else SetPlayerColor(playerid, DEFAULT_COLOR);
	return 1;
}*/

FactionLocker_Nearest(playerid)
{
	for (new i = 0; i < MAX_FACTIONS; i ++) if (factionData[i][factionExists] && IsPlayerInRangeOfPoint(playerid, 2.0, factionData[i][factionLockerPosX], factionData[i][factionLockerPosY], factionData[i][factionLockerPosZ]))
		return i;
	return -1;
}

Faction_GetName(playerid)
{
    new
		factionid = playerData[playerid][pFaction],
		name[32] = "None";

 	if (factionid == -1)
	    return name;

	format(name, 32, factionData[factionid][factionName]);
	return name;
}

Faction_GetRank(playerid)
{
    new
		factionid = playerData[playerid][pFaction],
		rank[32] = "None";

 	if (factionid == -1)
	    return rank;

	format(rank, 32, FactionRanks[factionid][playerData[playerid][pFactionRank] - 1]);
	return rank;
}

forward Faction_Load();
public Faction_Load()
{
	static
	    rows,
		str[32];

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_FACTIONS)
	{
	    factionData[i][factionExists] = true;
	    cache_get_value_name_int(i, "factionID", factionData[i][factionID]);

	    cache_get_value_name(i, "factionName", factionData[i][factionName], 32);

	    cache_get_value_name_int(i, "factionColor", factionData[i][factionColor]);
	    cache_get_value_name_int(i, "factionType", factionData[i][factionType]);
	    cache_get_value_name_int(i, "factionRanks", factionData[i][factionRanks]);
	    cache_get_value_name_float(i, "factionLockerX", factionData[i][factionLockerPosX]);
	    cache_get_value_name_float(i, "factionLockerY", factionData[i][factionLockerPosY]);
	    cache_get_value_name_float(i, "factionLockerZ", factionData[i][factionLockerPosZ]);
	    cache_get_value_name_int(i, "factionLockerInt", factionData[i][factionLockerInt]);
	    cache_get_value_name_int(i, "factionLockerWorld", factionData[i][factionLockerWorld]);

		//Spawning
		cache_get_value_name_float(i, "SpawnX", factionData[i][SpawnX]);
	 	cache_get_value_name_float(i, "SpawnY", factionData[i][SpawnY]);
   		cache_get_value_name_float(i, "SpawnZ", factionData[i][SpawnZ]);
		cache_get_value_name_int(i, "SpawnInterior", factionData[i][SpawnInterior]);
  		cache_get_value_name_int(i, "SpawnVW", factionData[i][SpawnVW]);

  		cache_get_value_name_int(i, "factionEntrance", factionData[i][factionEntrance]);

  		cache_get_value_name_int(i, "factionCannabis", factionData[i][factionCannabis]);
  		cache_get_value_name_int(i, "factionCocain", factionData[i][factionCocain]);
  		cache_get_value_name_int(i, "factionPoon", factionData[i][factionPoon]);
  		cache_get_value_name_int(i, "factionRedMoney", factionData[i][factionRedMoney]);

	    for (new j = 0; j < 8; j ++)
		{
	        format(str, sizeof(str), "factionSkin%d", j + 1);

	        cache_get_value_name_int(i, str, factionData[i][factionSkins][j]);
		}
        for (new j = 0; j < 10; j ++)
		{
	        format(str, sizeof(str), "factionWeapon%d", j + 1);

	        cache_get_value_name_int(i, str, factionData[i][factionWeapons][j]);

	        format(str, sizeof(str), "factionAmmo%d", j + 1);

			cache_get_value_name_int(i, str, factionData[i][factionAmmo][j]);
		}
		for (new j = 0; j < 15; j ++)
		{
		    format(str, sizeof(str), "factionRank%d", j + 1);

		    cache_get_value_name(i, str, FactionRanks[i][j]);
		}
		Faction_Refresh(i);
	}
	printf("[SERVER]: %d Faction were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward Arrest_Load();
public Arrest_Load()
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_ARREST)
	{
	    arrestData[i][arrestExists] = true;

	    cache_get_value_name_int(i, "arrestID", arrestData[i][arrestID]);
	    cache_get_value_name_float(i, "arrestX", arrestData[i][arrestPosX]);
	    cache_get_value_name_float(i, "arrestY", arrestData[i][arrestPosY]);
	    cache_get_value_name_float(i, "arrestZ", arrestData[i][arrestPosZ]);
	    cache_get_value_name_int(i, "arrestInterior", arrestData[i][arrestInterior]);
	    cache_get_value_name_int(i, "arrestWorld", arrestData[i][arrestWorld]);

	    Arrest_Refresh(i);
	}
	printf("[SERVER]: %d Arrest were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward GPS_Load();
public GPS_Load()
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_GPS)
	{
	    gpsData[i][gpsExists] = true;

	    cache_get_value_name_int(i, "gpsID", gpsData[i][gpsID]);
	    cache_get_value_name(i, "gpsName", gpsData[i][gpsName], 32);
	    cache_get_value_name_float(i, "gpsX", gpsData[i][gpsPosX]);
	    cache_get_value_name_float(i, "gpsY", gpsData[i][gpsPosY]);
	    cache_get_value_name_float(i, "gpsZ", gpsData[i][gpsPosZ]);
	    cache_get_value_name_int(i, "gpsType", gpsData[i][gpsType]);
	}
	printf("[SERVER]: %d GPS were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward Vehicle_Load();
public Vehicle_Load()
{
    static
	    rows,
		count;

	cache_get_row_count(rows);

	new modelid, Float:pos_x, Float:pos_y, Float:pos_z, Float:pos_a, color1, color2, vehicleid;

	for(new i = 0; i < rows; i ++)
	{
		cache_get_value_name_int(i, "carModel", modelid);
		cache_get_value_name_float(i, "carPosX", pos_x);
		cache_get_value_name_float(i, "carPosY", pos_y);
		cache_get_value_name_float(i, "carPosZ", pos_z);
		cache_get_value_name_float(i, "carPosA", pos_a);
		cache_get_value_name_int(i, "carColor1", color1);
		cache_get_value_name_int(i, "carColor2", color2);
		vehicleid = CreateVehicle(modelid, pos_x, pos_y, pos_z, pos_a, color1, color2, -1);
		count++;

		if(vehicleid != INVALID_VEHICLE_ID)
		{
			cache_get_value_name_int(i, "carID", carData[vehicleid][carID]);
			cache_get_value_name_int(i, "carFaction", carData[vehicleid][carFaction]);
			cache_get_value_name_float(i, "carHealth", carData[vehicleid][carHealth]);

			if(carData[vehicleid][carFaction] >= 0)
			{
				cache_get_value_name_int(i, "carPrice", carData[vehicleid][carPrice]);
				cache_get_value_name_int(i, "carLocked", carData[vehicleid][carLocked]);
				cache_get_value_name_int(i, "carPaintjob", carData[vehicleid][carPaintjob]);
				cache_get_value_name_int(i, "carInterior", carData[vehicleid][carInterior]);
				cache_get_value_name_int(i, "carWorld", carData[vehicleid][carWorld]);
				cache_get_value_name_int(i, "carMod1", carData[vehicleid][carMods][0]);
				cache_get_value_name_int(i, "carMod2", carData[vehicleid][carMods][1]);
				cache_get_value_name_int(i, "carMod3", carData[vehicleid][carMods][2]);
				cache_get_value_name_int(i, "carMod4", carData[vehicleid][carMods][3]);
				cache_get_value_name_int(i, "carMod5", carData[vehicleid][carMods][4]);
				cache_get_value_name_int(i, "carMod6", carData[vehicleid][carMods][5]);
				cache_get_value_name_int(i, "carMod7", carData[vehicleid][carMods][6]);
				cache_get_value_name_int(i, "carMod8", carData[vehicleid][carMods][7]);
				cache_get_value_name_int(i, "carMod9", carData[vehicleid][carMods][8]);
				cache_get_value_name_int(i, "carMod10", carData[vehicleid][carMods][9]);
				cache_get_value_name_int(i, "carMod11", carData[vehicleid][carMods][10]);
				cache_get_value_name_int(i, "carMod12", carData[vehicleid][carMods][11]);
				cache_get_value_name_int(i, "carMod13", carData[vehicleid][carMods][12]);
				cache_get_value_name_int(i, "carMod14", carData[vehicleid][carMods][13]);
				ReloadVehicle(vehicleid);
			}

			carData[vehicleid][carModel] = modelid;
			carData[vehicleid][carPosX] = pos_x;
			carData[vehicleid][carPosY] = pos_y;
			carData[vehicleid][carPosZ] = pos_z;
			carData[vehicleid][carPosA] = pos_a;
			carData[vehicleid][carColor1] = color1;
			carData[vehicleid][carColor2] = color2;
			carData[vehicleid][carObjects][0] = INVALID_OBJECT_ID;
			carData[vehicleid][carObjects][1] = INVALID_OBJECT_ID;
			carData[vehicleid][carTimer] = -1;
			vehicleFuel[vehicleid] = vehicleData[modelid - 400][vFuel];

			if (carData[vehicleid][carHealth] < 350)
				SetVehicleHealth(vehicleid, 350);
			else
			    SetVehicleHealth(vehicleid, carData[vehicleid][carHealth]);
		}
	}
	printf("[SERVER]: %d Vehicles were loaded from \"%s\" database...", count, MYSQL_DATABASE);
	return 1;
}

forward ATM_Load();
public ATM_Load()
{
    static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_ATM_MACHINES)
	{
	    atmData[i][atmExists] = true;
	    cache_get_value_name_int(i, "atmID", atmData[i][atmID]);
	    cache_get_value_name_float(i, "atmX", atmData[i][atmPosX]);
        cache_get_value_name_float(i, "atmY", atmData[i][atmPosY]);
        cache_get_value_name_float(i, "atmZ", atmData[i][atmPosZ]);
        cache_get_value_name_float(i, "atmA", atmData[i][atmPosA]);
        cache_get_value_name_int(i, "atmInterior", atmData[i][atmInterior]);
		cache_get_value_name_int(i, "atmWorld", atmData[i][atmWorld]);

		ATM_Refresh(i);
	}
	printf("[SERVER]: %d ATM were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward Shop_Load();
public Shop_Load()
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_SHOPS)
	{
	    shopData[i][shopExists] = true;

	    cache_get_value_name_int(i, "shopID", shopData[i][shopID]);
	    cache_get_value_name_float(i, "shopX", shopData[i][shopPosX]);
	    cache_get_value_name_float(i, "shopY", shopData[i][shopPosY]);
	    cache_get_value_name_float(i, "shopZ", shopData[i][shopPosZ]);
	    cache_get_value_name_int(i, "shopInterior", shopData[i][shopInterior]);
	    cache_get_value_name_int(i, "shopWorld", shopData[i][shopWorld]);
		cache_get_value_name_int(i, "shopType", shopData[i][shopType]);

	    Shop_Refresh(i);
	}
	printf("[SERVER]: %d Shops were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward Pump_Load();
public Pump_Load()
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_PUMPS)
	{
	    pumpData[i][pumpExists] = true;

	    cache_get_value_name_int(i, "pumpID", pumpData[i][pumpID]);
	    cache_get_value_name_float(i, "pumpX", pumpData[i][pumpPosX]);
	    cache_get_value_name_float(i, "pumpY", pumpData[i][pumpPosY]);
	    cache_get_value_name_float(i, "pumpZ", pumpData[i][pumpPosZ]);

	    Pump_Refresh(i);
	}
	printf("[SERVER]: %d Pumps were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward Garage_Load();
public Garage_Load()
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_GARAGES)
	{
	    garageData[i][garageExists] = true;

	    cache_get_value_name_int(i, "garageID", garageData[i][garageID]);
	    cache_get_value_name_float(i, "garageX", garageData[i][garagePosX]);
	    cache_get_value_name_float(i, "garageY", garageData[i][garagePosY]);
	    cache_get_value_name_float(i, "garageZ", garageData[i][garagePosZ]);

	    Garage_Refresh(i);
	}
	printf("[SERVER]: %d Garages were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

forward OnFactionCreated(factionid);
public OnFactionCreated(factionid)
{
	if (factionid == -1 || !factionData[factionid][factionExists])
	    return 0;

	factionData[factionid][factionID] = cache_insert_id();

	Faction_Save(factionid);
	Faction_SaveRanks(factionid);

	return 1;
}

forward OnArrestCreated(arrestid);
public OnArrestCreated(arrestid)
{
	if (arrestid == -1 || !arrestData[arrestid][arrestExists])
	    return 0;

	arrestData[arrestid][arrestID] = cache_insert_id();
	Arrest_Save(arrestid);

	return 1;
}

forward OnGPSCreated(gpsid);
public OnGPSCreated(gpsid)
{
	if (gpsid == -1 || !gpsData[gpsid][gpsExists])
	    return 0;

	gpsData[gpsid][gpsID] = cache_insert_id();
	GPS_Save(gpsid);

	return 1;
}

forward OnATMCreated(atmid);
public OnATMCreated(atmid)
{
    if (atmid == -1 || !atmData[atmid][atmExists])
		return 0;

	atmData[atmid][atmID] = cache_insert_id();
 	ATM_Save(atmid);

	return 1;
}

forward OnShopCreated(shopid);
public OnShopCreated(shopid)
{
	if (shopid == -1 || !shopData[shopid][shopExists])
	    return 0;

	shopData[shopid][shopID] = cache_insert_id();
	Shop_Save(shopid);

	return 1;
}

forward OnPumpCreated(pumpid);
public OnPumpCreated(pumpid)
{
	if (pumpid == -1 || !pumpData[pumpid][pumpExists])
	    return 0;

	pumpData[pumpid][pumpID] = cache_insert_id();
	Pump_Save(pumpid);

	return 1;
}

forward OnGarageCreated(garageid);
public OnGarageCreated(garageid)
{
	if (garageid == -1 || !garageData[garageid][garageExists])
	    return 0;

	garageData[garageid][garageID] = cache_insert_id();
	Garage_Save(garageid);

	return 1;
}

/*forward OnInventoryAdd(playerid, itemid);
public OnInventoryAdd(playerid, itemid)
{
	invData[playerid][itemid][invID] = cache_insert_id();
	return 1;
}*/

forward OnContactAdd(playerid, id);
public OnContactAdd(playerid, id)
{
	contactData[playerid][id][contactID] = cache_insert_id();
	return 1;
}

ResetFaction(playerid)
{
    new query[90];
    playerData[playerid][pFaction] = -1;
    playerData[playerid][pFactionID] = -1;
    playerData[playerid][pFactionRank] = 0;
    if (playerData[playerid][pSpawnPoint] == 1) playerData[playerid][pSpawnPoint] = 0;
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerSpawn` = %d WHERE `playerID` = %d LIMIT 1",
	playerData[playerid][pSpawnPoint],
	playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);
}

ResetPlayer(playerid)
{
	foreach (new i : Player) if (playerData[i][pDraggedBy] == playerid)
	{
	    StopDragging(i);
	}
	if (playerData[playerid][pDragged])
	{
	    StopDragging(playerid);
	}
	playerData[playerid][pCuffed] = 0;
    playerData[playerid][pDragged] = 0;
    playerData[playerid][pDraggedBy] = INVALID_PLAYER_ID;
}

forward DragUpdate(playerid, targetid);
public DragUpdate(playerid, targetid)
{
	if (playerData[targetid][pDragged] && playerData[targetid][pDraggedBy] == playerid)
	{
	    static
	        Float:fX,
	        Float:fY,
	        Float:fZ,
			Float:fAngle;

		GetPlayerPos(playerid, fX, fY, fZ);
		GetPlayerFacingAngle(playerid, fAngle);

		fX -= 3.0 * floatsin(-fAngle, degrees);
		fY -= 3.0 * floatcos(-fAngle, degrees);

		SetPlayerPos(targetid, fX, fY, fZ);
		SetPlayerInterior(targetid, GetPlayerInterior(playerid));
		SetPlayerVirtualWorld(targetid, GetPlayerVirtualWorld(playerid));
	}
	return 1;
}

StopDragging(playerid)
{
	if (playerData[playerid][pDragged])
	{
	    playerData[playerid][pDragged] = 0;
		playerData[playerid][pDraggedBy] = INVALID_PLAYER_ID;
		KillTimer(playerData[playerid][pDragTimer]);
	}
	return 1;
}

SendPlayerToPlayer(playerid, targetid)
{
	new
	    Float:x,
	    Float:y,
	    Float:z;

	GetPlayerPos(targetid, x, y, z);

	if (IsPlayerInAnyVehicle(playerid))
	{
	    SetVehiclePos(GetPlayerVehicleID(playerid), x, y + 2, z);
		LinkVehicleToInterior(GetPlayerVehicleID(playerid), GetPlayerInterior(targetid));
	}
	else
		SetPlayerPos(playerid, x + 1, y, z);

	SetPlayerInterior(playerid, GetPlayerInterior(targetid));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(targetid));

	playerData[playerid][pEntrance] = playerData[targetid][pEntrance];
}

/*Tax_Percent(price)
{
	return floatround((float(price) / 100) * 95);
}*/

Tax_AddMoney(amount)
{
	g_TaxVault = g_TaxVault + amount;

	Server_Save();

	return 0;
}

/*Tax_AddPercent(price)
{
	new money = (price - Tax_Percent(price));

	g_TaxVault = g_TaxVault + money;

	Server_Save();
	return 1;
}*/

Server_Save()
{
	new
	    File:file = fopen("server.ini", io_write),
	    str[128];

	format(str, sizeof(str), "TaxMoney = %d\n", g_TaxVault);
	return (fwrite(file, str), fclose(file));
}

Server_Load()
{
	new File:file = fopen("server.ini", io_read);

	if (file)
	{
		g_TaxVault = file_parse_int(file, "TaxMoney");

		fclose(file);
	}
	return 1;
}

file_parse_int(File:handle, const field[])
{
	new
	    str[16];

	return (file_parse(handle, field, str), strval(str));
}

file_parse(File:handle, const field[], dest[], size = sizeof(dest))
{
	if (!handle)
	    return 0;

	new
	    str[128],
		pos = strlen(field);

	fseek(handle, 0, seek_start);

	while (fread(handle, str)) if (strfind(str, field, true) == 0 && (str[pos] == '=' || str[pos] == ' '))
	{
	    strmid(dest, str, (str[pos] == '=') ? (pos + 1) : (pos + 3), strlen(str), size);

		if ((pos = strfind(dest, "\r")) != -1)
			dest[pos] = '\0';
   		else if ((pos = strfind(dest, "\n")) != -1)
     		dest[pos] = '\0';

		return 1;
	}
	return 0;
}

randomEx(min, max)
{
    return random(max + 1 - min) + min;
}

IsPlayerInCityHall(playerid)
{
	new
		id = -1;

	if ((id = Entrance_Inside(playerid)) != -1 && entranceData[id][entranceType] == 4)
	    return 1;

	return 0;
}

IsPlayerInBank(playerid)
{
	new
		id = -1;

	if ((id = Entrance_Inside(playerid)) != -1 && entranceData[id][entranceType] == 2)
	    return 1;

	return 0;
}

/*AdminRank(playerid)
{
	new adminname[32];
	switch(playerData[playerid][pAdmin])
	{
	    case 1: adminname = "แอดมินคุมโปร";
	    case 2: adminname = "แอดมินคุมโปร";
	    case 3: adminname = "แอดมินคุมโปร";
	    case 4: adminname = "แอดมินระบบ";
	    case 5: adminname = "รองแอดมิน";
	    case 6: adminname = "แอดมินใหญ่";
	}
	return adminname;
}*/

IsPlayerSpawnedEx(playerid)
{
	if (playerid < 0 || playerid >= MAX_PLAYERS)
	    return 0;

	return (GetPlayerState(playerid) != PLAYER_STATE_SPECTATING && GetPlayerState(playerid) != PLAYER_STATE_NONE && GetPlayerState(playerid) != PLAYER_STATE_WASTED);
}

Arrest_Nearest(playerid)
{
    for (new i = 0; i != MAX_ARREST; i ++) if (arrestData[i][arrestExists] && IsPlayerInRangeOfPoint(playerid, 4.0, arrestData[i][arrestPosX], arrestData[i][arrestPosY], arrestData[i][arrestPosZ]))
	{
		if (GetPlayerInterior(playerid) == arrestData[i][arrestInterior] && GetPlayerVirtualWorld(playerid) == arrestData[i][arrestWorld])
			return i;
	}
	return -1;
}

Shop_Nearest(playerid)
{
    for (new i = 0; i != MAX_SHOPS; i ++) if (shopData[i][shopExists] && IsPlayerInRangeOfPoint(playerid, 4.0, shopData[i][shopPosX], shopData[i][shopPosY], shopData[i][shopPosZ]))
	{
		if (GetPlayerInterior(playerid) == shopData[i][shopInterior] && GetPlayerVirtualWorld(playerid) == shopData[i][shopWorld])
			return i;
	}
	return -1;
}

Pump_Nearest(playerid)
{
    for (new i = 0; i != MAX_PUMPS; i ++) if (pumpData[i][pumpExists] && IsPlayerInRangeOfPoint(playerid, 4.0, pumpData[i][pumpPosX], pumpData[i][pumpPosY], pumpData[i][pumpPosZ]))
	{
		return i;
	}
	return -1;
}

/*Garage_Nearest(playerid)
{
    for (new i = 0; i != MAX_GARAGES; i ++) if (garageData[i][garageExists] && IsPlayerInRangeOfPoint(playerid, 4.0, garageData[i][garagePosX], garageData[i][garagePosY], garageData[i][garagePosZ]))
	{
		return i;
	}
	return -1;
}*/

IsABike(vehicleid)
{
	switch (GetVehicleModel(vehicleid))
	{
		case 481, 509, 510: return 1;
	}
	return 0;
}

IsPlayerNearPlayer(playerid, targetid, Float:radius)
{
	static
		Float:fX,
		Float:fY,
		Float:fZ;

	GetPlayerPos(targetid, fX, fY, fZ);

	return (GetPlayerInterior(playerid) == GetPlayerInterior(targetid) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid)) && IsPlayerInRangeOfPoint(playerid, radius, fX, fY, fZ);
}

SetPlayerInPrison(playerid)
{
	SetPlayerPos(playerid, 2551.5144,-1294.0018,2048.2808);
	SetPlayerFacingAngle(playerid, 90.2407);

	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);

    TogglePlayerSpectating(playerid, false);

	SetCameraBehindPlayer(playerid);
}

SendNearbyMessage(playerid, Float:radius, color, const str[], {Float,_}:...)
{
	static
	    args,
	    start,
	    end,
	    string[144]
	;
	#emit LOAD.S.pri 8
	#emit STOR.pri args

	if (args > 16)
	{
		#emit ADDR.pri str
		#emit STOR.pri start

	    for (end = start + (args - 16); end > start; end -= 4)
		{
	        #emit LREF.pri end
	        #emit PUSH.pri
		}
		#emit PUSH.S str
		#emit PUSH.C 144
		#emit PUSH.C string

		#emit LOAD.S.pri 8
		#emit CONST.alt 4
		#emit SUB
		#emit PUSH.pri

		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

        foreach (new i : Player)
		{
			if (IsPlayerNearPlayer(i, playerid, radius))
			{
  				SendClientMessage(i, color, string);
			}
		}
		return 1;
	}
	foreach (new i : Player)
	{
		if (IsPlayerNearPlayer(i, playerid, radius))
		{
			SendClientMessage(i, color, str);
		}
	}
	return 1;
}

SendAdminMessage(color, const str[], {Float,_}:...)
{
	static
	    args,
	    start,
	    end,
	    string[144]
	;
	#emit LOAD.S.pri 8
	#emit STOR.pri args

	if (args > 8)
	{
		#emit ADDR.pri str
		#emit STOR.pri start

	    for (end = start + (args - 8); end > start; end -= 4)
		{
	        #emit LREF.pri end
	        #emit PUSH.pri
		}
		#emit PUSH.S str
		#emit PUSH.C 144
		#emit PUSH.C string

		#emit LOAD.S.pri 8
		#emit ADD.C 4
		#emit PUSH.pri

		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

        foreach (new i : Player)
		{
			if (playerData[i][pAdmin] >= 1)
			{
  				SendClientMessage(i, color, string);
			}
		}
		return 1;
	}
	foreach (new i : Player)
	{
		if (playerData[i][pAdmin] >= 1)
		{
			SendClientMessage(i, color, str);
		}
	}
	return 1;
}

SendFactionMessageEx(type, color, const str[], {Float,_}:...)
{
	static
	    args,
	    start,
	    end,
	    string[144]
	;
	#emit LOAD.S.pri 8
	#emit STOR.pri args

	if (args > 12)
	{
		#emit ADDR.pri str
		#emit STOR.pri start

	    for (end = start + (args - 12); end > start; end -= 4)
		{
	        #emit LREF.pri end
	        #emit PUSH.pri
		}
		#emit PUSH.S str
		#emit PUSH.C 144
		#emit PUSH.C string
		#emit PUSH.C args

		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

		foreach (new i : Player) if (playerData[i][pFaction] != -1 && GetFactionType(i) == type && !playerData[i][pDisableFaction])
		{
		    SendClientMessage(i, color, string);
		}
		return 1;
	}
	foreach (new i : Player) if (playerData[i][pFaction] != -1 && GetFactionType(i) == type && !playerData[i][pDisableFaction])
	{
 		SendClientMessage(i, color, str);
	}
	return 1;
}

SendFactionMessage(factionid, color, const str[], {Float,_}:...)
{
	static
	    args,
	    start,
	    end,
	    string[144]
	;
	#emit LOAD.S.pri 8
	#emit STOR.pri args

	if (args > 12)
	{
		#emit ADDR.pri str
		#emit STOR.pri start

	    for (end = start + (args - 12); end > start; end -= 4)
		{
	        #emit LREF.pri end
	        #emit PUSH.pri
		}
		#emit PUSH.S str
		#emit PUSH.C 144
		#emit PUSH.C string
		#emit PUSH.C args

		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

		foreach (new i : Player) if (playerData[i][pFaction] == factionid && !playerData[i][pDisableFaction])
		{
		    SendClientMessage(i, color, string);
		}
		return 1;
	}
	foreach (new i : Player) if (playerData[i][pFaction] == factionid && !playerData[i][pDisableFaction])
	{
 		SendClientMessage(i, color, str);
	}
	return 1;
}

IsNearFactionLocker(playerid)
{
	new factionid = playerData[playerid][pFaction];

	if (factionid == -1)
	    return 0;

	if (IsPlayerInRangeOfPoint(playerid, 3.0, factionData[factionid][factionLockerPosX], factionData[factionid][factionLockerPosY], factionData[factionid][factionLockerPosZ]) && GetPlayerInterior(playerid) == factionData[factionid][factionLockerInt] && GetPlayerVirtualWorld(playerid) == factionData[factionid][factionLockerWorld])
	    return 1;

	return 0;
}

GetFactionByID(sqlid)
{
	for (new i = 0; i != MAX_FACTIONS; i ++) if (factionData[i][factionExists] && factionData[i][factionID] == sqlid)
	    return i;

	return -1;
}

SetFaction(playerid, id)
{
	if (id != -1 && factionData[id][factionExists])
	{
		playerData[playerid][pFaction] = id;
		playerData[playerid][pFactionID] = factionData[id][factionID];
	}
	return 1;
}

RemoveAlpha(color)
{
    return (color & ~0xFF);
}

SetFactionColor(playerid)
{
	new factionid = playerData[playerid][pFaction];

	if (factionid != -1)
		return SetPlayerColor(playerid, RemoveAlpha(factionData[factionid][factionColor]));

	return 0;
}

Faction_Update(factionid)
{
	if (factionid != -1 || factionData[factionid][factionExists])
	{
	    foreach (new i : Player) if (playerData[i][pFaction] == factionid)
		{
 			if (GetFactionType(i) == FACTION_GANG || (GetFactionType(i) != FACTION_GANG && playerData[i][pOnDuty]))
			 	SetFactionColor(i);
		}
	}
	return 1;
}

Faction_Refresh(factionid)
{
	if (factionid != -1 && factionData[factionid][factionExists])
	{
	    if (factionData[factionid][factionLockerPosX] != 0.0 && factionData[factionid][factionLockerPosY] != 0.0 && factionData[factionid][factionLockerPosZ] != 0.0)
	    {
		    static
		        string[128];

			if (IsValidDynamicPickup(factionData[factionid][factionPickup]))
			    DestroyDynamicPickup(factionData[factionid][factionPickup]);

			if (IsValidDynamic3DTextLabel(factionData[factionid][factionText3D]))
			    DestroyDynamic3DTextLabel(factionData[factionid][factionText3D]);

			factionData[factionid][factionPickup] = CreateDynamicPickup(1239, 23, factionData[factionid][factionLockerPosX], factionData[factionid][factionLockerPosY], factionData[factionid][factionLockerPosZ], factionData[factionid][factionLockerWorld], factionData[factionid][factionLockerInt]);

			format(string, sizeof(string), "ตู้เซฟ: {FFFFFF}%s\n/flocker , /ตู้เซฟ : ในการใช้งาน", factionData[factionid][factionName]);
	  		factionData[factionid][factionText3D] = CreateDynamic3DTextLabel(string, COLOR_GREEN, factionData[factionid][factionLockerPosX], factionData[factionid][factionLockerPosY], factionData[factionid][factionLockerPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0, factionData[factionid][factionLockerWorld], factionData[factionid][factionLockerInt]);
		}
	}
	return 1;
}

Faction_Save(factionid)
{
	static
	    query[2048];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `factions` SET `factionName` = '%e', `factionColor` = '%d', `factionType` = '%d', `factionRanks` = '%d', `factionLockerX` = '%.4f', `factionLockerY` = '%.4f', `factionLockerZ` = '%.4f', `factionLockerInt` = '%d', `factionLockerWorld` = '%d', `SpawnX` = '%f', `SpawnY` = '%f', `SpawnZ` = '%f', `SpawnInterior` = '%d', `SpawnVW` = '%d', `factionEntrance` = '%d', `factionCannabis` = '%d', `factionCocain` = '%d', `factionPoon` = '%d', `factionRedMoney` = '%d'",
		factionData[factionid][factionName],
		factionData[factionid][factionColor],
		factionData[factionid][factionType],
		factionData[factionid][factionRanks],
		factionData[factionid][factionLockerPosX],
		factionData[factionid][factionLockerPosY],
		factionData[factionid][factionLockerPosZ],
		factionData[factionid][factionLockerInt],
		factionData[factionid][factionLockerWorld],

		factionData[factionid][SpawnX],
		factionData[factionid][SpawnY],
		factionData[factionid][SpawnZ],
		factionData[factionid][SpawnInterior],
		factionData[factionid][SpawnVW],
		factionData[factionid][factionEntrance],
		
		factionData[factionid][factionCannabis],
		factionData[factionid][factionCocain],
		factionData[factionid][factionPoon],
		factionData[factionid][factionRedMoney]
	);
	for (new i = 0; i < 10; i ++)
	{
	    if (i < 8)
			mysql_format(g_SQL, query, sizeof(query), "%s, `factionSkin%d` = '%d', `factionWeapon%d` = '%d', `factionAmmo%d` = '%d'", query, i + 1, factionData[factionid][factionSkins][i], i + 1, factionData[factionid][factionWeapons][i], i + 1, factionData[factionid][factionAmmo][i]);

		else
			mysql_format(g_SQL, query, sizeof(query), "%s, `factionWeapon%d` = '%d', `factionAmmo%d` = '%d'", query, i + 1, factionData[factionid][factionWeapons][i], i + 1, factionData[factionid][factionAmmo][i]);
	}
	mysql_format(g_SQL, query, sizeof(query), "%s WHERE `factionID` = '%d'",
		query,
		factionData[factionid][factionID]
	);
	return mysql_tquery(g_SQL, query);
}

Faction_SaveRanks(factionid)
{
	static
	    query[768];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `factions` SET `factionRank1` = '%e', `factionRank2` = '%e', `factionRank3` = '%e', `factionRank4` = '%e', `factionRank5` = '%e', `factionRank6` = '%e', `factionRank7` = '%e', `factionRank8` = '%e', `factionRank9` = '%e', `factionRank10` = '%e', `factionRank11` = '%e', `factionRank12` = '%e', `factionRank13` = '%e', `factionRank14` = '%e', `factionRank15` = '%e' WHERE `factionID` = '%d'",
	    FactionRanks[factionid][0],
	    FactionRanks[factionid][1],
	    FactionRanks[factionid][2],
	    FactionRanks[factionid][3],
	    FactionRanks[factionid][4],
	    FactionRanks[factionid][5],
	    FactionRanks[factionid][6],
	    FactionRanks[factionid][7],
	    FactionRanks[factionid][8],
	    FactionRanks[factionid][9],
	    FactionRanks[factionid][10],
	    FactionRanks[factionid][11],
	    FactionRanks[factionid][12],
	    FactionRanks[factionid][13],
	    FactionRanks[factionid][14],
	    factionData[factionid][factionID]
	);
	return mysql_tquery(g_SQL, query);
}

Faction_Delete(factionid)
{
	if (factionid != -1 && factionData[factionid][factionExists])
	{
	    new
	        string[64];

		mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `factions` WHERE `factionID` = '%d'", factionData[factionid][factionID]);
		mysql_tquery(g_SQL, string);

		mysql_format(g_SQL, string, sizeof(string), "UPDATE `players` SET `playerFaction` = '-1' WHERE `playerFaction` = '%d'", factionData[factionid][factionID]);
		mysql_tquery(g_SQL, string);

		foreach (new i : Player)
		{
			if (playerData[i][pFaction] == factionid)
			{
		    	playerData[i][pFaction] = -1;
		    	playerData[i][pFactionID] = -1;
		    	playerData[i][pFactionRank] = -1;
			}
			if (playerData[i][pFactionEdit] == factionid)
			{
			    playerData[i][pFactionEdit] = -1;
			}
		}
		if (IsValidDynamicPickup(factionData[factionid][factionPickup]))
  			DestroyDynamicPickup(factionData[factionid][factionPickup]);

		if (IsValidDynamic3DTextLabel(factionData[factionid][factionText3D]))
  			DestroyDynamic3DTextLabel(factionData[factionid][factionText3D]);

	    factionData[factionid][factionExists] = false;
	    factionData[factionid][factionType] = 0;
	    factionData[factionid][factionID] = 0;
	}
	return 1;
}

GetFactionType(playerid)
{
	if (playerData[playerid][pFaction] == -1)
	    return 0;

	return (factionData[playerData[playerid][pFaction]][factionType]);
}

stock IsACop(playerid) //แก้บัค /ca /cs
{
	if(IsPlayerConnected(playerid))
	{
	    new id = -1;

	    if((id = playerData[playerid][pFaction]) != -1 && factionData[id][factionType] == FACTION_POLICE)
		{
		    return 1;
		}
	}
	return 0;
}

Faction_ShowRanks(playerid, factionid)
{
    if (factionid != -1 && factionData[factionid][factionExists])
	{
		static
		    string[640];

		string[0] = 0;

		for (new i = 0; i < factionData[factionid][factionRanks]; i ++)
		    format(string, sizeof(string), "%sระดับ %d: ตำแหน่ง %s\n", string, i + 1, FactionRanks[factionid][i]);

		playerData[playerid][pFactionEdit] = factionid;
		Dialog_Show(playerid, DIALOG_EDITRANKS, DIALOG_STYLE_LIST, factionData[factionid][factionName], string, "เปลี่ยน", "ออก");
	}
	return 1;
}

Faction_Create(const name[], type)
{
	for (new i = 0; i != MAX_FACTIONS; i ++) if (!factionData[i][factionExists])
	{
	    format(factionData[i][factionName], 32, name);

        factionData[i][factionExists] = true;
        factionData[i][factionColor] = 0xFFFFFF00;
        factionData[i][factionType] = type;
        factionData[i][factionRanks] = 5;

        factionData[i][factionLockerPosX] = 0.0;
        factionData[i][factionLockerPosY] = 0.0;
        factionData[i][factionLockerPosZ] = 0.0;
        factionData[i][factionLockerInt] = 0;
        factionData[i][factionLockerWorld] = 0;

        for (new j = 0; j < 8; j ++)
		{
            factionData[i][factionSkins][j] = 0;
        }
        for (new j = 0; j < 10; j ++)
		{
            factionData[i][factionWeapons][j] = 0;
            factionData[i][factionAmmo][j] = 0;
	    }
	    for (new j = 0; j < 15; j ++)
		{
			format(FactionRanks[i][j], 32, "Rank %d", j + 1);
	    }
	    mysql_tquery(g_SQL, "INSERT INTO `factions` (`factionType`) VALUES(0)", "OnFactionCreated", "d", i);
	    return i;
	}
	return -1;
}

IsNumeric(const str[])
{
	for (new i = 0, l = strlen(str); i != l; i ++)
	{
	    if (i == 0 && str[0] == '-')
			continue;

	    else if (str[i] < '0' || str[i] > '9')
			return 0;
	}
	return 1;
}

GetVehicleModelByName(const name[])
{
	if (IsNumeric(name) && (strval(name) >= 400 && strval(name) <= 611))
	    return strval(name);

	for (new i = 0; i < sizeof(g_arrVehicleNames); i ++)
	{
	    if (strfind(g_arrVehicleNames[i], name, true) != -1)
	    {
	        return i + 400;
		}
	}
	return 0;
}

GetVehicleDriver(vehicleid)
{
	foreach (new i : Player)
	{
		if (GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return i;
	}
	return INVALID_PLAYER_ID;
}

forward RespawnAllVehicles(number);
public RespawnAllVehicles(number)
{
	switch(number)
	{
	    case 1:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 1 นาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 30000, false, "d", 2);
	    }
	    case 2:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 30 วินาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 25000, false, "d", 3);
	    }
	    case 3:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 5 วินาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 1000, false, "d", 4);
	    }
	    case 4:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 4 วินาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 1000, false, "d", 5);
	    }
	    case 5:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 3 วินาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 1000, false, "d", 6);
	    }
	    case 6:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 2 วินาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 1000, false, "d", 7);
	    }
	    case 7:
	    {
		    SendClientMessageToAll(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบจะทำการรียานพาหนะทั้งหมด ภายในอีก 1 วินาทีข้างหน้า {FF0080}~~~*");
		    SetTimerEx("RespawnAllVehicles", 1000, false, "d", 8);
	    }
	    case 8:
	    {
			new count;

			for (new i = 1; i != MAX_VEHICLES; i ++)
			{
			    if (IsValidVehicle(i) && GetVehicleDriver(i) == INVALID_PLAYER_ID)
			    {
			        SetVehicleToRespawn(i);
					count++;
				}
			}
		    SendClientMessageToAllEx(COLOR_ADMIN, "*~~~ {FFFFFF}ระบบได้ทำการรียานพาหนะกลับจุดเกิดทั้งหมด %d คัน ขออภัยในความไม่สะดวก {FF0080}~~~*", count);
		    SetTimerEx("RespawnAllVehicles", 60000*60, false, "d", 1); // 60000*60
	    }
	}
    return 1;
}

RemoveFromVehicle(playerid)
{
	if (IsPlayerInAnyVehicle(playerid))
	{
		static
		    Float:fX,
	    	Float:fY,
	    	Float:fZ;

		GetPlayerPos(playerid, fX, fY, fZ);
		SetPlayerPos(playerid, fX, fY, fZ + 1.5);
	}
	return 1;
}

forward PutInsideVehicle(playerid, vehicleid);
public PutInsideVehicle(playerid, vehicleid)
{
	if (!playerData[playerid][pDrivingTest])
	    return 0;

	RemoveFromVehicle(vehicleid);
    PutPlayerInVehicle(playerid, vehicleid, 0);
    return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if (GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED || GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CARRY || playerData[playerid][pInjured] == 1)
	{
	    ClearAnimations(playerid);
	    return 1;
	}
	if (!ispassenger)
	{
		if (NewbieCar[0] <= vehicleid <= NewbieCar[10])
		{
			if (playerData[playerid][pLevel] >= 3)
			{
				ClearAnimations(playerid);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะสำหรับเด็กใหม่ที่เวลต่ำกว่า 3 เท่านั้น!");
			}
			if (GetPlayerWantedLevelEx(playerid) > 0)
			{
				ClearAnimations(playerid);
				SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใช้จักรยานได้หากคุณมีคดีติดตัว!");
			}
			return 1;
		}
	    if(carData[vehicleid][carFaction] >= 0 && playerData[playerid][pFaction] != carData[vehicleid][carFaction])
	    {
	        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีกุญแจ");
	        ClearAnimations(playerid);
			return 1;
	    }
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    if (IsPlayerNPC(playerid))
	    return 1;

	old_vehicle[playerid] = vehicleid;
	old_veh_seat[playerid] = GetPlayerVehicleSeat(playerid);

    if (playerData[playerid][pDrivingTest])
	{
	    SetTimerEx("PutInsideVehicle", 500, false, "dd", playerid, vehicleid);
		Dialog_Show(playerid, DIALOG_LEAVETEST, DIALOG_STYLE_MSGBOX, "[ยืนยันการยกเลิกสอบ]", "{FFFFFF}คุณยืนยันที่จะออกจากการสอบใบขับขี่?", "ตกลง", "ยกเลิก");
	}
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(carData[vehicleid][carOwnerID] > 0 || carData[vehicleid][carFaction] >= 0)
	{
		new query[128];
	    carData[vehicleid][carColor1] = color1;
	    carData[vehicleid][carColor2] = color2;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carColor1 = %d, carColor2 = %d WHERE carID = %d", color1, color2, carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);
	}

	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(carData[vehicleid][carOwnerID] > 0 || carData[vehicleid][carFaction] >= 0)
	{
		new query[128];
	    carData[vehicleid][carPaintjob] = paintjobid;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPaintjob = %d WHERE carID = %d", paintjobid, carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);
	}

	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(!GetPlayerInterior(playerid) && playerData[playerid][pAdmin] < 2)
	{
	    SendClientMessageToAllEx(COLOR_LIGHTRED, "AdmCmd: %s ถูกแบนโดยแอดมิน SERVER_ANTICHEAT, สาเหตุ: Illegal modding", GetPlayerNameEx(playerid));
	    playerData[playerid][pBan] = 1;
		format(playerData[playerid][pBanReason], 32, "Illegal modding");
		DelayedKick(playerid);
	    return 0;
	}

	if(carData[vehicleid][carOwnerID] > 0 || carData[vehicleid][carFaction] >= 0)
	{
	    new slotid = GetVehicleComponentType(componentid);
		new query[128];

	    carData[vehicleid][carMods][slotid] = componentid;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carMod%d = %d WHERE carID = %d", slotid + 1, componentid, carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);
	}

	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	if(adminVehicle[vehicleid])
	{
	    DestroyVehicle(vehicleid);
	    adminVehicle[vehicleid] = false;
	}
	if(IsValidDynamicObject(vehicleSiren[vehicleid]))
	{
	    DestroyDynamicObject(vehicleSiren[vehicleid]);
	    vehicleSiren[vehicleid] = INVALID_OBJECT_ID;
	}
	new modelid = GetVehicleModel(vehicleid);
	if((carData[vehicleid][carID] > 0 && carData[vehicleid][carOwnerID] > 0) || (carData[vehicleid][carFaction] >= 0))
	{
	    ReloadVehicle(vehicleid);

	    if(carData[vehicleid][carFaction] >= 0)
	    {
		vehicleFuel[vehicleid] = vehicleData[modelid - 400][vFuel];
		}
	}
	else
	{
     	if(carData[vehicleid][carID] > 0 && carData[vehicleid][carHealth] > 300.0)
     	{
			if (carData[vehicleid][carHealth] < 350)
				SetVehicleHealth(vehicleid, 350);
			else
			    SetVehicleHealth(vehicleid, carData[vehicleid][carHealth]);
     	}

		vehicleFuel[vehicleid] = vehicleData[modelid - 400][vFuel];
	}

	vehicleStream[vehicleid][0] = 0;

	return 1;
}

GetSpawnedVehicles(playerid)
{
	new count;

    for(new i = 1; i < MAX_VEHICLES; i ++)
	{
	    if(IsValidVehicle(i) && IsVehicleOwner(playerid, i))
	    {
	        count++;
		}
	}

	return count;
}

GetNearbyVehicle(playerid)
{
	new Float:x, Float:y, Float:z;

	for(new i = 1; i < MAX_VEHICLES; i ++)
	{
	    if(IsValidVehicle(i) && IsVehicleStreamedIn(i, playerid))
	    {
	        GetVehiclePos(i, x, y, z);

	        if(IsPlayerInRangeOfPoint(playerid, 3.5, x, y, z))
	        {
	            return i;
			}
		}
	}

	return INVALID_VEHICLE_ID;
}

IsVehicleOccupied(vehicleid)
{
	foreach(new i : Player)
	{
	    if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
	    {
	        return 1;
		}
	}

	return 0;
}

IsVehicleOwner(playerid, vehicleid)
{
	return (carData[vehicleid][carOwnerID] == playerData[playerid][pID]) && (carData[vehicleid][carOwnerID] != 0);
}

SetVehicleNeon(vehicleid, modelid)
{
	if(18647 <= modelid <= 18652)
	{
	    if(carData[vehicleid][carNeonEnabled])
	    {
	        DestroyDynamicObject(carData[vehicleid][carObjects][0]);
			DestroyDynamicObject(carData[vehicleid][carObjects][1]);
	    }

		new query[128];

	    carData[vehicleid][carNeon] = modelid;
	    carData[vehicleid][carNeonEnabled] = (modelid > 0);

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carNeon = %d, carNeonEnabled = 1 WHERE carID = %d", carData[vehicleid][carNeon], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		ReloadVehicleNeon(vehicleid);
	}
}

ReloadVehicleNeon(vehicleid)
{
	if(carData[vehicleid][carID] > 0)
	{
	    DestroyDynamicObject(carData[vehicleid][carObjects][0]);
	    DestroyDynamicObject(carData[vehicleid][carObjects][1]);

	    if(carData[vehicleid][carNeon] && carData[vehicleid][carNeonEnabled])
	    {
	        new
				Float:x,
				Float:y,
				Float:z;

			GetVehicleModelInfo(carData[vehicleid][carModel], VEHICLE_MODEL_INFO_SIZE, x, y, z);

			carData[vehicleid][carObjects][0] = CreateDynamicObject(carData[vehicleid][carNeon], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
			carData[vehicleid][carObjects][1] = CreateDynamicObject(carData[vehicleid][carNeon], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);

			AttachDynamicObjectToVehicle(carData[vehicleid][carObjects][0], vehicleid, -x / 2.8, 0.0, -0.6, 0.0, 0.0, 0.0);
			AttachDynamicObjectToVehicle(carData[vehicleid][carObjects][1], vehicleid, x / 2.8, 0.0, -0.6, 0.0, 0.0, 0.0);
		}
	}
}

ResyncVehicle(vehicleid)
{
	new
		worldid = GetVehicleVirtualWorld(vehicleid);
	SetVehicleVirtualWorld(vehicleid, cellmax);
	SetVehicleVirtualWorld(vehicleid, worldid);
}

SaveVehicleModifications(vehicleid)
{
	for(new i = 0; i < 14; i ++)
	{
	    carData[vehicleid][carMods][i] = GetVehicleComponentInSlot(vehicleid, i);

		new query[128];

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carMod%d = %d WHERE carID = %d", i + 1, carData[vehicleid][carMods][i], carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);
	}
}

ReloadVehicle(vehicleid)
{
    if(carData[vehicleid][carPaintjob] >= 0)
    {
        ChangeVehiclePaintjob(vehicleid, carData[vehicleid][carPaintjob]);
    }
    if(carData[vehicleid][carNeon] && carData[vehicleid][carNeonEnabled])
	{
		ReloadVehicleNeon(vehicleid);
    }

	for(new i = 0; i < 14; i ++)
	{
	    if(carData[vehicleid][carMods][i] >= 1000)
	    {
	        AddVehicleComponent(vehicleid, carData[vehicleid][carMods][i]);
		}
	}

	if(strcmp(carData[vehicleid][carPlate], "None") != 0)
	{
	    SetVehicleNumberPlate(vehicleid, carData[vehicleid][carPlate]);
	    ResyncVehicle(vehicleid);
	}

    LinkVehicleToInterior(vehicleid, carData[vehicleid][carInterior]);
    SetVehicleVirtualWorld(vehicleid, carData[vehicleid][carWorld]);
	if (carData[vehicleid][carHealth] < 350)
		SetVehicleHealth(vehicleid, 350);
	else
	    SetVehicleHealth(vehicleid, carData[vehicleid][carHealth]);
    SetVehicleParams(vehicleid, VEHICLE_DOORS, carData[vehicleid][carLocked]);

    SetVehicleDamage(vehicleid);
	SetVehicleDamageStatus(vehicleid,carData[vehicleid][carDamage][0],carData[vehicleid][carDamage][1],carData[vehicleid][carDamage][2],carData[vehicleid][carDamage][3]);
}

public OnVehicleDeath(vehicleid, killerid)
{
	new query[256];
	
	if(carData[vehicleid][carOwnerID] > 0)
	{
		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carHealth = '300.0' WHERE carID = %d", carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		printf("%s", query);

		GetVehicleDamageStatus(vehicleid,carData[vehicleid][carDamage][0],carData[vehicleid][carDamage][1],carData[vehicleid][carDamage][2],carData[vehicleid][carDamage][3]);

  		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carDamage1 = %d, carDamage2 = '%d', carDamage3 = '%d', carDamage4 = '%d' WHERE carID = %d", carData[vehicleid][carDamage][0], carData[vehicleid][carDamage][1], carData[vehicleid][carDamage][2], carData[vehicleid][carDamage][3], carData[vehicleid][carID]);
 		mysql_tquery(g_SQL, query);

		printf("%s", query);

	    carData[vehicleid][carHealth] = 300.0;
	    
		DestroyVehicle(vehicleid);
		ResetVehicle(vehicleid);
	}
	else
	{
	    SetVehicleToRespawn(vehicleid);
	    RepairVehicle(vehicleid);
	}
	return 1;
}

DespawnVehicle(vehicleid, bool:save = true)
{
	if(carData[vehicleid][carID] > 0)
	{
	    if(carData[vehicleid][carNeonEnabled])
	    {
	        DestroyDynamicObject(carData[vehicleid][carObjects][0]);
	        DestroyDynamicObject(carData[vehicleid][carObjects][1]);
	    }
		if(save)
		{
		    new
				Float:health,
				query[128];

		    GetVehicleHealth(vehicleid, health);
		    SaveVehicleModifications(vehicleid);
		    SaveVehicleDamage(vehicleid);

		    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carFuel = %.2f, carHealth = '%f' WHERE carID = %d", vehicleFuel[vehicleid], health, carData[vehicleid][carID]);
	    	mysql_tquery(g_SQL, query);
	    }
	    
		DestroyVehicle(vehicleid);
		ResetVehicle(vehicleid);
	}
}

ResetVehicle(vehicleid)
{
	strcpy(carData[vehicleid][carPlate], "None", 32);

	if(carData[vehicleid][carTimer] >= 0)
	{
	    KillTimer(carData[vehicleid][carTimer]);
	}

    carData[vehicleid][carID] = 0;
	carData[vehicleid][carOwnerID] = 0;
	carData[vehicleid][carOwner] = 0;
	carData[vehicleid][carModel] = 0;
	carData[vehicleid][carPrice] = 0;
	carData[vehicleid][carTickets] = 0;
	carData[vehicleid][carLocked] = 0;
	carData[vehicleid][carHealth] = 1000.0;
	carData[vehicleid][carPosX] = 0.0;
	carData[vehicleid][carPosY] = 0.0;
	carData[vehicleid][carPosZ] = 0.0;
	carData[vehicleid][carPosA] = 0.0;
	carData[vehicleid][carColor1] = 0;
	carData[vehicleid][carColor2] = 0;
	carData[vehicleid][carPaintjob] = -1;
	carData[vehicleid][carInterior] = 0;
	carData[vehicleid][carWorld] = 0;
	carData[vehicleid][carCash] = 0;
    carData[vehicleid][carFaction] = -1;
	carData[vehicleid][carObjects][0] = INVALID_OBJECT_ID;
	carData[vehicleid][carObjects][1] = INVALID_OBJECT_ID;
	carData[vehicleid][carTimer] = -1;

	for(new i = 0; i < 14; i ++)
	{
	    carData[vehicleid][carMods][i] = 0;
	}
	
	carData[vehicleid][carPoon] = 0;
	carData[vehicleid][carCannabis] = 0;
	carData[vehicleid][carCocain] = 0;
	carData[vehicleid][carRedMoney] = 0;
}

GetVehicleStashCapacity(vehicleid, item)
{
	static const stashCapacities[][] = {
		// Cash   Mats    W     C    M    P   HP   PT   FMJ  W
	    {25000,   5000,   25,   25,  10,  5,  80,  60,  50,  3}, // level 1
	    {50000,   10000,  50,   50,  25,  10, 100, 80,  60,  4}, // level 2
	    {100000,  25000,  100,  75,  50,  20, 125, 100, 70,  5} // level 3
	};

	if(carData[vehicleid][carTrunk] > 0)
	{
		return stashCapacities[carData[vehicleid][carTrunk] - 1][item];
	}

	return 0;
}

forward DespawnTimer(vehicleid);
public DespawnTimer(vehicleid)
{
	if(carData[vehicleid][carOwnerID] > 0 && !IsVehicleOccupied(vehicleid))
	{
	    DespawnVehicle(vehicleid);
	}
	else
	{
	    // ANOTHER TEN MINUTES!
	    carData[vehicleid][carTimer] = SetTimerEx("DespawnTimer", 600000, false, "i", vehicleid);
	}
}

/*GetPlayerAssetLimit(playerid, type)
{
	switch(type)
	{
        case LIMIT_VEHICLES:
	    {
            switch(playerData[playerid][pVip])
			{
				case 0: return 5;
			    case 1: return 10;
			    case 2: return 15;
			    case 3: return 20;
			    case 4: return 20;
			}
		}
	}

	return 0;
}*/

forward OnPlayerAttemptBuyVehicle(playerid, index);
public OnPlayerAttemptBuyVehicle(playerid, index)
{
	new count;
	cache_get_value_index_int(0, 0, count);

	/*if(count >= GetPlayerAssetLimit(playerid, LIMIT_VEHICLES))
	{
	    SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถส่วนตัวของตัวละครคุณเต็มจำนวนแล้ว %d/%d ไม่สามารถซื้อเพิ่มได้อีก", count, GetPlayerAssetLimit(playerid, LIMIT_VEHICLES));
	}
	else
	{*/
	
	if(playerData[playerid][IsLoggedIn])
	{
		new string[20], query[1080];

		if(GetPlayerMoneyEx(playerid) < vehicleArray[index][carPrice])
		{
			SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อรถส่วนตัว (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(vehicleArray[index][carPrice]));
		}
		else if(GetSpawnedVehicles(playerid) >= MAX_SPAWNED_VEHICLES)
		{
			SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถส่วนตัวของคุณจอดครบ %d คันแล้ว กรุณาเก็บคันใดคันนึง", MAX_SPAWNED_VEHICLES);
		}
		else
		{
			switch(random(3))
			{
				case 0:
				{
					mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', %d, %d, %.1f, '562.3970', '-1283.8485', '17.0007', '0.0000')", playerData[playerid][pID], GetPlayerNameEx(playerid), vehicleArray[index][carModel], vehicleArray[index][carPrice], vehicleData[vehicleArray[index][carModel] - 400][vFuel]);
					mysql_tquery(g_SQL, query);
				}
				case 1:
				{
					mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', %d, %d, %.1f, '557.8670', '-1283.9822', '17.0007', '0.0000')", playerData[playerid][pID], GetPlayerNameEx(playerid), vehicleArray[index][carModel], vehicleArray[index][carPrice], vehicleData[vehicleArray[index][carModel] - 400][vFuel]);
					mysql_tquery(g_SQL, query);
				}
				case 2:
				{
					mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', %d, %d, %.1f, '552.8177', '-1284.1307', '17.0007', '0.0000')", playerData[playerid][pID], GetPlayerNameEx(playerid), vehicleArray[index][carModel], vehicleArray[index][carPrice], vehicleData[vehicleArray[index][carModel] - 400][vFuel]);
					mysql_tquery(g_SQL, query);
				}
			}

			GivePlayerMoneyEx(playerid, -vehicleArray[index][carPrice]);

			format(string, sizeof(string), "~r~-$%d", vehicleArray[index][carPrice]);
			GameTextForPlayer(playerid, string, 5000, 1);

			SendClientMessageEx(playerid, COLOR_GREEN, "คุณได้ซื้อรถรุ่น %s ในราคา %s สำเร็จ /car ในการเรียกรถออกมา", g_arrVehicleNames[vehicleArray[index][carModel] - 400], FormatMoney(vehicleArray[index][carPrice]));
		}
	}
}

forward OnPlayerSpawnVehicle(playerid, parked);
public OnPlayerSpawnVehicle(playerid, parked)
{
	static
	    rows;

	cache_get_row_count(rows);

	if(!rows)
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ขณะนี้ระบบมีปัญหา กรุณาติดต่อแอดมิน...");
	}
	else
	{
	    for(new i = 0; i < MAX_VEHICLES; i ++)
	    {
			new vid;
			cache_get_value_name_int(0, "carID", vid);
	        if(IsValidVehicle(i) && carData[i][carID] == vid)
	        {
	            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ถูกเรียกมาไว้อยู่แล้ว /จุดจอดรถ ในการค้นหาตำแหน่งปัจจุบัน");
	    	}
	    }

	    if(GetSpawnedVehicles(playerid) >= MAX_SPAWNED_VEHICLES)
	    {
	        return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถส่วนตัวของคุณจอดครบ %d คันแล้ว กรุณาเก็บคันใดคันนึง", MAX_SPAWNED_VEHICLES);
	    }

	    new modelid, Float:x, Float:y, Float:z, Float:a, color1, color2, vehicleid;

		cache_get_value_name_int(0, "carModel", modelid);
		cache_get_value_name_float(0, "carPosX", x);
		cache_get_value_name_float(0, "carPosY", y);
		cache_get_value_name_float(0, "carPosZ", z);
		cache_get_value_name_float(0, "carPosA", a);
		cache_get_value_name_int(0, "carColor1", color1);
		cache_get_value_name_int(0, "carColor2", color2);

		vehicleid = CreateVehicle(modelid, x, y, z, a, color1, color2, -1);

		if(vehicleid != INVALID_VEHICLE_ID)
		{
		    ResetVehicle(vehicleid);

		    cache_get_value_name(0, "carOwner", carData[vehicleid][carOwner], MAX_PLAYER_NAME);
		    cache_get_value_name(0, "carPlate", carData[vehicleid][carPlate], 32);

		    cache_get_value_name_int(0, "carID", carData[vehicleid][carID]);
		    cache_get_value_name_int(0, "carOwnerID", carData[vehicleid][carOwnerID]);
		    cache_get_value_name_int(0, "carPrice", carData[vehicleid][carPrice]);
		    cache_get_value_name_int(0, "carTickets", carData[vehicleid][carTickets]);
		    cache_get_value_name_int(0, "carLocked", carData[vehicleid][carLocked]);
		    cache_get_value_name_float(0, "carHealth", carData[vehicleid][carHealth]);
		    cache_get_value_name_int(0, "carPaintjob", carData[vehicleid][carPaintjob]);
		    cache_get_value_name_int(0, "carInterior", carData[vehicleid][carInterior]);
	        cache_get_value_name_int(0, "carWorld", carData[vehicleid][carWorld]);
	        cache_get_value_name_int(0, "carNeon", carData[vehicleid][carNeon]);
	        cache_get_value_name_int(0, "carNeonEnabled", carData[vehicleid][carNeonEnabled]);
	        cache_get_value_name_int(0, "carTrunk", carData[vehicleid][carTrunk]);
	        cache_get_value_name_int(0, "carMod1", carData[vehicleid][carMods][0]);
	        cache_get_value_name_int(0, "carMod2", carData[vehicleid][carMods][1]);
	        cache_get_value_name_int(0, "carMod3", carData[vehicleid][carMods][2]);
	        cache_get_value_name_int(0, "carMod4", carData[vehicleid][carMods][3]);
	        cache_get_value_name_int(0, "carMod5", carData[vehicleid][carMods][4]);
	        cache_get_value_name_int(0, "carMod6", carData[vehicleid][carMods][5]);
	        cache_get_value_name_int(0, "carMod7", carData[vehicleid][carMods][6]);
	        cache_get_value_name_int(0, "carMod8", carData[vehicleid][carMods][7]);
	        cache_get_value_name_int(0, "carMod9", carData[vehicleid][carMods][8]);
	        cache_get_value_name_int(0, "carMod10", carData[vehicleid][carMods][9]);
	        cache_get_value_name_int(0, "carMod11", carData[vehicleid][carMods][10]);
	        cache_get_value_name_int(0, "carMod12", carData[vehicleid][carMods][11]);
	        cache_get_value_name_int(0, "carMod13", carData[vehicleid][carMods][12]);
	        cache_get_value_name_int(0, "carMod14", carData[vehicleid][carMods][13]);
	        cache_get_value_name_int(0, "carCash", carData[vehicleid][carCash]);

			cache_get_value_name_int(0, "carDamage1", carData[vehicleid][carDamage][0]);
			cache_get_value_name_int(0, "carDamage2", carData[vehicleid][carDamage][1]);
			cache_get_value_name_int(0, "carDamage3", carData[vehicleid][carDamage][2]);
			cache_get_value_name_int(0, "carDamage4", carData[vehicleid][carDamage][3]);

			cache_get_value_name_int(0, "carPoon", carData[vehicleid][carPoon]);
			cache_get_value_name_int(0, "carCannabis", carData[vehicleid][carCannabis]);
			cache_get_value_name_int(0, "carCocain", carData[vehicleid][carCocain]);
			cache_get_value_name_int(0, "carRedMoney", carData[vehicleid][carRedMoney]);

	        carData[vehicleid][carFaction] = -1;
	        carData[vehicleid][carModel] = modelid;
		    carData[vehicleid][carPosX] = x;
		    carData[vehicleid][carPosY] = y;
		    carData[vehicleid][carPosZ] = z;
		    carData[vehicleid][carPosA] = a;
		    carData[vehicleid][carColor1] = color1;
		    carData[vehicleid][carColor2] = color2;
		    carData[vehicleid][carObjects][0] = INVALID_OBJECT_ID;
		    carData[vehicleid][carObjects][1] = INVALID_OBJECT_ID;
		    carData[vehicleid][carTimer] = -1;

			cache_get_value_name_float(0, "carFuel", vehicleFuel[vehicleid]);
			adminVehicle[vehicleid] = false;

			ReloadVehicle(vehicleid);

		    if(!parked)
			{
			    SendClientMessageEx(playerid, COLOR_PINK, "คุณได้เรียกรถรุ่น %s ออกมาแล้ว /จุดจอดรถ ในการค้นหาตำแหน่งปัจจุบัน", ReturnVehicleName(vehicleid));
			}
	    }
	}

	return 1;
}

Arrest_Delete(arrestid)
{
	if (arrestid != -1 && arrestData[arrestid][arrestExists])
	{
	    static
	        string[64];

        if (IsValidDynamicPickup(arrestData[arrestid][arrestPickup]))
		    DestroyDynamicPickup(arrestData[arrestid][arrestPickup]);

		if (IsValidDynamic3DTextLabel(arrestData[arrestid][arrestText3D]))
		    DestroyDynamic3DTextLabel(arrestData[arrestid][arrestText3D]);

		format(string, sizeof(string), "DELETE FROM `arrestpoints` WHERE `arrestID` = '%d'", arrestData[arrestid][arrestID]);
		mysql_tquery(g_SQL, string);

		arrestData[arrestid][arrestExists] = false;
		arrestData[arrestid][arrestID] = 0;
	}
	return 1;
}

Arrest_Create(Float:x, Float:y, Float:z, interior, world)
{
	for (new i = 0; i < MAX_ARREST; i ++) if (!arrestData[i][arrestExists])
	{
	    arrestData[i][arrestExists] = true;
	    arrestData[i][arrestPosX] = x;
	    arrestData[i][arrestPosY] = y;
	    arrestData[i][arrestPosZ] = z;
	    arrestData[i][arrestInterior] = interior;
	    arrestData[i][arrestWorld] = world;

	    mysql_tquery(g_SQL, "INSERT INTO `arrestpoints` (`arrestInterior`) VALUES(0)", "OnArrestCreated", "d", i);
		Arrest_Refresh(i);
		return i;
	}
	return -1;
}

Arrest_Save(arrestid)
{
	static
	    query[220];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `arrestpoints` SET `arrestX` = '%.4f', `arrestY` = '%.4f', `arrestZ` = '%.4f', `arrestInterior` = '%d', `arrestWorld` = '%d' WHERE `arrestID` = '%d'",
	    arrestData[arrestid][arrestPosX],
	    arrestData[arrestid][arrestPosY],
	    arrestData[arrestid][arrestPosZ],
	    arrestData[arrestid][arrestInterior],
	    arrestData[arrestid][arrestWorld],
	    arrestData[arrestid][arrestID]
	);
	return mysql_tquery(g_SQL, query);
}

Arrest_Refresh(arrestid)
{
	if (arrestid != -1 && arrestData[arrestid][arrestExists])
	{
		if (IsValidDynamicPickup(arrestData[arrestid][arrestPickup]))
		    DestroyDynamicPickup(arrestData[arrestid][arrestPickup]);

		if (IsValidDynamic3DTextLabel(arrestData[arrestid][arrestText3D]))
		    DestroyDynamic3DTextLabel(arrestData[arrestid][arrestText3D]);

		arrestData[arrestid][arrestPickup] = CreateDynamicPickup(1247, 23, arrestData[arrestid][arrestPosX], arrestData[arrestid][arrestPosY], arrestData[arrestid][arrestPosZ], arrestData[arrestid][arrestWorld], arrestData[arrestid][arrestInterior]);
  		arrestData[arrestid][arrestText3D] = CreateDynamic3DTextLabel("เรือนจำ: {FFFFFF}/arrest\nในการส่งผู้ร้ายเข้าห้องขัง", COLOR_GREEN, arrestData[arrestid][arrestPosX], arrestData[arrestid][arrestPosY], arrestData[arrestid][arrestPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0, arrestData[arrestid][arrestWorld], arrestData[arrestid][arrestInterior]);
	}
	return 1;
}

GPS_Delete(gpsid)
{
	if (gpsid != -1 && gpsData[gpsid][gpsExists])
	{
	    static
	        string[64];

		format(string, sizeof(string), "DELETE FROM `gps` WHERE `gpsID` = '%d'", gpsData[gpsid][gpsID]);
		mysql_tquery(g_SQL, string);

		gpsData[gpsid][gpsExists] = false;
		gpsData[gpsid][gpsID] = 0;
	}
	return 1;
}

GPS_Create(type, const gpsname[], Float:x, Float:y, Float:z)
{
	for (new i = 0; i < MAX_GPS; i ++) if (!gpsData[i][gpsExists])
	{
	    gpsData[i][gpsExists] = true;
	    format(gpsData[i][gpsName], 32, gpsname);
	    gpsData[i][gpsPosX] = x;
	    gpsData[i][gpsPosY] = y;
	    gpsData[i][gpsPosZ] = z;
	    gpsData[i][gpsType] = type;

	    mysql_tquery(g_SQL, "INSERT INTO `gps` (`gpsID`) VALUES(0)", "OnGPSCreated", "d", i);
		return i;
	}
	return -1;
}

GPS_Save(gpsid)
{
	static
	    query[220];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `gps` SET `gpsName` = '%e', `gpsX` = '%.4f', `gpsY` = '%.4f', `gpsZ` = '%.4f', `gpsType` = '%d' WHERE `gpsID` = '%d'",
		gpsData[gpsid][gpsName],
		gpsData[gpsid][gpsPosX],
	    gpsData[gpsid][gpsPosY],
	    gpsData[gpsid][gpsPosZ],
	    gpsData[gpsid][gpsType],
	    gpsData[gpsid][gpsID]
	);
	return mysql_tquery(g_SQL, query);
}

ATM_Delete(atmid)
{
	if (atmid != -1 && atmData[atmid][atmExists])
	{
	    new
	        string[64];

		mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `atm` WHERE `atmID` = '%d'", atmData[atmid][atmID]);
		mysql_tquery(g_SQL, string);

        if (IsValidDynamicObject(atmData[atmid][atmObject]))
	        DestroyDynamicObject(atmData[atmid][atmObject]);

	    if (IsValidDynamic3DTextLabel(atmData[atmid][atmText3D]))
	        DestroyDynamic3DTextLabel(atmData[atmid][atmText3D]);

	    atmData[atmid][atmExists] = false;
	    atmData[atmid][atmID] = 0;
	}
	return 1;
}

ATM_Nearest(playerid)
{
    for (new i = 0; i != MAX_ATM_MACHINES; i ++) if (atmData[i][atmExists] && IsPlayerInRangeOfPoint(playerid, 2.5, atmData[i][atmPosX], atmData[i][atmPosY], atmData[i][atmPosZ]))
	{
		if (GetPlayerInterior(playerid) == atmData[i][atmInterior] && GetPlayerVirtualWorld(playerid) == atmData[i][atmWorld])
			return i;
	}
	return -1;
}

ATM_Create(playerid)
{
    new
	    Float:x,
	    Float:y,
	    Float:z,
	    Float:angle;

	if (GetPlayerPos(playerid, x, y, z) && GetPlayerFacingAngle(playerid, angle))
	{
		for (new i = 0; i < MAX_ATM_MACHINES; i ++) if (!atmData[i][atmExists])
		{
		    atmData[i][atmExists] = true;

		    x += 1.0 * floatsin(-angle, degrees);
			y += 1.0 * floatcos(-angle, degrees);

            atmData[i][atmPosX] = x;
            atmData[i][atmPosY] = y;
            atmData[i][atmPosZ] = z;
            atmData[i][atmPosA] = angle;

            atmData[i][atmInterior] = GetPlayerInterior(playerid);
            atmData[i][atmWorld] = GetPlayerVirtualWorld(playerid);

			ATM_Refresh(i);
			mysql_tquery(g_SQL, "INSERT INTO `atm` (`atmInterior`) VALUES(0)", "OnATMCreated", "d", i);

			return i;
		}
	}
	return -1;
}

ATM_Refresh(atmid)
{
	if (atmid != -1 && atmData[atmid][atmExists])
	{
	    if (IsValidDynamicObject(atmData[atmid][atmObject]))
	        DestroyDynamicObject(atmData[atmid][atmObject]);

	    if (IsValidDynamic3DTextLabel(atmData[atmid][atmText3D]))
	        DestroyDynamic3DTextLabel(atmData[atmid][atmText3D]);

		atmData[atmid][atmObject] = CreateDynamicObject(2942, atmData[atmid][atmPosX], atmData[atmid][atmPosY], atmData[atmid][atmPosZ] - 0.4, 0.0, 0.0, atmData[atmid][atmPosA], atmData[atmid][atmWorld], atmData[atmid][atmInterior]);
        atmData[atmid][atmText3D] = CreateDynamic3DTextLabel("ตู้ ATM: {FFFFFF}/atm\nในการใช้งาน", COLOR_GREEN, atmData[atmid][atmPosX], atmData[atmid][atmPosY], atmData[atmid][atmPosZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, atmData[atmid][atmWorld], atmData[atmid][atmInterior]);

		return 1;
	}
	return 0;
}

ATM_Save(atmid)
{
	new
	    query[200];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `atm` SET `atmX` = '%.4f', `atmY` = '%.4f', `atmZ` = '%.4f', `atmA` = '%.4f', `atmInterior` = '%d', `atmWorld` = '%d' WHERE `atmID` = '%d'",
	    atmData[atmid][atmPosX],
	    atmData[atmid][atmPosY],
	    atmData[atmid][atmPosZ],
	    atmData[atmid][atmPosA],
	    atmData[atmid][atmInterior],
	    atmData[atmid][atmWorld],
	    atmData[atmid][atmID]
	);
	return mysql_tquery(g_SQL, query);
}

Shop_Delete(shopid)
{
	if (shopid != -1 && shopData[shopid][shopExists])
	{
	    static
	        string[64];

        if (IsValidDynamicPickup(shopData[shopid][shopPickup]))
		    DestroyDynamicPickup(shopData[shopid][shopPickup]);

		if (IsValidDynamic3DTextLabel(shopData[shopid][shopText3D]))
		    DestroyDynamic3DTextLabel(shopData[shopid][shopText3D]);

		mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `shops` WHERE `shopID` = '%d'", shopData[shopid][shopID]);
		mysql_tquery(g_SQL, string);

		shopData[shopid][shopExists] = false;
		shopData[shopid][shopID] = 0;
	}
	return 1;
}

Shop_Create(Float:x, Float:y, Float:z, interior, world, type)
{
	for (new i = 0; i < MAX_SHOPS; i ++) if (!shopData[i][shopExists])
	{
	    shopData[i][shopExists] = true;
	    shopData[i][shopPosX] = x;
	    shopData[i][shopPosY] = y;
	    shopData[i][shopPosZ] = z;
	    shopData[i][shopInterior] = interior;
	    shopData[i][shopWorld] = world;
		shopData[i][shopType] = type;

	    mysql_tquery(g_SQL, "INSERT INTO `shops` (`shopInterior`) VALUES(0)", "OnShopCreated", "d", i);
		Shop_Refresh(i);
		return i;
	}
	return -1;
}

Shop_Save(shopid)
{
	static
	    query[280];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `shops` SET `shopX` = '%.4f', `shopY` = '%.4f', `shopZ` = '%.4f', `shopInterior` = '%d', `shopWorld` = '%d' , `shopType` = '%d' WHERE `shopID` = '%d'",
	    shopData[shopid][shopPosX],
	    shopData[shopid][shopPosY],
	    shopData[shopid][shopPosZ],
	    shopData[shopid][shopInterior],
	    shopData[shopid][shopWorld],
		shopData[shopid][shopType],
	    shopData[shopid][shopID]
	);
	return mysql_tquery(g_SQL, query);
}

Shop_Refresh(shopid)
{
	if (shopid != -1 && shopData[shopid][shopExists])
	{
		if (IsValidDynamicPickup(shopData[shopid][shopPickup]))
		    DestroyDynamicPickup(shopData[shopid][shopPickup]);

		if (IsValidDynamic3DTextLabel(shopData[shopid][shopText3D]))
		    DestroyDynamic3DTextLabel(shopData[shopid][shopText3D]);

		shopData[shopid][shopPickup] = CreateDynamicPickup(1239, 23, shopData[shopid][shopPosX], shopData[shopid][shopPosY], shopData[shopid][shopPosZ], shopData[shopid][shopWorld], shopData[shopid][shopInterior]);
  		shopData[shopid][shopText3D] = CreateDynamic3DTextLabel("ร้านค้า: {FFFFFF}/buy\nในการซื้อสินค้า", COLOR_GREEN, shopData[shopid][shopPosX], shopData[shopid][shopPosY], shopData[shopid][shopPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0, shopData[shopid][shopWorld], shopData[shopid][shopInterior]);
	}
	return 1;
}

Pump_Delete(pumpid)
{
	if (pumpid != -1 && pumpData[pumpid][pumpExists])
	{
	    static
	        string[64];

        if (IsValidDynamicPickup(pumpData[pumpid][pumpPickup]))
		    DestroyDynamicPickup(pumpData[pumpid][pumpPickup]);

		if (IsValidDynamic3DTextLabel(pumpData[pumpid][pumpText3D]))
		    DestroyDynamic3DTextLabel(pumpData[pumpid][pumpText3D]);

		mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `pumps` WHERE `pumpID` = '%d'", pumpData[pumpid][pumpID]);
		mysql_tquery(g_SQL, string);

		pumpData[pumpid][pumpExists] = false;
		pumpData[pumpid][pumpID] = 0;
	}
	return 1;
}

Pump_Create(Float:x, Float:y, Float:z)
{
	for (new i = 0; i < MAX_PUMPS; i ++) if (!pumpData[i][pumpExists])
	{
	    pumpData[i][pumpExists] = true;
	    pumpData[i][pumpPosX] = x;
	    pumpData[i][pumpPosY] = y;
	    pumpData[i][pumpPosZ] = z;

	    mysql_tquery(g_SQL, "INSERT INTO `pumps` (`pumpID`) VALUES(0)", "OnPumpCreated", "d", i);
		Pump_Refresh(i);
		return i;
	}
	return -1;
}

Pump_Save(pumpid)
{
	static
	    query[220];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `pumps` SET `pumpX` = '%.4f', `pumpY` = '%.4f', `pumpZ` = '%.4f' WHERE `pumpID` = '%d'",
	    pumpData[pumpid][pumpPosX],
	    pumpData[pumpid][pumpPosY],
	    pumpData[pumpid][pumpPosZ],
	    pumpData[pumpid][pumpID]
	);
	return mysql_tquery(g_SQL, query);
}

Pump_Refresh(pumpid)
{
	if (pumpid != -1 && pumpData[pumpid][pumpExists])
	{
		if (IsValidDynamicPickup(pumpData[pumpid][pumpPickup]))
		    DestroyDynamicPickup(pumpData[pumpid][pumpPickup]);

		if (IsValidDynamic3DTextLabel(pumpData[pumpid][pumpText3D]))
		    DestroyDynamic3DTextLabel(pumpData[pumpid][pumpText3D]);

		pumpData[pumpid][pumpPickup] = CreateDynamicPickup(1650, 23, pumpData[pumpid][pumpPosX], pumpData[pumpid][pumpPosY], pumpData[pumpid][pumpPosZ]);
  		pumpData[pumpid][pumpText3D] = CreateDynamic3DTextLabel("ปั้มน้ำมัน: {FFFFFF}/refill\nในการเติมน้ำมัน\nลิตรละ {FF6347}$50", COLOR_GREEN, pumpData[pumpid][pumpPosX], pumpData[pumpid][pumpPosY], pumpData[pumpid][pumpPosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0);
	}
	return 1;
}

Garage_Delete(garageid)
{
	if (garageid != -1 && garageData[garageid][garageExists])
	{
	    static
	        string[64];

        if (IsValidDynamicPickup(garageData[garageid][garagePickup]))
		    DestroyDynamicPickup(garageData[garageid][garagePickup]);

		if (IsValidDynamic3DTextLabel(garageData[garageid][garageText3D]))
		    DestroyDynamic3DTextLabel(garageData[garageid][garageText3D]);

		mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `garages` WHERE `garageID` = '%d'", garageData[garageid][garageID]);
		mysql_tquery(g_SQL, string);

		garageData[garageid][garageExists] = false;
		garageData[garageid][garageID] = 0;
	}
	return 1;
}

Garage_Create(Float:x, Float:y, Float:z)
{
	for (new i = 0; i < MAX_GARAGES; i ++) if (!garageData[i][garageExists])
	{
	    garageData[i][garageExists] = true;
	    garageData[i][garagePosX] = x;
	    garageData[i][garagePosY] = y;
	    garageData[i][garagePosZ] = z;

	    mysql_tquery(g_SQL, "INSERT INTO `garages` (`garageID`) VALUES(0)", "OnGarageCreated", "d", i);
		Garage_Refresh(i);
		return i;
	}
	return -1;
}

Garage_Save(garageid)
{
	static
	    query[220];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `garages` SET `garageX` = '%.4f', `garageY` = '%.4f', `garageZ` = '%.4f' WHERE `garageID` = '%d'",
	    garageData[garageid][garagePosX],
	    garageData[garageid][garagePosY],
	    garageData[garageid][garagePosZ],
	    garageData[garageid][garageID]
	);
	return mysql_tquery(g_SQL, query);
}

Garage_Refresh(garageid)
{
	if (garageid != -1 && garageData[garageid][garageExists])
	{
		if (IsValidDynamicPickup(garageData[garageid][garagePickup]))
		    DestroyDynamicPickup(garageData[garageid][garagePickup]);

		if (IsValidDynamic3DTextLabel(garageData[garageid][garageText3D]))
		    DestroyDynamic3DTextLabel(garageData[garageid][garageText3D]);

		garageData[garageid][garagePickup] = CreateDynamicPickup(1083, 23, garageData[garageid][garagePosX], garageData[garageid][garagePosY], garageData[garageid][garagePosZ]);
  		garageData[garageid][garageText3D] = CreateDynamic3DTextLabel("อู่ซ่อมรถ: {FFFFFF}/repair\nในการใช้งาน", COLOR_GREEN, garageData[garageid][garagePosX], garageData[garageid][garagePosY], garageData[garageid][garagePosZ], 5.0, INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 0);
	}
	return 1;
}

forward Entrance_Load();
public Entrance_Load()
{
    static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_ENTRANCES)
	{
	    entranceData[i][entranceExists] = true;
    	cache_get_value_name_int(i, "entranceID", entranceData[i][entranceID]);

		cache_get_value_name(i, "entranceName", entranceData[i][entranceName], 32);
		cache_get_value_name_int(i, "entrancePass", entranceData[i][entrancePass]);

	    cache_get_value_name_int(i, "entranceIcon", entranceData[i][entranceIcon]);
	    cache_get_value_name_int(i, "entranceLocked", entranceData[i][entranceLocked]);
	    cache_get_value_name_float(i, "entrancePosX", entranceData[i][entrancePosX]);
	    cache_get_value_name_float(i, "entrancePosY", entranceData[i][entrancePosY]);
	    cache_get_value_name_float(i, "entrancePosZ", entranceData[i][entrancePosZ]);
	    cache_get_value_name_float(i, "entrancePosA", entranceData[i][entrancePosA]);
	    cache_get_value_name_float(i, "entranceIntX", entranceData[i][entranceIntX]);
	    cache_get_value_name_float(i, "entranceIntY", entranceData[i][entranceIntY]);
	    cache_get_value_name_float(i, "entranceIntZ", entranceData[i][entranceIntZ]);
	    cache_get_value_name_float(i, "entranceIntA", entranceData[i][entranceIntA]);
	    cache_get_value_name_int(i, "entranceInterior", entranceData[i][entranceInterior]);
	    cache_get_value_name_int(i, "entranceExterior", entranceData[i][entranceExterior]);
	    cache_get_value_name_int(i, "entranceExteriorVW", entranceData[i][entranceExteriorVW]);
	    cache_get_value_name_int(i, "entranceType", entranceData[i][entranceType]);
	    cache_get_value_name_int(i, "entranceWorld", entranceData[i][entranceWorld]);
	    cache_get_value_name_int(i, "entranceFaction", entranceData[i][entranceFaction]);

	    Entrance_Refresh(i);
	}
	printf("[SERVER]: %d Entrance were loaded from \"%s\" database...", rows, MYSQL_DATABASE);
	return 1;
}

Entrance_Delete(entranceid)
{
	if (entranceid != -1 && entranceData[entranceid][entranceExists])
	{
	    new
	        string[64];

		format(string, sizeof(string), "DELETE FROM `entrances` WHERE `entranceID` = '%d'", entranceData[entranceid][entranceID]);
		mysql_tquery(g_SQL, string);

        if (IsValidDynamic3DTextLabel(entranceData[entranceid][entranceText3D]))
		    DestroyDynamic3DTextLabel(entranceData[entranceid][entranceText3D]);

		if (IsValidDynamicPickup(entranceData[entranceid][entrancePickup]))
		    DestroyDynamicPickup(entranceData[entranceid][entrancePickup]);

		if (IsValidDynamicMapIcon(entranceData[entranceid][entranceMapIcon]))
		    DestroyDynamicMapIcon(entranceData[entranceid][entranceMapIcon]);

		if (IsValidDynamicPickup(entranceData[entranceid][entranceExPickup]))
		    DestroyDynamicPickup(entranceData[entranceid][entranceExPickup]);

        if (IsValidDynamic3DTextLabel(entranceData[entranceid][entranceExText3D]))
        	DestroyDynamic3DTextLabel(entranceData[entranceid][entranceExText3D]);

	    entranceData[entranceid][entranceExists] = false;
	    entranceData[entranceid][entranceID] = 0;
	}
	return 1;
}

Entrance_Save(entranceid)
{
	static
	    query[1024];

	mysql_format(g_SQL, query, sizeof(query), "UPDATE `entrances` SET `entranceName` = '%e', `entrancePass` = '%d', `entranceIcon` = '%d', `entranceLocked` = '%d', `entrancePosX` = '%.4f', `entrancePosY` = '%.4f', `entrancePosZ` = '%.4f', `entrancePosA` = '%.4f', `entranceIntX` = '%.4f', `entranceIntY` = '%.4f', `entranceIntZ` = '%.4f', `entranceIntA` = '%.4f', `entranceInterior` = '%d', `entranceExterior` = '%d', `entranceExteriorVW` = '%d', `entranceType` = '%d'",
	    entranceData[entranceid][entranceName],
	    entranceData[entranceid][entrancePass],
	    entranceData[entranceid][entranceIcon],
	    entranceData[entranceid][entranceLocked],
	    entranceData[entranceid][entrancePosX],
	    entranceData[entranceid][entrancePosY],
	    entranceData[entranceid][entrancePosZ],
	    entranceData[entranceid][entrancePosA],
	    entranceData[entranceid][entranceIntX],
	    entranceData[entranceid][entranceIntY],
	    entranceData[entranceid][entranceIntZ],
	    entranceData[entranceid][entranceIntA],
	    entranceData[entranceid][entranceInterior],
	    entranceData[entranceid][entranceExterior],
	    entranceData[entranceid][entranceExteriorVW],
	    entranceData[entranceid][entranceType]
	);
	mysql_format(g_SQL, query, sizeof(query), "%s, `entranceWorld` = '%d', `entranceFaction` = '%d' WHERE `entranceID` = '%d'",
	    query,
	    entranceData[entranceid][entranceWorld],
	    entranceData[entranceid][entranceFaction],
	    entranceData[entranceid][entranceID]
	);
	return mysql_tquery(g_SQL, query);
}

Entrance_Inside(playerid)
{
	if (playerData[playerid][pEntrance] != -1)
	{
	    for (new i = 0; i != MAX_ENTRANCES; i ++) if (entranceData[i][entranceExists] && entranceData[i][entranceID] == playerData[playerid][pEntrance] && GetPlayerInterior(playerid) == entranceData[i][entranceInterior] && GetPlayerVirtualWorld(playerid) == entranceData[i][entranceWorld])
	        return i;
	}
	return -1;
}

Entrance_GetLink(playerid)
{
	if (GetPlayerVirtualWorld(playerid) > 0)
	{
	    for (new i = 0; i != MAX_ENTRANCES; i ++) if (entranceData[i][entranceExists] && entranceData[i][entranceID] == GetPlayerVirtualWorld(playerid) - 7000)
			return entranceData[i][entranceID];
	}
	return -1;
}

Entrance_Nearest(playerid)
{
    for (new i = 0; i != MAX_ENTRANCES; i ++) if (entranceData[i][entranceExists] && IsPlayerInRangeOfPoint(playerid, 2.5, entranceData[i][entrancePosX], entranceData[i][entrancePosY], entranceData[i][entrancePosZ]))
	{
		if (GetPlayerInterior(playerid) == entranceData[i][entranceExterior] && GetPlayerVirtualWorld(playerid) == entranceData[i][entranceExteriorVW])
			return i;
	}
	return -1;
}

Entrance_Refresh(entranceid)
{
	new string[128];
	if (entranceid != -1 && entranceData[entranceid][entranceExists])
	{
		if (IsValidDynamic3DTextLabel(entranceData[entranceid][entranceText3D]))
		    DestroyDynamic3DTextLabel(entranceData[entranceid][entranceText3D]);

		if (IsValidDynamicPickup(entranceData[entranceid][entrancePickup]))
		    DestroyDynamicPickup(entranceData[entranceid][entrancePickup]);

		if (IsValidDynamicMapIcon(entranceData[entranceid][entranceMapIcon]))
		    DestroyDynamicMapIcon(entranceData[entranceid][entranceMapIcon]);

        if (IsValidDynamicPickup(entranceData[entranceid][entranceExPickup]))
        	DestroyDynamicPickup(entranceData[entranceid][entranceExPickup]);

        if (IsValidDynamic3DTextLabel(entranceData[entranceid][entranceExText3D]))
        	DestroyDynamic3DTextLabel(entranceData[entranceid][entranceExText3D]);

        format(string, sizeof(string), "ทางเข้า: {FFFFFF}%s\nกดปุ่ม {FFFF00}H {FFFFFF}ในการเข้าออกสถานที่", entranceData[entranceid][entranceName]);
		entranceData[entranceid][entranceText3D] = CreateDynamic3DTextLabel(string, COLOR_GREEN, entranceData[entranceid][entrancePosX], entranceData[entranceid][entrancePosY], entranceData[entranceid][entrancePosZ], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, entranceData[entranceid][entranceExteriorVW], entranceData[entranceid][entranceExterior]);
        entranceData[entranceid][entrancePickup] = CreateDynamicPickup(1318, 23, entranceData[entranceid][entrancePosX], entranceData[entranceid][entrancePosY], entranceData[entranceid][entrancePosZ], entranceData[entranceid][entranceExteriorVW], entranceData[entranceid][entranceExterior]);

		format(string, sizeof(string), "ทางออก: {FFFFFF}%s\nกดปุ่ม {FFFF00}H {FFFFFF}ในการเข้าออกสถานที่", entranceData[entranceid][entranceName]);
        entranceData[entranceid][entranceExText3D] = CreateDynamic3DTextLabel(string, COLOR_GREEN, entranceData[entranceid][entranceIntX], entranceData[entranceid][entranceIntY], entranceData[entranceid][entranceIntZ], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, entranceData[entranceid][entranceWorld], entranceData[entranceid][entranceInterior]);
		entranceData[entranceid][entranceExPickup] = CreateDynamicPickup(1318, 23, entranceData[entranceid][entranceIntX], entranceData[entranceid][entranceIntY], entranceData[entranceid][entranceIntZ], entranceData[entranceid][entranceWorld], entranceData[entranceid][entranceInterior]);

		if (entranceData[entranceid][entranceIcon] != 0)
			entranceData[entranceid][entranceMapIcon] = CreateDynamicMapIcon(entranceData[entranceid][entrancePosX], entranceData[entranceid][entrancePosY], entranceData[entranceid][entrancePosZ], entranceData[entranceid][entranceIcon], 0, entranceData[entranceid][entranceExteriorVW], entranceData[entranceid][entranceExterior]);
	}
	return 1;
}

Entrance_Create(playerid, const name[])
{
	static
	    Float:x,
	    Float:y,
	    Float:z,
	    Float:angle;

    if (GetPlayerPos(playerid, x, y, z) && GetPlayerFacingAngle(playerid, angle))
	{
		for (new i = 0; i != MAX_ENTRANCES; i ++)
		{
	    	if (!entranceData[i][entranceExists])
		    {
    	        entranceData[i][entranceExists] = true;
        	    entranceData[i][entranceIcon] = 0;
        	    entranceData[i][entranceType] = 0;
        	    entranceData[i][entranceLocked] = 0;

				format(entranceData[i][entranceName], 32, name);
				entranceData[i][entrancePass] = 0;

    	        entranceData[i][entrancePosX] = x;
    	        entranceData[i][entrancePosY] = y;
    	        entranceData[i][entrancePosZ] = z;
    	        entranceData[i][entrancePosA] = angle;

                entranceData[i][entranceIntX] = x;
                entranceData[i][entranceIntY] = y;
                entranceData[i][entranceIntZ] = z + 10000;
                entranceData[i][entranceIntA] = 0.0000;

				entranceData[i][entranceInterior] = 0;
				entranceData[i][entranceExterior] = GetPlayerInterior(playerid);
				entranceData[i][entranceExteriorVW] = GetPlayerVirtualWorld(playerid);
				entranceData[i][entranceFaction] = -1;

				Entrance_Refresh(i);
				mysql_tquery(g_SQL, "INSERT INTO `entrances` (`entranceType`) VALUES(0)", "OnEntranceCreated", "d", i);
				return i;
			}
		}
	}
	return -1;
}

forward OnEntranceCreated(entranceid);
public OnEntranceCreated(entranceid)
{
	if (entranceid == -1 || !entranceData[entranceid][entranceExists])
	    return 0;

	entranceData[entranceid][entranceID] = cache_insert_id();
	entranceData[entranceid][entranceWorld] = entranceData[entranceid][entranceID] + 7000;

	Entrance_Save(entranceid);

	return 1;
}

Dialog:DIALOG_BUYVEHICLE(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		if(GetPlayerMoneyEx(playerid) < vehicleArray[listitem][carPrice])
		{
			return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการเปลี่ยนสี (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(vehicleArray[listitem][carPrice]));
		}

		new
			string[256];

		playerData[playerid][pSelectedSlot] = listitem;

		format(string, sizeof(string), "{FFFFFF}ยืนยันการชำระเงิน:\nคุณแน่ใจไหมที่จะซื้อรถรุ่น {00AA00}%s{FFFFFF} ในราคา {00AA00}%s{FFFFFF}?", g_arrVehicleNames[vehicleArray[listitem][carModel] - 400], FormatMoney(vehicleArray[listitem][carPrice]));
		Dialog_Show(playerid, DIALOG_BUYVEHICLE2, DIALOG_STYLE_MSGBOX, "[ยืนยันการชำระเงิน]", string, "ยืนยัน", "ยกเลิก");
	}
	return 1;
}
Dialog:DIALOG_BUYVEHICLE2(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		new query[128];
		mysql_format(g_SQL, query, sizeof(query), "SELECT COUNT(*) FROM vehicles WHERE carOwnerID = %d", playerData[playerid][pID]);
		mysql_tquery(g_SQL, query, "OnPlayerAttemptBuyVehicle", "ii", playerid, playerData[playerid][pSelectedSlot]);
	}
	return 1;
}


Dialog:DIALOG_PICKSPAWN(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		switch(listitem)
		{
			case 0: playerData[playerid][pSpawnPoint] = 0;
			case 1: playerData[playerid][pSpawnPoint] = 2;
			case 2:
			{
			    if (playerData[playerid][pFaction] == -1)
			        return Dialog_Show(playerid, DIALOG_PICKSPAWN, DIALOG_STYLE_LIST, "[เลือกจุดเกิด]", "เกิดสาธารณะ\nเกิดออกเกมล่าสุด\nเกิดฐาน", "เลือก", "ออกเกม");

                playerData[playerid][pSpawnPoint] = 1;
			}
		}
		SetSpawnInfo(playerid, NO_TEAM, playerData[playerid][pSkin], playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z], playerData[playerid][pPos_A], 0, 0, 0, 0, 0, 0);
		TogglePlayerSpectating(playerid, 0);
		KillTimer(playerData[playerid][LoginTimer]);
		playerData[playerid][LoginTimer] = 0;
		playerData[playerid][IsLoggedIn] = true;
	}
	else
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
		DelayedKick(playerid);
	}
	return 1;
}
Dialog:DIALOG_SPAWNCAR(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		new query[128];
		mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM vehicles WHERE carOwnerID = %d LIMIT %d, 1", playerData[playerid][pID], listitem);
		mysql_tquery(g_SQL, query, "OnPlayerSpawnVehicle", "ii", playerid, false);
	}
	return 1;
}
Dialog:DIALOG_DESPAWNCAR(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		new count;

		for(new i = 1; i < MAX_VEHICLES; i ++)
		{
			if((carData[i][carID] > 0 && IsVehicleOwner(playerid, i)) && (count++ == listitem))
   {
				/*if(IsVehicleOccupied(i) && GetVehicleDriver(i) != playerid)
				{
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ยังถูกใช้งานอยู่");
				}*/
				SendClientMessageEx(playerid, COLOR_WHITE, "รถรุ่น {FF6347}%s{FFFFFF} ถูกจัดเก็บเรียบร้อย", ReturnVehicleName(i));
				KillTimer(playerData[playerid][pSpeedoTimer]);
				DespawnVehicle(i);
				return 1;
			}
		}
	}
	return 1;
}

Dialog:DIALOG_FINDCAR(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		new count;

		for(new i = 1; i < MAX_VEHICLES; i ++)
		{
			if((carData[i][carID] > 0 && IsVehicleOwner(playerid, i)) && (count++ == listitem))
			{
				new
					Float:x,
					Float:y,
					Float:z;

				GetVehiclePos(i, x, y, z);
				SetPlayerCheckpoint(playerid, x, y, z, 3.0);
				SendClientMessageEx(playerid, COLOR_YELLOW, "** ระบบ GPS ได้สร้างจุดแดงบน Minimap ให้คุณติดตามแล้ว", ReturnVehicleName(i));

				return 1;
			}
		}
	}
	return 1;
}

Dialog:DIALOG_VEHICLELOOKUP1(playerid, response, listitem, inputtext[])
{
	if((response) && GetFactionType(playerid) == FACTION_POLICE)
	{
		new vehicleid, string[512];

		if(sscanf(inputtext, "d", vehicleid))
		{
			return Dialog_Show(playerid, DIALOG_VEHICLELOOKUP1, DIALOG_STYLE_INPUT, "[เครื่องติดตามยานพาหนะ]", "ใส่ไอดียานพาหนะที่ต้องการจะติดตาม\n(( ดูไอดีได้โดยการพิมพ์ /dl ))", "ตกลง", "ยกเลิก");
		}
		if(!IsValidVehicle(vehicleid) || !carData[vehicleid][carOwnerID])
		{
			SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ต้องเป็นรถส่วนตัวเท่านั้น");
			return Dialog_Show(playerid, DIALOG_VEHICLELOOKUP1, DIALOG_STYLE_INPUT, "[เครื่องติดตามยานพาหนะ]", "ใส่ไอดียานพาหนะที่ต้องการจะติดตาม\n(( ดูไอดีได้โดยการพิมพ์ /dl ))", "ตกลง", "ยกเลิก");
		}

		playerData[playerid][pSelectedSlot] = vehicleid;

		format(string, sizeof(string), "ชื่อรุ่น: %s\nเจ้าของ: %s\nใบสั่ง: %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], FormatMoney(carData[vehicleid][carTickets]));
		Dialog_Show(playerid, DIALOG_VEHICLELOOKUP2, DIALOG_STYLE_MSGBOX, "[เครื่องติดตามยานพาหนะ]", string, "ติดตาม", "ปิด");
	}
	return 1;
}
Dialog:DIALOG_VEHICLELOOKUP2(playerid, response, listitem, inputtext[])
{
	if((response) && GetFactionType(playerid) == FACTION_POLICE)
	{
		new vehicleid = playerData[playerid][pSelectedSlot];
		new
			Float:x,
			Float:y,
			Float:z;

		SendClientMessage(playerid, COLOR_WHITE, "** ระบบนำทางได้ติดตั้งไว้บนแผนที่แล้ว ตามจุดสีแดงไป");

		GetVehiclePos(vehicleid, x, y, z);
		SetPlayerCheckpoint(playerid, x, y, z, 3.0);
	}
	return 1;
}

Dialog:DIALOG_LEAVETEST(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    CancelDrivingTest(playerid);

	    SendClientMessage(playerid, COLOR_LIGHTRED, "[กรมขนส่ง] {FFFFFF}คุณได้ออกจากการสอบใบขับขี่");
	}
	else
	{
	    PutPlayerInVehicle(playerid, playerData[playerid][pTestCar], 0);
	}
	return 1;
}

Dialog:DIALOG_REPAIR(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				if (!IsPlayerInAnyVehicle(playerid))
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัว");

				if (GetPlayerMoneyEx(playerid) < 1000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการเปลี่ยนสี (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(1000));
				Dialog_Show(playerid, DIALOG_COLOR1, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 1)", "ตกลง", "กลับ");
			}
		    case 1:
		    {
				if (!IsPlayerInAnyVehicle(playerid))
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัว");

				if (GetPlayerMoneyEx(playerid) < 2500)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(2500));

				RepairVehicle(GetPlayerVehicleID(playerid));
				GivePlayerMoneyEx(playerid, -2500);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}รถของคุณถูกซ่อมเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(2500));
			}
			case 2:
			{
		        if (GetPlayerMoneyEx(playerid) < 3500)
		            return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(3500));

				Inventory_Add(playerid, "Toolbox", 1);
				GivePlayerMoneyEx(playerid, -3500);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ซื้อเครื่องมือซ่อมรถเรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(3500));
			}
			case 3:
			{
				Dialog_Show(playerid, DIALOG_NEON, DIALOG_STYLE_LIST, "[เลือกสี Neon]", "{FFFFFF}สีแดง\nสีน้ำเงิน\nสีเขียว\nสีเหลือง\nสีชมพู\nสีขาว\nถอด", "ยืนยัน", "ปิด");
			}
		}
	}
	return 1;
}
Dialog:DIALOG_PAINTJOB11(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	new string[256];
	if (response)
	{
		new paintjobid;
//		new query[256];
		if (!IsPlayerInAnyVehicle(userid) && GetPlayerState(userid) != PLAYER_STATE_DRIVER)
		{
			playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[userid][pMecOfferPrice] = 0;
			playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[playerid][pMecOfferPrice] = 0;
			SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นต้องอยู่ในรถ สถานะคนขับ");
			return 1;
		}
		new vehicleid = GetPlayerVehicleID(userid);
		if(carData[vehicleid][carOwnerID] > 0 && !IsVehicleOwner(userid, vehicleid))
		{
			playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[userid][pMecOfferPrice] = 0;
			playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[playerid][pMecOfferPrice] = 0;
			SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ต้องเป็นรถส่วนตัวเท่านั้น");
			return 1;
		}
		if(sscanf(inputtext, "d", paintjobid))
			return Dialog_Show(playerid, DIALOG_PAINTJOB, DIALOG_STYLE_INPUT, "[เลือกลาย]", "{FFFFFF}เลือกลายได้ 0-5 หากต้องการลบให้ใส่ -1", "ยืนยัน", "ปิด");

		if(paintjobid <= -1 || paintjobid >= 5)
			Dialog_Show(playerid, DIALOG_PAINTJOB, DIALOG_STYLE_INPUT, "[เลือกลาย]", "{FFFFFF}เลือกลายได้ 0-5 หากต้องการลบให้ใส่ -1", "ยืนยัน", "ปิด");

		playerData[playerid][pPaintjob] = paintjobid;
		format(string, sizeof string, "{FFFFFF}ตอบรับการเปลี่ยนลายจากช่าง %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
        Dialog_Show(userid, DIALOG_ACCEPT33, DIALOG_STYLE_INPUT, "[ยืนยัน]", string, "ยืนยัน", "ปิด");
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_COLOR11(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
//	new price = playerData[playerid][pMecOfferPrice];
	if (response)
	{
	    new color;
		if (sscanf(inputtext, "d", color))
		    return Dialog_Show(playerid, DIALOG_COLOR11, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 1)", "ตกลง", "กลับ");

		if (color < 0 || color > 255)
		    return Dialog_Show(playerid, DIALOG_COLOR11, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ {FF0000}0-255 {FFFFFF}(สีที่ 1)", "ตกลง", "กลับ");

		playerData[userid][pColor1] = color;
		Dialog_Show(playerid, DIALOG_COLOR22, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 2)", "ตกลง", "กลับ");
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_COLOR22(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	new string[256];
	if (response)
	{
	    new color;
		if (sscanf(inputtext, "d", color))
		    return Dialog_Show(playerid, DIALOG_COLOR22, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 2)", "ตกลง", "กลับ");

		if (color < 0 || color > 255)
		    return Dialog_Show(playerid, DIALOG_COLOR22, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ {FF0000}0-255 {FFFFFF}(สีที่ 2)", "ตกลง", "กลับ");

		playerData[userid][pColor2] = color;

		format(string, sizeof string, "{FFFFFF}ตอบรับการเปลี่ยนสีจากช่าง %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
	    Dialog_Show(userid, DIALOG_ACCEPT11, DIALOG_STYLE_INPUT, "[ยืนยัน]", string, "ยืนยัน", "ปิด");
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_ACCEPT11(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	if (response)
	{
	    new vehicleid = GetPlayerVehicleID(playerid), query[128];
		SetVehicleColor(vehicleid, playerData[playerid][pColor1], playerData[playerid][pColor2]);

		if(IsVehicleOwner(playerid, vehicleid))
		{
			carData[vehicleid][carColor1] = playerData[playerid][pColor1];
			carData[vehicleid][carColor2] = playerData[playerid][pColor2];

			mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carColor1 = %d, carColor2 = %d WHERE carID = %d", playerData[playerid][pColor1], playerData[playerid][pColor2], carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}

		GivePlayerMoneyEx(playerid, -price);
		GivePlayerMoneyEx(userid, price);
		SendClientMessageEx(playerid, COLOR_GREEN, "[ช่าง] {FFFFFF}รถของคุณถูกเปลี่ยนสีเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
		SendClientMessageEx(userid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้รับเงินจากการเปลี่ยนสีรถจำนวน: {FF0000}-%s", FormatMoney(price));
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_ACCEPT33(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	new paintjobid = playerData[playerid][pPaintjob];
	new query[128];
	if (response)
	{
		if (!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
			playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[userid][pMecOfferPrice] = 0;
			playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[playerid][pMecOfferPrice] = 0;
			SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถสถานะคนขับ");
			return 1;
		}
        new vehicleid = GetPlayerVehicleID(playerid);
		if(paintjobid == -1)
		{
			ChangeVehiclePaintjob(vehicleid, paintjobid);
			SendClientMessageEx(userid, COLOR_GREEN, "[ช่าง] {FFFFFF}ได้ลบลายออกจากรถเรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
			SendClientMessageEx(playerid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้ลบลายออกจากรถเรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
			GivePlayerMoneyEx(playerid, -price);
			GivePlayerMoneyEx(userid, price);
			carData[vehicleid][carPaintjob] = -1;

			format(query, sizeof(query), "UPDATE vehicles SET carPaintjob = -1 WHERE carID = %d", carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}
		else
		{
			ChangeVehiclePaintjob(vehicleid, paintjobid);
			SendClientMessageEx(userid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้ติดตั้งลายใหม่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
			SendClientMessageEx(playerid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้ติดตั้งลายใหม่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
			GivePlayerMoneyEx(playerid, -price);
			GivePlayerMoneyEx(userid, price);
			carData[vehicleid][carPaintjob] = paintjobid;

			format(query, sizeof(query), "UPDATE vehicles SET carPaintjob = %d WHERE carID = %d", carData[vehicleid][carPaintjob], carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}
		PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_VIPREPAIR(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				if (playerData[playerid][pVip] < 2)
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ {00FFFF}PR{FFFFFF}EMI{00FFFF}UM");

				if (!IsPlayerInAnyVehicle(playerid))
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัว");

				if (GetPlayerMoneyEx(playerid) < 2500)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(2500));

				new vehicleid = GetPlayerVehicleID(playerid);
				RepairVehicle(vehicleid);
				GivePlayerMoneyEx(playerid, -2500);
				SendClientMessage(playerid, COLOR_VIP2, "{00FFFF}PR{FFFFFF}EMI{00FFFF}UM {FFFFFF}ซ่อมรถในราคา $2500 สำเร็จ");
			}
		    case 1:
		    {
				if (playerData[playerid][pVip] < 3)
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ {FF0000}SU{FFFFFF}PER{FF0000}ME");

				if (!IsPlayerInAnyVehicle(playerid))
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัว");

				new vehicleid = GetPlayerVehicleID(playerid);
				new modelid = GetVehicleModel(vehicleid);
				new Float:maxfuel = vehicleData[modelid - 400][vFuel];

				new Float:fuel = vehicleData[modelid - 400][vFuel] - vehicleFuel[vehicleid];
				new Float:valuefloat = fuel*26;
				new value = floatround(valuefloat);

				if (GetPlayerMoneyEx(playerid) < value)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการเติมน้ำมัน (%s/%s) ลิตรละ 26", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(value));

				if (vehicleFuel[vehicleid] >= maxfuel)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถเติมน้ำมันมากกว่านี้ได้ (%.2f/%.2f)", vehicleFuel[vehicleid], maxfuel);

				vehicleFuel[vehicleid] += fuel;
				GivePlayerMoneyEx(playerid, -value);

				SendClientMessageEx(playerid, COLOR_VIP3, "{FF0000}SU{FFFFFF}PER{FF0000}ME {FFFFFF}คุณได้เติมน้ำมัน %.1f ลิตร ในราคา %s", fuel, FormatMoney(value));
			}
		}
	}
	return 1;
}

Dialog:DIALOG_PAINTJOB(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new paintjobid;
		new query[256];
		new vehicleid = GetPlayerVehicleID(playerid);
		if(!vehicleid)
		{
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");
		}
		if(carData[vehicleid][carOwnerID] > 0 && !IsVehicleOwner(playerid, vehicleid))
		{
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
		}
		if(sscanf(inputtext, "d", paintjobid))
			return Dialog_Show(playerid, DIALOG_PAINTJOB, DIALOG_STYLE_INPUT, "[เลือกลาย]", "{FFFFFF}เลือกลายได้ 0-5 หากต้องการลบให้ใส่ -1", "ยืนยัน", "ปิด");

		if(paintjobid <= -1 || paintjobid >= 5)
			Dialog_Show(playerid, DIALOG_PAINTJOB, DIALOG_STYLE_INPUT, "[เลือกลาย]", "{FFFFFF}เลือกลายได้ 0-5 หากต้องการลบให้ใส่ -1", "ยืนยัน", "ปิด");

		if(paintjobid == -1)
		{
			ChangeVehiclePaintjob(vehicleid, paintjobid);
			SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ลบลายออกจากรถเรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(1000));
			GivePlayerMoneyEx(playerid, -1000);
			carData[vehicleid][carPaintjob] = -1;

			format(query, sizeof(query), "UPDATE vehicles SET carPaintjob = -1 WHERE carID = %d", carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}
		else
		{
			ChangeVehiclePaintjob(vehicleid, paintjobid);
			SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้งลายใหม่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(20000));
			GivePlayerMoneyEx(playerid, -20000);
			carData[vehicleid][carPaintjob] = paintjobid;

			format(query, sizeof(query), "UPDATE vehicles SET carPaintjob = %d WHERE carID = %d", carData[vehicleid][carPaintjob], carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}
		SendClientMessageEx(playerid, -1, "%d %d", carData[vehicleid][carPaintjob], carData[vehicleid][carID]);
		PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
	}
	return 1;
}

Dialog:DIALOG_NEON(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		switch(listitem)
		{
			case 0:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 35000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(35000));

				GivePlayerMoneyEx(playerid, -35000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(35000));
				SetVehicleNeon(vehicleid, 18647);
			}
			case 1:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 35000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(35000));

				GivePlayerMoneyEx(playerid, -35000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(35000));
				SetVehicleNeon(vehicleid, 18648);
			}
			case 2:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 35000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(35000));

				GivePlayerMoneyEx(playerid, -35000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(35000));
				SetVehicleNeon(vehicleid, 18649);
			}
			case 3:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 35000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(35000));

				GivePlayerMoneyEx(playerid, -35000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(35000));
				SetVehicleNeon(vehicleid, 18650);
			}
			case 4:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 35000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(35000));

				GivePlayerMoneyEx(playerid, -35000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(35000));
				SetVehicleNeon(vehicleid, 18651);
			}
			case 5:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 35000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(35000));

				GivePlayerMoneyEx(playerid, -35000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย /neon เพื่อเปิด/ปิด ราคารวม: {FF0000}-%s", FormatMoney(35000));
				SetVehicleNeon(vehicleid, 18652);
			}
			case 6:
			{
				if(!IsWindowsVehicle(vehicleid))
					return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการติดตั้ง Neon");

				if (GetPlayerMoneyEx(playerid) < 1000)
					return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซ่อม (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(1000));

				GivePlayerMoneyEx(playerid, -1000);
				SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}คุณได้ถอนการติดตั้ง Neon ไฟใต้ท้องรถเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(1000));
				SetVehicleNeon(vehicleid, 0);
			}
		}
	}
	return 1;
}

Dialog:DIALOG_COLOR1(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new color;
		if (sscanf(inputtext, "d", color))
		    return Dialog_Show(playerid, DIALOG_COLOR1, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 1)", "ตกลง", "กลับ");

		if (color < 0 || color > 255)
		    return Dialog_Show(playerid, DIALOG_COLOR1, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ {FF0000}0-255 {FFFFFF}(สีที่ 1)", "ตกลง", "กลับ");

		playerData[playerid][pColor1] = color;
		Dialog_Show(playerid, DIALOG_COLOR2, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 2)", "ตกลง", "กลับ");
	}
	else
	{
	    Dialog_Show(playerid, DIALOG_REPAIR, DIALOG_STYLE_TABLIST_HEADERS, "[รายการซ่อม]", "เปลี่ยนสี\t$1,000\nซ่อมรถ\t$2,500\nเครื่องมือซ่อมรถ\t$3,500\nแต่งไฟใต้ท้องรถ\t$35,000", "ตกลง", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_COLOR2(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new color, vehicleid = GetPlayerVehicleID(playerid), query[128];
		if (sscanf(inputtext, "d", color))
		    return Dialog_Show(playerid, DIALOG_COLOR2, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 2)", "ตกลง", "กลับ");

		if (color < 0 || color > 255)
		    return Dialog_Show(playerid, DIALOG_COLOR2, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ {FF0000}0-255 {FFFFFF}(สีที่ 2)", "ตกลง", "กลับ");

		playerData[playerid][pColor2] = color;
		SetVehicleColor(vehicleid, playerData[playerid][pColor1], playerData[playerid][pColor2]);

		if(IsVehicleOwner(playerid, vehicleid))
		{
			carData[vehicleid][carColor1] = playerData[playerid][pColor1];
			carData[vehicleid][carColor2] = playerData[playerid][pColor2];

			mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carColor1 = %d, carColor2 = %d WHERE carID = %d", playerData[playerid][pColor1], playerData[playerid][pColor2], carData[vehicleid][carID]);
			mysql_tquery(g_SQL, query);
		}

		GivePlayerMoneyEx(playerid, -1000);
		SendClientMessageEx(playerid, COLOR_GREEN, "[อู่ซ่อมรถ] {FFFFFF}รถของคุณถูกเปลี่ยนสีเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(1000));
	}
	else
	{
	    Dialog_Show(playerid, DIALOG_COLOR1, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 1)", "ตกลง", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_BANKACCOUNT(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    switch (listitem)
	    {
	        case 0:
	        {
				Dialog_Show(playerid, DIALOG_WITHDRAW, DIALOG_STYLE_INPUT, "[ถอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะถอน", "ถอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));
			}
	        case 1:
	        {
				Dialog_Show(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "[ฝากเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะฝาก", "ฝาก", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));
			}
			case 2:
			{
			    Dialog_Show(playerid, DIALOG_TRANSFER, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่ไอดีหรือชื่อผู้รับเงิน", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));
			}
	    }
	}
	else
	{
	    Dialog_Show(playerid, DIALOG_BANK, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ยอดเงินปัจจุบัน: %s", "เลือก", "ปิด", FormatMoney(playerData[playerid][pBankMoney]));
	}
	return 1;
}

Dialog:DIALOG_TRANSFER(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    static
	        userid;

		if (playerData[playerid][pHours] < 15)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องมีชั่วโมงการเล่นมากกว่า 15 ขึ้นไป");

		if (sscanf(inputtext, "u", userid))
		    return Dialog_Show(playerid, DIALOG_TRANSFER, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่ไอดีหรือชื่อผู้รับเงิน", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		if (userid == INVALID_PLAYER_ID)
		    return Dialog_Show(playerid, DIALOG_TRANSFER, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่ไอดีหรือชื่อผู้รับเงิน\n\n{FF0000}*** ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		if (userid == playerid)
		    return Dialog_Show(playerid, DIALOG_TRANSFER, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่ไอดีหรือชื่อผู้รับเงิน\n\n{FF0000}*** โอนเงินเข้าบัญชีตัวเองไม่ได้", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		playerData[playerid][pTransfer] = userid;
		Dialog_Show(playerid, DIALOG_TRANSFERCASH, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะโอนให้กับ %s", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]), GetPlayerNameEx(userid));
	}
    else {
	    Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_TRANSFERCASH(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    new amount = strval(inputtext);

	    if (isnull(inputtext))
	        return Dialog_Show(playerid, DIALOG_TRANSFERCASH, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะโอนให้กับ %s", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]), GetPlayerNameEx(playerData[playerid][pTransfer]));

		if (amount < 1 || amount > playerData[playerid][pBankMoney])
			return Dialog_Show(playerid, DIALOG_TRANSFERCASH, DIALOG_STYLE_INPUT, "[โอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะโอนให้กับ %s\n\n{FF0000}*** เงินในบัญชีของคุณไม่พอที่จะโอน", "โอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]), GetPlayerNameEx(playerData[playerid][pTransfer]));

		playerData[playerid][pBankMoney] -= amount;
		playerData[playerData[playerid][pTransfer]][pBankMoney] += amount;

	    SendClientMessageEx(playerid, COLOR_YELLOW, "[ธนาคาร] {FFFFFF}คุณได้โอนเงินจำนวน %s ให้กับ %s สำเร็จ", FormatMoney(amount), GetPlayerNameEx(playerData[playerid][pTransfer]));
	    SendClientMessageEx(playerData[playerid][pTransfer], COLOR_YELLOW, "[ธนาคาร] {FFFFFF}ผู้เล่น %s ได้โอนเงินให้คุณจำนวน %s สำเร็จ", GetPlayerNameEx(playerid), FormatMoney(amount));

        Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");
	}
	else {
	    Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_WITHDRAW(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    new amount = strval(inputtext);

	    if (isnull(inputtext))
	        return Dialog_Show(playerid, DIALOG_WITHDRAW, DIALOG_STYLE_INPUT, "[ถอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะถอน", "ถอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		if (amount < 1 || amount > playerData[playerid][pBankMoney])
			return Dialog_Show(playerid, DIALOG_WITHDRAW, DIALOG_STYLE_INPUT, "[ถอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะถอน\n\n{FF0000}*** ยอดเงินที่คุณต้องการจะถอนไม่เพียงพอ", "ถอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		playerData[playerid][pBankMoney] -= amount;
	    GivePlayerMoneyEx(playerid, amount);

	    SendClientMessageEx(playerid, COLOR_YELLOW, "[ธนาคาร] {FFFFFF}คุณได้ถอนเงินจำนวน %s ออกจากบัญชีสำเร็จ", FormatMoney(amount));
        Dialog_Show(playerid, DIALOG_WITHDRAW, DIALOG_STYLE_INPUT, "[ถอนเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะถอน", "ถอน", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));
	}
	else {
	    Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_DEPOSIT(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    new amount = strval(inputtext);

	    if (isnull(inputtext))
	        return Dialog_Show(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "[ฝากเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะฝาก", "ฝาก", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		if (amount < 1 || amount > GetPlayerMoneyEx(playerid))
			return Dialog_Show(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "[ฝากเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะฝาก\n\n{FF0000}*** ยอดเงินที่คุณต้องการจะฝากไม่เพียงพอ", "ฝาก", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));

		playerData[playerid][pBankMoney] += amount;
	    GivePlayerMoneyEx(playerid, -amount);

	    SendClientMessageEx(playerid, COLOR_YELLOW, "[ธนาคาร] {FFFFFF}คุณได้ฝากเงินจำนวน %s เข้าธนาคารสำเร็จ", FormatMoney(amount));
        Dialog_Show(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "[ฝากเงิน]", "{FFFFFF}ยอดเงินในบัญชี: %s\nกรุณาใส่จำนวนเงินที่คุณต้องการจะฝาก", "ฝาก", "กลับ", FormatMoney(playerData[playerid][pBankMoney]));
	}
	else {
	    Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_BANK(playerid, response, listitem, inputtext[])
{
	if (!IsPlayerInBank(playerid) && ATM_Nearest(playerid) == -1)
	    return 0;

	if (response)
	{
	    switch (listitem)
	    {
	        case 0:
	        {
				Dialog_Show(playerid, DIALOG_BANKACCOUNT, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ถอนเงิน\nฝากเงิน\nโอนเงิน", "เลือก", "กลับ");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_ENTERNUMBER(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    static
	        name[32],
			string[128];

		strunpack(name, playerData[playerid][pEditingItem]);

	    if (isnull(inputtext) || !IsNumeric(inputtext))
	        return Dialog_Show(playerid, DIALOG_ENTERNUMBER, DIALOG_STYLE_INPUT, "[เพิ่มเบอร์]", "{FFFFFF}ชื่อ: %s\nใส่เบอร์ที่คุณต้องการจะบันทึก", "ตกลง", "กลับ", name);

		for (new i = 0; i != MAX_CONTACTS; i ++)
		{
			if (!contactData[playerid][i][contactExists])
			{
            	contactData[playerid][i][contactExists] = true;
            	contactData[playerid][i][contactNumber] = strval(inputtext);

				format(contactData[playerid][i][contactName], 32, name);

				mysql_format(g_SQL, string, sizeof(string), "INSERT INTO `contacts` (`ID`, `contactName`, `contactNumber`) VALUES ('%d', '%e', '%d')", playerData[playerid][pID], name, contactData[playerid][i][contactNumber]);
				mysql_tquery(g_SQL, string, "OnContactAdd", "dd", playerid, i);

				SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้เพิ่ม \"%s\" ไปในรายชื่อผู้ติดต่อ", name);
                return 1;
			}
	    }
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รายชื่อผู้ติดต่อของคุณเต็มแล้ว");
	}
	else {
		ShowContacts(playerid);
	}
	return 1;
}

Dialog:DIALOG_NEWCONTACTS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    if (isnull(inputtext))
			return Dialog_Show(playerid, DIALOG_NEWCONTACTS, DIALOG_STYLE_INPUT, "[เพิ่มเบอร์]", "{FFFFFF}ใส่ชื่อผู้ติดต่อที่คุณต้องการจะบันทึก\n{FF0000}*** ใส่ชื่อผู้ติดต่อ", "ตกลง", "กลับ");

	    if (strlen(inputtext) > 32)
	        return Dialog_Show(playerid, DIALOG_NEWCONTACTS, DIALOG_STYLE_INPUT, "[เพิ่มเบอร์]", "{FFFFFF}ใส่ชื่อผู้ติดต่อที่คุณต้องการจะบันทึก\n{FF0000}*** ชื่อผู้ติดต่อต้องไม่เกิน 32 ตัวอักษร", "ตกลง", "กลับ");

		strpack(playerData[playerid][pEditingItem], inputtext, 32);

	    Dialog_Show(playerid, DIALOG_ENTERNUMBER, DIALOG_STYLE_INPUT, "[เพิ่มเบอร์]", "{FFFFFF}ชื่อ: %s\nใส่เบอร์ที่คุณต้องการจะบันทึก", "ตกลง", "กลับ", inputtext);
	}
	else {
		ShowContacts(playerid);
	}
	return 1;
}

Dialog:DIALOG_CONINFO(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new
			id = playerData[playerid][pContact],
			string[72];

		switch (listitem)
		{
		    case 0:
		    {
		        format(string, 16, "%d", contactData[playerid][id][contactNumber]);
				callcmd::call(playerid, string);
		    }
		    case 1:
		    {
		        mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `contacts` WHERE `ID` = '%d' AND `contactID` = '%d'", playerData[playerid][pID], contactData[playerid][id][contactID]);
		        mysql_tquery(g_SQL, string);

		        SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบ \"%s\" ออกจากรายชื่อผู้ติดต่อ", contactData[playerid][id][contactName]);

		        contactData[playerid][id][contactExists] = false;
		        contactData[playerid][id][contactNumber] = 0;
		        contactData[playerid][id][contactID] = 0;

		        ShowContacts(playerid);
		    }
		}
	}
	else {
	    ShowContacts(playerid);
	}
	return 1;
}

Dialog:DIALOG_CONTACTS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    if (!listitem)
		{
	        Dialog_Show(playerid, DIALOG_NEWCONTACTS, DIALOG_STYLE_INPUT, "[เพิ่มเบอร์]", "{FFFFFF}ใส่ชื่อผู้ติดต่อที่คุณต้องการจะบันทึก", "ตกลง", "กลับ");
	    }
	    else {
		    playerData[playerid][pContact] = ListedContacts[playerid][listitem - 1];

	        Dialog_Show(playerid, DIALOG_CONINFO, DIALOG_STYLE_LIST, contactData[playerid][playerData[playerid][pContact]][contactName], "โทร\nลบเบอร์", "ตกลง", "กลับ");
	    }
	}
	else {
		callcmd::phone(playerid, "\1");
	}
	for (new i = 0; i != MAX_CONTACTS; i ++)
	{
	    ListedContacts[playerid][i] = -1;
	}
	return 1;
}

Dialog:DIALOG_DIALNUMBER(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new
	        string[16];

	    if (isnull(inputtext) || !IsNumeric(inputtext))
	        return Dialog_Show(playerid, DIALOG_DIALNUMBER, DIALOG_STYLE_INPUT, "[หมายเลขที่ต้องการโทร]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะติดต่อ", "โทร", "กลับ");

        format(string, 16, "%d", strval(inputtext));
		callcmd::call(playerid, string);
	}
	else {
		callcmd::phone(playerid, "\1");
	}
	return 1;
}

Dialog:DIALOG_TWITTER(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new
	        string[128];

	    if (isnull(inputtext))
	        return Dialog_Show(playerid, DIALOG_TWITTER, DIALOG_STYLE_INPUT, "[กรุณาระบุข้อความ Twitter]", "{FFFFFF}กรุณาระบุข้อความที่คุณต้องการจะโพสต์ :", "ตกลง", "ยกเลิก");

        format(string, 128, "%s", inputtext);
		callcmd::tw(playerid, string);
	}
	else {
		return 1;
	}
	return 1;
}

Dialog:DIALOG_SENDTEXT(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new number = strval(inputtext);

	    if (isnull(inputtext) || !IsNumeric(inputtext))
	        return Dialog_Show(playerid, DIALOG_SENDTEXT, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะส่งข้อความ", "โทร", "กลับ");

        if (GetNumberOwner(number) == INVALID_PLAYER_ID)
            return Dialog_Show(playerid, DIALOG_SENDTEXT, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะส่งข้อความ\n{FF0000}*** เบอร์นี้ไม่ได้ออนไลน์อยู่", "โทร", "กลับ");

		playerData[playerid][pContact] = GetNumberOwner(number);
		Dialog_Show(playerid, DIALOG_TEXTMESSAGE, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่ข้อความที่คุณต้องการจะส่งหา %s", "ส่ง", "กลับ", GetPlayerNameEx(playerData[playerid][pContact]));
	}
	else {
		callcmd::phone(playerid, "\1");
	}
	return 1;
}

Dialog:DIALOG_TEXTMESSAGE(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		if (isnull(inputtext))
			return Dialog_Show(playerid, DIALOG_TEXTMESSAGE, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่ข้อความที่คุณต้องการจะส่งหา %s", "ส่ง", "กลับ", GetPlayerNameEx(playerData[playerid][pContact]));

		new targetid = playerData[playerid][pContact];

		if (!IsPlayerConnected(targetid) || !playerData[targetid][pPhone])
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}หมายเลขที่ระบุไม่ถูกต้อง/ออฟไลน์");

		GivePlayerMoneyEx(playerid, -1);
		GameTextForPlayer(playerid, "You've been ~r~charged~w~ $1 to send a text.", 5000, 1);

		SendClientMessageEx(targetid, COLOR_YELLOW, "[ข้อความ]: %s - %s (%d)", inputtext, GetPlayerNameEx(playerid), playerData[playerid][pPhone]);
		SendClientMessageEx(playerid, COLOR_YELLOW, "[ข้อความ]: %s - %s (%d)", inputtext, GetPlayerNameEx(playerid), playerData[playerid][pPhone]);

        PlayerPlaySoundEx(targetid, 21001);
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบมือถือขึ้นมาและกดส่งข้อความ", GetPlayerNameEx(playerid));
	}
	else {
        Dialog_Show(playerid, DIALOG_SENDTEXT, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะส่งข้อความ", "โทร", "กลับ");
	}
	return 1;
}

Dialog:DIALOG_MYPHONE(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch (listitem)
		{
		    case 0:
		    {
		        if (playerData[playerid][pPhoneOff])
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

				Dialog_Show(playerid, DIALOG_DIALNUMBER, DIALOG_STYLE_INPUT, "[หมายเลขที่ต้องการโทร]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะติดต่อ", "โทร", "กลับ");
			}
			case 1:
			{
			    if (playerData[playerid][pPhoneOff])
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

			    ShowContacts(playerid);
			}
		    case 2:
		    {
		        if (playerData[playerid][pPhoneOff])
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

		        Dialog_Show(playerid, DIALOG_SENDTEXT, DIALOG_STYLE_INPUT, "[ส่งข้อความ]", "{FFFFFF}ใส่หมายเลขที่ต้องการจะส่งข้อความ", "โทร", "กลับ");
			}
			case 3:
			{
			    if (!playerData[playerid][pPhoneOff])
			    {
           			if (playerData[playerid][pCallLine] != INVALID_PLAYER_ID)
					   {
			        	CancelCall(playerid);
					}
					playerData[playerid][pPhoneOff] = 1;
			        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้กดปุ่มเพื่อปิดมือถือของเขา", GetPlayerNameEx(playerid));
				}
				else
				{
				    playerData[playerid][pPhoneOff] = 0;
			        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้กดปุ่มเพื่อเปิดมือถือของเขา", GetPlayerNameEx(playerid));
				}
			}
		}
	}
	return 1;
}

Dialog:DIALOG_TELEPORT(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    SetPlayerInterior(playerid, g_arrInteriorData[listitem][e_InteriorID]);
	    SetPlayerPos(playerid, g_arrInteriorData[listitem][e_InteriorX], g_arrInteriorData[listitem][e_InteriorY], g_arrInteriorData[listitem][e_InteriorZ]);
	}
	return 1;
}

Dialog:DIALOG_ENTRANCEPASS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new id = (Entrance_Inside(playerid) == -1) ? (Entrance_Nearest(playerid)) : (Entrance_Inside(playerid));
		new password;

		if (id == -1)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ใกล้กับประตูใด ๆ");

		if (sscanf(inputtext, "d", password))
			return Dialog_Show(playerid, DIALOG_ENTRANCEPASS, DIALOG_STYLE_INPUT, "[รหัสผ่านประตู]", "รหัสผ่านต้องเป็นตัวเลขเท่านั้น!\nใส่รหัสผ่านให้ประตูเพื่อความปลอดภัย:", "ยืนยัน", "ออก");

		if (entranceData[id][entrancePass] != password)
            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รหัสผ่านไม่ถูกต้อง");

	    if (!entranceData[id][entranceLocked])
		{
			entranceData[id][entranceLocked] = true;
			Entrance_Save(id);

			GameTextForPlayer(playerid, "You have ~r~locked~w~ the entrance!", 5000, 1);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		}
		else
		{
			entranceData[id][entranceLocked] = false;
			Entrance_Save(id);

			GameTextForPlayer(playerid, "You have ~g~unlocked~w~ the entrance!", 5000, 1);
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		}
	}
	return 1;
}

forward OnQueryFinished(playerid, threadid);
public OnQueryFinished(playerid, threadid)
{
	if (!IsPlayerConnected(playerid))
	    return 0;

	static
		rows;

	cache_get_row_count(rows);

	switch (threadid)
	{
    	case THREAD_LOGIN:
   		{
    	    if (!rows)
    	    {
				playerData[playerid][LoginAttempts]++;
				if (playerData[playerid][LoginAttempts] >= 3)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณใส่รหัสผ่านผิดพลาดครบ 3/3 ครั้ง ระบบจึงเตะคุณออกจากเกม");
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
					DelayedKick(playerid);
				}
				else
				{
					ShowDialog_Login(playerid);
				}
			}
			else
			{
				AssignplayerData(playerid);
				ClearPlayerChat(playerid, 20);

				if (playerData[playerid][pBan] == 1)
				{
					SendClientMessage(playerid, COLOR_RED, "ไอดีนี้ไม่สามารถเข้าเล่นในเซิร์ฟเวอร์นี้ได้เพราะถูกแบน!");
					SendClientMessageEx(playerid, COLOR_WHITE, "ชื่อตัวละคร: %s", GetPlayerNameEx(playerid));
					SendClientMessageEx(playerid, COLOR_WHITE, "สาเหตุการโดนแบน: %s", playerData[playerid][pBanReason]);
					DelayedKick(playerid);
					return 1;
				}

				if (playerData[playerid][pFaction] == -1)
				{
					SetPlayerColor(playerid, DEFAULT_COLOR);
				}
				else
				{
					SetFactionColor(playerid);
				}

				if(playerData[playerid][pTutorial] == 0)
				{
					KillTimer(playerData[playerid][LoginTimer]);
					playerData[playerid][LoginTimer] = 0;

					UpdatePlayerRegister(playerid);

					ShowDialog_Tutorial(playerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Welcome to "SERVER_NAME" version: "SERVER_VERSION"");
					SendClientMessageEx(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}คุณล็อคอินเข้าเกมสำเร็จ (%s)", ReturnDate());
					SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}ดูข้อมูลตัวละครของคุณได้โดยการใช้ /stats");
					SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}หากต้องการทราบคุณสมบัติของ VIP ใช้ /vip");
					SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}ปุ่ม {FFFF00}Y{FFFFFF} ใช้ในการเปิดกระเป๋าเก็บของ");
					//SendClientMessage(playerid, COLOR_GREEN, "[ภารกิจ] {FFFFFF}ใช้ /quest ในการดูวิธีทำภารกิจ");

					Dialog_Show(playerid, DIALOG_PICKSPAWN, DIALOG_STYLE_LIST, "[เลือกจุดเกิด]", "เกิดสาธารณะ\nเกิดออกเกมล่าสุด\nเกิดฐาน", "เลือก", "ออกเกม");
				}
			}
		}
		case THREAD_LIST_VEHICLES:
		{
		    if(!rows)
		    {
		        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีรถส่วนตัวเลย");
		    }
		    else
		    {
		        new string[1024],
					modelid,
					Float:fuel;

		        string = "ชื่อรุ่น\tน้ำมัน";

		        for(new i = 0; i < rows; i ++)
		        {
					cache_get_value_name_int(i, "carModel", modelid);
					cache_get_value_name_float(i, "carFuel", fuel);
		            format(string, sizeof(string), "%s\n%s\t(%.2f) ลิตร", string, g_arrVehicleNames[modelid - 400], fuel);
				}

				Dialog_Show(playerid, DIALOG_SPAWNCAR, DIALOG_STYLE_TABLIST_HEADERS, "[เรียกรถส่วนตัว]", string, "เรียก", "ปิด");
		    }
		}
		case THREAD_LIST_VEHICLES2:
		{
		    if(!rows)
		    {
		        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนี้ไม่มีรถส่วนตัวเลย");
		    }
		    else
		    {
		        new string[1024],
					modelid,
					Float:fuel;

		        string = "ชื่อรุ่น\tน้ำมัน";

		        for(new i = 0; i < rows; i ++)
		        {
					cache_get_value_name_int(i, "carModel", modelid);
					cache_get_value_name_float(i, "carFuel", fuel);
		            format(string, sizeof(string), "%s\n%s\t(%.2f) ลิตร", string, g_arrVehicleNames[modelid - 400], fuel);
				}

				Dialog_Show(playerid, ShowOnly, DIALOG_STYLE_TABLIST_HEADERS, "[ดูรถส่วนตัวของผู้เล่น]", string, "ปิดหน้าต่าง", "");
		    }
		}
	}
	return 1;
}

SQL_AttemptLogin(playerid, const password[])
{
	new
		query[300],
		buffer[129];

	WP_Hash(buffer, sizeof(buffer), password);

	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `players` WHERE `playerName` = '%e' AND `playerPassword` = '%e'", GetPlayerNameEx(playerid), buffer);
	mysql_tquery(g_SQL, query, "OnQueryFinished", "dd", playerid, THREAD_LOGIN);
}

Dialog:DIALOG_LOGIN(playerid, response, listitem, inputtext[])
{
	if (!response)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณออกเกมสำเร็จ...");
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
		DelayedKick(playerid);
	}
	else
	{
	    SQL_AttemptLogin(playerid, inputtext);
	}
	return 1;
}

Dialog:DIALOG_REGISTER(playerid, response, listitem, inputtext[])
{
	if (!response)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณออกเกมสำเร็จ...");
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
		DelayedKick(playerid);
	}
	else
	{
		if (strlen(inputtext) <= 4)
		{
			ShowDialog_Register(playerid);
			return 1;
		}
		new buffer[129];
		WP_Hash(buffer, sizeof(buffer), inputtext);

		new query[321];
		mysql_format(g_SQL, query, sizeof query, "INSERT INTO `players` (`playerName`, `playerPassword`, `playerRegDate`) VALUES ('%e', '%s', '%e')", GetPlayerNameEx(playerid), buffer, ReturnDate());
		mysql_tquery(g_SQL, query, "OnPlayerRegister", "d", playerid);
	}
	return 1;
}

Dialog:DIALOG_TUTORIAL(playerid, response, listitem, inputtext[])
{
    if (!response)
	{
	    Dialog_Show(playerid, DIALOG_TUTORIALCONFIRM3, DIALOG_STYLE_MSGBOX, "[ยืนยันการออกเกม]", "{FFFFFF}คุณยืนยันที่จะออกจากเกมใช่ไหม?\n{00FF00}** หมายเหตุ: หากคุณยังให้ข้อมูลไม่ครบคุณสามารถกลับมาแก้ไขได้ใหม่ในการเข้าเล่นครั้งต่อไป!", "ยืนยัน", "กลับ");
	}
    else
	{
		switch(listitem)
		{
			case 0:
			{
				ShowDialog_Tutorial(playerid);
			}
			case 1:
			{
				ShowDialog_Tutorial(playerid);
			}
			case 2:
			{
				ShowDialog_Tutorial(playerid);
			}
			case 3: Dialog_Show(playerid, DIALOG_TUTORIALGENDER, DIALOG_STYLE_LIST, "[ข้อมูลตัวละคร]", "ชาย\nหญิง", "แก้ไข", "กลับ");
			case 4: Dialog_Show(playerid, DIALOG_TUTORIALBIRTHDAY, DIALOG_STYLE_INPUT, "[ข้อมูลตัวละคร]", "{FFFFFF}ใส่วันเดือนปีเกิด {FF0000}ตัวอย่าง: 1/1/1991", "แก้ไข", "กลับ");
			case 5:
			{
				static const aGender[3][10] = {"แก้ไข", "ชาย", "หญิง"};
				new string[400];
				if(playerData[playerid][pGender] == 0)
				{
					Dialog_Show(playerid, DIALOG_TUTORIALCONFIRM2, DIALOG_STYLE_MSGBOX, "[ข้อมูลตัวละคร]", "{FFFFFF}เกิดข้อผิดพลาดจากระบบ...\n{FF0000}** คุณยังไม่ได้แก้ไขเพศตัวละคร!", "กลับ", "");
					return 1;
				}
				if(!strcmp(playerData[playerid][pBirthday], "แก้ไข", true))
				{
					Dialog_Show(playerid, DIALOG_TUTORIALCONFIRM2, DIALOG_STYLE_MSGBOX, "[ข้อมูลตัวละคร]", "{FFFFFF}เกิดข้อผิดพลาดจากระบบ...\n{FF0000}** คุณยังไม่ได้แก้ไขวันเดือนปีเกิดตัวละคร!", "กลับ", "");
					return 1;
				}
				format(string, sizeof(string), "\
					{FFFFFF}คุณต้องการที่จะยืนยันจริง ๆ ใช่ไหม?\n\
					{FF0000}*** คุณไม่สามารถกลับไปแก้ไขข้อมูลเหล่านี้ได้อีก หากคุณกดยืนยัน!\n\n\
					{FFFFFF}ลำดับไอดี:\t{00FF00}%d\n\
					{FFFFFF}วันที่ลงทะเบียน:\t{00FF00}%s\n\
					{FFFFFF}ชื่อ:\t\t\t{00FF00}%s\n\
					{FFFFFF}เพศ:\t\t\t{00FF00}%s\n\
					{FFFFFF}วันเดือนปีเกิด:\t{00FF00}%s",
				playerData[playerid][pID], playerData[playerid][pRegisterDate], GetPlayerNameEx(playerid), aGender[playerData[playerid][pGender]], playerData[playerid][pBirthday]);
				Dialog_Show(playerid, DIALOG_TUTORIALCONFIRM, DIALOG_STYLE_MSGBOX, "[ข้อมูลตัวละคร]", string, "ยืนยัน", "กลับ");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_TUTORIALGENDER(playerid, response, listitem, inputtext[])
{
    if (!response)
    {
		ShowDialog_Tutorial(playerid);
    }
	else
	{
		switch(listitem)
		{
			case 0:
			{
				playerData[playerid][pGender] = 1;
				ShowDialog_Tutorial(playerid);
			}
			case 1:
			{
				playerData[playerid][pGender] = 2;
				ShowDialog_Tutorial(playerid);
			}
		}
	}
	return 1;
}

Dialog:DIALOG_TUTORIALBIRTHDAY(playerid, response, listitem, inputtext[])
{
    if (!response)
    {
		ShowDialog_Tutorial(playerid);
    }
	else
	{
		new
			iDay,
			iMonth,
			iYear;

		static const
			arrMonthDays[] = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

		if (sscanf(inputtext, "p</>ddd", iDay, iMonth, iYear))
		{
			Dialog_Show(playerid, DIALOG_TUTORIALBIRTHDAY, DIALOG_STYLE_INPUT, "[ข้อมูลตัวละคร]", "{FFFFFF}ใส่วันเดือนปีเกิด {FF0000}ตัวอย่าง: 1/1/1991", "แก้ไข", "กลับ");
		}
		else if (iYear < 1900 || iYear > 2019)
		{
			Dialog_Show(playerid, DIALOG_TUTORIALBIRTHDAY, DIALOG_STYLE_INPUT, "[ข้อมูลตัวละคร]", "{FFFFFF}ใส่วันเดือนปีเกิด {FF0000}ตัวอย่างปี: 1900-2020", "แก้ไข", "กลับ");
		}
		else if (iMonth < 1 || iMonth > 12)
		{
			Dialog_Show(playerid, DIALOG_TUTORIALBIRTHDAY, DIALOG_STYLE_INPUT, "[ข้อมูลตัวละคร]", "{FFFFFF}ใส่วันเดือนปีเกิด {FF0000}ตัวอย่างเดือน: 1-12", "แก้ไข", "กลับ");
		}
		else if (iDay < 1 || iDay > arrMonthDays[iMonth - 1])
		{
			Dialog_Show(playerid, DIALOG_TUTORIALBIRTHDAY, DIALOG_STYLE_INPUT, "[ข้อมูลตัวละคร]", "{FFFFFF}ใส่วันเดือนปีเกิด {FF0000}ตัวอย่างวัน: 1-31", "แก้ไข", "กลับ");
		}
		else {
			format(playerData[playerid][pBirthday], 24, inputtext);
			ShowDialog_Tutorial(playerid);
		}
	}
	return 1;
}

Dialog:DIALOG_TUTORIALCONFIRM(playerid, response, listitem, inputtext[])
{
    if (!response)
    {
		ShowDialog_Tutorial(playerid);
    }
	else
	{
		playerData[playerid][IsLoggedIn] = true;

		switch(playerData[playerid][pGender])
		{
			case 1: playerData[playerid][pSkin] = 299;
			case 2: playerData[playerid][pSkin] = 298;
		}
		playerData[playerid][pInterior] = 0;
		playerData[playerid][pWorld] = 0;

		playerData[playerid][pTutorial] = 1;

		playerData[playerid][pThirsty] = 100;
		playerData[playerid][pHungry] = 100;

		playerData[playerid][pLevel] = 1;

		playerData[playerid][pHealth] = 100.0;
		playerData[playerid][pPhone] = random(900000) + 100000;

		ClearPlayerChat(playerid, 20);

		SendClientMessage(playerid, COLOR_TG, "Welcome to "SERVER_NAME" version: "SERVER_VERSION"");
		SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}คุณได้รับของเริ่มต้นดังนี้");
		SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}น้ำเปล่า {00FF00}5 {FFFFFF}ขวด");
		SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}พิซซ่า {00FF00}3 {FFFFFF}ชิ้น");
		SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}เงินสดจำนวน {00FF00}$5,000");
		SendClientMessageEx(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}มือถือ {00FF00}1 {FFFFFF}เครื่อง เบอร์: {00FF00}%d", playerData[playerid][pPhone]);
		SendClientMessage(playerid, COLOR_ADMIN, "[เซิร์ฟเวอร์] {FFFFFF}คุณสามารถเปิดช่องเก็บของได้โดยการกดปุ่ม {FFFF00}Y");

		GivePlayerMoneyEx(playerid, 5000); 
		Inventory_Add(playerid, "Water Bottle", 5);
		Inventory_Add(playerid, "Pizza", 5);
		Inventory_Add(playerid, "Phone", 1);

		UpdatePlayerRegister(playerid);

		SetSpawnInfo(playerid, NO_TEAM, playerData[playerid][pSkin], playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z], playerData[playerid][pPos_A], 0, 0, 0, 0, 0, 0);
		TogglePlayerSpectating(playerid, 0);
	}
	return 1;
}

Dialog:DIALOG_TUTORIALCONFIRM2(playerid, response, listitem, inputtext[])
{
	ShowDialog_Tutorial(playerid);
	return 1;
}

Dialog:DIALOG_TUTORIALCONFIRM3(playerid, response, listitem, inputtext[])
{
    if (!response)
    {
		ShowDialog_Tutorial(playerid);
    }
	else
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณออกเกมสำเร็จ...");
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ใช้คำสั่ง (/q) เพื่อออกจากหน้าต่างเกม");
		DelayedKick(playerid);
	}
	return 1;
}

Dialog:DIALOG_EDITRANKS(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    if (!factionData[playerData[playerid][pFactionEdit]][factionExists])
			return 0;

		playerData[playerid][pSelectedSlot] = listitem;
		Dialog_Show(playerid, DIALOG_SETRANKNAME, DIALOG_STYLE_INPUT, "[แก้ไขชื่อยศ]", "ยศ : %s (%d)\nใส่ชื่อยศลงด้านล่างเพื่อแก้ไข", "แก้ไข", "กลับ", FactionRanks[playerData[playerid][pFactionEdit]][playerData[playerid][pSelectedSlot]], playerData[playerid][pSelectedSlot] + 1);
	}
	return 1;
}

Dialog:DIALOG_SETRANKNAME(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    if (isnull(inputtext))
			return Dialog_Show(playerid, DIALOG_SETRANKNAME, DIALOG_STYLE_INPUT, "[แก้ไขชื่อยศ]", "ยศ : %s (%d)\nใส่ชื่อยศลงด้านล่างเพื่อแก้ไข", "แก้ไข", "กลับ", FactionRanks[playerData[playerid][pFactionEdit]][playerData[playerid][pSelectedSlot]], playerData[playerid][pSelectedSlot] + 1);

	    if (strlen(inputtext) > 32)
	        return Dialog_Show(playerid, DIALOG_SETRANKNAME, DIALOG_STYLE_INPUT, "[แก้ไขชื่อยศ]", "ชื่อยศต้องไม่เกิน 32 ตัวอักษร\nยศ : %s (%d)\nใส่ชื่อยศลงด้านล่างเพื่อแก้ไข", "แก้ไข", "กลับ", FactionRanks[playerData[playerid][pFactionEdit]][playerData[playerid][pSelectedSlot]], playerData[playerid][pSelectedSlot] + 1);

		format(FactionRanks[playerData[playerid][pFactionEdit]][playerData[playerid][pSelectedSlot]], 32, inputtext);
		Faction_SaveRanks(playerData[playerid][pFactionEdit]);

		Faction_ShowRanks(playerid, playerData[playerid][pFactionEdit]);
		SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ตั้งชื่อให้กับยศ %d ชื่อยศ \"%s\"", playerData[playerid][pSelectedSlot] + 1, inputtext);
	}
	else Faction_ShowRanks(playerid, playerData[playerid][pFactionEdit]);
	return 1;
}

Dialog:DIALOG_GROUP(playerid, response, listitem, inputtext[])
{
	//new factionid = FactionLocker_Nearest(playerid);

	//if (factionid == -1 || !IsNearFactionLocker(playerid))
		//return 0;

	if (response)
	{
 		switch (listitem)
   		{
     		case 0:
     		{
     		    factionLocker[playerid] = 0;
     		    Dialog_Show(playerid, DIALOG_GROUP_1, DIALOG_STYLE_LIST, "[คลังเก็บของ]", "ฝากเข้าล็อคเกอร์\nนำออกมาจากล็อคเกอร์", "ตกลง", "ยกเลิก");
     		}
     		case 1:
     		{
     		    factionLocker[playerid] = 1;
     		    Dialog_Show(playerid, DIALOG_GROUP_1, DIALOG_STYLE_LIST, "[คลังเก็บของ]", "ฝากเข้าล็อคเกอร์\nนำออกมาจากล็อคเกอร์", "ตกลง", "ยกเลิก");
     		}
     		case 2:
     		{
     		    factionLocker[playerid] = 2;
     		    Dialog_Show(playerid, DIALOG_GROUP_1, DIALOG_STYLE_LIST, "[คลังเก็บของ]", "ฝากเข้าล็อคเกอร์\nนำออกมาจากล็อคเกอร์", "ตกลง", "ยกเลิก");
     		}
     		case 3:
     		{
     		    factionLocker[playerid] = 3;
     		    Dialog_Show(playerid, DIALOG_GROUP_1, DIALOG_STYLE_LIST, "[คลังเก็บของ]", "ฝากเข้าล็อคเกอร์\nนำออกมาจากล็อคเกอร์", "ตกลง", "ยกเลิก");
     		}
		}
	}
	return 1;
}

Dialog:DIALOG_GROUP_1(playerid, response, listitem, inputtext[])
{
	//new factionid = FactionLocker_Nearest(playerid);

	//if (factionid == -1 || !IsNearFactionLocker(playerid))
		//return 0;

	if (response)
	{
 		switch (listitem)
   		{
   		    case 0:
   		    {
     		    Dialog_Show(playerid, DIALOG_GROUP_2, DIALOG_STYLE_INPUT, "[คลังเก็บของ]", "กรุณาระบุจำนวนที่คุณต้องการฝากเข้าล็อคเกอร์ :", "ตกลง", "ยกเลิก");
   		    }
   		    case 1:
   		    {
   		        Dialog_Show(playerid, DIALOG_GROUP_3, DIALOG_STYLE_INPUT, "[คลังเก็บของ]", "กรุณาระบุจำนวนที่คุณต้องการนำออกมาจากล็อคเกอร์ :", "ตกลง", "ยกเลิก");
   		    }
   		}
	}
	return 1;
}

Dialog:DIALOG_GROUP_2(playerid, response, listitem, inputtext[])
{
	new factionid = FactionLocker_Nearest(playerid), amount = strval(inputtext);

	//if (factionid == -1 || !IsNearFactionLocker(playerid))
		//return 0;

	if (response)
	{
 		switch (factionLocker[playerid]) // กัญชา โคเคน ปูน เงินแดง
   		{
   		    case 0:
   		    {
   		        if (amount <= 0)
   		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");
   		            
				if (Inventory_Count(playerid, "Cannabis") < amount)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีกัญชาไม่เพียงพอ");
					
				/*if (factionData[factionid][factionCannabis] >= 20)
				{
				    factionData[factionid][factionCannabis] = 20;
				    SendClientMessage(playerid, COLOR_LIGHTRED, "* คลังเก็บกัญชาของกลุ่มคุณ มีกัญชาสูงสุดแล้ว (20/20)");
					return 1;
				}*/
					
				Inventory_Remove(playerid, "Cannabis", amount);
                factionData[factionid][factionCannabis] += amount;
                
                factionLocker[playerid] = -1;
                
                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้ฝาก 'กัญชา' เข้าล็อคเกอร์ของกลุ่มคุณจำนวน %d", amount);
				return 1;
			}
   		    case 1:
   		    {
   		        if (amount <= 0)
   		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

				if (Inventory_Count(playerid, "Cocain") < amount)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีโคเคนไม่เพียงพอ");

				/*if (factionData[factionid][factionCocain] >= 20)
				{
				    factionData[factionid][factionCocain] = 20;
				    SendClientMessage(playerid, COLOR_LIGHTRED, "* คลังเก็บโคเคนของกลุ่มคุณ มีโคเคนสูงสุดแล้ว (20/20)");
					return 1;
				}*/

				Inventory_Remove(playerid, "Cocain", amount);
                factionData[factionid][factionCocain] += amount;

                factionLocker[playerid] = -1;

                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้ฝาก 'โคเคน' เข้าล็อคเกอร์ของกลุ่มคุณจำนวน %d", amount);
				return 1;
   		    }
   		    case 2:
   		    {
   		        if (amount <= 0)
   		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

				if (Inventory_Count(playerid, "Poon") < amount)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีปูนไม่เพียงพอ");

				/*if (factionData[factionid][factionPoon] >= 20)
				{
				    factionData[factionid][factionPoon] = 20;
				    SendClientMessage(playerid, COLOR_LIGHTRED, "* คลังเก็บปูนของกลุ่มคุณ มีปูนสูงสุดแล้ว (20/20)");
					return 1;
				}*/

				Inventory_Remove(playerid, "Poon", amount);
                factionData[factionid][factionPoon] += amount;

                factionLocker[playerid] = -1;

                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้ฝาก 'ปูน' เข้าล็อคเกอร์ของกลุ่มคุณจำนวน %d", amount);
				return 1;
   		    }
   		    case 3:
   		    {
   		        if (amount <= 0)
   		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

				if (playerData[playerid][pRedMoney] < amount)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินแดงไม่เพียงพอ");

				/*if (factionData[factionid][factionRedMoney] >= 100000)
				{
				    factionData[factionid][factionRedMoney] = 100000;
				    SendClientMessage(playerid, COLOR_LIGHTRED, "* คลังเก็บเงินแดงของกลุ่มคุณ มีเงินแดงสูงสุดแล้ว ($100,000/$100,000)");
					return 1;
				}*/

				playerData[playerid][pRedMoney] -= amount;
                factionData[factionid][factionRedMoney] += amount;

                factionLocker[playerid] = -1;

                SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้ฝาก 'เงินแดง' เข้าล็อคเกอร์ของกลุ่มคุณจำนวน $%s", FormatNumber(amount));
				return 1;
   		    }
		}
	}
	return 1;
}

Dialog:DIALOG_GROUP_3(playerid, response, listitem, inputtext[])
{
	new factionid = FactionLocker_Nearest(playerid), amount = strval(inputtext);

	//if (factionid == -1 || !IsNearFactionLocker(playerid))
		//return 0;

	if (response)
	{
 		switch (factionLocker[playerid]) // กัญชา โคเคน ปูน เงินแดง
   		{
   		    case 0:
   		    {
   		        if (amount <= 0)
   		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

				if (factionData[factionid][factionCannabis] < amount)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "* คลังเก็บกัญชาของคุณมีกัญชาไม่เพียงพอ");

				if (Inventory_Count(playerid, "Cannabis") >= 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีกัญชาจำนวนสูงสุดแล้ว!");

				Inventory_Add(playerid, "Cannabis", amount);
                factionData[factionid][factionCannabis] -= amount;

                factionLocker[playerid] = -1;

                SendClientMessageEx(playerid, COLOR_RED, "* คุณได้นำ 'กัญชา' ออกมาจากล็อคเกอร์ของกลุ่มคุณจำนวน %d", amount);
				return 1;
			}
   		    case 1:
   		    {
   		        if (amount <= 0)
   		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

				if (factionData[factionid][factionCocain] < amount)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "* คลังเก็บโคเคนของคุณมีโคเคนไม่เพียงพอ");

				if (Inventory_Count(playerid, "Cocain") >= 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีโคเคนจำนวนสูงสุดแล้ว!");

				Inventory_Add(playerid, "Cocain", amount);
                factionData[factionid][factionCocain] -= amount;

                factionLocker[playerid] = -1;

                SendClientMessageEx(playerid, COLOR_RED, "* คุณได้นำ 'โคเคน' ออกมาจากล็อคเกอร์ของกลุ่มคุณจำนวน %d", amount);
				return 1;
   		    }
   		    case 2:
   		    {
   		        if (amount <= 0)
   		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

				if (factionData[factionid][factionPoon] < amount)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "* คลังเก็บปูนของคุณมีปูนไม่เพียงพอ");

				if (Inventory_Count(playerid, "Poon") >= 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีปูนจำนวนสูงสุดแล้ว!");

				Inventory_Add(playerid, "Poon", amount);
                factionData[factionid][factionPoon] -= amount;

                factionLocker[playerid] = -1;

                SendClientMessageEx(playerid, COLOR_RED, "* คุณได้นำ 'ปูน' ออกมาจากล็อคเกอร์ของกลุ่มคุณจำนวน %d", amount);
				return 1;
   		    }
   		    case 3:
   		    {
   		        if (amount <= 0)
   		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

				if (factionData[factionid][factionRedMoney] < amount)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "* คลังเก็บเงินแดงของคุณมีเงินแดงไม่เพียงพอ");

				playerData[playerid][pRedMoney] += amount;
                factionData[factionid][factionRedMoney] -= amount;

                factionLocker[playerid] = -1;

                SendClientMessageEx(playerid, COLOR_RED, "* คุณได้นำ 'เงินแดง' ออกมาจากล็อคเกอร์ของกลุ่มคุณจำนวน $%s", FormatNumber(amount));
				return 1;
   		    }
		}
	}
	return 1;
}

Dialog:DIALOG_LOCKER(playerid, response, listitem, inputtext[])
{
	new factionid = FactionLocker_Nearest(playerid);

	/*if (factionid == -1 || !IsNearFactionLocker(playerid))
		return 0;*/

	if (response)
	{
	    static
	        string[512];

		string[0] = 0;

	    if (factionData[factionid][factionType] == FACTION_POLICE)
	    {
	        switch (listitem)
	        {
	            case 0:
	            {
	                if (!playerData[playerid][pOnDuty])
	                {
	                    playerData[playerid][pOnDuty] = true;
	                    playerData[playerid][pArmorOn] = true;
	                    SetPlayerArmour(playerid, 100.0);
	                    SetPlayerAttachedObject(playerid, 9,19142,1,0.106999,0.040999,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);

						SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "(( * [HQ] : %s %s ได้เริ่มต้นการปฏิบัติหน้าที่แล้ว ))", Faction_GetRank(playerid), GetPlayerNameEx(playerid));
	                    SetFactionColor(playerid);
	                }
	                else
	                {
	                    playerData[playerid][pOnDuty] = false;
	                    playerData[playerid][pArmorOn] = false;
	                    SetPlayerArmour(playerid, 0.0);
	                    ResetPlayerWeaponsEx(playerid);
	                    RemovePlayerAttachedObject(playerid, 9);

						SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "(( * [HQ] : %s %s ได้ออกจากการปฏิบัติหน้าที่แล้ว ))", Faction_GetRank(playerid), GetPlayerNameEx(playerid));
	                    SetPlayerColor(playerid, DEFAULT_COLOR);
	                    SetPlayerSkin(playerid, playerData[playerid][pSkin]);
	                }
				}
				case 1:
				{
                    Dialog_Show(playerid, DIALOG_LOCKERSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
					factionData[factionid][factionSkins][0],
					factionData[factionid][factionSkins][1],
					factionData[factionid][factionSkins][2],
					factionData[factionid][factionSkins][3],
					factionData[factionid][factionSkins][4],
					factionData[factionid][factionSkins][5],
					factionData[factionid][factionSkins][6],
					factionData[factionid][factionSkins][7]);
				}
				case 2:
				{
				    ResetPlayerWeaponsEx(playerid);
				    GivePlayerWeaponEx(playerid, 3, 1);
				    GivePlayerWeaponEx(playerid, 41, 1500);
				    GivePlayerWeaponEx(playerid, 23, 150);
				    GivePlayerWeaponEx(playerid, WEAPON_SHOTGUN, 50);
				}
				case 3:
				{
		            Dialog_Show(playerid, DIALOG_GROUP, DIALOG_STYLE_TABLIST_HEADERS, "[คลังเก็บของ]", "\
						ชื่อรายการ\tจำนวน\n\
						กัญชา\t{00FF00}%d\n\
						โคเคน\t{00FF00}%d\n\
						ปูน\t{00FF00}%d\n\
						เงินแดง\t{00FF00}$%s", "ตกลง", "ยกเลิก", factionData[factionid][factionCannabis], factionData[factionid][factionCocain], factionData[factionid][factionPoon], FormatNumber(factionData[factionid][factionRedMoney]));
				}
				case 4:
				{
					Dialog_Show(playerid, DIALOG_BUYSKIN2, DIALOG_STYLE_INPUT, "[สกินสำหรับหน่วยงาน]", "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ", "ซื้อ", "ออก");
				}
			}
	    }
	    else if (factionData[factionid][factionType] == FACTION_GOV)
	    {
	        switch (listitem)
	        {
	            case 0:
	            {
	                if (!playerData[playerid][pOnDuty])
	                {
	                    playerData[playerid][pOnDuty] = true;
	                    SetPlayerArmour(playerid, 100.0);

						SendFactionMessageEx(FACTION_GOV, COLOR_RADIO, "(( * [HQ] : %s %s ได้เริ่มต้นการปฏิบัติหน้าที่แล้ว ))", Faction_GetRank(playerid), GetPlayerNameEx(playerid));

	                    SetFactionColor(playerid);
	                }
	                else
	                {
	                    playerData[playerid][pOnDuty] = false;
	                    SetPlayerArmour(playerid, 0.0);
	                    ResetPlayerWeaponsEx(playerid);

						SendFactionMessageEx(FACTION_GOV, COLOR_RADIO, "(( * [HQ] : %s %s ได้ออกจากการปฏิบัติหน้าที่แล้ว ))", Faction_GetRank(playerid), GetPlayerNameEx(playerid));

	                    SetPlayerColor(playerid, DEFAULT_COLOR);
	                    SetPlayerSkin(playerid, playerData[playerid][pSkin]);
	                }
				}
				case 1:
				{
                    Dialog_Show(playerid, DIALOG_LOCKERSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
					factionData[factionid][factionSkins][0],
					factionData[factionid][factionSkins][1],
					factionData[factionid][factionSkins][2],
					factionData[factionid][factionSkins][3],
					factionData[factionid][factionSkins][4],
					factionData[factionid][factionSkins][5],
					factionData[factionid][factionSkins][6],
					factionData[factionid][factionSkins][7]);
					
					//Dialog_Show(playerid, DIALOG_BUYSKIN2, DIALOG_STYLE_INPUT, "[สกินสำหรับหน่วยงาน]", "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ", "ซื้อ", "ออก");
				}
				case 2:
				{
				    ResetPlayerWeaponsEx(playerid);
				    GivePlayerWeaponEx(playerid, 3, 1);
				    GivePlayerWeaponEx(playerid, 41, 1500);
				    GivePlayerWeaponEx(playerid, 23, 150);
				    GivePlayerWeaponEx(playerid, WEAPON_SHOTGUN, 50);
				}
				case 3:
				{
		            Dialog_Show(playerid, DIALOG_GROUP, DIALOG_STYLE_TABLIST_HEADERS, "[คลังเก็บของ]", "\
						ชื่อรายการ\tจำนวน\n\
						กัญชา\t{00FF00}%d\n\
						โคเคน\t{00FF00}%d\n\
						ปูน\t{00FF00}%d\n\
						เงินแดง\t{00FF00}$%s", "ตกลง", "ยกเลิก", factionData[factionid][factionCannabis], factionData[factionid][factionCocain], factionData[factionid][factionPoon], FormatNumber(factionData[factionid][factionRedMoney]));
				}
				case 4:
				{
					Dialog_Show(playerid, DIALOG_BUYSKIN2, DIALOG_STYLE_INPUT, "[สกินสำหรับหน่วยงาน]", "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ", "ซื้อ", "ออก");
				}
			}
	    }
	    else if (factionData[factionid][factionType] == FACTION_MEDIC)
	    {
	        switch (listitem)
	        {
	            case 0:
	            {
	                if (!playerData[playerid][pOnDuty])
	                {
	                    playerData[playerid][pOnDuty] = true;
	                    SetPlayerArmour(playerid, 100.0);

						SendFactionMessageEx(FACTION_MEDIC, COLOR_RADIO, "(( * [HQ] : %s %s ได้เริ่มต้นการปฏิบัติหน้าที่แล้ว ))", Faction_GetRank(playerid), GetPlayerNameEx(playerid));

	                    SetFactionColor(playerid);
	                }
	                else
	                {
	                    playerData[playerid][pOnDuty] = false;
	                    SetPlayerArmour(playerid, 0.0);
	                    ResetPlayerWeaponsEx(playerid);

						SendFactionMessageEx(FACTION_MEDIC, COLOR_RADIO, "(( * [HQ] : %s %s ได้ออกจากการปฏิบัติหน้าที่แล้ว ))", Faction_GetRank(playerid), GetPlayerNameEx(playerid));

	                    SetPlayerColor(playerid, DEFAULT_COLOR);
	                    SetPlayerSkin(playerid, playerData[playerid][pSkin]);
	                }
				}
				case 1:
				{
                    Dialog_Show(playerid, DIALOG_LOCKERSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
					factionData[factionid][factionSkins][0],
					factionData[factionid][factionSkins][1],
					factionData[factionid][factionSkins][2],
					factionData[factionid][factionSkins][3],
					factionData[factionid][factionSkins][4],
					factionData[factionid][factionSkins][5],
					factionData[factionid][factionSkins][6],
					factionData[factionid][factionSkins][7]);
					
					//Dialog_Show(playerid, DIALOG_BUYSKIN2, DIALOG_STYLE_INPUT, "[สกินสำหรับหน่วยงาน]", "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ", "ซื้อ", "ออก");
				}
				case 2:
				{
				    /*ResetPlayerWeaponsEx(playerid);
				    GivePlayerWeaponEx(playerid, WEAPON_NITESTICK, 1);
				    GivePlayerWeaponEx(playerid, WEAPON_SPRAYCAN, 500);*/
				}
				case 3:
				{
		            Dialog_Show(playerid, DIALOG_GROUP, DIALOG_STYLE_TABLIST_HEADERS, "[คลังเก็บของ]", "\
						ชื่อรายการ\tจำนวน\n\
						กัญชา\t{00FF00}%d\n\
						โคเคน\t{00FF00}%d\n\
						ปูน\t{00FF00}%d\n\
						เงินแดง\t{00FF00}$%s", "ตกลง", "ยกเลิก", factionData[factionid][factionCannabis], factionData[factionid][factionCocain], factionData[factionid][factionPoon], FormatNumber(factionData[factionid][factionRedMoney]));
				}
				case 4:
				{
					Dialog_Show(playerid, DIALOG_BUYSKIN2, DIALOG_STYLE_INPUT, "[สกินสำหรับหน่วยงาน]", "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ", "ซื้อ", "ออก");
				}
			}
	    }
	    else if (factionData[factionid][factionType] == FACTION_GANG)
	    {
			if (GetFactionType(playerid) == FACTION_POLICE)
			{
		        switch (listitem)
		        {
					case 0:
					{
	                    Dialog_Show(playerid, DIALOG_LOCKERSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
						factionData[factionid][factionSkins][0],
						factionData[factionid][factionSkins][1],
						factionData[factionid][factionSkins][2],
						factionData[factionid][factionSkins][3],
						factionData[factionid][factionSkins][4],
						factionData[factionid][factionSkins][5],
						factionData[factionid][factionSkins][6],
						factionData[factionid][factionSkins][7]);
					}
					case 1:
					{
					    /*ResetPlayerWeaponsEx(playerid);
					    GivePlayerWeaponEx(playerid, 15, 1);*/
					}
					case 2:
					{
					
					}
					case 3:
					{
			            Dialog_Show(playerid, DIALOG_GROUP, DIALOG_STYLE_TABLIST_HEADERS, "[คลังเก็บของ]", "\
							ชื่อรายการ\tจำนวน\n\
							กัญชา\t{00FF00}%d\n\
							โคเคน\t{00FF00}%d\n\
							ปูน\t{00FF00}%d\n\
							เงินแดง\t{00FF00}$%s", "ตกลง", "ยกเลิก", factionData[factionid][factionCannabis], factionData[factionid][factionCocain], factionData[factionid][factionPoon], FormatNumber(factionData[factionid][factionRedMoney]));
					}
					case 4:
					{
					    SetPlayerSkin(playerid, playerData[playerid][pSkin]);
					}

				}
			}
			else
			{
		        switch (listitem)
		        {
					case 0:
					{
	                    Dialog_Show(playerid, DIALOG_LOCKERSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
						factionData[factionid][factionSkins][0],
						factionData[factionid][factionSkins][1],
						factionData[factionid][factionSkins][2],
						factionData[factionid][factionSkins][3],
						factionData[factionid][factionSkins][4],
						factionData[factionid][factionSkins][5],
						factionData[factionid][factionSkins][6],
						factionData[factionid][factionSkins][7]);
					}
					case 1:
					{
					    /*ResetPlayerWeaponsEx(playerid);
					    GivePlayerWeaponEx(playerid, 15, 1);*/
					}
					case 2:
					{
			            Dialog_Show(playerid, DIALOG_GROUP, DIALOG_STYLE_TABLIST_HEADERS, "[คลังเก็บของ]", "\
							ชื่อรายการ\tจำนวน\n\
							กัญชา\t{00FF00}%d\n\
							โคเคน\t{00FF00}%d\n\
							ปูน\t{00FF00}%d\n\
							เงินแดง\t{00FF00}$%s", "ตกลง", "ยกเลิก", factionData[factionid][factionCannabis], factionData[factionid][factionCocain], factionData[factionid][factionPoon], FormatNumber(factionData[factionid][factionRedMoney]));
					}
					case 3:
					{
					    SetPlayerSkin(playerid, playerData[playerid][pSkin]);
					}

				}
			}
	    }
	    else if (factionData[factionid][factionType] == FACTION_MEC)
	    {
	        switch (listitem)
	        {
	            case 0:
	            {
	                if (!playerData[playerid][pOnDuty])
	                {
	                    playerData[playerid][pOnDuty] = true;

						SendFactionMessageEx(FACTION_MEC, COLOR_RADIO, "(( * [HQ] : %s %s ได้เริ่มต้นการปฏิบัติหน้าที่แล้ว ))", Faction_GetRank(playerid), GetPlayerNameEx(playerid));

	                    SetFactionColor(playerid);
	                }
	                else
	                {
	                    playerData[playerid][pOnDuty] = false;
	                    SetPlayerArmour(playerid, 0.0);
	                    ResetPlayerWeaponsEx(playerid);

						SendFactionMessageEx(FACTION_MEC, COLOR_RADIO, "(( * [HQ] : %s %s ได้ออกจากการปฏิบัติหน้าที่แล้ว ))", Faction_GetRank(playerid), GetPlayerNameEx(playerid));

	                    SetPlayerColor(playerid, DEFAULT_COLOR);
	                    SetPlayerSkin(playerid, playerData[playerid][pSkin]);
	                }
				}
				case 1:
				{
                    Dialog_Show(playerid, DIALOG_LOCKERSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
					factionData[factionid][factionSkins][0],
					factionData[factionid][factionSkins][1],
					factionData[factionid][factionSkins][2],
					factionData[factionid][factionSkins][3],
					factionData[factionid][factionSkins][4],
					factionData[factionid][factionSkins][5],
					factionData[factionid][factionSkins][6],
					factionData[factionid][factionSkins][7]);
					
					//Dialog_Show(playerid, DIALOG_BUYSKIN2, DIALOG_STYLE_INPUT, "[สกินสำหรับหน่วยงาน]", "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ", "ซื้อ", "ออก");
				}
				case 2:
				{
				    /*ResetPlayerWeaponsEx(playerid);
				    GivePlayerWeaponEx(playerid, 15, 1);*/
				}
				case 3:
				{
		            Dialog_Show(playerid, DIALOG_GROUP, DIALOG_STYLE_TABLIST_HEADERS, "[คลังเก็บของ]", "\
						ชื่อรายการ\tจำนวน\n\
						กัญชา\t{00FF00}%d\n\
						โคเคน\t{00FF00}%d\n\
						ปูน\t{00FF00}%d\n\
						เงินแดง\t{00FF00}$%s", "ตกลง", "ยกเลิก", factionData[factionid][factionCannabis], factionData[factionid][factionCocain], factionData[factionid][factionPoon], FormatNumber(factionData[factionid][factionRedMoney]));
				}
				case 4:
				{
					Dialog_Show(playerid, DIALOG_BUYSKIN2, DIALOG_STYLE_INPUT, "[สกินสำหรับหน่วยงาน]", "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ", "ซื้อ", "ออก");
				}
			}
	    }
	}
	return 1;
}

Dialog:DIALOG_LOCKERSKIN(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFaction];

	if (factionid == -1 || !IsNearFactionLocker(playerid))
		return 0;

	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        if(factionData[factionid][factionSkins][0] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        //playerData[playerid][pSkin] = factionData[factionid][factionSkins][0];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][0]);
		    }
		    case 1:
		    {
		        if(factionData[factionid][factionSkins][1] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        //playerData[playerid][pSkin] = factionData[factionid][factionSkins][1];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][1]);
		    }
		    case 2:
		    {
		        if(factionData[factionid][factionSkins][2] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        //playerData[playerid][pSkin] = factionData[factionid][factionSkins][2];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][2]);
		    }
		    case 3:
		    {
		        if(factionData[factionid][factionSkins][3] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        //playerData[playerid][pSkin] = factionData[factionid][factionSkins][3];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][3]);
		    }
		    case 4:
		    {
		        if(factionData[factionid][factionSkins][4] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        //playerData[playerid][pSkin] = factionData[factionid][factionSkins][4];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][4]);
		    }
		    case 5:
		    {
		        if(factionData[factionid][factionSkins][5] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        //playerData[playerid][pSkin] = factionData[factionid][factionSkins][5];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][5]);
		    }
		    case 6:
		    {
		        if(factionData[factionid][factionSkins][6] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        //playerData[playerid][pSkin] = factionData[factionid][factionSkins][6];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][6]);
		    }
		    case 7:
		    {
		        if(factionData[factionid][factionSkins][7] == 0)
		            return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสกินอยู่ในตู้เซฟ");

		        //playerData[playerid][pSkin] = factionData[factionid][factionSkins][7];
				SetPlayerSkin(playerid, factionData[factionid][factionSkins][7]);
		    }
		}
	}
	return 1;
}

Dialog:DIALOG_FACTIONSKIN(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];

	if (factionid == -1)
	    return 0;

	if (response)
	{
	    switch (listitem)
	    {
	        case 0:
	        {
				Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
				factionData[factionid][factionSkins][0],
				factionData[factionid][factionSkins][1],
				factionData[factionid][factionSkins][2],
				factionData[factionid][factionSkins][3],
				factionData[factionid][factionSkins][4],
				factionData[factionid][factionSkins][5],
				factionData[factionid][factionSkins][6],
				factionData[factionid][factionSkins][7]);
			}
		}
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];

	if (factionid == -1)
	    return 0;

	if (response)
	{
	    switch (listitem)
	    {
	        case 0:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN1, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 1:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN2, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 2:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN3, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 3:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN4, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 4:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN5, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 5:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN6, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 6:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN7, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
	        case 7:
	        {
                Dialog_Show(playerid, DIALOG_EDITSKIN8, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "กรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN1(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN1, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN1, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][0] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN2(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN2, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN2, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][1] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN3(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN3, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN3, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][2] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN4(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN4, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN4, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][3] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN5(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN5, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN5, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][4] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN6(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN6, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN6, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][5] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN7(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN7, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN7, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][6] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_EDITSKIN8(playerid, response, listitem, inputtext[])
{
	new factionid = playerData[playerid][pFactionEdit];
	new number;

	if (factionid == -1)
	    return 0;

	if (response)
	{
		if(sscanf(inputtext, "i", number)) return Dialog_Show(playerid, DIALOG_EDITSKIN8, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** เฉพาะตัวเลขเท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		if(number < 1 || number > 299) return Dialog_Show(playerid, DIALOG_EDITSKIN8, DIALOG_STYLE_INPUT, "[ตู้เก็บเสื้อผ้า]", "** สกินมีแค่ 1-299 เท่านั้น!\nกรุณาใส่เลขสกินที่ต้องการลงไป", "ตกลง", "ออก");
		factionData[factionid][factionSkins][7] = number;
		Faction_Save(factionid);
		Dialog_Show(playerid, DIALOG_EDITSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "สกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)\nสกินเลข (%d)", "ตกลง", "ออก",
		factionData[factionid][factionSkins][0],
		factionData[factionid][factionSkins][1],
		factionData[factionid][factionSkins][2],
		factionData[factionid][factionSkins][3],
		factionData[factionid][factionSkins][4],
		factionData[factionid][factionSkins][5],
		factionData[factionid][factionSkins][6],
		factionData[factionid][factionSkins][7]);
	}
	return 1;
}

Dialog:DIALOG_FACTIONLOCKER(playerid, response, listitem, inputtext[])
{
	if (playerData[playerid][pFactionEdit] == -1)
	    return 0;

	if (response)
	{
	    switch (listitem)
	    {
	        case 0:
	        {
			    static
			        Float:x,
			        Float:y,
			        Float:z;

				GetPlayerPos(playerid, x, y, z);

				factionData[playerData[playerid][pFactionEdit]][factionLockerPosX] = x;
				factionData[playerData[playerid][pFactionEdit]][factionLockerPosY] = y;
				factionData[playerData[playerid][pFactionEdit]][factionLockerPosZ] = z;

				factionData[playerData[playerid][pFactionEdit]][factionLockerInt] = GetPlayerInterior(playerid);
				factionData[playerData[playerid][pFactionEdit]][factionLockerWorld] = GetPlayerVirtualWorld(playerid);

				Faction_Refresh(playerData[playerid][pFactionEdit]);
				Faction_Save(playerData[playerid][pFactionEdit]);
				SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ปรับตำแหน่งตู้เซฟให้กลุ่ม %d", playerData[playerid][pFactionEdit]);
			}
		}
	}
	return 1;
}

stock SQL_ReturnEscaped(const string[])
{
	new
	    entry[256];

	mysql_escape_string(string, entry);
	return entry;
}

// --> ระบบแต่งรถ
alias:car_tune("ช่าง")
CMD:car_tune(playerid, const params[])
{
    if (GetFactionType(playerid) != FACTION_MEC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ช่าง!");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มียศในการแต่ง");

	new ModelVehicle = GetVehicleModel(GetPlayerVehicleID(playerid));

	if(GetModel(ModelVehicle))
		return SendClientMessage(playerid, C_AVISO, "รถของคุณไม่สามารถแต่งได้");

	SelectTextDraw(playerid,0x708090FF);
	for(new i = 0; i < sizeof(wTuning1); i++){TextDrawShowForPlayer(playerid, wTuning1[i]);}

	return 1;
}

alias:ModVeg("แต่งรถ")
CMD:ModVeg(playerid)
{
	if (playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, -1, "คุณไม่ได้รับอนุญาติ");

    if (GetFactionType(playerid) != FACTION_MEC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ช่าง!");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มียศในการแต่ง");

	return 1;
}

alias:savedata("เชฟ")
CMD:savedata(playerid, params[])
{
	if(playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, -1, "คุณไม่ได้รับอนุญาติ");

	foreach (new i : Player){
		if(playerData[i][IsLoggedIn]){
            UpdateplayerData(i);
		}
	}
	SendClientMessage(playerid, COLOR_YELLOW, "คุณได้ Save ข้อมูลเซิฟเวอร์เรียบร้อยแล้ว!");
	return 1;
}


//SendClientMessage(playerid, COLOR, "ข้อความ");
// string = ข้อความ
//Addwhitelist
CMD:whitelist(playerid, params[]){ //  /addpc [nameplayer] \\ /addpc Justinz

	if(playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, -1, "คุณไม่ได้รับอนุญาติให้ใช้คำสั่งนี้");

	//params รับชื่อผู้เล่นเข้ามา
	if(isnull(params))
	    return SendClientMessage(playerid, -1, "คุณจำเป็นต้องกรอกชื่อผู้เล่นที่จะให้ไวริส");

	new string[128];

	format(string, sizeof(string), "UPDATE `players` SET `playerWhitelist` = %d WHERE `playerName` = '%s'", 1, SQL_ReturnEscaped(params));
	mysql_tquery(g_SQL, string);

	new string2[128];

	format(string2, sizeof(string2), "คุณได้ให้ไวริสคอมกับผู้เล่น %s เรียบร้อยแล้ว", params);
	SendClientMessage(playerid, -1, string2);
	return 1;
}

CMD:createhouse(playerid, params[])
{
	static
	    price,
	    id,
	    address[32];

    if (playerData[playerid][pAdmin] < 6)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "ds[32]", price, address))
	    return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /createhouse [ราคา] [ชื่อบ้าน]");

	for (new i = 0; i != MAX_HOUSES; i ++) if (HouseData[i][houseExists] && !strcmp(HouseData[i][houseAddress], address, true)) {
	    return SendClientMessageEx(playerid, COLOR_GREY, "ที่อยู่ \"%s\" ถูกใช้งานแล้ว (ไอดี : %d)", address, i);
	}
	id = House_Create(playerid, address, price);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_GREY, "เซิร์ฟเวอร์มีจำนวนบ้านถึงขีด จำกัด แล้ว");

	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณได้ทำการสร้างบ้านไอดี %d เรียบร้อยแล้ว", id);
	return 1;
}

CMD:destroyhouse(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /destroyhouse [house id]");

	if ((id < 0 || id >= MAX_HOUSES) || !HouseData[id][houseExists])
	    return SendClientMessage(playerid, COLOR_GREY, "คุณระบุบ้านที่ไม่ถูกต้อง ID");

	House_Delete(id);
	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณได้ทำการลบบ้านไอดี %d ออกจากฐานข้อมูลแล้ว", id);
	return 1;
}

CMD:checkhouse(playerid, params[])
{
	static
	    id = -1;

	if ((id = House_Nearest(playerid)) != -1)
	    SendClientMessageEx(playerid, COLOR_GREY, "คุณกำลังยืนอยู่ ใกล้ ๆ กับบ้านไอดี : %d", id);

	return 1;
}

CMD:buyhouse(playerid, params[])
{
	new
		id = -1;

	if ((id = House_Nearest(playerid)) != -1)
	{
		if (House_GetCount(playerid) >= MAX_OWNABLE_HOUSES)
			return SendClientMessageEx(playerid, COLOR_GREY, "คุณมีบ้าน %d แห่งแล้วตอนนี้", MAX_OWNABLE_HOUSES);

		if (HouseData[id][houseOwner] != 0)
			return SendClientMessage(playerid, COLOR_GREY, "บ้านแห่งนี้มีเจ้าของแล้ว");

		if (HouseData[id][housePrice] > GetPlayerMoneyEx(playerid))
			return SendClientMessage(playerid, COLOR_GREY, "คุณมีเงินไม่เพียงพอที่จะซื้อ");

		HouseData[id][houseOwner] = GetPlayerSQLID(playerid);

		House_Refresh(id);
		House_Save(id);

		GivePlayerMoneyEx(playerid, -HouseData[id][housePrice]);
		SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "คุณได้ซื้อ \"%s\" เป็นจำนวน %s!", HouseData[id][houseAddress], FormatNumber(HouseData[id][housePrice]));
	}

	return 1;
}

CMD:edithouse(playerid, params[])
{
	static
	    id,
	    type[24],
	    string[128];

	if (playerData[playerid][pAdmin] < 6)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "ds[24]S()[128]", id, type, string))
 	{
	 	SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /edithouse [id] [name]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[NAMES]:{FFFFFF} location, interior, price, address, type");
		return 1;
	}
	if ((id < 0 || id >= MAX_HOUSES) || !HouseData[id][houseExists])
	    return SendClientMessage(playerid, COLOR_GREY, "เกิดข้อผิดพลาดเกี่ยวกับบ้าน");

	if (!strcmp(type, "location", true))
	{
		GetPlayerPos(playerid, HouseData[id][housePos][0], HouseData[id][housePos][1], HouseData[id][housePos][2]);
		GetPlayerFacingAngle(playerid, HouseData[id][housePos][3]);

		HouseData[id][houseExterior] = GetPlayerInterior(playerid);
		HouseData[id][houseExteriorVW] = GetPlayerVirtualWorld(playerid);

		House_Refresh(id);
		House_Save(id);

		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s ได้ปรับตำแหน่งบ้านไอดี : %d", GetPlayerNameEx(playerid), id);
	}
	else if (!strcmp(type, "interior", true))
	{
	    GetPlayerPos(playerid, HouseData[id][houseInt][0], HouseData[id][houseInt][1], HouseData[id][houseInt][2]);
		GetPlayerFacingAngle(playerid, HouseData[id][houseInt][3]);

		HouseData[id][houseInterior] = GetPlayerInterior(playerid);

        foreach (new i : Player)
		{
			if (playerData[i][pHouse] == HouseData[id][houseID])
			{
				SetPlayerPos(i, HouseData[id][houseInt][0], HouseData[id][houseInt][1], HouseData[id][houseInt][2]);
				SetPlayerFacingAngle(i, HouseData[id][houseInt][3]);

				SetPlayerInterior(i, HouseData[id][houseInterior]);
				SetCameraBehindPlayer(i);
			}
		}
		House_Save(id);
		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s ได้ปรับแต่งภายในบ้านไอดี : %d", GetPlayerNameEx(playerid), id);
	}
	else if (!strcmp(type, "price", true))
	{
	    new price;

	    if (sscanf(string, "d", price))
	        return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /edithouse [id] [price] [new price]");

	    HouseData[id][housePrice] = price;

	    House_Refresh(id);
	    House_Save(id);

		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s ได้ปรับแต่งราคาบ้านไอดี %d เป็น %s", GetPlayerNameEx(playerid), id, FormatNumber(price));
	}
	else if (!strcmp(type, "address", true))
	{
	    new address[32];

	    if (sscanf(string, "s[32]", address))
	        return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /edithouse [id] [address] [new address]");

	    format(HouseData[id][houseAddress], 32, address);

	    House_Refresh(id);
	    House_Save(id);

		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s ได้ปรับแต่งชื่อบ้านไอดี %d เป็น \"%s\"", GetPlayerNameEx(playerid), id, address);
	}
	else if (!strcmp(type, "type", true))
	{
	    new typeint;

	    if (sscanf(string, "d", typeint))
	        return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : /edithouse [id] [type] [interior type]");

		if (typeint < 1 || typeint > sizeof(arrHouseInteriors))
			return SendClientMessageEx(playerid, COLOR_GREY, "เกิดข้อผิอพลาด (1-%d)", sizeof(arrHouseInteriors));

	    HouseData[id][houseInt][0] = arrHouseInteriors[typeint][eHouseX];
	    HouseData[id][houseInt][1] = arrHouseInteriors[typeint][eHouseY];
	    HouseData[id][houseInt][2] = arrHouseInteriors[typeint][eHouseZ];
	    HouseData[id][houseInt][3] = arrHouseInteriors[typeint][eHouseAngle];
        HouseData[id][houseInterior] = arrHouseInteriors[typeint][eHouseInterior];

		foreach (new i : Player)
		{
			if (playerData[i][pHouse] == HouseData[id][houseID])
			{
				SetPlayerPos(i, HouseData[id][houseInt][0], HouseData[id][houseInt][1], HouseData[id][houseInt][2]);
				SetPlayerFacingAngle(i, HouseData[id][houseInt][3]);

				SetPlayerInterior(i, HouseData[id][houseInterior]);
				SetCameraBehindPlayer(i);
			}
		}
	    House_Save(id);
		SendAdminAlert(COLOR_LIGHTRED, "[ADMIN]: %s ได้ปรับเปลี่ยนภายในบ้านไอดี : %d เป็นแบบ %d", GetPlayerNameEx(playerid), id, typeint);
	}
	return 1;
}


// --> ระบบ Animation ส่วนตัว
alias:ai("ท่าทาง")
CMD:ai(playerid, params[])
{
	Dialog_Show(playerid, D_Animlist, DIALOG_STYLE_TABLIST, "ท่าทาง", "{FFFFFF}ยกเลิกท่าทาง\n>> ยกมือ\n>> เอามือกุมหัว\n>> บาดเจ็บ\n>> เยี่ยว\n>> นอนหงายหน้า\n>> นอนคว้ำหน้า\n>> กอดอก\n>> ตบตูด\n>> นั่งเก้าอี้\n>> โบกรถ(ซ้าย)\n>> โบกรถ(ขวา)\n>> ดูดบุหรี่\n>> พิงกำแพง\n>> ท้าทาย", "เลือก", "ออก");
	return 1;
}

// --> ระบบค้นหาตัวผู้ร้าย
/*CMD:chm(playerid, params[])
{
	static
	    userid;

	if (GetFactionType(playerid) != FACTION_POLICE && GetFactionType(playerid) != FACTION_MEDIC && GetFactionType(playerid) != FACTION_GOV)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับรัฐบาลเท่านั้น!");

    if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/chm [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถค้นหาตัวเองได้");

	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(userid, X,Y,Z);

	targetonname[playerid] = userid;
	SetPlayerCheckpoint(playerid, X,Y,Z, 5);

	targeton[playerid] = 1;
	SendClientMessage(playerid, COLOR_GREY, "คุณได้ใช้เครื่อง GPS ค้นหาผู้เล่นนี้ /offchm เพื่อหยุดค้นหา !");

	return 1;
}
alias:chm("cgps")*/

CMD:roadblock(playerid, params[])
{
	if (GetFactionType(playerid) != FACTION_POLICE)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับตำรวจเท่านั้น!");

	if (playerData[playerid][pRoadblock] != -1)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องเก็บด่านเก่าออกก่อน ถึงสร้างใหม่ได้ /rrb ในการเก็บ");

	new Float:X, Float:Y, Float:Z, Float:A;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);
	playerData[playerid][pRoadblock] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
	SetPlayerPos(playerid, X, Y, Z+4);
	GameTextForPlayer(playerid, "~w~Roadblock ~r~Placed", 5000, 5);
	SendClientMessage(playerid, COLOR_SERVER, "คุณได้ทำการตั้งด่านสำเร็จ");
	SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "HQ: เจ้าหน้าที่ %s ได้ตั้งด่านอยู่ที่พิกัด (%.4f, %.4f, %.4f)", GetPlayerNameEx(playerid), X, Y, Z);
	return 1;
}
alias:roadblock("rb")

CMD:roadunblock(playerid, params[])
{
	if (GetFactionType(playerid) != FACTION_POLICE)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับตำรวจเท่านั้น!");

	if (playerData[playerid][pRoadblock] == -1)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยังไม่มีการตั้งด่านเกิดขึ้น");

	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	DestroyDynamicObject(playerData[playerid][pRoadblock]);
	playerData[playerid][pRoadblock] = -1;
	SendClientMessage(playerid, COLOR_SERVER, "คุณได้ทำการเก็บด่านสำเร็จ");
	SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "HQ: เจ้าหน้าที่ %s ได้ทำการเก็บด่านที่พิกัด (%.4f, %.4f, %.4f)", GetPlayerNameEx(playerid), X, Y, Z);
	return 1;
}
alias:roadunblock("rrb")

CMD:roadunblockall(playerid, params[])
{
	if (GetFactionType(playerid) != FACTION_POLICE)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับตำรวจเท่านั้น!");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีอำนาจในการเก็บด่านทั้งหมด");

	foreach(new i : Player)
	{
	    if (playerData[i][pRoadblock] != -1)
	    {
			DestroyDynamicObject(playerData[i][pRoadblock]);
			playerData[i][pRoadblock] = -1;
		}
	}
	SendClientMessage(playerid, COLOR_SERVER, "คุณได้ทำการเก็บด่านทั้งหมดสำเร็จ");
	SendFactionMessageEx(FACTION_POLICE, COLOR_RADIO, "HQ: เจ้าหน้าที่ %s ได้ทำการเก็บด่านทั้งหมด", GetPlayerNameEx(playerid));
	return 1;
}
alias:roadunblockall("rrball")

CMD:tazer(playerid, params[])
{
	if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT || !IsPlayerSpawnedEx(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใช้งานได้ ต้องอยู่บนพื้นเท่านั้น");

	if (GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับรัฐบาลเท่านั้น!");

	if (!playerData[playerid][pTazer])
	{
	    playerData[playerid][pTazer] = 1;
		GivePlayerWeaponEx(playerid, 23, 20000);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบปืนช็อตไฟฟ้าออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
	}
	else
	{
	    playerData[playerid][pTazer] = 0;
	    SetPlayerAmmo(playerid, 23, 0);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บปืนช็อตไฟฟ้าลงในกระเป๋า", GetPlayerNameEx(playerid));
	}
	return 1;
}

// --> วาร์ปไปเลเบล
/*alias:label("ไปเลเบล")
CMD:label(playerid, params[])
{
	if (playerData[playerid][pJailTime] > 0)
 		return SendClientMessage(playerid, COLOR_GREY, "คุณติดคุกอยู่ไม่สามารถใช้งานคำสั่งได้");

	if (GetPlayerWantedLevelEx(playerid) > 0)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใช้คำสั่งได้หากคุณมีคดีติดตัว!");

	if (GetFactionType(playerid) == FACTION_POLICE && GetFactionType(playerid) != FACTION_MEDIC && GetFactionType(playerid) != FACTION_GOV)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ตำรวจไม่สามารถวาร์ปไปเลเบลได้");

	SetPlayerPos(playerid, 1946.8229,-1380.2924,18.5781);
	SetPlayerFacingAngle(playerid, 125.3696);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	GivePlayerMoneyEx(playerid, -1000);

	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้ Teleport เข้ามาภายในเลเบลแล้ว");
	//SendClientMessageToAllEx(COLOR_LIGHTBLUE, "{F5E30B}[Label] : %s {FFFFFF}ได้เข้าสู่สนามรบ Label แล้ว !! {F5E30B}(/label)", GetPlayerNameEx(playerid));

	return 1;
}*/

// --> ระบบค้นตัวผู้ต้องหา
CMD:frisk(playerid, params[])
{
    new
	    userid;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/frisk [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถค้นหาของผิดกฎหมายของตัวเองได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerState(userid) != PLAYER_STATE_ONFOOT)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในยานพาหนะ");

    if (!playerData[userid][pCuffed])
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้ถูกใส่กุญแจมืออยู่");

    if (!Inventory_HasItem(userid, "Cannabis") && !Inventory_HasItem(userid, "Cocain") && !Inventory_HasItem(userid, "Poon") && playerData[userid][pRedMoney] == 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "- ไม่พบของผิดกฎหมายใด ๆ ภายในตัวของ %s", GetPlayerNameEx(userid));
	    return 1;
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_LIGHTRED, "- พบของผิดกฎหมายภายในตัว %s", GetPlayerNameEx(userid));
		SendClientMessageEx(playerid, COLOR_LIGHTRED, "กัญชา : {FFFFFF}%d",Inventory_Count(userid, "Cannabis"));
		SendClientMessageEx(playerid, COLOR_LIGHTRED, "โคเคน : {FFFFFF}%d",Inventory_Count(userid, "Cocain"));
		SendClientMessageEx(playerid, COLOR_LIGHTRED, "ปูน : {FFFFFF}%d",Inventory_Count(userid, "Poon"));
		SendClientMessageEx(playerid, COLOR_LIGHTRED, "เงินแดง : {FFFFFF}$%s",FormatNumber(playerData[userid][pRedMoney]));

        SendClientMessage(playerid, -1, "หากคุณต้องการยึดของผิดกฎหมาย พิมพ์คำสั่ง /takecannabis");
	    return 1;
 }
}
alias:frisk("7")

// --> ระบบยึดของผิดกฎหมาย
CMD:takecannabis(playerid, params[])
{
    new
	    userid;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/takecannabis [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถยึดของผิดกฎหมายของตัวเองได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerState(userid) != PLAYER_STATE_ONFOOT)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในยานพาหนะ");

    if (!playerData[userid][pCuffed])
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้ถูกใส่กุญแจมืออยู่");

    if (!Inventory_HasItem(userid, "Cannabis") && !Inventory_HasItem(userid, "Cocain") && !Inventory_HasItem(userid, "Poon") && playerData[userid][pRedMoney] == 0)
	{
		SendClientMessageEx(playerid, COLOR_GREY, "- ไม่พบของผิดกฎหมายใด ๆ ภายในตัวของ %s", GetPlayerNameEx(userid));
	    return 1;
	}
	
	new weedammo = Inventory_Count(userid, "Cannabis");
	new cocainammo = Inventory_Count(userid, "Cocain");
	new poonammo = Inventory_Count(userid, "Poon");
	new redmoneyammo = playerData[userid][pRedMoney];

	Inventory_Add(playerid, "Cocain", cocainammo);
	Inventory_Remove(userid, "Cocain", cocainammo);

	Inventory_Add(playerid, "Cannabis", weedammo);
	Inventory_Remove(userid, "Cannabis", weedammo);

	Inventory_Add(playerid, "Poon", poonammo);
	Inventory_Remove(userid, "Poon", poonammo);

    playerData[playerid][pRedMoney] += redmoneyammo;
    playerData[userid][pRedMoney] = 0;

	SendClientMessage(playerid, COLOR_RED, "|========== ยึดของผิดกฎหมาย ==========|");
	SendClientMessageEx(playerid, COLOR_LIGHTRED, "คุณได้ยึด 'กัญชา' จำนวน %d จาก %s", weedammo, GetPlayerNameEx(userid));
	SendClientMessageEx(playerid, COLOR_LIGHTRED, "คุณได้ยึด 'โคเคน' จำนวน %d จาก %s", cocainammo, GetPlayerNameEx(userid));
	SendClientMessageEx(playerid, COLOR_LIGHTRED, "คุณได้ยึด 'ปูน' จำนวน %d จาก %s", poonammo, GetPlayerNameEx(userid));
	SendClientMessageEx(playerid, COLOR_LIGHTRED, "คุณได้ยึด 'เงินแดง' จำนวน $%s จาก %s", FormatNumber(redmoneyammo), GetPlayerNameEx(userid));

	SendClientMessage(userid, COLOR_RED, "|========== ยึดของผิดกฎหมาย ==========|");
	SendClientMessageEx(userid, COLOR_LIGHTRED, "คุณถูกยึด 'กัญชา' จำนวน %d จาก %s", weedammo, GetPlayerNameEx(playerid));
	SendClientMessageEx(userid, COLOR_LIGHTRED, "คุณถูกยึด 'โคเคน' จำนวน %d จาก %s", cocainammo, GetPlayerNameEx(playerid));
	SendClientMessageEx(userid, COLOR_LIGHTRED, "คุณถูกยึด 'ปูน' จำนวน %d จาก %s", poonammo, GetPlayerNameEx(playerid));
	SendClientMessageEx(userid, COLOR_LIGHTRED, "คุณถูกยึด 'เงินแดง' จำนวน $%s จาก %s", FormatNumber(redmoneyammo), GetPlayerNameEx(playerid));

    return 1;
}
alias:takecannabis("8")

// --> ระบบค้นหาตัวผู้ร้าย
CMD:offchm(playerid, params[])
{

	targeton[playerid] = 0;
	DisablePlayerCheckpoint(playerid);
	SendClientMessage(playerid, COLOR_GREY, "คุณได้ปิดเครื่อง CHM แล้ว !");

	return 1;
}
alias:offchm("ccgps")

alias:accept("ยอมรับ")
CMD:accept(playerid, params[])
{
	if (isnull(params))
 	{
	 	SendClientMessage(playerid, COLOR_WHITE, "/ยอมรับ [ชื่อรายการ]");
		SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} เข้าแก็ง, ซื้อรถ");
		return 1;
	}
	if (!strcmp(params, "เข้าแก็ง", true) && playerData[playerid][pFactionOffer] != INVALID_PLAYER_ID)
	{
	    new
	        targetid = playerData[playerid][pFactionOffer],
	        factionid = playerData[playerid][pFactionOffered];

		if (!factionData[factionid][factionExists] || playerData[targetid][pFactionRank] < factionData[playerData[targetid][pFaction]][factionRanks] - 1)
	   	 	return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ข้อเสนอถูกยกเลิก");

		SetFaction(playerid, factionid);
		playerData[playerid][pFactionRank] = 1;

		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ยอมรับข้อเสนอจากคุณ {33CCFF}%s {FFFFFF}ที่เสนอให้เข้าร่วมกลุ่ม \"%s\" ยินดีด้วย!", GetPlayerNameEx(targetid), Faction_GetName(targetid));
		SendClientMessageEx(targetid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ยืนยันข้อเสนอในการเข้าร่วมกลุ่ม \"%s\"", GetPlayerNameEx(playerid), Faction_GetName(targetid));

        playerData[playerid][pFactionOffer] = INVALID_PLAYER_ID;
        playerData[playerid][pFactionOffered] = -1;
	}
	else if(!strcmp(params, "ซื้อรถ", true))
	{
		new
		    offeredby = playerData[playerid][pCarSeller],
		    vehicleid = playerData[playerid][pCarOffered],
		    price = playerData[playerid][pCarValue];

	    if(offeredby == INVALID_PLAYER_ID)
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครเสนอขายรถให้คุณ");
	    }
	    if(!IsPlayerNearPlayer(playerid, offeredby, 5.0))
		{
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องอยู่ในระยะใกล้กัน");
	    }
	    if(!IsVehicleOwner(offeredby, vehicleid))
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นคนนั้นไม่ได้เป็นเจ้าของรถคันนี้อีกต่อไปแล้ว");
	    }
	    if(GetPlayerMoneyEx(playerid) < price)
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอ");
	    }

	    GetPlayerName(playerid, carData[vehicleid][carOwner], MAX_PLAYER_NAME);
	    carData[vehicleid][carOwnerID] = playerData[playerid][pID];
		new query[128];
	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carOwnerID = %d, carOwner = '%s' WHERE carID = %d", carData[vehicleid][carOwnerID], carData[vehicleid][carOwner], carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);

	    GivePlayerMoneyEx(offeredby, price);
	    GivePlayerMoneyEx(playerid, -price);

	    SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ตอบรับข้อเสนอ %s ในการซื้อรถรุ่น %s ราคา %s", GetPlayerNameEx(offeredby), ReturnVehicleName(vehicleid), FormatMoney(price));
	    SendClientMessageEx(offeredby, COLOR_SERVER, "** %s ได้ตอบรับข้อเสนอของคุณในการขายรถรุ่น %s ราคา %s", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid), FormatMoney(price));

	    playerData[playerid][pCarSeller] = INVALID_PLAYER_ID;
	}
	return 1;
}


CMD:fightstyle0(playerid, params[])
{
	SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
	SendClientMessage(playerid, 0xFFFFFFAA, "คุณได้เปลี่ยนท่าต่อสู้เป็นธรรมดา !");
    return 1;
}
CMD:fightstyle1(playerid, params[])
{
	SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
	SendClientMessage(playerid, 0xFFFFFFAA, "คุณได้เปลี่ยนท่าต่อสู้เป็นมวย !");
	return 1;
}
CMD:fightstyle2(playerid, params[])
{
	SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
	SendClientMessage(playerid, 0xFFFFFFAA, "คุณได้เปลี่ยนท่าต่อสู้เป็นกังฟู!");
	return 1;
}

alias:buycar("ซื้อของ")
CMD:buycar(playerid, params[])
{
	static string[4096];

	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 542.0433, -1293.5909, 17.2422))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ร้านขายรถ");
	}
	if(GetSpawnedVehicles(playerid) >= MAX_SPAWNED_VEHICLES)
    {
        return SendClientMessageEx(playerid, COLOR_GREY, "[ระบบ] {FFFFFF}รถของคุณจอดครบ %d คันแล้ว กรุณาเก็บคันใดคันนึง", MAX_SPAWNED_VEHICLES);
    }

	if(isnull(string))
	{
	    string = "หมวดหมู่\tชื่อรุ่น\tราคา";

	    for(new i = 0; i < sizeof(vehicleArray); i ++)
	    {
	        format(string, sizeof(string), "%s\n%s\t%s\t{00AA00}%s{FFFFFF}", string, vehicleArray[i][carCategory], g_arrVehicleNames[vehicleArray[i][carModel] - 400], FormatMoney(vehicleArray[i][carPrice]));
		}
	}

	Dialog_Show(playerid, DIALOG_BUYVEHICLE, DIALOG_STYLE_TABLIST_HEADERS, "[ร้านขายรถ]", string, "ซื้อ", "ยกเลิก");
	return 1;
}

alias:car("เรียกรถ")
CMD:car(playerid, const params[])
{
	new query[128];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `vehicles` WHERE `carOwnerID` = %d", playerData[playerid][pID]);
	mysql_tquery(g_SQL, query, "OnQueryFinished", "dd", playerid, THREAD_LIST_VEHICLES);
	return 1;
}

alias:park("จอดรถ")
CMD:park(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid), id = carData[vehicleid][carID], query[300];

	if(!vehicleid || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถโดยต้องเป็นสถานะคนขับเท่านั้น");
	}
	if(!IsVehicleOwner(playerid, vehicleid) && playerData[playerid][pVehicleKeys] != vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}

	SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้จอดรถรุ่น %s", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid));
 	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้บันทึกจุดเกิดรถรุ่น %s สำเร็จ", ReturnVehicleName(vehicleid));

	// Save the vehicle's information.
	GetVehiclePos(vehicleid, carData[vehicleid][carPosX], carData[vehicleid][carPosY], carData[vehicleid][carPosZ]);
	GetVehicleZAngle(vehicleid, carData[vehicleid][carPosA]);

    carData[vehicleid][carInterior] = GetPlayerInterior(playerid);
    carData[vehicleid][carWorld] = GetPlayerVirtualWorld(playerid);

	// Update the database record with the new information, then despawn the vehicle.
	mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPosX = '%f', carPosY = '%f', carPosZ = '%f', carPosA = '%f', carInterior = %d, carWorld = %d WHERE carID = %d", carData[vehicleid][carPosX], carData[vehicleid][carPosY], carData[vehicleid][carPosZ], carData[vehicleid][carPosA], carData[vehicleid][carInterior], carData[vehicleid][carWorld], carData[vehicleid][carID]);
	mysql_tquery(g_SQL, query);
	DespawnVehicle(vehicleid);

	// Finally, we reload the vehicle from the database.
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM vehicles WHERE carID = %d", id);
	mysql_tquery(g_SQL, query, "OnPlayerSpawnVehicle", "ii", playerid, true);

	return 1;
}

alias:givekeys("ให้กุญแจรถ")
CMD:givekeys(playerid, params[])
{
	new targetid, vehicleid = GetPlayerVehicleID(playerid);

	if(!vehicleid || !IsVehicleOwner(playerid, vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(sscanf(params, "u", targetid))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/ให้กุญแจรถ [ไอดี/ชื่อ]");
	}
	if(!IsPlayerConnected(targetid) || !IsPlayerNearPlayer(playerid, targetid, 5.0))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");
	}
	if(targetid == playerid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถส่งให้ตัวเองได้");
	}
	if(playerData[targetid][pVehicleKeys] == vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้มีกุญแจรถอยู่แล้ว");
	}

	playerData[targetid][pVehicleKeys] = vehicleid;

	SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้ให้กุญแจรถ %s แก่ %s", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid), GetPlayerNameEx(targetid));
	SendClientMessageEx(targetid, COLOR_SERVER, "%s ได้ให้กุญแจรถรุ่น %s กับคุณ", ReturnVehicleName(vehicleid), GetPlayerNameEx(playerid));
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ให้กุญแจรถรุ่น %s แก่ %s", ReturnVehicleName(vehicleid), GetPlayerNameEx(targetid));
	return 1;
}

alias:takekeys("เก็บกุญแจรถ")
CMD:takekeys(playerid, params[])
{
	new targetid, vehicleid = GetPlayerVehicleID(playerid);

	if(!vehicleid || !IsVehicleOwner(playerid, vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(sscanf(params, "u", targetid))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/เก็บกุญแจรถ [ไอดี/ชื่อ]");
	}
	if(!IsPlayerConnected(targetid) || !IsPlayerNearPlayer(playerid, targetid, 5.0))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");
	}
	if(targetid == playerid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถเอากุญแจกับตัวเองได้");
	}
	if(playerData[targetid][pVehicleKeys] != vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่มีกุญแจของคุณ");
	}

	playerData[targetid][pVehicleKeys] = INVALID_VEHICLE_ID;

	SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้เอากุญแจรถรุ่น %s จาก %s", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid), GetPlayerNameEx(targetid));
	SendClientMessageEx(targetid, COLOR_SERVER, "%s ได้เอากุญแจรถรุ่น %s ของเขาคืน", ReturnVehicleName(vehicleid), GetPlayerNameEx(playerid));
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้เอากุญแจรถรุ่น %s คืนจาก %s", ReturnVehicleName(vehicleid), GetPlayerNameEx(targetid));
	return 1;
}

alias:decar("เก็บรถ")
CMD:decar(playerid, params[])
{
 	new string[MAX_SPAWNED_VEHICLES * 64], count;

 	string = "#\tชื่อรุ่น";

 	for(new i = 1; i < MAX_VEHICLES; i ++)
 	{
 	    if(IsValidVehicle(i) && carData[i][carID] > 0 && IsVehicleOwner(playerid, i))
 	    {
 	        format(string, sizeof(string), "%s\n%d\t%s", string, count + 1, ReturnVehicleName(i));
 	        count++;
		}
	}

	if(!count)
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีรถของคุณจอดอยู่ในเซิร์ฟเวอร์ตอนนี้");
	}
	else
	{
	    Dialog_Show(playerid, DIALOG_DESPAWNCAR, DIALOG_STYLE_TABLIST_HEADERS, "[เลือกรถของคุณที่ต้องการจะเก็บ]", string, "ตกลง", "ปิด");
	}

	return 1;
}

alias:findcar("จุดจอดรถ")
CMD:findcar(playerid, params[])
{
    new string[MAX_SPAWNED_VEHICLES * 64], count;

 	string = "#\tชื่อรุ่น";

 	for(new i = 1; i < MAX_VEHICLES; i ++)
 	{
 	    if(IsValidVehicle(i) && carData[i][carID] > 0 && IsVehicleOwner(playerid, i))
 	    {
 	        format(string, sizeof(string), "%s\n%d\t%s", string, count + 1, ReturnVehicleName(i));
 	        count++;
		}
	}

	if(!count)
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีรถจอดอยู่ในเซิร์ฟเวอร์เลย");
	}
	else
	{
	    Dialog_Show(playerid, DIALOG_FINDCAR, DIALOG_STYLE_TABLIST_HEADERS, "[เลือกรถที่ต้องการจะหา]", string, "หา", "ปิด");
	}

	return 1;
}

/*alias:upgradevehicle("อัพรถ")
CMD:upgradevehicle(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid), option[8], param[32];

	if(!vehicleid || !IsVehicleOwner(playerid, vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(!IsPlayerInRangeOfPoint(playerid, 8.0, 542.0433, -1293.5909, 17.2422))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ร้านขายรถ");
	}
	if(sscanf(params, "s[8]S()[32]", option, param))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/อัพรถ [ช่องเก็บเงิน | ป้ายทะเบียน]");
	}

	if(!strcmp(option, "1", true))
	{
	    if(isnull(param) || strcmp(param, "ยืนยัน", true) != 0)
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "/อัพรถ [1] [ยืนยัน]");
	        SendClientMessageEx(playerid, COLOR_GREY3, "ช่องเก็บของเลเวลปัจจุบัน %d/3 ค่าอัพเกรดราคา $10,000", carData[vehicleid][carTrunk]);
	        return 1;
		}
		if(carData[vehicleid][carTrunk] >= 3)
		{
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เลเวลช่องเก็บของเต็มแล้ว 3/3");
		}
		if(GetPlayerMoneyEx(playerid) < 10000)
		{
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอ $10,000");
		}

		carData[vehicleid][carTrunk]++;

		GivePlayerMoneyEx(playerid, -10000);
		GameTextForPlayer(playerid, "~r~-$10000", 5000, 1);
		new query[128];
		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carTrunk = %d WHERE carID = %d", carData[vehicleid][carTrunk], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		SendClientMessageEx(playerid, COLOR_GREEN, "คุณได้อัพเกรดช่องเก็บของเป็นเลเวล %d/3 ในราคา $10,000 '/เก็บของในรถ เช็ค' ในการดูช่องเก็บของ", carData[vehicleid][carTrunk]);
	}
	else if(!strcmp(option, "2", true))
	{
	    if(isnull(param))
	    {
	        return SendClientMessage(playerid, COLOR_WHITE, "/อัพรถ [2] [เลขป้าย] (ราคา $20,000)");
	    }
	    if(!IsEngineVehicle(vehicleid))
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่รองรับการใส่ป้ายทะเบียน");
	    }

	    strcpy(carData[vehicleid][carPlate], param, 32);

		SetVehicleNumberPlate(vehicleid, param);
	    ResyncVehicle(vehicleid);

	    GivePlayerMoneyEx(playerid, -20000);
		GameTextForPlayer(playerid, "~r~-$20000", 5000, 1);
		new query[128];
		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPlate = '%e' WHERE carID = %d", param, carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		SendClientMessageEx(playerid, COLOR_GREEN, "คุณได้จ่ายเงิน $20,000 ในการเปลี่ยนป้ายทะเบียนเป็น '%s'", param);
	}

	return 1;
}

alias:vstash("เก็บของในรถ")
CMD:vstash(playerid, params[])
{
	new vehicleid = GetNearbyVehicle(playerid);
	new query[300];

	if(vehicleid != INVALID_VEHICLE_ID && IsVehicleOwner(playerid, vehicleid))
	{
	    new option[14], param[32];

		if(!carData[vehicleid][carTrunk])
		{
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มีช่องเก็บของ /อัพรถ ในการอัพเกรด");
	    }
	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่หลังรถ");
		}
		if(sscanf(params, "s[14]S()[32]", option, param))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/เก็บของในรถ [1 | 2 | เอาออก]");
	    }
	    if(!strcmp(option, "1", true))
	    {
	        SendClientMessage(playerid, COLOR_GREEN, "|_____ ช่องเก็บของ _____|");
	        SendClientMessageEx(playerid, COLOR_GREY2, "เงิน: %s/%s", FormatMoney(carData[vehicleid][carCash]), FormatMoney(GetVehicleStashCapacity(vehicleid, STASH_CAPACITY_CASH)));
		}
		else if(!strcmp(option, "2", true))
	    {
	        new value;

	        if(sscanf(param, "s[14]S()[32]", option, param))
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "/เก็บของในรถ [ใส่] [ชื่อรายการ]");
	            SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} เงิน");
	            return 1;
	        }
	        if(!strcmp(option, "เงิน", true))
			{
			    if(sscanf(param, "i", value))
			    {
			        return SendClientMessage(playerid, COLOR_WHITE, "/เก็บของในรถ [2] [เงิน] [จำนวน]");
				}
				if(value < 1 || value > GetPlayerMoneyEx(playerid))
				{
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอ");
			    }
			    if(carData[vehicleid][carCash] + value > GetVehicleStashCapacity(vehicleid, STASH_CAPACITY_CASH))
			    {
			        return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องเก็บของในรถสามารถใส่เงินได้มากสุดแค่ %s", FormatMoney(GetVehicleStashCapacity(vehicleid, STASH_CAPACITY_CASH)));
			    }

			    GivePlayerMoneyEx(playerid, -value);
			    carData[vehicleid][carCash] += value;
			    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carCash = %d WHERE carID = %d", carData[vehicleid][carCash], carData[vehicleid][carID]);
			    mysql_tquery(g_SQL, query);

			    SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ใส่เงินจำนวน %s ลงในช่องเก็บของรถ", FormatMoney(value));
			}
		}
		else if(!strcmp(option, "เอาออก", true))
	    {
	        new value;

	        if(sscanf(param, "s[14]S()[32]", option, param))
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "/เก็บของในรถ [เอาออก] [ชื่อรายการ]");
	            SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} เงิน");
	            return 1;
	        }
	        if(!strcmp(option, "เงิน", true))
			{
			    if(sscanf(param, "i", value))
			    {
			        return SendClientMessage(playerid, COLOR_WHITE, "/เก็บของในรถ [เอาออก] [เงิน] [จำนวน]");
				}
				if(value < 1 || value > carData[vehicleid][carCash])
				{
				    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอ");
			    }

			    GivePlayerMoneyEx(playerid, value);
			    carData[vehicleid][carCash] -= value;

			    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carCash = %d WHERE carID = %d", carData[vehicleid][carCash], carData[vehicleid][carID]);
			    mysql_tquery(g_SQL, query);

			    SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้เอาเงินจำนวน %s ออกจากช่องเก็บของในรถ", FormatMoney(value));
			}
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ใกล้รถของคุณ");
	}

	return 1;
}
*/
CMD:neon(playerid, params[])
{
    new vehicleid = GetPlayerVehicleID(playerid);

	if(!vehicleid || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถโดยต้องเป็นสถานะคนขับเท่านั้น");
	}
	if(!IsVehicleOwner(playerid, vehicleid) && playerData[playerid][pVehicleKeys] != vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(!carData[vehicleid][carNeon])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มี Neon");
	}

	if(!carData[vehicleid][carNeonEnabled])
	{
	    carData[vehicleid][carNeonEnabled] = 1;
	    GameTextForPlayer(playerid, "~g~Neon activated", 3000, 3);

	    SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้กดปุ่มเพื่อเปิด Neon", GetPlayerNameEx(playerid));
	}
	else
	{
	    carData[vehicleid][carNeonEnabled] = 0;
	    GameTextForPlayer(playerid, "~r~Neon deactivated", 3000, 3);

	    SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้กดปุ่มเพื่อปิด Neon", GetPlayerNameEx(playerid));
	}
	new query[128];
	mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carNeonEnabled = %d WHERE carID = %d", carData[vehicleid][carNeonEnabled], carData[vehicleid][carID]);
	mysql_tquery(g_SQL, query);

	ReloadVehicleNeon(vehicleid);
	return 1;
}

CMD:unmod(playerid, params[])
{
    new vehicleid = GetPlayerVehicleID(playerid), query[200];

	if(!vehicleid || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถโดยต้องเป็นสถานะคนขับเท่านั้น");
	}
	if(!IsVehicleOwner(playerid, vehicleid) && playerData[playerid][pVehicleKeys] != vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(isnull(params))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/unmod [color | paintjob | mods | neon]");
	}

	if(!strcmp(params, "color", true))
	{
	    carData[vehicleid][carColor1] = 0;
	    carData[vehicleid][carColor2] = 0;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carColor1 = 0, carColor2 = 0 WHERE carID = %d", carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);

	    SetVehicleColor(vehicleid, 0, 0);
	    SendClientMessage(playerid, COLOR_WHITE, "** สีรถของคุณได้กลับมาเป็นสีปกติ");
	}
	else if(!strcmp(params, "paintjob", true))
	{
	    carData[vehicleid][carPaintjob] = -1;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPaintjob = -1 WHERE carID = %d", carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);

	    ChangeVehiclePaintjob(vehicleid, -1);
	    SendClientMessage(playerid, COLOR_WHITE, "** ลายรถของคุณได้กลับมาเป็นปกติ");
	}
	else if(!strcmp(params, "mods", true))
	{
	    for(new i = 0; i < 14; i ++)
	    {
	        if(carData[vehicleid][carMods][i] >= 1000)
	        {
	            RemoveVehicleComponent(vehicleid, carData[vehicleid][carMods][i]);
	        }
	    }

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carMod1 = 0, carMod2 = 0, carMod3 = 0, carMod4 = 0, carMod5 = 0, carMod6 = 0, carMod7 = 0, carMod8 = 0, carMod9 = 0, carMod10 = 0, carMod11 = 0, carMod12 = 0, carMod13 = 0, carMod14 = 0 WHERE carID = %d", carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);

	    SendClientMessage(playerid, COLOR_WHITE, "** ของแต่งรถถูกถอดออกทั้งหมด");
	}
	else if(!strcmp(params, "neon", true))
	{
	    if(!carData[vehicleid][carNeon])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มี Neon");
		}

		if(carData[vehicleid][carNeonEnabled])
		{
		    DestroyDynamicObject(carData[vehicleid][carObjects][0]);
		    DestroyDynamicObject(carData[vehicleid][carObjects][1]);
		}

		carData[vehicleid][carNeon] = 0;
		carData[vehicleid][carNeonEnabled] = 0;
		carData[vehicleid][carObjects][0] = INVALID_OBJECT_ID;
		carData[vehicleid][carObjects][1] = INVALID_OBJECT_ID;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carNeon = 0, carNeonEnabled = 0 WHERE id = %d", carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);

	    SendClientMessage(playerid, COLOR_WHITE, "** Neon ถูกถอดออกจากรถ");
	}

	return 1;
}

/*CMD:colorcar(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid), color1, color2;

	if(sscanf(params, "ii", color1, color2))
	{
	    return SendClientMessage(playerid, COLOR_GREY3, "[Usage]: /colorcar [color1] [color2]");
	}
	if(playerData[playerid][pSpraycans] <= 0)
	{
	    return SendClientMessage(playerid, COLOR_GREY, "You have no spraycans left.");
	}
	if(!vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_GREY, "You are not sitting inside any vehicle.");
	}
	if(carData[vehicleid][vOwnerID] > 0 && !IsVehicleOwner(playerid, vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_GREY, "This vehicle doesn't belong to you, therefore you can't respray it.");
	}
	if(!(0 <= color1 <= 255) || !(0 <= color2 <= 255))
	{
	    return SendClientMessage(playerid, COLOR_GREY, "The color specified must range between 0 and 255.");
	}

    if(carData[vehicleid][vOwnerID] > 0 || carData[vehicleid][vGang] >= 0)
	{
	    carData[vehicleid][vColor1] = color1;
	    carData[vehicleid][vColor2] = color2;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET color1 = %d, color2 = %d WHERE id = %d", color1, color2, carData[vehicleid][vID]);
	    mysql_tquery(g_SQL, query);
	}

	playerData[playerid][pSpraycans]--;

	mysql_format(g_SQL, query, sizeof(query), "UPDATE users SET spraycans = %d WHERE uid = %d", playerData[playerid][pSpraycans], playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);

	ChangeVehicleColor(vehicleid, color1, color2);
	SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s uses their spraycan to spray their vehicle a different color.", GetPlayerNameEx(playerid));

	PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
	SendClientMessageEx(playerid, COLOR_WHITE, "** Vehicle resprayed. You have %d spraycans left.", playerData[playerid][pSpraycans]);
	return 1;
}*/

/*CMD:paintcar(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid), paintjobid;

	if(sscanf(params, "i", paintjobid))
	{
	    return SendClientMessage(playerid, COLOR_GREY3, "[Usage]: /paintcar [paintjobid (-1 = none)]");
	}
	if(playerData[playerid][pSpraycans] <= 0)
	{
	    return SendClientMessage(playerid, COLOR_GREY, "You have no spraycans left.");
	}
	if(!vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_GREY, "You are not sitting inside any vehicle.");
	}
	if(carData[vehicleid][vOwnerID] > 0 && !IsVehicleOwner(playerid, vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_GREY, "This vehicle doesn't belong to you, therefore you can't respray it.");
	}
	if(!(-1 <= paintjobid <= 5))
	{
	    return SendClientMessage(playerid, COLOR_GREY, "The paintjob specified must range between -1 and 5.");
	}

    if(carData[vehicleid][vOwnerID] > 0 || carData[vehicleid][vGang] >= 0)
	{
	    carData[vehicleid][vPaintjob] = paintjobid;

	    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET paintjob = %d WHERE id = %d", paintjobid, carData[vehicleid][vID]);
	    mysql_tquery(g_SQL, query);
	}

    playerData[playerid][pSpraycans]--;

	mysql_format(g_SQL, query, sizeof(query), "UPDATE users SET spraycans = %d WHERE uid = %d", playerData[playerid][pSpraycans], playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);

	ChangeVehiclePaintjob(vehicleid, paintjobid);
	SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s uses their spraycan to paint their vehicle a different color.", GetPlayerNameEx(playerid));

	PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
	SendClientMessageEx(playerid, COLOR_WHITE, "** Vehicle painted. You have %d spraycans left.", playerData[playerid][pSpraycans]);
	return 1;
}*/

alias:sellcar("ขายรถ")
CMD:sellcar(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid), targetid, amount;

	if(!vehicleid || !IsVehicleOwner(playerid, vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(sscanf(params, "ui", targetid, amount))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/ขายรถ [ไอดี/ชื่อ] [ราคา]");
	}
	if(!IsPlayerConnected(targetid) || !IsPlayerNearPlayer(playerid, targetid, 5.0))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");
	}
	if(targetid == playerid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ขายให้ตัวเองไม่ได้");
	}
	if(amount < 1)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาต้องไม่ต่ำกว่า $1");
	}

	playerData[targetid][pCarSeller] = playerid;
	playerData[targetid][pCarOffered] = vehicleid;
	playerData[targetid][pCarValue] = amount;

	SendClientMessageEx(targetid, COLOR_SERVER, "** %s ได้เสนอขายรถรุ่น %s ในราคา %s (/ยอมรับ vehicle ในการยินยอมคำสั่งซื้อ)", ReturnVehicleName(vehicleid), GetPlayerNameEx(playerid), FormatMoney(amount));
	SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้เสนอขายรถรุ่น %s ให้ %s ในราคา %s", ReturnVehicleName(vehicleid), GetPlayerNameEx(targetid), FormatMoney(amount));
	return 1;
}

alias:sellmycar("ขายรถให้ร้าน")
CMD:sellmycar(playerid, params[])
{
 	new vehicleid = GetPlayerVehicleID(playerid), query[128];

	if(!vehicleid || !IsVehicleOwner(playerid, vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(!IsPlayerInRangeOfPoint(playerid, 8.0, 542.0433, -1293.5909, 17.2422))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ร้านขายรถ");
	}
	if(strcmp(params, "ยืนยัน", true) != 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/sellmycar [ยืนยัน]");
	    SendClientMessageEx(playerid, COLOR_RED, "รถคันนี้จะถูกลบออกถาวรและคุณจะได้รับเงินกลับจำนวน %s", FormatMoney(percent(carData[vehicleid][carPrice], 75)));
	    return 1;
	}

	GivePlayerMoneyEx(playerid, percent(carData[vehicleid][carPrice], 75));

	SendClientMessageEx(playerid, COLOR_GREEN, "คุณได้ขายรถรุ่น %s คืนร้านในราคา %s สำเร็จ", ReturnVehicleName(vehicleid), FormatMoney(percent(carData[vehicleid][carPrice], 75)));

	mysql_format(g_SQL, query, sizeof(query), "DELETE FROM vehicles WHERE carID = %d", carData[vehicleid][carID]);
	mysql_tquery(g_SQL, query);

	DespawnVehicle(vehicleid, false);

	return 1;
}

CMD:listpvehs(playerid, params[])
{
	new targetid;

    if(playerData[playerid][pAdmin] < 3)
	{
		return 1;
	}
	if(sscanf(params, "u", targetid))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/listpvehs [ไอดี/ชื่อ]");
	}
	if(!IsPlayerConnected(targetid))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");
	}

	SendClientMessageEx(playerid, COLOR_GREEN, "|____ %s's Vehicles ____|", GetPlayerNameEx(targetid));

    for(new i = 1; i < MAX_VEHICLES; i ++)
    {
        if(IsValidVehicle(i) && carData[i][carID] > 0 && IsVehicleOwner(targetid, i))
        {
            SendClientMessageEx(playerid, COLOR_GREY2, "ไอดี: %d | รุ่น: %s", i, ReturnVehicleName(i));
		}
	}

	return 1;
}

CMD:despawnpveh(playerid, params[])
{
	new vehicleid;

    if(playerData[playerid][pAdmin] < 3)
	{
	    return 1;
	}
	if(sscanf(params, "i", vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/despawnpveh [vehicleid]");
	}
	if(!IsValidVehicle(vehicleid) || !carData[vehicleid][carOwnerID])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ต้องเป็นรถส่วนตัวเท่านั้น");
	}

	SendClientMessageEx(playerid, COLOR_WHITE, "** คุณได้ลบรถรุ่น %s ของ %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner]);
	DespawnVehicle(vehicleid);
	return 1;
}

CMD:veh(playerid, params[])
{
	new model[20], modelid, color1, color2, Float:x, Float:y, Float:z, Float:a, vehicleid;

	if(playerData[playerid][pAdmin] < 3)
	{
	    return 1;
	}
	if(sscanf(params, "s[20]I(-1)I(-1)", model, color1, color2))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/veh [ไอดียานพาหนะ/ชื่อยานพาหนะ] [สีที่ 1] [สีที่ 2]");
	}
	if((modelid = GetVehicleModelByName(model)) == 0)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ชื่อยานพาหนะ / ไอดียานพาหนะ ไม่ถูกต้อง");
	}
	if(!(-1 <= color1 <= 255) || !(-1 <= color2 <= 255))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สีต้องไม่ต่ำกว่า 0 และไม่เกิน 255");
	}

	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, a);

	vehicleid = CreateVehicle(modelid, x, y, z, a, color1, color2, -1);

	if(vehicleid == INVALID_VEHICLE_ID)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถเต็มเซิร์ฟเวอร์แล้ว");
	}

	adminVehicle[vehicleid] = true;
	vehicleFuel[vehicleid] = vehicleData[modelid - 400][vFuel];
	vehicleColors[vehicleid][0] = color1;
	vehicleColors[vehicleid][1] = color2;

	SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));

	PutPlayerInVehicle(playerid, vehicleid, 0);
	SendAdminMessage(COLOR_ADMIN, "AdmCmd: %s ได้เสกรถรุ่น %s", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid));
	SendClientMessageEx(playerid, COLOR_WHITE, "** %s (ไอดี %d) ใช้ /savevehicle ในการบันทึกลงฐานข้อมูล", ReturnVehicleName(vehicleid), vehicleid);
	return 1;
}

CMD:savevehicle(playerid, params[])
{
	new factionid, Float:x, Float:y, Float:z, Float:a, query[500];

    if(playerData[playerid][pAdmin] < 6)
	{
	    return 1;
	}
	if (!IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

	if(sscanf(params, "dd", factionid))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/savevehicle [ไอดีกลุ่ม (-1 คือประชาชน)]");
	    return 1;
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!IsValidVehicle(vehicleid) || !adminVehicle[vehicleid])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะคันนี้ไม่ได้ถูกเสกมาโดยแอดมิน");
	}
    if ((factionid < -1 || factionid >= MAX_FACTIONS) || (factionid != -1 && !factionData[factionid][factionExists]))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

    SendClientMessageEx(playerid, COLOR_WHITE, "** %s คุณได้บันทึกยานพาหนะ %s ลงฐานข้อมูลสำเร็จ", ReturnVehicleName(vehicleid));

	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);

	mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carModel, carPosX, carPosY, carPosZ, carPosA, carColor1, carColor2, carFaction) VALUES(%d, '%f', '%f', '%f', '%f', %d, %d, %d)", GetVehicleModel(vehicleid), x, y, z, a, vehicleColors[vehicleid][0], vehicleColors[vehicleid][1], factionid);
	mysql_tquery(g_SQL, query);
	mysql_tquery(g_SQL, "SELECT * FROM vehicles WHERE carID = LAST_INSERT_ID()", "Vehicle_Load", "");

	adminVehicle[vehicleid] = false;
	DestroyVehicle(vehicleid);

	return 1;
}

CMD:editvehicle(playerid, params[])
{
	new option[14], param[32], value, query[500];

	if(playerData[playerid][pAdmin] < 6)
	{
	    return 1;
	}
	if(sscanf(params, "s[14]S()[32]", option, param))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [ชื่อรายการ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} spawn, price, tickets, locked, plate, color, paintjob, neon, trunk");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} faction");
	    return 1;
	}
	if (!IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

	new vehicleid = GetPlayerVehicleID(playerid);
	if(!IsValidVehicle(vehicleid) || !carData[vehicleid][carID])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}มีข้อผิดพลาดเกิดขึ้น กรุณาติดต่อทีมพัฒนา...");
	}

	if(!strcmp(option, "spawn", true))
	{
	    new id = carData[vehicleid][carID];

	    if(carData[vehicleid][carFaction] >= 0 && GetPlayerInterior(playerid) > 0)
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถบันทึกจุดเกิดในสิ่งปลูกสร้างได้");
	    }

	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        GetVehiclePos(vehicleid, carData[vehicleid][carPosX], carData[vehicleid][carPosY], carData[vehicleid][carPosZ]);
	    	GetVehicleZAngle(vehicleid, carData[vehicleid][carPosA]);
	    }
	    else
	    {
		    GetPlayerPos(playerid, carData[vehicleid][carPosX], carData[vehicleid][carPosY], carData[vehicleid][carPosZ]);
		    GetPlayerFacingAngle(playerid, carData[vehicleid][carPosA]);
	    }

	    if(carData[vehicleid][carFaction] >= 0 || carData[vehicleid][carOwnerID] > 0)
	    {
	        carData[vehicleid][carInterior] = GetPlayerInterior(playerid);
	        carData[vehicleid][carWorld] = GetPlayerVirtualWorld(playerid);
	        SaveVehicleModifications(vehicleid);
	    }
		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPosX = '%f', carPosY = '%f', carPosZ = '%f', carPosX = '%f', carInterior = %d, carWorld = %d WHERE carID = %d", carData[vehicleid][carPosX], carData[vehicleid][carPosY], carData[vehicleid][carPosZ], carData[vehicleid][carPosA], carData[vehicleid][carInterior], carData[vehicleid][carWorld], id);
		mysql_tquery(g_SQL, query);

	 	SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ย้ายจุดเกิดยานพาหนะ %s (ไอดี %d)", ReturnVehicleName(vehicleid), vehicleid);
	 	SendClientMessage(playerid, COLOR_WHITE, "คำเตือน: ไอดียานพาหนะมีโอกาสเปลี่ยนได้ตลอดเวลา");
	 	DespawnVehicle(vehicleid, false);

		mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM vehicles WHERE carID = %d", id);
		mysql_tquery(g_SQL, query, "Vehicle_Load", "");
	}
	else if(!strcmp(option, "price", true))
	{
	    if(!carData[vehicleid][carOwnerID])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สำหรับรถส่วนตัวเท่านั้น");
		}
		if(sscanf(param, "i", value))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [price] [ราคา]");
		}

		carData[vehicleid][carPrice] = value;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPrice = %d WHERE carID = %d", carData[vehicleid][carPrice], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับราคารถรุ่น %s ของ %s (ไอดีรถ %d) ราคา %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], vehicleid, FormatMoney(value));
	}
	else if(!strcmp(option, "tickets", true))
	{
	    if(!carData[vehicleid][carOwnerID])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สำหรับรถส่วนตัวเท่านั้น");
		}
		if(sscanf(param, "i", value))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [tickets] [ราคา]");
		}

		carData[vehicleid][carTickets] = value;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carTickets = %d WHERE carID = %d", carData[vehicleid][carTickets], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับใบสั่งรถรุ่น %s ของ %s (ไอดีรถ %d) ราคาใบสั่ง %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], vehicleid, FormatMoney(value));
	}
	else if(!strcmp(option, "locked", true))
	{
		if(sscanf(param, "i", value) || !(0 <= value <= 1))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [locked] [0/1]");
		}
		if(carData[vehicleid][carFaction] >= 0)
		{
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถของกลุ่มไม่สามารถล็อคได้");
		}

		carData[vehicleid][carLocked] = value;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carLocked = %d WHERE carID = %d", carData[vehicleid][carLocked], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		SetVehicleParams(vehicleid, VEHICLE_DOORS, value);
		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับสถานะล็อครถรุ่น %s (ไอดีรถ %d) เป็น %d", ReturnVehicleName(vehicleid), vehicleid, value);
	}
	else if(!strcmp(option, "plate", true))
	{
	    if(!carData[vehicleid][carOwnerID])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สำหรับรถส่วนตัวเท่านั้น");
		}
		if(isnull(param))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [plate] [ข้อความ]");
		}

		strcpy(carData[vehicleid][carPlate], param, 32);

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPlate = '%e' WHERE carID = %d", carData[vehicleid][carPlate], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		ResyncVehicle(vehicleid);
		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับป้ายทะเบียนรถรุ่น %s ของ %s (ไอดีรถ %d) เป็นป้ายทะเบียน %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], vehicleid, param);
		SendClientMessage(playerid, COLOR_WHITE, "คำเตือน: จะส่งผลต่อเมื่อรถถูกรี");
	}
    else if(!strcmp(option, "color", true))
	{
	    new color1, color2;

		if(sscanf(param, "ii", color1, color2))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [color] [สีที่ 1] [สีที่ 2]");
		}
		if(!(0 <= color1 <= 255) || !(0 <= color2 <= 255))
		{
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สีต้องไม่ต่ำกว่า 0 และไม่เกิน 255");
		}

		carData[vehicleid][carColor1] = color1;
		carData[vehicleid][carColor2] = color2;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carColor1 = %d, carColor2 = %d WHERE carID = %d", carData[vehicleid][carColor1], carData[vehicleid][carColor2], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		SetVehicleColor(vehicleid, color1, color2);
		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับสีรถ %s (ไอดีรถ %d) เป็นสี %d และ %d", ReturnVehicleName(vehicleid), vehicleid, color1, color2);
	}
	else if(!strcmp(option, "paintjob", true))
	{
	    new paintjobid;

		if(sscanf(param, "i", paintjobid))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [paintjobid] [-1 คือไม่มีลาย]");
		}
		if(!(-1 <= paintjobid <= 5))
		{
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ลายต้องไม่ต่ำกว่า 0 และไม่เกิน 5");
		}
		if(carData[vehicleid][carFaction] >= 0)
		{
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถของกลุ่มไม่สามารถล็อคได้");
		}

		carData[vehicleid][carPaintjob] = paintjobid;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPaintjob = %d WHERE carID = %d", carData[vehicleid][carPaintjob], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		ChangeVehiclePaintjob(vehicleid, paintjobid);
		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับลายรถ %s (ไอดีรถ %d) เป็นลายที่ %d", ReturnVehicleName(vehicleid), vehicleid, paintjobid);
	}
	else if(!strcmp(option, "neon", true))
	{
	    if(!carData[vehicleid][carOwnerID])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สำหรับรถส่วนตัวเท่านั้น");
		}
		if(isnull(param))
		{
		    SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [neon] [ชื่อรายการ]");
		    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} none, red, blue, green, yellow, pink, white");
		    return 1;
		}

		if(!strcmp(param, "neon", true))
		{
		    SetVehicleNeon(vehicleid, 0);
		} else if(!strcmp(param, "red", true))
		{
			SetVehicleNeon(vehicleid, 18647);
		} else if(!strcmp(param, "blue", true))
		{
			SetVehicleNeon(vehicleid, 18648);
		} else if(!strcmp(param, "green", true))
		{
			SetVehicleNeon(vehicleid, 18649);
		} else if(!strcmp(param, "yellow", true))
		{
			SetVehicleNeon(vehicleid, 18650);
		} else if(!strcmp(param, "pink", true))
		{
			SetVehicleNeon(vehicleid, 18651);
		} else if(!strcmp(param, "white", true))
		{
			SetVehicleNeon(vehicleid, 18652);
		} else {
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สีไม่ถูกต้อง");
		}

		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับ Neon ให้รถรุ่น %s ของ %s (ไอดีรถ %d) เป็นสี %s", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], vehicleid, param);
	}
	else if(!strcmp(option, "trunk", true))
	{
	    if(!carData[vehicleid][carOwnerID])
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}สำหรับรถส่วนตัวเท่านั้น");
		}
		if(sscanf(param, "i", value) || !(0 <= value <= 3))
		{
		    return SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [trunk] [เลเวล (0-3)]");
		}

		carData[vehicleid][carTrunk] = value;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carTrunk = %d WHERE carID = %d", carData[vehicleid][carTrunk], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

		SendClientMessageEx(playerid, COLOR_SERVER, "** คุณได้ปรับช่องเก็บของให้รถ %s ของ %s (ไอดีรถ %d) เป็นเลเวล %d/3", ReturnVehicleName(vehicleid), carData[vehicleid][carOwner], vehicleid, value);
	}
 	else if(!strcmp(option, "faction", true))
	{
	    new factionid;

        if(carData[vehicleid][carOwnerID] > 0)
	    {
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใช้กับรถส่วนตัวได้");
		}
	    if(sscanf(param, "i", factionid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "/editvehicle [vehicleid] [faction] [ไอดีกลุ่ม (-1 คือไม่มีกลุ่ม)]");
	        return 1;
		}
		if ((factionid < -1 || factionid >= MAX_FACTIONS) || (factionid != -1 && !factionData[factionid][factionExists]))
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

		carData[vehicleid][carFaction] = factionid;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carFaction = %d WHERE carID = %d", carData[vehicleid][carFaction], carData[vehicleid][carID]);
	    mysql_tquery(g_SQL, query);
	}
	return 1;
}

alias:removevehicle("ลบรถ")
CMD:removevehicle(playerid, params[])
{
	new query[128];

    if(playerData[playerid][pAdmin] < 6)
	{
	    return 1;
	}
	if (!IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

	new vehicleid = GetPlayerVehicleID(playerid);
	if(!IsValidVehicle(vehicleid) || !carData[vehicleid][carID])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}มีข้อผิดพลาดเกิดขึ้น กรุณาติดต่อทีมพัฒนา...");
	}

	if(carData[vehicleid][carOwnerID])
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "** คุณได้ลบรถของ %s รถรุ่น %s", carData[vehicleid][carOwner], ReturnVehicleName(vehicleid));
	} else {
		SendClientMessageEx(playerid, COLOR_WHITE, "** รถรุ่น %s (ไอดีรถ %d) ถูกลบเป็นที่เรียบร้อย", ReturnVehicleName(vehicleid), vehicleid);
	}

    mysql_format(g_SQL, query, sizeof(query), "DELETE FROM vehicles WHERE carID = %d", carData[vehicleid][carID]);
	mysql_tquery(g_SQL, query);

	DespawnVehicle(vehicleid, false);
	return 1;
}

alias:destroyveh("รีรถเสก")
CMD:destroyveh(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);

    if(playerData[playerid][pAdmin] < 3)
	{
	    return 1;
	}
	if(adminVehicle[vehicleid])
	{
	    DestroyVehicle(vehicleid);
	    adminVehicle[vehicleid] = false;
	    return SendClientMessage(playerid, COLOR_WHITE, "คุณได้ลบยานพาหนะคันนี้ออกสำเร็จ");
	}

	for(new i = 1; i < MAX_VEHICLES; i ++)
	{
	    if(adminVehicle[i])
	    {
	        DestroyVehicle(i);
	        adminVehicle[i] = false;
		}
	}

	SendAdminMessage(COLOR_ADMIN, "AdmCmd: %s ได้ลบยานพาหนะที่เสกมาออกทั้งหมด", GetPlayerNameEx(playerid));
	return 1;
}

CMD:deletevehicle(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);

    if(playerData[playerid][pAdmin] < 3)
	{
	    return 1;
	}
	if(adminVehicle[vehicleid])
	{
	    DestroyVehicle(vehicleid);
	    adminVehicle[vehicleid] = false;
	    return SendClientMessage(playerid, COLOR_WHITE, "คุณได้ลบยานพาหนะคันนี้ออกสำเร็จ");
	}

	for(new i = 1; i < MAX_VEHICLES; i ++)
	{
	    if(adminVehicle[i])
	    {
	        DestroyVehicle(i);
	        adminVehicle[i] = false;
		}
	}

	SendAdminMessage(COLOR_ADMIN, "AdmCmd: %s ได้ลบยานพาหนะที่เสกมาออกทั้งหมด", GetPlayerNameEx(playerid));
	return 1;
}

alias:respawncars("รีรถ")
CMD:respawncars(playerid, params[])
{
	new option[10], param[12];

    if(playerData[playerid][pAdmin] < 3)
	{
	    return 1;
	}
	if(sscanf(params, "s[10]S()[12]", option, param))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/respawncars [1 | 2]");
	}

	else if(!strcmp(option, "1", true))
	{
		for(new i = 1; i < MAX_VEHICLES; i ++)
		{
	    	if(IsValidVehicle(i) && !IsVehicleOccupied(i) && !adminVehicle[i] && IsVehicleStreamedIn(i, playerid))
		    {
				SetVehicleToRespawn(i);
			}
		}

		SendAdminMessage(COLOR_ADMIN, "AdmCmd: %s ได้รียานพาหนะที่อยู่ใกล้ตัวกลับจุดเกิด", GetPlayerNameEx(playerid));
	}
	else if(!strcmp(option, "2", true))
	{
		for(new i = 1; i < MAX_VEHICLES; i ++)
		{
	    	if(IsValidVehicle(i) && !IsVehicleOccupied(i) && !adminVehicle[i])
		    {
				SetVehicleToRespawn(i);
			}
		}

		SendAdminMessage(COLOR_ADMIN, "AdmCmd: %s ได้รียานพาหนะทั้งหมด", GetPlayerNameEx(playerid));
	}

	return 1;
}

alias:vticket("ใบสั่ง")
CMD:vticket(playerid, params[])
{
 	new amount, vehicleid;

    if(GetFactionType(playerid) != FACTION_POLICE)
    {
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่เจ้าหน้าที่ตำรวจ");
	}
	if(sscanf(params, "d", amount))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/ใบสั่ง [ราคา]");
	}
	if((vehicleid = GetNearbyVehicle(playerid)) == INVALID_VEHICLE_ID)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ภายในระยะของรถ");
	}
	if(!carData[vehicleid][carOwnerID])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มีเจ้าของ");
	}
	if(!(1000 <= amount <= 5000))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาต้องไม่ต่ำกว่า $1,000 และไม่เกิน $5,000");
	}
	if(carData[vehicleid][carTickets] >= 50000)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้โดนใบสั่งมากกว่า $50,000 แล้ว ไม่สามารถเพิ่มอีกได้");
	}

	carData[vehicleid][carTickets] += amount;
	new query[128];
	mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carTickets = %d WHERE carID = %d", carData[vehicleid][carTickets], carData[vehicleid][carID]);
	mysql_tquery(g_SQL, query);

	SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้ให้ใบสั่งรถ %s ราคา %s", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid), FormatMoney(amount));
	return 1;
}

alias:vfrisk("ตรวจค้นรถ")
CMD:vfrisk(playerid, params[])
{
    new vehicleid;

    if(GetFactionType(playerid) != FACTION_POLICE)
    {
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่เจ้าหน้าที่ตำรวจ");
	}
	if((vehicleid = GetNearbyVehicle(playerid)) == INVALID_VEHICLE_ID)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ภายในระยะของรถ");
	}
	if(!carData[vehicleid][carOwnerID])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มีเจ้าของ");
	}

    SendClientMessage(playerid, COLOR_GREEN, "|_____ ช่องเก็บของในรถ _____|");
    SendClientMessageEx(playerid, COLOR_GREY2, "เงินสด: %s/%s", FormatMoney(carData[vehicleid][carCash]), FormatMoney(GetVehicleStashCapacity(vehicleid, STASH_CAPACITY_CASH)));

	SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** เจ้าหน้าที่ %s ได้เปิดกระโปรงรถรุ่น %s เพื่อดูสิ่งของข้างใน", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid));
	return 1;
}

alias:paytickets("จ่ายค่าปรับ")
CMD:paytickets(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid), amount;
	new query[128];
	if(!vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");
	}
	if(!IsVehicleOwner(playerid, vehicleid) && playerData[playerid][pVehicleKeys] != vehicleid)
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(sscanf(params, "d", amount))
	{
	    return SendClientMessageEx(playerid, COLOR_WHITE, "/จ่ายค่าปรับ [ราคา] (ตอนนี้ยังค้างอยู่ %s)", FormatMoney(carData[vehicleid][carTickets]));
	}
	if(amount < 1 || amount > GetPlayerMoneyEx(playerid))
	{
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอ");
	}
	if(amount > carData[vehicleid][carTickets])
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาใบสั่งไม่ถูกต้อง (ไม่แพงกว่าราคาที่ใส่)");
	}

    carData[vehicleid][carTickets] -= amount;
	GivePlayerMoneyEx(playerid, -amount);

	mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carTickets = %d WHERE carID = %d", carData[vehicleid][carTickets], carData[vehicleid][carID]);
	mysql_tquery(g_SQL, query);

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้จ่ายค่าใบสั่งจำนวน %s ปัจจุบันเหลือ %s ที่ต้องจ่าย", FormatMoney(amount), FormatMoney(carData[vehicleid][carTickets]));
	return 1;
}

/*CMD:carinfo(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid);

	if(!vehicleid || !IsVehicleOwner(playerid, vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}

	new neon[12], Float:health;

	GetVehicleHealth(vehicleid, health);

	switch(carData[vehicleid][carNeon])
	{
	    case 18647: neon = "Red";
		case 18648: neon = "Blue";
		case 18649: neon = "Green";
		case 18650: neon = "Yellow";
		case 18651: neon = "Pink";
		case 18652: neon = "White";
		default: neon = "None";
	}

	SendClientMessageEx(playerid, COLOR_GREEN, "|______ %s Stats ______|", ReturnVehicleName(vehicleid));
	SendClientMessageEx(playerid, COLOR_GREY2, "(เจ้าของ: %s) - (ราคา: %s) - (ใบสั่ง: %s) - (ป้ายทะเบียน: %s)", carData[vehicleid][carOwner], FormatMoney(carData[vehicleid][carPrice]), FormatMoney(carData[vehicleid][carTickets]), carData[vehicleid][carPlate]);
	SendClientMessageEx(playerid, COLOR_GREY2, "(Neon: %s) - (เลเวลช่องเก็บของ: %d/3) - (ความเสียหาย: %.1f) - (น้ำมัน: %.2f)", neon, carData[vehicleid][carTrunk], health, vehicleFuel[vehicleid]);
	return 1;
}*/

CMD:atm(playerid, params[])
{
	if (ATM_Nearest(playerid) == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ใกล้ ตู้ ATM");

	Dialog_Show(playerid, DIALOG_BANK, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ยอดเงินปัจจุบัน: %s", "เลือก", "ปิด", FormatMoney(playerData[playerid][pBankMoney]));
	return 1;
}

CMD:b(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/b [ข้อความ]");
	if (strlen(params) > 64)
	{
	    SendNearbyMessage(playerid, 20.0, COLOR_WHITE, "%s [%d]: (( %.64s", GetPlayerNameEx(playerid), playerid, params);
	    SendNearbyMessage(playerid, 20.0, COLOR_WHITE, "...%s ))", params[64]);
	}
	else
	{
	    SendNearbyMessage(playerid, 20.0, COLOR_WHITE, "%s [%d]: (( %s ))", GetPlayerNameEx(playerid), playerid, params);
	}
	return 1;
}

CMD:me(playerid, params[])
{

	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/me [ข้อความ]");

	if (strlen(params) > 64) {
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s %.64s", GetPlayerNameEx(playerid), params);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "...%s", params[64]);
	}
	else {
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s %s", GetPlayerNameEx(playerid), params);
	}
	return 1;
}

CMD:do(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/do [ข้อความ]");

	if (strlen(params) > 64) {
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %.64s", params);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "...%s (( %s ))", params[64], GetPlayerNameEx(playerid));
	}
	else {
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s (( %s ))", params, GetPlayerNameEx(playerid));
	}
	return 1;
}

CMD:s(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/s [ข้อความ]");

	if (strlen(params) > 64) {
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "%s ตะโกน : %.64s", GetPlayerNameEx(playerid), params);
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "...%s", params[64]);
	}
	else {
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "%s ตะโกน : %s", GetPlayerNameEx(playerid), params);
	}
	return 1;
}

CMD:m(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/m [ข้อความ]");

	if (strlen(params) > 100) {
	    SendNearbyMessage(playerid, 5.0, COLOR_YELLOW, "%s เจ้าหน้าที่ : %.100s", GetPlayerNameEx(playerid), params);
	    SendNearbyMessage(playerid, 5.0, COLOR_YELLOW, "...%s", params[100]);
	}
	else {
	    SendNearbyMessage(playerid, 5.0, COLOR_YELLOW, "%s เจ้าหน้าที่ : %s", GetPlayerNameEx(playerid), params);
	}
	return 1;
}

CMD:low(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/(l)ow [ข้อความ]");

	if (strlen(params) > 64) {
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "%s พูดเบา ๆ: %.64s", GetPlayerNameEx(playerid), params);
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "...%s", params[64]);
	}
	else {
	    SendNearbyMessage(playerid, 5.0, COLOR_WHITE, "%s พูดเบา ๆ: %s", GetPlayerNameEx(playerid), params);
	}
	return 1;
}

CMD:bank(playerid, params[])
{
	if (!IsPlayerInBank(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ธนาคาร");

	Dialog_Show(playerid, DIALOG_BANK, DIALOG_STYLE_LIST, "[บัญชีธนาคาร]", "ยอดเงินปัจจุบัน: %s", "เลือก", "ปิด", FormatMoney(playerData[playerid][pBankMoney]));
	return 1;
}

task RepeatingTimer[1000]()
{
	if (robCount > 0)
	    robCount--;
}


task MarketTimer[60000*60]()
{
	// ตลาดกลาง
	CowCash = randomEx(30,45), CKCash = randomEx(45,60), WoodCash = randomEx(35,50), MarketCash[0] = randomEx(5,20), MarketCash[1] = randomEx(15,30), MarketCash[2] = randomEx(25,40), MarketCash[3] = randomEx(35,50), MarketCash[4] = randomEx(20,35),
	MarketCash[5] = randomEx(25,40), MarketCash[6] = randomEx(25,35), MarketCash[7] = randomEx(35,45), MarketCash[8] = randomEx(45,55), MarketCash[9] = randomEx(75,100), MarketCash[10] = randomEx(15,30), MarketCash[11] = randomEx(20,30), MarketCash[12] = randomEx(30,40),
    MarketCash[13] = randomEx(40,50), MarketCash[14] = randomEx(60,80);
	SendClientMessageToAll(COLOR_ORANGE, "[ตลาดกลาง] : ขณะนี้ราคาสินค้าได้ถูกอัพเดทเรียบร้อยแล้ว!");

	return 1;
}


/*CMD:robbank(playerid, params[])
{
	if (!IsPlayerInBank(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ธนาคาร");

	if (robCount > 0)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รอเวลาอีก %s วินาที ถึงปล้นได้อีกครั้ง", FormatNumber(robCount));

	new price = randomEx(1000, 3000);
	robCount = 1800;
	GivePlayerMoneyEx(playerid, price);
	GivePlayerWanted(playerid, 3);
	SendClientMessageToAllEx(COLOR_LIGHTRED, "[ปล้นธนาคาร] %s ได้ทำการปล้นธนาคารและได้รับเงินไปจำนวน %s", GetPlayerNameEx(playerid), FormatMoney(price));
	return 1;
}*/

CMD:agps(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	Dialog_Show(playerid, DIALOG_AGPS, DIALOG_STYLE_LIST, "[รายการ GPS]", "สถานที่ทั่วไป\nงานถูกกฎหมาย\nงานผิดกฎหมาย", "เลือก", "ปิด");
	return 1;
}

CMD:gps(playerid, const params[])
{
	Dialog_Show(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "[รายการ GPS]", "สถานที่ทั่วไป\nงานถูกกฎหมาย\nงานผิดกฎหมาย", "เลือก", "ปิด");
	return 1;
}

CMD:flist(playerid, params[])
{
	new
		count,
		string[512],
		string2[512];

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	for (new i = 0; i != MAX_FACTIONS; i ++) if (factionData[i][factionExists])
	{
		format(string, sizeof(string), "%d\t{FFFFFF}({%06x}%s{FFFFFF})\n", i, factionData[i][factionColor] >>> 8, factionData[i][factionName]);
		strcat(string2, string);
		count++;
	}
	if (!count)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เซิร์ฟเวอร์ไม่มีกลุ่มใด ๆ เลย");
		return 1;
	}
	format(string, sizeof(string), "ไอดี\tชื่อ\n%s", string2);
	Dialog_Show(playerid, DIALOG_UNUSED, DIALOG_STYLE_TABLIST_HEADERS, "[รายชื่อ Faction]", string, "ปิด", "");
	return 1;
}

alias:flocker("ตู้เซฟ")
CMD:flocker(playerid, params[])
{
	new factionid = playerData[playerid][pFaction];
	new id = FactionLocker_Nearest(playerid);

	if (GetFactionType(playerid) == FACTION_POLICE)
	{
	    if (id != -1)
	    {
		 	if (factionData[factionid][factionType] != FACTION_GANG)
				Dialog_Show(playerid, DIALOG_LOCKER, DIALOG_STYLE_LIST, "[ตู้เซฟ]", "คำสั่งเริ่มงาน\nตู้เสื้อผ้า\nตู้อาวุธ\nคลังเก็บของ\nเปลี่ยนกลับมาใส่ชุดปกติ", "ตกลง", "ออก");

			else Dialog_Show(playerid, DIALOG_LOCKER, DIALOG_STYLE_LIST, "[ตู้เซฟ]", "ตู้เสื้อผ้า\nตู้อาวุธ\nคลังเก็บของ", "ตกลง", "ออก");
	    }
	    return 1;
	}
	else
	{
	 	if (factionid == -1)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

		if (id == -1)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่หน้าตู้เซฟ");

		if (id != factionid)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถใช้งานตู้เซฟนี้ได้");

	 	if (factionData[factionid][factionType] != FACTION_GANG)
			Dialog_Show(playerid, DIALOG_LOCKER, DIALOG_STYLE_LIST, "[ตู้เซฟ]", "คำสั่งเริ่มงาน\nตู้เสื้อผ้า\nตู้อาวุธ\nคลังเก็บของ\nเปลี่ยนกลับมาใส่ชุดปกติ", "ตกลง", "ออก");

		else Dialog_Show(playerid, DIALOG_LOCKER, DIALOG_STYLE_LIST, "[ตู้เซฟ]", "ตู้เสื้อผ้า\nตู้อาวุธ\nคลังเก็บของ", "ตกลง", "ออก");
	}

	return 1;
}

CMD:setleader(playerid, params[])
{
	static
		userid,
		id;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ud", userid, id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/setleader [ไอดี/ชื่อ] [ไอดีกลุ่ม] (-1 คือประชาชน)");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

    if ((id < -1 || id >= MAX_FACTIONS) || (id != -1 && !factionData[id][factionExists]))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

	if (id == -1)
	{
	    ResetFaction(userid);
	    SetPlayerColor(userid, DEFAULT_COLOR);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอนผู้เล่น {33CCFF}%s {FFFFFF}ออกจากการเป็นหัวหน้ากลุ่ม", GetPlayerNameEx(userid));
    	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ถอนคุณออกจากการเป็นหัวหน้ากลุ่ม", GetPlayerNameEx(playerid));
	}
	else
	{
		SetFaction(userid, id);
		playerData[userid][pFactionRank] = factionData[id][factionRanks];
		SetFactionColor(userid);

		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้แต่งตั้งให้ผู้เล่น {33CCFF}%s {FFFFFF}เป็นหัวหน้ากลุ่ม \"%s\"", GetPlayerNameEx(userid), factionData[id][factionName]);
    	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้แต่งตั้งให้คุณเป็นหัวหน้ากลุ่ม \"%s\" ยินดีด้วย!", GetPlayerNameEx(playerid), factionData[id][factionName]);
	}
    return 1;
}

CMD:asetfaction(playerid, params[])
{
	static
		userid,
		id;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ud", userid, id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/asetfaction [ไอดี/ชื่อ] [ไอดีกลุ่ม] (-1 คือประชาชน)");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

    if ((id < -1 || id >= MAX_FACTIONS) || (id != -1 && !factionData[id][factionExists]))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

	if (id == -1)
	{
	    ResetFaction(userid);

	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอนผู้เล่น {33CCFF}%s {FFFFFF}ออกจากกลุ่มของเขา", GetPlayerNameEx(userid));
    	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ถอนคุณออกจากกลุ่มปัจจุบันของคุณ ขณะนี้คุณคือประชาชนทั่วไป!", GetPlayerNameEx(playerid));
	}
	else
	{
		SetFaction(userid, id);

		if (!playerData[userid][pFactionRank])
	    	playerData[userid][pFactionRank] = 1;

		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้แต่งตั้งให้ผู้เล่น {33CCFF}%s {FFFFFF}เป็นหนึ่งในสมาชิกของกลุ่ม \"%s\"", GetPlayerNameEx(userid), factionData[id][factionName]);
    	SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้แต่งตั้งให้คุณเป็นสมาชิกของกลุ่ม \"%s\"", GetPlayerNameEx(playerid), factionData[id][factionName]);
	}
    return 1;
}

CMD:asetrank(playerid, params[])
{
	static
		userid,
		rank,
		factionid;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ud", userid, rank))
	    return SendClientMessage(playerid, COLOR_WHITE, "/asetrank [ไอดี/ชื่อ] [ยศ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if ((factionid = playerData[userid][pFaction]) == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในกลุ่มใด ๆ");

    if (rank < 1 || rank > factionData[factionid][factionRanks])
        return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยศของกลุ่มต้องไม่ต่ำกว่า 1 และไม่เกิน %d เท่านั้น", factionData[factionid][factionRanks]);

	playerData[userid][pFactionRank] = rank;

	SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ปรับยศให้ {33CCFF}%s {FFFFFF}เป็นยศ %d", GetPlayerNameEx(userid), rank);
    SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ปรับยศของคุณเป็นยศ %d", GetPlayerNameEx(playerid), rank);

    return 1;
}

CMD:toggle(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (isnull(params))
 	{
	    SendClientMessage(playerid, COLOR_WHITE, "/toggle [ชื่อรายการ]");
		SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} ooc, tw, ต่อย");
		return 1;
	}
	if (!strcmp(params, "ooc", true))
	{
	    if (OOC)
	    {
			SendClientMessageToAllEx(COLOR_LIGHTRED, "แอดมิน %s ได้ปิดระบบพูดคุยผ่าน OOC ชั่วคราว", GetPlayerNameEx(playerid));
			OOC = false;
		}
		else
		{
		    SendClientMessageToAllEx(COLOR_LIGHTRED, "แอดมิน %s ได้เปิดระบบพูดคุยผ่าน OOC แล้ว", GetPlayerNameEx(playerid));
		    OOC = true;
		}
	}
	if (!strcmp(params, "tw", true))
	{
	    if (Twitter)
	    {
			SendClientMessageToAllEx(COLOR_LIGHTRED, "แอดมิน %s ได้ปิดเครือข่าย Internet ชั่วคราว", GetPlayerNameEx(playerid));
			Twitter = false;
		}
		else
		{
		    SendClientMessageToAllEx(COLOR_LIGHTRED, "แอดมิน %s ได้เปิดเครือข่าย Internet แล้ว", GetPlayerNameEx(playerid));
		    Twitter = true;
		}
	}
	if (!strcmp(params, "ต่อย", true))
	{
	    if (PVPStats)
	    {
			SendClientMessageToAll(COLOR_LIGHTRED, "ขณะนี้แอดมินปิดระบบทำร้ายร่างกายแล้ว แยกย้ายกันไปทำงานะจ๊ะ!!");
			PVPStats = false;
		}
		else
		{
		    SendClientMessageToAll(COLOR_ORANGE, "ขณะนี้แอดมินเปิดระบบทำร้ายร่างกายแล้ว ลุยเลยวัยรุ่น!!");
		    PVPStats = true;
		}
	}
	else SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} ooc, tw, ต่อย");
    return 1;
}

/*CMD:admins(playerid, params[])
{
	new count;

	foreach (new i : Player) if (playerData[i][pAdmin] > 0)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "[ID: %d] {33CCFF}%s {00FF00}%s", i, GetPlayerNameEx(i), AdminRank(i));
		count++;
	}
	if (!count)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีแอดมินออนไลน์อยู่เลย");
		return 1;
	}
	return 1;
}*/

CMD:online(playerid, params[])
{
	new factionid = playerData[playerid][pFaction];

 	if (factionid == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	SendClientMessage(playerid, COLOR_SERVER, "สมาชิกที่ออนไลน์:");

	foreach (new i : Player) if (playerData[i][pFaction] == factionid)
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "[ID: %d] {33CCFF}%s {FFFFFF}- %s (%d)", i, GetPlayerNameEx(i), Faction_GetRank(i), playerData[i][pFactionRank]);
	}
	return 1;
}

GetFactionOnline(type)
{
	new count;
	foreach (new i : Player) if (GetFactionType(i) == type)
	{
		count++;
	}
	return count;
}

CMD:faction(playerid, params[])
{
	new type,
		count,
		name[24];
	if (sscanf(params, "d", type))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/faction [ไอดีกลุ่ม]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ไอดีกลุ่ม]:{FFFFFF} 1. ตำรวจ 2. นักข่าว 3. แพทย์ 4. นายก");
		return 1;
	}
	if (type < 1 || type > 4)
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไอดีต้องไม่ต่ำกว่า 1 และไม่เกิน 4 เท่านั้น");
	    return 1;
	}
	switch(type)
	{
	    case 1: name = "ตำรวจ";
	    case 2: name = "นักข่าว";
	    case 3: name = "แพทย์";
	    case 4: name = "นายก";
	}
	foreach (new i : Player) if (GetFactionType(i) == type)
	{
	    count++;
		SendClientMessageEx(playerid, COLOR_WHITE, "(%s) ออนไลน์ %d", name, count);
	}
	if (!count)
	{
		SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กลุ่ม %s ไม่มีคนออนไลน์เลย", name);
		return 1;
	}
	return 1;
}

CMD:ooc(playerid, params[])
{
	if (playerData[playerid][pVip] == 0 && playerData[playerid][pAdmin] == 0)
	{
		if (!OOC)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}OOC ถูกปิดใช้งาน");

		if (playerData[playerid][pOOCSpam] > 0)
		    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ป้องกันการ Spam ข้อความ คุณเหลือเวลาอีก %d วินาที ในการใช้คำสั่งใหม่อีกครั้ง", playerData[playerid][pOOCSpam]);
	}
	if (playerData[playerid][pFaction] == -1)
	{
	    if (playerData[playerid][pVip] > 0)
	    {
		    switch(playerData[playerid][pVip])
		    {
				case 1: SendClientMessageToAllEx(COLOR_VIP1, "#VIP %s {FFFFFF}[ประชาชน] {FFA84D}(ID:%d){FFFFFF} %s: %s", SchoolName(playerid), playerid, GetPlayerNameEx(playerid), params);
				case 2: SendClientMessageToAllEx(COLOR_VIP2, "#{00FFFF}PR{FFFFFF}EMI{00FFFF}UM %s {FFFFFF}[ประชาชน] {FFA84D}(ID:%d){FFFFFF} %s: %s", SchoolName(playerid), playerid, GetPlayerNameEx(playerid), params);
				case 3: SendClientMessageToAllEx(COLOR_VIP3, "#{FF0000}SU{FFFFFF}PER{FF0000}ME %s {FFFFFF}[ประชาชน] {FFA84D}(ID:%d){FFFFFF} %s: %s", SchoolName(playerid), playerid, GetPlayerNameEx(playerid), params);
				case 4: SendClientMessageToAllEx(COLOR_VIP4, "#{FF0000}You{FFFFFF}Tube %s {FFFFFF}[ประชาชน] {FFA84D}(ID:%d){FFFFFF} %s: %s", SchoolName(playerid), playerid, GetPlayerNameEx(playerid), params);
			}
		}
		else
		{
			SendClientMessageToAllEx(COLOR_WHITE, "%s [ประชาชน] {FFA84D}(ID:%d){FFFFFF} %s: %s", SchoolName(playerid), playerid, GetPlayerNameEx(playerid), params);
		}
	}
	else
	{
	    if (playerData[playerid][pVip] > 0)
	    {
		    switch(playerData[playerid][pVip])
		    {
				case 1: SendClientMessageToAllEx(COLOR_VIP1, "#VIP %s {%06x}[%s] {FFA84D}(ID:%d){FFFFFF} %s: %s", SchoolName(playerid), factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid), playerid, GetPlayerNameEx(playerid), params);
				case 2: SendClientMessageToAllEx(COLOR_VIP2, "#{00FFFF}PR{FFFFFF}EMI{00FFFF}UM %s {%06x}[%s] {FFA84D}(ID:%d){FFFFFF} %s: %s", SchoolName(playerid), factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid), playerid, GetPlayerNameEx(playerid), params);
				case 3: SendClientMessageToAllEx(COLOR_VIP3, "#{FF0000}SU{FFFFFF}PER{FF0000}ME %s {%06x}[%s] {FFA84D}(ID:%d){FFFFFF} %s: %s", SchoolName(playerid), factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid), playerid, GetPlayerNameEx(playerid), params);
				case 4: SendClientMessageToAllEx(COLOR_VIP4, "#{FF0000}You{FFFFFF}Tube %s {%06x}[%s] {FFA84D}(ID:%d){FFFFFF} %s: %s", SchoolName(playerid), factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid), playerid, GetPlayerNameEx(playerid), params);
			}
		}
		else
		{
			SendClientMessageToAllEx(COLOR_WHITE, "%s {%06x}[%s] {FFA84D}(ID:%d){FFFFFF} %s: %s", SchoolName(playerid), factionData[playerData[playerid][pFaction]][factionColor] >>> 8, Faction_GetName(playerid), playerid, GetPlayerNameEx(playerid), params);
		}
	}
	GivePlayerMoneyEx(playerid, -100);
	playerData[playerid][pOOCSpam] = 30;
	return 1;
}
alias:ooc("o")

CMD:fac(playerid, params[])
{
    new factionid = playerData[playerid][pFaction];

 	if (factionid == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	if(GetFactionType(playerid) == FACTION_POLICE || GetFactionType(playerid) == FACTION_MEDIC || GetFactionType(playerid) == FACTION_GOV)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับกลุ่มทั่วไปเท่านั้น!");

	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "(/f)ac [ข้อความ]");

    if (playerData[playerid][pDisableFaction])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดระบบพูดคุยของกลุ่มก่อน (/tog faction)");

	SendFactionMessage(factionid, COLOR_FACTION, "(( [%s] %s {33CCFF}%s{BDF38B}: %s ))", Faction_GetName(playerid), Faction_GetRank(playerid), GetPlayerNameEx(playerid), params);
	return 1;
}
alias:fac("f")

CMD:radio(playerid, params[])
{
	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "(/r)adio [ข้อความ]");

	if(GetFactionType(playerid) != FACTION_POLICE && GetFactionType(playerid) != FACTION_MEDIC && GetFactionType(playerid) != FACTION_GOV)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับรัฐบาลเท่านั้น!");

	if (strlen(params) > 64)
	{
		SendFactionMessageEx(GetFactionType(playerid), COLOR_SERVER, "** [วิทยุ] {33CCFF}%s{FFFF90}: %.64s", GetPlayerNameEx(playerid), params);
		SendFactionMessageEx(GetFactionType(playerid), COLOR_SERVER, "...%s **",params[64]);
	}
	else {
		SendFactionMessageEx(GetFactionType(playerid), COLOR_SERVER, "** [วิทยุ] {33CCFF}%s{FFFF90}: %s **",  GetPlayerNameEx(playerid), params);
	}
	return 1;
}
alias:radio("r")

CMD:dept(playerid, params[])
{
	if (GetFactionType(playerid) != FACTION_POLICE && GetFactionType(playerid) != FACTION_MEDIC && GetFactionType(playerid) != FACTION_GOV)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับรัฐบาลเท่านั้น!");

	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "(/d)ept [ข้อความ]");

	for (new i = 0; i != MAX_FACTIONS; i ++) if (factionData[i][factionType] == FACTION_POLICE || factionData[i][factionType] == FACTION_MEDIC || factionData[i][factionType] == FACTION_GOV)
	{
		SendFactionMessage(i, COLOR_DEPARTMENT, "[%s] %s {33CCFF}%s{F0CC00}: %s", Faction_GetName(playerid), Faction_GetRank(playerid), GetPlayerNameEx(playerid), params);
	}
	return 1;
}
alias:dept("d")

alias:fquit("ออกแก็ง")
CMD:fquit(playerid, params[])
{
	if (playerData[playerid][pFaction] == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	if (GetFactionType(playerid) == FACTION_POLICE)
	{
	    SetPlayerArmour(playerid, 0);
	    ResetPlayerWeapons(playerid);
	}
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ออกจากกลุ่ม \"%s\" (ยศล่าสุดของคุณคือ %d)", Faction_GetName(playerid), playerData[playerid][pFactionRank]);
    ResetFaction(playerid);
    return 1;
}

alias:finvite("รับคน")
CMD:finvite(playerid, params[])
{
	new
	    userid;

	if (playerData[playerid][pFaction] == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องมียศอย่างน้อยระดับ %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	if (sscanf(params, "u", userid))
	    return SendClientMessageEx(playerid, COLOR_SERVER, "/รับคน [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (playerData[userid][pFaction] == playerData[playerid][pFaction])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้เป็นส่วนหนึ่งของกลุ่มคุณอยู่แล้ว");

    if (playerData[userid][pFaction] != -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้มีกลุ่มอยู่แล้ว");

	playerData[userid][pFactionOffer] = playerid;
    playerData[userid][pFactionOffered] = playerData[playerid][pFaction];

    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ส่งคำขอให้ {33CCFF}%s {FFFFFF}ในการเข้าร่วมกลุ่ม \"%s\"", GetPlayerNameEx(userid), Faction_GetName(playerid));
    SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ส่งคำขอให้คุณในการเข้าร่วมกลุ่ม \"%s\" (พิมพ์ \"/ยอมรับ เข้าแก็ง\" ในการตอบข้อเสนอ)", GetPlayerNameEx(playerid), Faction_GetName(playerid));

	return 1;
}

alias:fremove("แตะคน")
CMD:fremove(playerid, params[])
{
    new
	    userid;

	if (playerData[playerid][pFaction] == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องมียศอย่างน้อยระดับ %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/แตะคน [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (playerData[userid][pFaction] != playerData[playerid][pFaction])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถให้ยศสมาชิกกลุ่มอื่นได้");

    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ถอนสมาชิก {33CCFF}%s{FFFFFF} ออกจากกลุ่ม \"%s\"", GetPlayerNameEx(userid), Faction_GetName(playerid));
    SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ถอนคุณออกจากกลุ่ม \"%s\" เสียใจด้วย!", GetPlayerNameEx(playerid), Faction_GetName(playerid));

    ResetFaction(userid);

	return 1;
}

alias:frank("เลื่อนยศ")
CMD:frank(playerid, params[])
{
    new
	    userid,
		rankid;

	if (playerData[playerid][pFaction] == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องมียศอย่างน้อยระดับ %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	if (sscanf(params, "ud", userid, rankid))
	    return SendClientMessageEx(playerid, COLOR_WHITE, "/เลื่อนยศ [ไอดี/ชื่อ] [ยศ (1-%d)]", factionData[playerData[playerid][pFaction]][factionRanks]);

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถให้ยศตัวเองได้");

	if (playerData[userid][pFaction] != playerData[playerid][pFaction])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถให้ยศสมาชิกกลุ่มอื่นได้");

	if (rankid < 0 || rankid > factionData[playerData[playerid][pFaction]][factionRanks])
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยศของกลุ่มคุณต้องไม่ต่ำกว่า 1 และไม่เกิน %d เท่านั้น", factionData[playerData[playerid][pFaction]][factionRanks]);

	playerData[userid][pFactionRank] = rankid;

    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ปรับยศให้สมาชิก {33CCFF}%s{FFFFFF} เป็นยศ %s ระดับ (%d)", GetPlayerNameEx(userid), Faction_GetRank(userid), rankid);
    SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้ปรับยศให้คุณเป็นยศ %s ระดับ (%d)", GetPlayerNameEx(playerid), Faction_GetRank(userid), rankid);

	return 1;
}

CMD:fspawn(playerid, params[])
{
	new faction = playerData[playerid][pFaction];

	if (playerData[playerid][pFaction] == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หัวหน้ากลุ่ม");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1 && playerData[playerid][pAdmin] > 5)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องมียศอย่างน้อยระดับ %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	factionData[faction][SpawnX] = X;
	factionData[faction][SpawnY] = Y;
	factionData[faction][SpawnZ] = Z;
	factionData[faction][SpawnInterior] = GetPlayerInterior(playerid);
	factionData[faction][SpawnVW] = GetPlayerVirtualWorld(playerid);
	factionData[faction][factionEntrance] = playerData[playerid][pEntrance];
	Faction_Save(faction);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้บันทึกจุดเกิดของกลุ่ม %d สำเร็จ", playerData[playerid][pFaction]);
	return 1;
}

CMD:spawnpoint(playerid, params[])
{
	new point;
	new faction = playerData[playerid][pFaction];
	if(sscanf(params, "i", point)) return SendClientMessage(playerid, COLOR_WHITE, "/spawnpoint [0-2] (0 = สาธารณะ, 1 = กลุ่ม, 2 = ล่าสุดก่อนออกเกม)");

	if(point < 0 || point > 2)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}จุดเกิดมีแค่ 0-2 เท่านั้น!");

	switch(point)
	{
	    case 0:
	    {
		    SendClientMessage(playerid, COLOR_SERVER, "คุณได้เปลี่ยนจุดเกิดเป็นที่ ''สาธารณะ'' สำเร็จ");
			playerData[playerid][pSpawnPoint] = 0;
		}
	    case 1:
	    {
		    if(playerData[playerid][pFactionID] == -1)
		    {
		        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่หนึ่งในสมาชิกของกลุ่มใด ๆ");
		        return 1;
			}
			if(factionData[faction][SpawnX] == 0 && factionData[faction][SpawnY] == 0 && factionData[faction][SpawnZ] == 0)
		    {
		        SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กลุ่มของคุณไม่มีจุดเกิด");
		        return 1;
			}
			SendClientMessage(playerid, COLOR_SERVER, "คุณได้เปลี่ยนจุดเกิดเป็นที่ ''กลุ่ม'' สำเร็จ");
			playerData[playerid][pSpawnPoint] = 1;
		}
		case 2:
		{
		    SendClientMessage(playerid, COLOR_SERVER, "คุณได้เปลี่ยนจุดเกิดเป็นที่ ''ล่าสุดก่อนออกเกม'' สำเร็จ");
			playerData[playerid][pSpawnPoint] = 2;
		}
	}
	new query[90];
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerSpawn` = %d WHERE `playerID` = %d LIMIT 1",
	playerData[playerid][pSpawnPoint],
	playerData[playerid][pID]);
	mysql_tquery(g_SQL, query);
	return 1;
}

CMD:tog(playerid, params[])
{
	if (isnull(params))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/tog [ชื่อรายการ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} faction");
	    return 1;
	}
	else if (!strcmp(params, "faction", true))
	{
	    if (playerData[playerid][pFaction] == -1)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้เป็นสมาชิกของกลุ่มใด ๆ");

	    if (!playerData[playerid][pDisableFaction])
	    {
	        playerData[playerid][pDisableFaction] = 1;
			SendClientMessage(playerid, COLOR_SERVER, "คุณได้ปิดระบบสื่อสารกลุ่มของคุณ (/tog faction อีกครั้งในการเปิดใหม่)");
		}
		else
		{
  			playerData[playerid][pDisableFaction] = 0;
     		SendClientMessage(playerid, COLOR_SERVER, "คุณได้เปิดระบบสื่อสารกลุ่มของคุณ");
		}
	}
	return 1;
}

CMD:editfaction(playerid, params[])
{
	static
	    id,
	    type[24],
	    string[128];

	if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ds[24]S()[128]", id, type, string))
 	{
	 	SendClientMessage(playerid, COLOR_WHITE, "/editfaction [ไอดีกลุ่ม] [ชื่อรายการ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} name, color, type, models, locker, ranks, maxranks");
		return 1;
	}
	if ((id < 0 || id >= MAX_FACTIONS) || !factionData[id][factionExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

    if (!strcmp(type, "name", true))
	{
	    new name[32];

	    if (sscanf(string, "s[32]", name))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editfaction [ไอดีกลุ่ม] [ชื่อรายการ] [ชื่อใหม่]");

	    format(factionData[id][factionName], 32, name);

	    Faction_Save(id);
		SendAdminMessage(COLOR_ADMIN, "[ADMIN]: %s ได้เปลี่ยนชื่อของกลุ่มไอดี %d เป็นชื่อ \"%s\"", GetPlayerNameEx(playerid), id, name);
	}
	else if (!strcmp(type, "maxranks", true))
	{
	    new ranks;

	    if (sscanf(string, "d", ranks))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editfaction [ไอดีกลุ่ม] [ชื่อรายการ] [ความจุของยศ 1-15]");

		if (ranks < 1 || ranks > 15)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของยศต้องไม่ต่ำกว่า 1 และไม่เกิน 15 เท่านั้น");

	    factionData[id][factionRanks] = ranks;

	    Faction_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับความจุของยศกลุ่มไอดี %d เป็น %d", GetPlayerNameEx(playerid), id, ranks);
	}
	else if (!strcmp(type, "ranks", true))
	{
	    Faction_ShowRanks(playerid, id);
	}
	else if (!strcmp(type, "color", true))
	{
	    new color;

	    if (sscanf(string, "h", color))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editfaction [ไอดีกลุ่ม] [ชื่อรายการ] [สีรูปแบบ hex]");

	    factionData[id][factionColor] = color;
	    Faction_Update(id);

	    Faction_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับสีเป็น {%06x}|||||{FF0080} ของกลุ่มไอดี %d", GetPlayerNameEx(playerid), color >>> 8, id);
	}
	else if (!strcmp(type, "type", true))
	{
	    new typeint;

	    if (sscanf(string, "d", typeint))
     	{
		 	SendClientMessage(playerid, COLOR_WHITE, "/editfaction [ไอดีกลุ่ม] [ชื่อรายการ] [รูปแบบกลุ่ม]");
            SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบกลุ่ม]:{FFFFFF} 1: Police | 2: News | 3: Medical | 4: Government | 5: Gang | 6: Mechanic");
            return 1;
		}
		if (typeint < 1 || typeint > 6)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบกลุ่มมีแค่ 1-5 เท่านั้น");

	    factionData[id][factionType] = typeint;

	    Faction_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับรูปแบบกลุ่มให้กลุ่มไอดี %d เป็นรูปแบบที่ %d", GetPlayerNameEx(playerid), id, typeint);
	}
	else if (!strcmp(type, "models", true))
	{
		playerData[playerid][pFactionEdit] = id;
	    Dialog_Show(playerid, DIALOG_FACTIONSKIN, DIALOG_STYLE_LIST, "[ตู้เก็บเสื้อผ้า]", "แก้ไขสกิน", "ตกลง", "ออก");
	}
	else if (!strcmp(type, "locker", true))
	{
        playerData[playerid][pFactionEdit] = id;
		Dialog_Show(playerid, DIALOG_FACTIONLOCKER, DIALOG_STYLE_LIST, "[ตู้เซฟ]", "ปรับตำแหน่งตู้เซฟ", "ยืนยัน", "ออก");
	}
	return 1;
}

CMD:createfaction(playerid, params[])
{
	static
	    id = -1,
		type,
		name[32];

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ds[32]", type, name))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/createfaction [รูปแบบกลุ่ม] [ชื่อกลุ่ม]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบกลุ่ม]:{FFFFFF} 1: Police | 2: News | 3: Medical | 4: Government | 5: Gang | 6: Mechanic");
		return 1;
	}
	if (type < 1 || type > 6)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบกลุ่มมีแค่ 1-6 เท่านั้น");

	id = Faction_Create(name, type);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกลุ่มในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างกลุ่มรูปแบบที่ %d ชื่อกลุ่ม %s ไอดีกลุ่ม %d", type, name, id);
	return 1;
}

CMD:deletefaction(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deletefaction [ไอดีกลุ่ม]");

	if ((id < 0 || id >= MAX_FACTIONS) || !factionData[id][factionExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

	Faction_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบกลุ่มไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:createentrance(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (isnull(params) || strlen(params) > 32)
	    return SendClientMessage(playerid, COLOR_WHITE, "/createentrance [ชื่อประตู]");

	new id = Entrance_Create(playerid, params);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของประตูในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

    SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างประตูไอดี %d ชื่อ %s", id, params);
	return 1;
}

CMD:editentrance(playerid, params[])
{
	static
	    id,
	    type[24],
	    string[128];

	if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ds[24]S()[128]", id, type, string))
 	{
	 	SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} location, interior, password, name, locked, mapicon, type, virtual, faction");
		return 1;
	}
	if ((id < 0 || id >= MAX_ENTRANCES) || !entranceData[id][entranceExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีประตูนี้อยู่ในฐานข้อมูล");

	if (!strcmp(type, "location", true))
	{
	    GetPlayerPos(playerid, entranceData[id][entrancePosX], entranceData[id][entrancePosY], entranceData[id][entrancePosZ]);
		GetPlayerFacingAngle(playerid, entranceData[id][entrancePosA]);

		entranceData[id][entranceExterior] = GetPlayerInterior(playerid);
		entranceData[id][entranceExteriorVW] = GetPlayerVirtualWorld(playerid);

		Entrance_Refresh(id);
		Entrance_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ย้ายตำแหน่งประตูไอดี %d", GetPlayerNameEx(playerid), id);
	}
	else if (!strcmp(type, "interior", true))
	{
	    GetPlayerPos(playerid, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]);
		GetPlayerFacingAngle(playerid, entranceData[id][entranceIntA]);

		entranceData[id][entranceInterior] = GetPlayerInterior(playerid);

        foreach (new i : Player)
		{
			if (playerData[i][pEntrance] == entranceData[id][entranceID])
			{
				SetPlayerPos(i, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]);
				SetPlayerFacingAngle(i, entranceData[id][entranceIntA]);

				SetPlayerInterior(i, entranceData[id][entranceInterior]);
				SetCameraBehindPlayer(i);
			}
		}
		Entrance_Refresh(id);
		Entrance_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับด้านในประตูไอดี %d", GetPlayerNameEx(playerid), id);
	}
	else if (!strcmp(type, "virtual", true))
	{
	    new worldid;

	    if (sscanf(string, "d", worldid))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [ชาแนลโลก]");

	    entranceData[id][entranceWorld] = worldid;

		foreach (new i : Player) if (Entrance_Inside(i) == id)
		{
			SetPlayerVirtualWorld(i, worldid);
		}
		Entrance_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับชาแนลโลกให้ประตูไอดี %d เป็นชาแนลโลก %d", GetPlayerNameEx(playerid), id, worldid);
	}
	else if (!strcmp(type, "mapicon", true))
	{
	    new icon;

	    if (sscanf(string, "d", icon))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [ตัวเลข map icon]");

		if (icon < 0 || icon > 63)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไอดีต้องไม่ต่ำกว่า 0 และไม่เกิน 63 เท่านั้น อ่านเพิ่มเติม > \"wiki.sa-mp.com/wiki/MapIcons\".");

	    entranceData[id][entranceIcon] = icon;

	    Entrance_Refresh(id);
	    Entrance_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับไอดี Map icon ให้ประตูไอดี %d เป็น Map icon %d", GetPlayerNameEx(playerid), id, icon);
	}
	else if (!strcmp(type, "password", true))
	{
	    new password;

	    if (sscanf(string, "d", password))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [รหัสผ่าน] (ใช้ ''0'' ในการปิดใช้งานรหัสผ่าน)");

		if (password == 0)
		{
			entranceData[id][entrancePass] = 0;
		}
		else {
			if(password < 1000 || password > 9999)
			    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รหัสผ่านต้องไม่ต่ำกว่า 4 หลัก");

		    entranceData[id][entrancePass] = password;
		}
	    Entrance_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ตั้งรหัสผ่านให้ประตูไอดี %d โดยใช้รหัสผ่าน \"%d\"", GetPlayerNameEx(playerid), id, password);
	}
	else if (!strcmp(type, "locked", true))
	{
	    new locked;

	    if (sscanf(string, "d", locked))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [0/1]");

		if (locked < 0 || locked > 1)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}0. ปลดล็อค | 1. ล็อค");

	    entranceData[id][entranceLocked] = locked;
	    Entrance_Save(id);

	    if (locked)
		{
			SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ล็อคประตูไอดี %d", GetPlayerNameEx(playerid), id);
		} else {
		    SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปลดล็อคประตูไอดี %d", GetPlayerNameEx(playerid), id);
		}
	}
	else if (!strcmp(type, "name", true))
	{
	    new name[32];

	    if (sscanf(string, "s[32]", name))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [ชื่อที่ต้องการเปลี่ยน]");

	    format(entranceData[id][entranceName], 32, name);

	    Entrance_Refresh(id);
	    Entrance_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้เปลี่ยนชื่อประตูไอดี %d เป็นชื่อ \"%s\"", GetPlayerNameEx(playerid), id, name);
	}
	else if (!strcmp(type, "type", true))
	{
	    new typeint;

	    if (sscanf(string, "d", typeint))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [รูปแบบที่ต้องการ]");
			SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบที่ต้องการ]:{FFFFFF} 0: None | 1: DMV | 2: Bank | 3: Warehouse | 4: City Hall | 5: Shooting Range");
			return 1;
		}
		if (typeint < 0 || typeint > 5)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบต้องไม่ต่ำกว่า 0 และไม่เกิน 4 เท่านั้น");

        entranceData[id][entranceType] = typeint;

        switch (typeint)
		{
            case 1: {
            	entranceData[id][entranceIntX] = -2029.5531;
           		entranceData[id][entranceIntY] = -118.8003;
            	entranceData[id][entranceIntZ] = 1035.1719;
            	entranceData[id][entranceIntA] = 0.0000;
				entranceData[id][entranceInterior] = 3;
            }
			case 2: {
            	entranceData[id][entranceIntX] = 1456.1918;
           		entranceData[id][entranceIntY] = -987.9417;
            	entranceData[id][entranceIntZ] = 996.1050;
            	entranceData[id][entranceIntA] = 90.0000;
				entranceData[id][entranceInterior] = 6;
            }
            case 3: {
                entranceData[id][entranceIntX] = 1291.8246;
           		entranceData[id][entranceIntY] = 5.8714;
            	entranceData[id][entranceIntZ] = 1001.0078;
            	entranceData[id][entranceIntA] = 180.0000;
				entranceData[id][entranceInterior] = 18;
			}
			case 4: {
			    entranceData[id][entranceIntX] = 390.1687;
           		entranceData[id][entranceIntY] = 173.8072;
            	entranceData[id][entranceIntZ] = 1008.3828;
            	entranceData[id][entranceIntA] = 90.0000;
				entranceData[id][entranceInterior] = 3;
			}
			case 5: {
			    entranceData[id][entranceIntX] = 304.0165;
           		entranceData[id][entranceIntY] = -141.9894;
            	entranceData[id][entranceIntZ] = 1004.0625;
            	entranceData[id][entranceIntA] = 90.0000;
				entranceData[id][entranceInterior] = 7;
			}
		}
		foreach (new i : Player)
		{
			if (playerData[i][pEntrance] == entranceData[id][entranceID])
			{
				SetPlayerPos(i, entranceData[id][entranceIntX], entranceData[id][entranceIntY], entranceData[id][entranceIntZ]);
				SetPlayerFacingAngle(i, entranceData[id][entranceIntA]);

				SetPlayerInterior(i, entranceData[id][entranceInterior]);
				SetCameraBehindPlayer(i);
			}
		}
	    Entrance_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับรูปแบบประตูไอดี %d เป็นรูปแบบ %d", GetPlayerNameEx(playerid), id, typeint);
	}
	else if (!strcmp(type, "faction", true))
	{
	    new factionid;

	    if (sscanf(string, "d", factionid))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editentrance [ไอดี] [ชื่อรายการ] [ไอดีกลุ่ม]");

		if ((factionid < 0 || factionid >= MAX_FACTIONS) || !factionData[factionid][factionExists])
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีกลุ่มนี้อยู่ในฐานข้อมูล");

	    entranceData[id][entranceFaction] = factionid;

	    Entrance_Refresh(id);
	    Entrance_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้เปลี่ยนประตู %d เป็นของกลุ่ม \"%s\"", GetPlayerNameEx(playerid), id, factionData[factionid][factionName]);
	}
	return 1;
}

CMD:deleteentrance(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deleteentrance [ไอดีประตู]");

	if ((id < 0 || id >= MAX_ENTRANCES) || !entranceData[id][entranceExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีประตูนี้อยู่ในฐานข้อมูล");

	Entrance_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบประตูไอดี %d", id);
	return 1;
}

CMD:createarrest(playerid, params[])
{
	static
	    id = -1,
		Float:x,
		Float:y,
		Float:z;

	GetPlayerPos(playerid, x, y, z);

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	id = Arrest_Create(x, y, z, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของพื้นที่จับกุมในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างพื้นที่จับกุมขึ้นมาใหม่ ไอดี: %d", id);
	return 1;
}

CMD:deletearrest(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deletearrest [ไอดี]");

	if ((id < 0 || id >= MAX_ARREST) || !arrestData[id][arrestExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีพื้นที่จับกุมนี้อยู่ในฐานข้อมูล");

	Arrest_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบพื้นที่จับกุมไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:creategps(playerid, params[])
{
	static
	    id = -1,
		Float:x,
		Float:y,
		Float:z,
		gpsname[32],
		type;

	GetPlayerPos(playerid, x, y, z);

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ds[32]", type, gpsname))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/creategps [รูปแบบ GPS] [ชื่อสถานที่]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบ GPS]:{FFFFFF} 1. สถานที่ทั่วไป 2. งานถูกกฎหมาย 3. งานผิดกฎหมาย");
	    return 1;
	}
	if (type < 1 || type > 3)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบของ GPS ต้องไม่ต่ำกว่า 1 และไม่เกิน 3 เท่านั้น");

	id = GPS_Create(type, gpsname, x, y, z);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของ GPS ในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้าง GPS ขึ้นมาใหม่ รูปแบบ GPS: %d, ชื่อสถานที่: %s, ไอดี: %d", type, gpsname, id);
	return 1;
}

CMD:deletegps(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deletegps [ไอดี]");

	if ((id < 0 || id >= MAX_GPS) || !gpsData[id][gpsExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดี GPS นี้อยู่ในฐานข้อมูล");

	GPS_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบ GPS ไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:editgps(playerid, params[])
{
	static
	    id,
	    type[24],
	    string[128];

	if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "ds[24]S()[128]", id, type, string))
 	{
	 	SendClientMessage(playerid, COLOR_WHITE, "/editgps [ไอดี] [ชื่อรายการ]");
	    SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} name, type, location");
		return 1;
	}
	if ((id < 0 || id >= MAX_GPS) || !gpsData[id][gpsExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดี GPS นี้อยู่ในฐานข้อมูล");

	if (!strcmp(type, "location", true))
	{
	    GetPlayerPos(playerid, gpsData[id][gpsPosX], gpsData[id][gpsPosY], gpsData[id][gpsPosZ]);

		GPS_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ย้ายตำแหน่ง GPS ไอดี %d (%s)", GetPlayerNameEx(playerid), id, gpsData[id][gpsName]);
	}
	else if (!strcmp(type, "name", true))
	{
	    new name[32];

	    if (sscanf(string, "s[32]", name))
	        return SendClientMessage(playerid, COLOR_WHITE, "/editgps [ไอดี] [ชื่อรายการ] [ชื่อที่ต้องการเปลี่ยน]");

	    format(gpsData[id][gpsName], 32, name);

	    GPS_Save(id);

		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้เปลี่ยนชื่อ GPS ไอดี %d เป็นชื่อ \"%s\"", GetPlayerNameEx(playerid), id, name);
	}
	else if (!strcmp(type, "type", true))
	{
	    new typeint;

	    if (sscanf(string, "d", typeint))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "/editgps [ไอดี] [ชื่อรายการ] [รูปแบบที่ต้องการ]");
			SendClientMessage(playerid, COLOR_YELLOW, "[รูปแบบที่ต้องการ]:{FFFFFF} 1: สถานที่ทั่วไป | 2: งานถูกกฎหมาย | 3: งานผิดกฎหมาย");
			return 1;
		}
		if (typeint < 1 || typeint > 3)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบของ GPS ต้องไม่ต่ำกว่า 1 และไม่เกิน 3 เท่านั้น");

        gpsData[id][gpsType] = typeint;

	    GPS_Save(id);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับรูปแบบ GPS ไอดี %d (%s) เป็นรูปแบบ %d", GetPlayerNameEx(playerid), id, gpsData[id][gpsName], typeint);
	}
	return 1;
}

CMD:createatm(playerid, params[])
{
	static
	    id = -1;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	id = ATM_Create(playerid);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของ ATM ในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้าง ตู้ ATM  ขึ้นมาใหม่ ไอดี: %d", id);
	return 1;
}

CMD:deleteatm(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deleteatm [ไอดี]");

	if ((id < 0 || id >= MAX_ATM_MACHINES) || !atmData[id][atmExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดี ATM นี้อยู่ในฐานข้อมูล");

	ATM_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบ ตู้ ATM ไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:createshop(playerid, params[])
{
	static
		type;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", type))
		return SendClientMessage(playerid, COLOR_WHITE, "/createshop [รูปแบบ] 1 = ร้านขายของชำ 2 = ร้านขายเสื้อผ้า 3 = แฟชั่น");

	static
	    id = -1,
		Float:x,
		Float:y,
		Float:z;

	GetPlayerPos(playerid, x, y, z);

    if (type < 1 || type > 3)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รูปแบบต้องไม่ต่ำกว่า 1 และไม่มากกว่า 3 เท่านั้น");

	id = Shop_Create(x, y, z, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid), type);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของร้านค้าในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างร้านค้าขึ้นมาใหม่ ไอดี: %d", id);
	return 1;
}

CMD:deleteshop(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deleteshop [ไอดี]");

	if ((id < 0 || id >= MAX_SHOPS) || !shopData[id][shopExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีร้านค้านี้อยู่ในฐานข้อมูล");

	Shop_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบร้านค้าไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:createpump(playerid, params[])
{
	static
	    id = -1,
		Float:x,
		Float:y,
		Float:z;

	GetPlayerPos(playerid, x, y, z);

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (GetPlayerInterior(playerid) != 0)
	    return 1;

	id = Pump_Create(x, y, z);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของปั้มน้ำมันในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างปั้มน้ำมันขึ้นมาใหม่ ไอดี: %d", id);
	return 1;
}

CMD:deletepump(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deletepump [ไอดี]");

	if ((id < 0 || id >= MAX_PUMPS) || !pumpData[id][pumpExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีปั้มน้ำมันนี้อยู่ในฐานข้อมูล");

	Pump_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบปั้มน้ำมันไอดี %d ออกสำเร็จ", id);
	return 1;
}

CMD:creategarage(playerid, params[])
{
	static
	    id = -1,
		Float:x,
		Float:y,
		Float:z;

	GetPlayerPos(playerid, x, y, z);

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (GetPlayerInterior(playerid) != 0)
	    return 1;

	id = Garage_Create(x, y, z);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของอู่ซ่อมรถในฐานข้อมูลเต็มแล้ว ไม่สามารถสร้างได้อีก (ติดต่อผู้พัฒนา)");

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้สร้างอู่ซ่อมรถขึ้นมาใหม่ ไอดี: %d", id);
	return 1;
}

CMD:deletegarage(playerid, params[])
{
	static
	    id = 0;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	if (sscanf(params, "d", id))
	    return SendClientMessage(playerid, COLOR_WHITE, "/deletegarage [ไอดี]");

	if ((id < 0 || id >= MAX_GARAGES) || !garageData[id][garageExists])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีอู่ซ่อมรถนี้อยู่ในฐานข้อมูล");

	Garage_Delete(id);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ลบอู่ซ่อมรถไอดี %d ออกสำเร็จ", id);
	return 1;
}

alias:engine("สตาร์ทรถ")
CMD:en(playerid, params[])
{
    new vehicleid = GetPlayerVehicleID(playerid);
    new Float:vehiclehealth;
    GetVehicleHealth(vehicleid, vehiclehealth);

	if (!IsEngineVehicle(vehicleid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะคันนี้ไม่มีเครื่องยนต์");

	if (vehiclehealth <= 350)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ยานพาหนะคันนี้มีความเสียหายมากเกินไป ไม่สามารถสตาร์ทได้");

	if (vehicleFuel[vehicleid] <= 0)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถคันนี้ไม่มีน้ำมันเลย");

	if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
		switch (GetEngineStatus(vehicleid))
		{
		    case false:
		    {
			    SetEngineStatus(vehicleid, true);
		        SendClientMessage(playerid, COLOR_WHITE, "คุณได้บิดกุญแจเพื่อ{00FF00}สตาร์ท{FFFFFF}เครื่องยนต์");
			}
			case true:
			{
			    SetEngineStatus(vehicleid, false);
		        SendClientMessage(playerid, COLOR_WHITE, "คุณได้บิดกุญแจเพื่อ{FF0000}ดับ{FFFFFF}เครื่องยนต์");
			}
		}
	}
	return 1;
}

alias:wavegivemoney("เวฟเสกเงิน")
CMD:wavegivemoney(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new userid, amount;
        if(sscanf(params, "ud", userid, amount))
			return SendClientMessage(playerid, COLOR_WHITE, "/givemoney [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        GivePlayerMoneyEx(userid, amount);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ให้เงินกับ %s(%d) จำนวน %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, FormatMoney(amount));
	}
    return 1;
}

CMD:wavesetmoney(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new userid, amount;
        if(sscanf(params, "ud", userid, amount))
			return SendClientMessage(playerid, COLOR_WHITE, "/setmoney [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        SetPlayerMoneyEx(userid, amount);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเงินให้กับ %s(%d) เหลือจำนวน %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, FormatMoney(amount));
	}
    return 1;
}

CMD:hp(playerid, params[])
{
    if(playerData[playerid][pAdmin] > 0)
    {
    	new userid, Float:hp;
        if(sscanf(params, "uf", userid, hp))
			return SendClientMessage(playerid, COLOR_WHITE, "/hp [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        SetPlayerHealth(userid, hp);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเลือดให้กับ %s(%d) จำนวน %.0f", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, hp);
	}
    return 1;
}

CMD:hpall(playerid, params[])
{
    if(playerData[playerid][pAdmin] > 4)
    {
    	new Float:hp;
        if(sscanf(params, "f", hp))
			return SendClientMessage(playerid, COLOR_WHITE, "/hpall [จำนวน]");

		foreach(new i : Player)
		{
        	SetPlayerHealth(i, hp);
		}

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเลือดให้กับทุกคนในเซิร์ฟเวอร์จำนวน %.0f", GetPlayerNameEx(playerid), hp);
    }
    return 1;
}

CMD:setarmor(playerid, params[])
{
    if(playerData[playerid][pAdmin] > 0)
    {
    	new userid, Float:armor;
        if(sscanf(params, "uf", userid, armor))
			return SendClientMessage(playerid, COLOR_WHITE, "/setarmor [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        SetPlayerArmour(userid, armor);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเกราะให้กับ %s(%d) จำนวน %.0f", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, armor);
	}
    return 1;
}

CMD:setarmorall(playerid, params[])
{
    if(playerData[playerid][pAdmin] > 4)
    {
    	new Float:armor;
        if(sscanf(params, "f", armor))
			return SendClientMessage(playerid, COLOR_WHITE, "/setarmorall [จำนวน]");

		foreach(new i : Player)
		{
        	SetPlayerArmour(i, armor);
		}

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเกราะให้กับทุกคนในเซิร์ฟเวอร์จำนวน %.0f", GetPlayerNameEx(playerid), armor);
    }
    return 1;
}

CMD:setadmin(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new userid, level;
        if(sscanf(params, "ud", userid, level))
			return SendClientMessage(playerid, COLOR_WHITE, "/setadmin [ไอดี/ชื่อ] [เลเวล]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        playerData[userid][pAdmin] = level;

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเลเวลแอดมินให้กับ %s(%d) เป็นแอดมินเลเวล %d", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, level);
	}
    return 1;
}

alias:twithdraw("เบิกเงิน")
CMD:twithdraw(playerid, params[])
{
	static
	    amount;

	if (GetFactionType(playerid) != FACTION_GOV)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "d", amount))
		return SendClientMessageEx(playerid, COLOR_WHITE, "/เบิกเงิน [จำนวน] (%s เงินปัจจุบัน)", FormatMoney(g_TaxVault));

	if (!IsPlayerInCityHall(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ทำการรัฐบาล");

	if (amount < 1 || amount > g_TaxVault)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เงินกองคลังมีไม่เพียงพอ");

    if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีความสามารถในการเบิกเงินกองคลัง ระดับที่ต้องการคือ: %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	Tax_AddMoney(-amount);

	GivePlayerMoneyEx(playerid, amount);
	SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้เบิกเงินกองคลังจำนวน %s ปัจจุบันเหลืออยู่ %s", FormatMoney(amount), FormatMoney(g_TaxVault));
	return 1;
}

alias:tdeposit("ฝากเงินเข้ากองคลัง")
CMD:tdeposit(playerid, params[])
{
	static
	    amount;

	if (GetFactionType(playerid) != FACTION_GOV)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "d", amount))
		return SendClientMessageEx(playerid, COLOR_WHITE, "/ฝากเงินเข้ากองคลัง [จำนวน] (%s เงินปัจจุบัน)", FormatMoney(g_TaxVault));

    if (!IsPlayerInCityHall(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ทำการรัฐบาล");

	if (amount < 1 || amount > GetPlayerMoneyEx(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่พอในการฝาก");

	if (playerData[playerid][pFactionRank] < factionData[playerData[playerid][pFaction]][factionRanks] - 1)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีความสามารถในการเบิกเงินกองคลัง ระดับที่ต้องการคือ: %d", factionData[playerData[playerid][pFaction]][factionRanks] - 1);

	Tax_AddMoney(amount);

	GivePlayerMoneyEx(playerid, -amount);
	SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ฝากเงินเข้ากองคลังจำนวน %s ปัจจุบันเหลืออยู่ %s", FormatMoney(amount), FormatMoney(g_TaxVault));

	return 1;
}

CMD:suspect(playerid, params[])
{
    new
	    userid,
		crime[32];

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "us[32]", userid, crime))
	    return SendClientMessage(playerid, COLOR_WHITE, "(/su)spect [ไอดี/ชื่อ] [ข้อหา]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถยัดดาวให้ตัวเองได้");

	if (GetFactionType(userid) == FACTION_POLICE || GetFactionType(userid) == FACTION_MEDIC || GetFactionType(userid) == FACTION_GOV)
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถยัดดาวให้กับหน่วยงานรัฐได้");

    GivePlayerWanted(userid, 1);

	SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ยัดคดีความให้กับ {33CCFF}%s {FFFFFF}ข้อหา: %s", GetPlayerNameEx(userid), crime);
	SendClientMessageEx(userid, COLOR_WHITE, "เจ้าหน้าที่ {33CCFF}%s {FFFFFF}ได้ยัดคดีให้คุณ ข้อหา: %s", GetPlayerNameEx(playerid), crime);
    return 1;
}
alias:suspect("1")

CMD:clearwd(playerid, params[])
{
    new
	    userid;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/clearwd [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถเคลียดาวให้ตัวเองได้");

	if (GetPlayerWantedLevelEx(userid) == 0)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่มีคดีติดตัวเลย");

    ResetPlayerWantedLevelEx(userid);

	SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ลบล้างคดีให้กับ {33CCFF}%s", GetPlayerNameEx(userid));
	SendClientMessageEx(userid, COLOR_WHITE, "เจ้าหน้าที่ {33CCFF}%s {FFFFFF}ได้ลบล้างคดีทั้งหมดให้คุณ", GetPlayerNameEx(playerid));
    return 1;
}
alias:clearwd("0")

CMD:wdlist(playerid, params[])
{
    new
	    count;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	foreach(new i : Player)
	{
	    if (GetPlayerWantedLevelEx(i) > 0)
	    {
	        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "ID: %d: %s {FFFFFF}%d ดาว", i, GetPlayerNameEx(i), GetPlayerWantedLevelEx(i));
	        count++;
	    }
	}
	if (!count)
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ขณะนี้ไม่มีใครมีคดีติดตัวเลย");
	    return 1;
	}
    return 1;
}
alias:wdlist("6")

CMD:detain(playerid, params[])
{
	new
		userid,
		vehicleid = GetNearestVehicle(playerid);

	if (GetFactionType(playerid) != FACTION_POLICE && GetFactionType(playerid) != FACTION_MEDIC && GetFactionType(playerid) != FACTION_GOV)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/cuff [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ ยะระ 5 เมตร์");

   /* if (!playerData[userid][pCuffed])
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้ถูกใส่กุญแจมืออยู่");*/

	if (vehicleid == INVALID_VEHICLE_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ใกล้รถคันไหนเลย");

	if (GetVehicleMaxSeats(vehicleid) < 1)
  	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถนำตัวขึ้นรถคันนี้ได้");

	if (IsPlayerInVehicle(userid, vehicleid))
	{
		TogglePlayerControllable(userid, 1);

		RemoveFromVehicle(userid);
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เปิดประตูและดึง %s ลงมาจากยานพาหนะ", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	}
	else
	{
		new seatid = GetAvailableSeat(vehicleid, 2);

		if (seatid == -1)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ที่นั่งเต็มแล้ว");

		TogglePlayerControllable(userid, 0);

		StopDragging(userid);
		PutPlayerInVehicle(userid, vehicleid, seatid);

		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เปิดประตูและดึง %s ขึ้นยานพาหนะ", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	}
	return 1;
}
alias:detain("5")

CMD:cuff(playerid, params[])
{
    new
	    userid;

	if (GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/cuff [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใส่กุญแจมือให้ตัวเองได้");

	if (GetPlayerState(userid) != PLAYER_STATE_ONFOOT)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในยานพาหนะ");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

    if (playerData[userid][pCuffed])
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ถูกใส่กุญแจมืออยู่");

	static
	    string[64];

    playerData[userid][pCuffed] = 1;

    TogglePlayerControllable(userid, false);
    SetPlayerSpecialAction(userid, SPECIAL_ACTION_CUFFED);

	format(string, sizeof(string), "You've been ~r~cuffed~w~ by %s", GetPlayerNameEx(playerid));
    GameTextForPlayer(userid, string, 5000, 1);

    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ใส่กุญแจมือผู้ต้องสงสัย %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
    return 1;
}
alias:cuff("2")

CMD:uncuff(playerid, params[])
{
    new
	    userid;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/uncuff [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถปลดกุญแจมือให้ตัวเองได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

    if (!playerData[userid][pCuffed])
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้ถูกใส่กุญแจมือ");

	static
	    string[64];

    playerData[userid][pCuffed] = 0;

    TogglePlayerControllable(userid, true);
    SetPlayerSpecialAction(userid, SPECIAL_ACTION_NONE);

	format(string, sizeof(string), "You've been ~g~uncuffed~w~ by %s", GetPlayerNameEx(playerid));
    GameTextForPlayer(userid, string, 5000, 1);

    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ถอดกุญแจมือให้ผู้ต้องสงสัย %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
    return 1;
}
alias:uncuff("3")

CMD:drag(playerid, params[])
{
	new
	    userid;

	if (GetFactionType(playerid) != FACTION_POLICE && GetFactionType(playerid) != FACTION_GOV)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

    if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/drag [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถลากตัวเองได้");

	if (GetPlayerState(userid) != PLAYER_STATE_ONFOOT)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในยานพาหนะ");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (playerData[userid][pDragged])
	{
	    playerData[userid][pDragged] = 0;
	    playerData[userid][pDraggedBy] = INVALID_PLAYER_ID;

	    KillTimer(playerData[userid][pDragTimer]);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ปล่อยตัวผู้ต้องหา %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	}
	else
	{
	    playerData[userid][pDragged] = 1;
	    playerData[userid][pDraggedBy] = playerid;

	    playerData[userid][pDragTimer] = SetTimerEx("DragUpdate", 200, true, "dd", playerid, userid);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้พาตัวผู้ต้องหา %s ไปกับเขา", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	}
	return 1;
}
alias:drag("4")

CMD:arrest(playerid, params[])
{
	static
	    userid,
		time,
		money;

	new id = Arrest_Nearest(playerid);

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "udd", userid, time, money))
	    return SendClientMessage(playerid, COLOR_WHITE, "(/ar)rest [ไอดี/ชื่อ] [นาที] [ค่าปรับ 1-1000]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถส่งตัวเองเข้าคุกได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (time < 5 || time > 30)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เวลาต้องไม่ต่ำกว่า 1 และไม่เกิน 30 นาที");

	if (money < 1 || money > 1000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ระบุจำนวนเงินห้ามสูงกว่า 1000 บาท");

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่จุดส่งผู้ต้องหาเข้าคุก");

	playerData[userid][pPrisoned] = 1;
	playerData[userid][pJailTime] = time * 60; // time * 60

	playerData[userid][pPrisonOut] = id;

	StopDragging(userid);
	SetPlayerInPrison(userid);

	ResetPlayerWeaponsEx(userid);
	ResetPlayer(userid);

	playerData[userid][pCuffed] = 0;

	GivePlayerMoneyEx(userid, -money);
	GivePlayerMoneyEx(playerid, money);

	ResetPlayerWantedLevelEx(userid);

    SetPlayerSpecialAction(userid, SPECIAL_ACTION_NONE);

    SendClientMessageToAllEx(COLOR_LIGHTRED, ">>> ผู้ต้องหา %s ถูกนำตัวเข้าคุกเป็นเวลา %s นาที <<<", GetPlayerNameEx(userid), FormatNumber(time));

    return 1;
}
alias:arrest("ar")

CMD:jail(playerid, params[])
{
	static
	    userid,
		time;

	if(GetFactionType(playerid) != FACTION_POLICE)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

	if (sscanf(params, "ud", userid, time))
	    return SendClientMessage(playerid, COLOR_WHITE, "/jail [ไอดี/ชื่อ] [นาที]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (time < 1 || time > 1000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เวลาต้องไม่ต่ำกว่า 1 และไม่เกิน 1000 นาที");

	playerData[userid][pPrisoned] = 1;
	playerData[userid][pJailTime] = time * 60; // time * 60

	playerData[userid][pPrisonOut] = 0;

	StopDragging(userid);
	SetPlayerInPrison(userid);

	ResetPlayerWeaponsEx(userid);
	ResetPlayer(userid);

	playerData[userid][pCuffed] = 0;

    SetPlayerSpecialAction(userid, SPECIAL_ACTION_NONE);

    SendClientMessageToAllEx(COLOR_LIGHTRED, "*** แอดมิน %s ได้ส่งผู้เล่น %s เข้าคุก %s นาที", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), FormatNumber(time));
    return 1;
}

CMD:unjail(playerid, params[])
{
	static
	    userid;

    if(playerData[playerid][pAdmin] < 1)
		return 1;

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/unjail [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	playerData[userid][pPrisoned] = 0;
	playerData[userid][pJailTime] = 1; // time * 60

    SendClientMessageToAllEx(COLOR_LIGHTRED, "*** แอดมิน %s ได้นำผู้เล่น %s ออกจากคุก", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
    return 1;
}

Dialog:DIALOG_BUYSKIN(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		static
			skin,
			string[256];

		if(sscanf(inputtext, "d", skin))
			return Dialog_Show(playerid, DIALOG_BUYSKIN, DIALOG_STYLE_INPUT, "[ร้านค้า]", "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ\nราคา $1000 ต่อ Skin", "ซื้อ", "ออก");

		if(skin == 0 || skin == 99 || skin == 268 || skin == 280 || skin == 281 || skin == 282 || skin == 283 || skin == 284 || skin == 285 || skin == 286 ||
		skin == 287 || skin == 288 || skin == 274 || skin == 275 || skin == 276 || skin == 277 || skin == 278 || skin == 279 || skin == 265 || skin == 266 ||
		skin == 267)
		{
			format(string, sizeof string, "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ\nราคา $1000 ต่อ Skin\nSkin %d ไม่รองรับ", skin);
			Dialog_Show(playerid, DIALOG_BUYSKIN, DIALOG_STYLE_INPUT, "[ร้านค้า]", string, "ซื้อ", "ออก");
			return 1;
		}
		if(skin < 0 || skin > 73)
		if(skin < 75 || skin > 311)
		{
			format(string, sizeof string, "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ\nราคา $1000 ต่อ Skin\nSkin %d ไม่รองรับ", skin);
			Dialog_Show(playerid, DIALOG_BUYSKIN, DIALOG_STYLE_INPUT, "[ร้านค้า]", string, "ซื้อ", "ออก");
			return 1;
		}
		if(GetPlayerMoneyEx(playerid) < 5000)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อเสื้อผ้า");

		GivePlayerMoneyEx(playerid, -5000);
		SetPlayerSkin(playerid, skin);
		playerData[playerid][pSkin] = skin;
		UpdateplayerData(playerid);
	}
	return 1;
}

Dialog:DIALOG_BUYSKIN2(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		static
			skin;
			//string[256];

		if(sscanf(inputtext, "d", skin))
			return Dialog_Show(playerid, DIALOG_BUYSKIN2, DIALOG_STYLE_INPUT, "[สกินสำหรับหน่วยงาน]", "{FFFFFF}ใส่หมายเลข Skin ที่ต้องการ", "ซื้อ", "ออก");

		SetPlayerSkin(playerid, skin);
		playerData[playerid][pSkin] = skin;
		UpdateplayerData(playerid);
	}
	return 1;
}

Dialog:DIALOG_BUY(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				new itemname[24];
				itemname = "Pizza";
				new price = 100;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				new count = Inventory_Count(playerid, itemname)+1;

				if (count > 20)
                    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องเก็บ {00FF00}%s{FFFFFF} ของคุณไม่เพียงพอ", itemname);

				Inventory_Add(playerid, itemname, 1);
				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		    case 1:
		    {
				new itemname[24];
				itemname = "Water Bottle";
				new price = 50;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				new count = Inventory_Count(playerid, itemname)+1;

				if (count > 20)
                    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องเก็บ {00FF00}%s{FFFFFF} ของคุณไม่เพียงพอ", itemname);

				Inventory_Add(playerid, itemname, 1);
				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		    case 2:
		    {
				new itemname[24];
				itemname = "Hacksaw";
				new price = 800;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				if (Inventory_HasItem(playerid, itemname))
                    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องเก็บ {00FF00}%s{FFFFFF} ของคุณไม่เพียงพอ", itemname);

				Inventory_Add(playerid, itemname, 1);
				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		    case 3:
		    {
				new itemname[24];
				itemname = "Fishing Rod";
				new price = 500;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				if (Inventory_HasItem(playerid, itemname))
                    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องเก็บ {00FF00}%s{FFFFFF} ของคุณไม่เพียงพอ", itemname);

				Inventory_Add(playerid, itemname, 1);

				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		    case 4:
		    {
				new itemname[24];
				itemname = "Bait";
				new price = 80;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				new count = Inventory_Count(playerid, itemname)+1;

				if (count > 20)
                    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องเก็บ {00FF00}%s{FFFFFF} ของคุณไม่เพียงพอ", itemname);

				Inventory_Add(playerid, itemname, 5);

				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
			//
		    case 5:
		    {
				new itemname[24];
				itemname = "Medic Kit";
				new price = 3000;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				Inventory_Add(playerid, itemname, 1);

				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		    case 6:
		    {
				new itemname[24];
				itemname = "Fuel Can";
				new price = 100;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				Inventory_Add(playerid, itemname, 1);

				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		    case 7:
		    {
				new itemname[24];
				itemname = "VehicleBox";
				new price = 3500;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				Inventory_Add(playerid, itemname, 1);

				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		}
	}
	return 1;
}

Dialog:DIALOG_BUYFASHION(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				new itemname[24];
				itemname = "Helmet 3";
				new price = 3000;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				if (Inventory_HasItem(playerid, itemname))
                    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องเก็บ {00FF00}%s{FFFFFF} ของคุณไม่เพียงพอ", itemname);

				Inventory_Add(playerid, itemname, 1);

				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		    case 1:
		    {
				new itemname[24];
				itemname = "Helmet 2";
				new price = 3000;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				if (Inventory_HasItem(playerid, itemname))
                    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องเก็บ {00FF00}%s{FFFFFF} ของคุณไม่เพียงพอ", itemname);

				Inventory_Add(playerid, itemname, 1);

				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		    case 2:
		    {
				new itemname[24];
				itemname = "Helmet 1";
				new price = 3000;

				if (GetPlayerMoneyEx(playerid) < price)
				    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการซื้อ {00FF00}%s{FFFFFF} (%s/%s)", itemname, FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(price));

				Inventory_Add(playerid, itemname, 1);

				GivePlayerMoneyEx(playerid, -price);

				SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้ซื้อ {00FF00}%s{FFFFFF} สำเร็จ ในราคา {00FF00}%s", itemname, FormatMoney(price));
		    }
		}
	}
	return 1;
}

CMD:buy(playerid, params[])
{
	new id = Shop_Nearest(playerid);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ร้านค้า");

	switch(shopData[id][shopType])
	{
		case 1: Dialog_Show(playerid, DIALOG_BUY, DIALOG_STYLE_TABLIST_HEADERS, "[ร้านค้า]", "\
        ชื่อสินค้า\tราคา\n\
		พิซซ่า\t{00FF00}$100\n\
		น้ำเปล่า\t{00FF00}$50\n\
		เลื่อยตัดไม้\t{00FF00}$800\n\
		เบ็ดตกปลา\t{00FF00}$500\n\
		เหยื่อ\t{00FF00}$80\n\
		Medic Kit\t{00FF00}$3,000\n\
		ถังน้ำมัน\t{00FF00}$100\n\
		กล่องซ่อมรถ\t{00FF00}$3,500\
		", "ซื้อ", "ออก");
		case 2: Dialog_Show(playerid, DIALOG_BUYSKIN, DIALOG_STYLE_INPUT, "[ร้านค้า]", "\
        {FFFFFF}ใส่หมายเลข Skin ที่ต้องการ\n\
		ราคา $5000 ต่อ Skin\
		", "ซื้อ", "ออก");
		case 3: Dialog_Show(playerid, DIALOG_BUYFASHION, DIALOG_STYLE_TABLIST_HEADERS, "[ร้านค้า]", "\
        ชื่อสินค้า\tราคา\n\
		หมวกกันน็อคสีแดง\t{00FF00}$3000\n\
		หมวกกันน็อคสีม่วง\t{00FF00}$3000\n\
		หมวกกันน็อคสีน้ำเงิน\t{00FF00}$30000\
		", "ซื้อ", "ออก");
	}
    return 1;
}

alias:refill("เติมน้ำมัน")
CMD:refill(playerid, params[])
{
	new id = Pump_Nearest(playerid);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่ปั้มน้ำมัน");

	if (!IsPlayerInAnyVehicle(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัว");

	new vehicleid = GetPlayerVehicleID(playerid);
	new modelid = GetVehicleModel(vehicleid);
	new Float:maxfuel = vehicleData[modelid - 400][vFuel];

	new Float:fuel = vehicleData[modelid - 400][vFuel] - vehicleFuel[vehicleid];
	new Float:valuefloat = fuel*30;
	new value = floatround(valuefloat);

	if (GetPlayerMoneyEx(playerid) < value)
		return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการเติมน้ำมัน (%s/%s) ลิตรละ 26", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(value));

	if (vehicleFuel[vehicleid] >= maxfuel)
		return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถเติมน้ำมันมากกว่านี้ได้ (%.2f/%.2f)", vehicleFuel[vehicleid], maxfuel);

	vehicleFuel[vehicleid] += fuel;
	GivePlayerMoneyEx(playerid, -value);

	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้เติมน้ำมัน %.1f ลิตร ในราคา %s", fuel, FormatMoney(value));
    return 1;
}

/*alias:repair("ซ่อมรถ")
CMD:repair(playerid, params[])
{
	new id = Garage_Nearest(playerid);

	if (id == -1)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่อู่ซ่อมรถ");

	Dialog_Show(playerid, DIALOG_REPAIR, DIALOG_STYLE_TABLIST_HEADERS, "[รายการซ่อม]", "เมนู\tราคา\nเปลี่ยนสี\t$1,000\nซ่อมรถ\t$2,500\nเครื่องมือซ่อมรถ\t$3,500\nแต่งไฟใต้ท้องรถ\t$35,000", "ตกลง", "กลับ");
    return 1;
}*/

alias:bring("ดึง")
CMD:bring(playerid, params[])
{
	static
	    userid;

	if (playerData[playerid][pAdmin] < 2)
	    return 1;

	if (sscanf(params, "u", userid))
     	return SendClientMessage(playerid, COLOR_WHITE, "/bring [ไอดี/ชื่อ]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (!IsPlayerSpawnedEx(userid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ยังไม่ได้อยู่ในสถานะปกติ");

	SendPlayerToPlayer(userid, playerid);
	SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้ดึงผู้เล่น %s มาหา", GetPlayerNameEx(userid));
	return 1;
}

CMD:gotopoint(playerid, params[])
{

    if (playerData[playerid][pAdmin] < 6)
	    return SendClientMessage(playerid, COLOR_SERVER,"( ข้อผิดพลาด ) คุณไม่ใช่แอดมินไม่สามารถใช้คำสั่งนี้ได้[!]");

    new
    	interiorID,
     	Float: coordinates[3];

	if(sscanf(params, "fffd", coordinates[0], coordinates[1], coordinates[2], interiorID))
	{
 		SendClientMessage(playerid , COLOR_SERVER,"/gotopoint [x] [y] [z] [interior]");
	}
	else
	{
 		SetPlayerInterior(playerid, interiorID);
   		SetPlayerPos(playerid, coordinates[0], coordinates[1], coordinates[2]);
	}

	return 1;
}

alias:goto("ไป")
CMD:goto(playerid, params[])
{
	static
	    id,
	    type[24],
		string[64];

	if (playerData[playerid][pAdmin] < 2)
	    return 1;

	if (sscanf(params, "u", id))
 	{
	 	SendClientMessage(playerid, COLOR_WHITE, "/goto [ไอดี/ชื่อ]");
		SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} entrance, interior");
		return 1;
	}
    if (id == INVALID_PLAYER_ID)
	{
	    if (sscanf(params, "s[24]S()[64]", type, string))
		{
		 	SendClientMessage(playerid, COLOR_WHITE, "/goto [ไอดี/ชื่อ]");
			SendClientMessage(playerid, COLOR_YELLOW, "[ชื่อรายการ]:{FFFFFF} entrance, interior");
			return 1;
	    }
		else if (!strcmp(type, "entrance", true))
		{
		    if (sscanf(string, "d", id))
		        return SendClientMessage(playerid, COLOR_WHITE, "/goto [ชื่อรายการ] [ไอดีประตู]");

			if ((id < 0 || id >= MAX_ENTRANCES) || !entranceData[id][entranceExists])
			    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอดีประตูนี้อยู่ในฐานข้อมูล");

		    SetPlayerPos(playerid, entranceData[id][entrancePosX], entranceData[id][entrancePosY], entranceData[id][entrancePosZ]);
		    SetPlayerInterior(playerid, entranceData[id][entranceExterior]);

			SetPlayerVirtualWorld(playerid, entranceData[id][entranceExteriorVW]);
		    SendClientMessageEx(playerid, COLOR_SERVER, "คุณได้วาร์ปมาที่ประตูไอดี: %d", id);
		    return 1;
		}
		else if (!strcmp(type, "interior", true))
		{
		    static
		        str[1536];

			str[0] = '\0';

			for (new i = 0; i < sizeof(g_arrInteriorData); i ++)
			{
			    strcat(str, g_arrInteriorData[i][e_InteriorName]);
			    strcat(str, "\n");
		    }
		    Dialog_Show(playerid, DIALOG_TELEPORT, DIALOG_STYLE_LIST, "[สถานที่ด้านในทั้งหมด]", str, "วาร์ป", "ออก");
		    return 1;
		}
	    else return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");
	}
	if (!IsPlayerSpawnedEx(id))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ยังไม่ได้อยู่ในสถานะปกติ");

	SendPlayerToPlayer(playerid, id);

	format(string, sizeof(string), "You have ~y~teleported~w~ to %s.", GetPlayerNameEx(id));
	GameTextForPlayer(playerid, string, 5000, 1);

	return 1;
}

alias:lock("ล็อค")
CMD:lock(playerid, params[])
{
	new
	    id = GetNearbyVehicle(playerid);

/*	if (!IsPlayerInAnyVehicle(playerid) && (id = (Entrance_Inside(playerid) == -1) ? (Entrance_Nearest(playerid)) : (Entrance_Inside(playerid))) != -1)
	{
		if (strlen(entranceData[id][entrancePass]))
		{
			Dialog_Show(playerid, DIALOG_ENTRANCEPASS, DIALOG_STYLE_INPUT, "[รหัสผ่านประตู]", "ใส่รหัสผ่านให้ประตูเพื่อความปลอดภัย:", "ยืนยัน", "ออก");
		}
	}*/
//	SendClientMessageEx(playerid, -1, "IsVehicleOwner: %d", IsVehicleOwner(playerid, id));
    if(IsVehicleOwner(playerid, id) || playerData[playerid][pVehicleKeys] == id || (carData[id][carFaction] >= 0 && carData[id][carFaction] == playerData[playerid][pFaction]))
	{
	    if(!carData[id][carLocked])
	    {
			carData[id][carLocked] = 1;

			GameTextForPlayer(playerid, "~r~Vehicle locked", 3000, 6);
			SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้ล็อครถ %s", GetPlayerNameEx(playerid), ReturnVehicleName(id));
		}
		else
		{
			carData[id][carLocked] = 0;

			GameTextForPlayer(playerid, "~g~Vehicle unlocked", 3000, 6);
			SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, "** %s ได้ปลดล็อครถ %s", GetPlayerNameEx(playerid), ReturnVehicleName(id));
		}

		SetVehicleParams(id, VEHICLE_DOORS, carData[id][carLocked]);
        PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		new query[128];
		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carLocked = %d WHERE carID = %d", carData[id][carLocked], carData[id][carID]);
		mysql_tquery(g_SQL, query);
		return 1;
	}
	return 1;
}

CMD:tune(playerid, params[]){
	Dialog_Show(playerid, DIALOG_TYPE_MAIN, DIALOG_STYLE_LIST, "Car Tuning Menu", "Paint Jobs\nColors\nHoods\nVents\nLights\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSide Skirts\nBullbars\nWheels\nCar Stereo\nHydraulics", "เลือก", "ยกเลิก");
	return 1;
}

alias:heal("รักษา")
CMD:heal(playerid, params[])
{
	static
	    userid, price = 0;

	new string[256];

    if (GetFactionType(playerid) != FACTION_MEDIC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

    if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/รักษา [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถรักษาตัวเองได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerMoneyEx(userid) < price)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นมีเงินไม่เพียงพอ");

	if (IsPlayerInAnyVehicle(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องไม่อยู่ในรถ");

	if (IsPlayerInAnyVehicle(userid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในรถ");


	new Float:hp;
	GetPlayerHealth(userid, hp);

	if (hp > 70)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในสถานะขาดเลือด");

	playerData[playerid][pMedicOfferID] = userid;
	playerData[playerid][pMedicOfferPrice] = price;
	playerData[userid][pMedicOfferID] = playerid;
	playerData[userid][pMedicOfferPrice] = price;

	format(string, sizeof string, "{FFFFFF}ตอบรับการรักษาจากหมอ (เติมเลือด) %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
    Dialog_Show(userid, DIALOG_ACCEPT44, DIALOG_STYLE_MSGBOX, "[ยืนยัน]", string, "ยืนยัน", "ปิด");
	return 1;
}

Dialog:DIALOG_ACCEPT44(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMedicOfferID];
	new price = playerData[playerid][pMedicOfferPrice];
	if (response)
	{
		SetPlayerHealth(playerid, 100);

		GivePlayerMoneyEx(playerid, -price);
		GivePlayerMoneyEx(userid, price);

	    SendClientMessageEx(userid, COLOR_WHITE, "คุณได้รักษา {33CCFF}%s{FFFFFF} เป็นจำนวนเงิน $%d", GetPlayerNameEx(playerid), price);
	    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้รักษาคุณ เป็นจำนวนเงิน $%d", GetPlayerNameEx(userid), price);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้รักษา %s", GetPlayerNameEx(userid), GetPlayerNameEx(playerid));
		playerData[userid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMedicOfferPrice] = 0;
		playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMedicOfferPrice] = 0;
	}
	else
	{
		playerData[userid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMedicOfferPrice] = 0;
		playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMedicOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_ACCEPT55(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMedicOfferID];
	new price = playerData[playerid][pMedicOfferPrice];
	if (response)
	{
		SetPlayerHealth(playerid, 10.0);
		SetPlayerWeather(playerid, globalWeather);
	    playerData[playerid][pInjured] = 0;
	    playerData[playerid][pInjuredTime] = 0;
	    ClearAnimations(playerid);
	    PlayerTextDrawHide(playerid, PlayerDeathTD[playerid]);

	    GivePlayerMoneyEx(playerid, -price);
	    GivePlayerMoneyEx(userid, price);

	    SendClientMessageEx(userid, COLOR_WHITE, "คุณได้รักษาอาการบาดเจ็บให้ {33CCFF}%s{FFFFFF} เป็นจำนวนเงิน $%d", GetPlayerNameEx(playerid), price);
	    SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้รักษาอาการบาดเจ็บให้คุณ เป็นจำนวนเงิน $%d", GetPlayerNameEx(userid), price);
	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้รักษาอาการบาดเจ็บให้ %s", GetPlayerNameEx(userid), GetPlayerNameEx(playerid));
		playerData[userid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMedicOfferPrice] = 0;
		playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMedicOfferPrice] = 0;
	}
	else
	{
		playerData[userid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMedicOfferPrice] = 0;
		playerData[playerid][pMedicOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMedicOfferPrice] = 0;
	}
	return 1;
}

alias:cpr("ชุบชีวิต")
CMD:cpr(playerid, params[])
{
	static
	    userid, price = 0;

    new string[256];

    if (GetFactionType(playerid) != FACTION_MEDIC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ช่องทางนี้สำหรับเจ้าหน้าที่เท่านั้น!");

    if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/ชุบชีวิต [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถรักษาตัวเองได้");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerMoneyEx(userid) < price)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นมีเงินไม่เพียงพอ");

	if (!playerData[userid][pInjured])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในสถานะบาดเจ็บ");

	if (IsPlayerInAnyVehicle(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องไม่อยู่ในรถ");

	if (IsPlayerInAnyVehicle(userid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ต้องไม่อยู่ในรถ");

	playerData[playerid][pMedicOfferID] = userid;
	playerData[playerid][pMedicOfferPrice] = price;
	playerData[userid][pMedicOfferID] = playerid;
	playerData[userid][pMedicOfferPrice] = price;

	format(string, sizeof string, "{FFFFFF}ตอบรับการรักษาจากหมอ (ชุพ CPR) %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
    Dialog_Show(userid, DIALOG_ACCEPT55, DIALOG_STYLE_MSGBOX, "[ยืนยัน]", string, "ยืนยัน", "ปิด");
	return 1;
}

CMD:acpr(playerid, params[])
{
	static
	    userid;

    if (playerData[playerid][pAdmin] < 6)
	    return 1;

    if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_WHITE, "/acpr [ไอดี/ชื่อ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (!playerData[userid][pInjured])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในสถานะบาดเจ็บ");

	SetPlayerHealth(userid, 100);
	SetPlayerWeather(userid, globalWeather);
    playerData[userid][pInjured] = 0;
    playerData[userid][pInjuredTime] = 0;
    ClearAnimations(userid);
    PlayerTextDrawHide(userid, PlayerDeathTD[userid]);

    SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้รักษาอาการบาดเจ็บให้ {33CCFF}%s{FFFFFF}", GetPlayerNameEx(userid));
    SendClientMessageEx(userid, COLOR_LIGHTBLUE, "%s {FFFFFF}ได้รักษาอาการบาดเจ็บให้คุณ", GetPlayerNameEx(playerid));
    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้รักษาอาการบาดเจ็บให้ %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	return 1;
}

/*CMD:waveitemlist(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	static
	    string[1024];

	if (!strlen(string))
	{
		for (new i = 0; i < sizeof(itemData); i ++)
		{
			format(string, sizeof(string), "%s%s\n", string, itemData[i][itemName]);
		}
	}
	return Dialog_Show(playerid, DIALOG_SHOW, DIALOG_STYLE_LIST, "[รายชื่อไอเท็มทั้งหมด]", string, "ปิด", "");
}

CMD:wavegiveitem(playerid,params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new userid, item[32], amount;
	if(sscanf(params, "us[32]d", userid, item, amount)) return SendClientMessage(playerid, COLOR_WHITE, "/giveitem [ไอดี/ชื่อ] [ชื่อไอเท็ม] [จำนวน]");

	new count = Inventory_Count(userid, item)+amount;

	if (count > playerData[userid][pItemAmount])
        return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของ {00FF00}%s{FFFFFF} ของผู้เล่นนั้นเต็มแล้ว (%d/%d)", item, Inventory_Count(userid, item), playerData[userid][pItemAmount]);

	for (new i = 0; i < sizeof(itemData); i ++) if (!strcmp(itemData[i][itemName], item, true))
	{
		new id = Inventory_Add(userid, itemData[i][itemName], amount);

		if (id == -1)
		    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ความจุของกระเป๋าไม่เพียงพอ (%d/%d) หรือน้ำหนักกระเป๋าไม่เพียงพอ", Inventory_Items(playerid), playerData[playerid][pMaxItem]);

//	    Inventory_Add(userid, itemData[i][itemName], amount);
	    SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ให้ไอเท็ม %s จำนวน %d กับ %s", GetPlayerNameEx(playerid), item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ให้ไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} กับ {33CCFF}%s", item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(userid, COLOR_WHITE, "คุณได้รับไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} จากแอดมิน {33CCFF}%s", item, amount, GetPlayerNameEx(userid));
		return 1;
	}
	SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอเท็ม %s อยู่ในระบบ (คำสั่ง /itemlist ในการเช็ครายชื่อไอเท็ม)", item);
	return 1;
}

CMD:wavesetitem(playerid,params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new userid, item[32], amount;
	if(sscanf(params, "us[32]d", userid, item, amount)) return SendClientMessage(playerid, COLOR_WHITE, "/setitem [ไอดี/ชื่อ] [ชื่อไอเท็ม] [จำนวน]");

	for (new i = 0; i < sizeof(itemData); i ++) if (!strcmp(itemData[i][itemName], item, true))
	{
	    if (!strcmp(item, "Phone", true))
		{
	        playerData[userid][pPhone] = random(900000) + 100000;
	    }
	    Inventory_Set(userid, itemData[i][itemName], amount);
	    SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับไอเท็ม %s จำนวน %d ให้กับ %s", GetPlayerNameEx(playerid), item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้ปรับไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} ให้กับ {33CCFF}%s", item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(userid, COLOR_WHITE, "คุณถูกปรับไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} โดยแอดมิน {33CCFF}%s", item, amount, GetPlayerNameEx(playerid));
		return 1;
	}
	SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอเท็ม %s อยู่ในระบบ (คำสั่ง /itemlist ในการเช็ครายชื่อไอเท็ม)", item);
	return 1;
}

CMD:wavedeleteitem(playerid,params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new userid, item[32], amount;
	if(sscanf(params, "us[32]d", userid, item, amount)) return SendClientMessage(playerid, COLOR_WHITE, "/deleteitem [ไอดี/ชื่อ] [ชื่อไอเท็ม] [จำนวน]");

	for (new i = 0; i < sizeof(itemData); i ++) if (!strcmp(itemData[i][itemName], item, true))
	{
	    Inventory_Remove(userid, item, amount);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ลบไอเท็ม %s จำนวน %d ให้กับ %s", GetPlayerNameEx(playerid), item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(playerid, COLOR_WHITE, "คุณลบไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} ของ {33CCFF}%s", item, amount, GetPlayerNameEx(userid));
		SendClientMessageEx(userid, COLOR_WHITE, "คุณถูกลบไอเท็ม {00FF00}%s{FFFFFF} จำนวน {00FF00}%d{FFFFFF} โดยแอดมิน {33CCFF}%s", item, amount, GetPlayerNameEx(playerid));
		return 1;
	}
	SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีไอเท็ม %s อยู่ในระบบ", item);
	return 1;
}

CMD:waveclearitem(playerid,params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new userid;
	if(sscanf(params, "u", userid)) return SendClientMessage(playerid, COLOR_WHITE, "/clearitem [ไอดี/ชื่อ]");

	Inventory_Clear(userid);

    SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ลบไอเท็มทั้งหมดของ %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid));
	SendClientMessageEx(playerid, COLOR_WHITE, "คุณลบไอเท็มทั้งหมดของ {33CCFF}%s", GetPlayerNameEx(userid));
	SendClientMessageEx(userid, COLOR_WHITE, "คุณถูกลบไอเท็มทั้งหมดโดยแอดมิน {33CCFF}%s", GetPlayerNameEx(playerid));
	return 1;
}*/

alias:phone("โทรศัพ")
CMD:phone(playerid, const params[])
{
	if (!Inventory_HasItem(playerid, "Phone"))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีมือถือ");

    if (playerData[playerid][pHospital] != -1 || playerData[playerid][pCuffed] || playerData[playerid][pInjured] || !IsPlayerSpawnedEx(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถใช้มือถือได้ในขณะนี้");

	static
	    str[32];

	format(str, sizeof(str), "เบอร์ของคุณ: #%d", playerData[playerid][pPhone]);
	SendClientMessage(playerid, COLOR_YELLOW, str);

	/*if (playerData[playerid][pPhoneOff])
	{
		Dialog_Show(playerid, DIALOG_MYPHONE, DIALOG_STYLE_LIST, str, "หมายเลขที่ต้องการโทร\nรายชื่อผู้ติดต่อ\nส่งข้อความ\nเปิดเครื่อง", "ตกลง", "ออก");
	}
	else {
	    Dialog_Show(playerid, DIALOG_MYPHONE, DIALOG_STYLE_LIST, str, "หมายเลขที่ต้องการโทร\nรายชื่อผู้ติดต่อ\nส่งข้อความ\nปิดเครื่อง", "ตกลง", "ออก");
	}*/
	ShowPhone(playerid);
	return 1;
}

alias:sms("ข้อความ")
CMD:sms(playerid, params[])
	return callcmd::text(playerid, params);

alias:text("ส่งข้อความ")
CMD:text(playerid, params[])
{
    if (!Inventory_HasItem(playerid, "Phone"))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีมือถือ");

    if (playerData[playerid][pPhoneOff])
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

	static
	    targetid,
		number,
		text[128];

	if (sscanf(params, "ds[128]", number, text))
	    return SendClientMessage(playerid, COLOR_WHITE, "/text [เบอร์] [ข้อความ]");

	if (!number)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีหมายเลขที่ท่านเรียก");

	if ((targetid = GetNumberOwner(number)) != INVALID_PLAYER_ID)
	{
	    if (targetid == playerid)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถส่งให้ตัวเองได้");

		if (playerData[targetid][pPhoneOff])
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}หมายเลขที่ท่านเรียกไม่สามารถติดต่อได้ในขณะนี้");

        GivePlayerMoneyEx(playerid, -1);
		GameTextForPlayer(playerid, "You've been ~r~charged~w~ $1 to send a text.", 5000, 1);

		SendClientMessageEx(targetid, COLOR_YELLOW, "[ข้อความ]: %s - %s (%d)", text, GetPlayerNameEx(playerid), playerData[playerid][pPhone]);
		SendClientMessageEx(playerid, COLOR_YELLOW, "[ข้อความ]: %s - %s (%d)", text, GetPlayerNameEx(playerid), playerData[playerid][pPhone]);

        PlayerPlaySoundEx(targetid, 21001);
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบมือถือขึ้นมาและกดส่งข้อความ", GetPlayerNameEx(playerid));
	}
	else
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีหมายเลขที่ท่านเรียก");
	}
	return 1;
}

alias:answer("รับสาย")
CMD:answer(playerid, params[])
{
	if (!playerData[playerid][pIncomingCall])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสายเรียกเข้า");

	if (playerData[playerid][pCuffed])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่สามารถใช้มือถือได้ในขณะนี้");

    if (playerData[playerid][pPhoneOff])
    	return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

	new targetid = playerData[playerid][pCallLine];

	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
	SetPlayerAttachedObject( playerid, 0, 18865, 6, 0.086043, 0.027719, 0.003817, 95.232246, 178.651031, 1.691840, 1.002077, 1.000000, 1.000000 ); // MobilePhone1 - phone1

	playerData[playerid][pIncomingCall] = 0;
	playerData[targetid][pIncomingCall] = 0;

	SendClientMessage(playerid, COLOR_YELLOW, "[SERVER]:{FFFFFF} คุณได้รับสายแล้ว");
	SendClientMessage(targetid, COLOR_YELLOW, "[SERVER]:{FFFFFF} สายที่คุณโทรถูกรับแล้ว");

	SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้รับสายเรียกเข้า", GetPlayerNameEx(playerid));

	//
	
	HidePhone(playerid);
	HidePhone(targetid);
	
	return 1;
}

alias:hangup("วางสาย")
CMD:hangup(playerid, const params[])
{
	new targetid = playerData[playerid][pCallLine];

	if (playerData[playerid][pEmergency])
	{
	    playerData[playerid][pEmergency] = 0;
//	    playerData[playerid][pPlaceAd] = 0;

        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้วางสาย", GetPlayerNameEx(playerid));
        return 1;
	}
	if (targetid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีสายให้วาง");

	if (playerData[playerid][pIncomingCall])
	{
	    SendClientMessage(playerid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} คุณได้ตัดสายเรียกเข้า");
	    SendClientMessage(targetid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} คุณถูกตัดสายการโทร");

		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ตัดสายเรียกเข้า", GetPlayerNameEx(playerid));
	}
	else
	{
        SendClientMessage(playerid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} คุณวางสายแล้ว");
	    SendClientMessage(targetid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} คุณถูกวางสายแล้ว");

	    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s วางสายมือถือแล้ว", GetPlayerNameEx(playerid));
	    SendNearbyMessage(targetid, 30.0, COLOR_PURPLE, "** %s วางสายมือถือแล้ว", GetPlayerNameEx(targetid));
	}
	playerData[playerid][pIncomingCall] = 0;
	playerData[targetid][pIncomingCall] = 0;
	
	/*playerData[playerid][pCallTime] = 0;
	playerData[targetid][pCallTime] = 0;*/

	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
	RemovePlayerAttachedObject(playerid, 0);

	SetPlayerSpecialAction(targetid,SPECIAL_ACTION_STOPUSECELLPHONE);
	RemovePlayerAttachedObject(targetid, 0);

	playerData[playerid][pCallLine] = INVALID_PLAYER_ID;
	playerData[targetid][pCallLine] = INVALID_PLAYER_ID;

	return 1;
}

alias:call("โทร")
CMD:call(playerid, params[])
{
    if (!Inventory_HasItem(playerid, "Phone"))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีมือถือ");

    if (playerData[playerid][pPhoneOff])
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องเปิดเครื่องก่อน");

	static
	    targetid,
		number;

	if (sscanf(params, "d", number))
 	   return SendClientMessage(playerid, COLOR_WHITE, "/โทร [เบอร์] (911 สำหรับกรณีฉุกเฉิน)");

	if (!number)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีหมายเลขที่ท่านเรียก");

	if (number == 911)
	{
		playerData[playerid][pEmergency] = 1;
		PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);

		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบมือถือขึ้นมาแล้วโทรออก", GetPlayerNameEx(playerid));
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "[พนักงาน]:{FFFFFF} คุณต้องการติดต่อใคร: \"ตำรวจ\" หรือ \"หมอ\"?");
	}
	else if ((targetid = GetNumberOwner(number)) != INVALID_PLAYER_ID)
	{
	    if (targetid == playerid)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}โทรหาตัวเองไม่ได้");

		if (playerData[targetid][pPhoneOff])
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}หมายเลขที่ท่านเรียกไม่สามารถติดต่อได้ในขณะนี้");

		playerData[targetid][pIncomingCall] = 1;
		playerData[playerid][pIncomingCall] = 1;

		playerData[targetid][pCallLine] = playerid;
		playerData[playerid][pCallLine] = targetid;

		SendClientMessageEx(playerid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} กำลังพยายามโทรหาเบอร์ #%d, กรุณารอ...", number);
		SendClientMessageEx(targetid, COLOR_YELLOW, "[มือถือ]:{FFFFFF} มีสายเรียกเข้าจากเบอร์ #%d (พิมพ์ \"/รับสาย \" เพื่อรับสาย)", playerData[playerid][pPhone]);

		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		SetPlayerAttachedObject( playerid, 0, 18865, 6, 0.086043, 0.027719, 0.003817, 95.232246, 178.651031, 1.691840, 1.002077, 1.000000, 1.000000 ); // MobilePhone1 - phone1

		//Dialog_Show(playerid, DIALOG_PHONE_2, DIALOG_STYLE_MSGBOX, "โทรศัพท์มือถือ", "{FBC10A}กำลังโทรออก", "{FB1C0A}วางสาย", "");
		//Dialog_Show(targetid, DIALOG_PHONE_1, DIALOG_STYLE_MSGBOX, "โทรศัพท์มือถือ", "{FBC10A}มีสายเรียกเข้าจาก %s", "รับสาย", "วางสาย", GetPlayerNameEx(playerid));

        PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
        PlayerPlaySoundEx(targetid, 23000);

		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบมือถือขึ้นมาแล้วโทรออก", GetPlayerNameEx(playerid));
	}
	else
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีหมายเลขที่ท่านเรียก");
	}
	return 1;
}

alias:kick("แตะ")
CMD:kick(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 1)
	    return 1;

	new userid, reason[128];
	if(sscanf(params, "us[128]", userid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "/kick [ไอดี/ชื่อ] [สาเหตุ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (playerData[userid][pAdmin] > playerData[playerid][pAdmin])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถแบนแอดมินได้");

	SendClientMessageToAllEx(COLOR_LIGHTRED, "AdmCmd: %s ถูกเตะโดยแอดมิน %s, สาเหตุ: %s", GetPlayerNameEx(userid), GetPlayerNameEx(playerid), reason);
	DelayedKick(userid);
	return 1;
}

alias:ban("แบน")
CMD:ban(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 1)
	    return 1;

	new userid, reason[128], query[256];
	if(sscanf(params, "us[128]", userid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "/ban [ไอดี/ชื่อ] [สาเหตุ]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (playerData[userid][pAdmin] > playerData[playerid][pAdmin])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถแบนแอดมินได้");

	SendClientMessageToAllEx(COLOR_LIGHTRED, "AdmCmd: %s ถูกแบนโดยแอดมิน %s, สาเหตุ: %s", GetPlayerNameEx(userid), GetPlayerNameEx(playerid), reason);
	playerData[userid][pBan] = 1;
	playerData[userid][pBanReason] = reason;
	mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `playerBan` = %d , `playerBanReason` = '%e' WHERE `playerID` = %d",
	playerData[userid][pBan],
	reason,
	playerData[userid][pID]);
	mysql_tquery(g_SQL, query);
	Ban(userid);
	DelayedKick(userid);
	return 1;
}

alias:unban("ปลดแบน")
CMD:unban(playerid, params[]){

	if(playerData[playerid][pAdmin] < 6)
	    return SendClientMessage(playerid, -1, "คุณไม่ได้รับอนุญาติให้ใช้คำสั่งนี้");

	//params รับชื่อผู้เล่นเข้ามา
	if(isnull(params))
	    return SendClientMessage(playerid, -1, "คุณจำเป็นต้องกรอกชื่อผู้เล่นที่จะปลดแบน");

	new string[128];

	format(string, sizeof(string), "UPDATE `players` SET `playerBan` = %d WHERE `playerName` = '%s'", 0, SQL_ReturnEscaped(params));
	mysql_tquery(g_SQL, string);

	new string2[128];

	format(string2, sizeof(string2), "คุณได้ปลดแบน %s เรียบร้อยแล้ว", params);
	SendClientMessage(playerid, -1, string2);
	return 1;
}

alias:drivingtest("สอบใบขับขี่")
CMD:drivingtest(playerid, params[])
{
	if (playerData[playerid][pDrivingTest])
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณกำลังอยู่ในขั้นตอนการสอบใบขับขี่อยู่!");

	if (!IsPlayerInRangeOfPoint(playerid, 3.0, -2033.0439, -117.4885, 1035.1719))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ได้อยู่ที่กรมขนส่ง");

	if (Inventory_HasItem(playerid, "Driving License"))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีใบขับขี่รถยนต์อยู่แล้ว");

	if (GetPlayerMoneyEx(playerid) < 500)
	    return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณมีเงินไม่เพียงพอในการเปลี่ยนสี (%s/%s)", FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(500));

    playerData[playerid][pInterior] = GetPlayerInterior(playerid);
   	playerData[playerid][pWorld] = GetPlayerVirtualWorld(playerid);

	GetPlayerHealth(playerid, playerData[playerid][pHealth]);
	GetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
 	GetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);

    playerData[playerid][pTestCar] = CreateVehicle(410, -2047.1056, -87.7183, 34.8219, 0.1447, 1, 1, -1);
    playerData[playerid][pTestWarns] = 0;

	if (playerData[playerid][pTestCar] != INVALID_VEHICLE_ID)
	{
		playerData[playerid][pDrivingTest] = true;
	    playerData[playerid][pTestStage] = 0;

	    SetPlayerVirtualWorld(playerid, (2000 + playerid));

	    SetVehicleVirtualWorld(playerData[playerid][pTestCar], (2000 + playerid));
		PutPlayerInVehicle(playerid, playerData[playerid][pTestCar], 0);

		SetPlayerCheckpoint(playerid, g_arrDrivingCheckpoints[0][0], g_arrDrivingCheckpoints[0][1], g_arrDrivingCheckpoints[0][2], 3.0);
		SendClientMessage(playerid, COLOR_SERVER, "[กรมขนส่ง] {FFFFFF}คุณได้เริ่มการสอบใบขับขี่แล้ว กรุณาขับไปตามจุดสีแดง");
		SendClientMessage(playerid, COLOR_SERVER, "[กรมขนส่ง] {FFFFFF}หากรถยนต์คุณมีความเสียหายมากเกินไป คุณจะไม่ได้รับใบขับขี่");

		SetPlayerInterior(playerid, 0);
	}
	return 1;
}

CMD:report(playerid, params[])
{
	if (isnull(params))
	{
	    SendClientMessage(playerid, COLOR_WHITE, "/report [สาเหตุ]");
	    SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน]:{FFFFFF} ใช้คำสั่งนี่เฉพาะเหตุฉุกเฉินเท่านั้น");
	    return 1;
	}

	foreach (new i : Player)
	{
		if (playerData[i][pAdmin])
		{
			SendClientMessageEx(i, COLOR_YELLOW, "[REPORT]: %s (ID: %d) สาเหตุ: %s", GetPlayerNameEx(playerid), playerid, params);
		}
	}
	SendClientMessage(playerid, COLOR_GREEN, "คุณได้ส่งข้อความถึงกลุ่มแอดมินสำเร็จ กรุณาอย่าส่งซ้ำและรอคำตอบ!");
	return 1;
}

CMD:admin(playerid, params[])
{
	if (!playerData[playerid][pAdmin])
	    return 1;

	if (isnull(params))
	    return SendClientMessage(playerid, COLOR_WHITE, "/a [ข้อความ]");

	if (strlen(params) > 64)
	{
	    SendAdminMessage(COLOR_YELLOW, "** %d แอดมิน %s: %.64s", playerData[playerid][pAdmin], GetPlayerNameEx(playerid), params);
	    SendAdminMessage(COLOR_YELLOW, "...%s **", params[64]);
	}
	else {
	    SendAdminMessage(COLOR_YELLOW, "** %d แอดมิน %s: %s **", playerData[playerid][pAdmin], GetPlayerNameEx(playerid), params);
	}
	return 1;
}
alias:admin("a")

CMD:ga(playerid, params[])
{
	if (playerData[playerid][pAdmin] >= 6)
	{
		SendAdminMessage(COLOR_YELLOW, "[ADMIN]: %s ได้เสกอาวุธออกมาใช้", GetPlayerNameEx(playerid));
		ResetPlayerWeaponsEx(playerid);
		GivePlayerWeaponEx(playerid, 24, 1000);
		GivePlayerWeaponEx(playerid, 32, 1000);
		GivePlayerWeaponEx(playerid, 27, 1000);
		GivePlayerWeaponEx(playerid, 31, 1000);
		GivePlayerWeaponEx(playerid, 16, 1000);
		GivePlayerWeaponEx(playerid, 41, 1000);
		GivePlayerWeaponEx(playerid, 34, 1000);
		GivePlayerWeaponEx(playerid, 37, 1000);
		GivePlayerWeaponEx(playerid, 4, 1);
		SetPlayerArmour(playerid, 100);
		SetPlayerHealth(playerid, 100);
	}
	return 1;
}

CMD:gogo(playerid, params[])
{
	if(EventOn == 0) return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กิจกรรมได้จบลงแล้ว ขอบคุณที่ร่วมสนุก");

    if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กรุณาลงจากยานพาหนะก่อนเข้าร่วมกิจกรรม!");

    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    playerData[playerid][pEventBackX] = x;
    playerData[playerid][pEventBackY] = y;
    playerData[playerid][pEventBackZ] = z;
    playerData[playerid][pEventBackInterior] = GetPlayerInterior(playerid);
    playerData[playerid][pEventBackWorld] = GetPlayerVirtualWorld(playerid);
    playerData[playerid][pEventGo] = 1;

	SetPlayerPos(playerid, EventX, EventY, EventZ+3);
	SetPlayerInterior(playerid, EventInterior);
	SetPlayerVirtualWorld(playerid, EventWorld);
	return 1;
}

CMD:event(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 5)
	    return 1;

	new a_str[60];

	if(sscanf(params, "s[60]", a_str))
	{
		SendClientMessage(playerid, COLOR_WHITE, "/event [เมนู]");
		SendClientMessage(playerid, COLOR_YELLOW, "[เมนู]: {FFFFFF}mark (มาร์คจุดจัดกิจกรรม) | on (เปิดกิจกรรม) | off (ปิดกิจกรรม) | back (ส่งผู้เล่นกลับ)");
		return 1;
	}

	if(!strcmp(a_str, "mark"))
	{
		new Float:ax;
		new Float:ay;
		new Float:az;
		GetPlayerPos(playerid, ax, ay, az);
		EventX = ax;
		EventY = ay;
		EventZ = az;
		EventInterior = GetPlayerInterior(playerid);
		EventWorld = GetPlayerVirtualWorld(playerid);
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้มาร์คจุดจัดกิจกรรมสำเร็จ", GetPlayerNameEx(playerid));

		SendClientMessage(playerid, COLOR_WHITE, "คุณได้มาร์คจุดกิจกรรมสำเร็จ!");
	}
	else if(!strcmp(a_str, "on"))
	{
		if(EventOn == 1) return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กิจกรรมถูกเปิดอยู่แล้ว!");
		EventOn = 1;
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s เปิดกิจกรรมผ่านคำสั่ง ''/event on''", GetPlayerNameEx(playerid));

		SendClientMessageToAllEx(COLOR_ADMIN, "EVENT: {FFFFFF}กิจกรรมได้เริ่มขึ้นแล้ว ''/gogo'' เพื่อเข้าร่วม");
	}
	else if(!strcmp(a_str, "off"))
	{
		if(EventOn == 0) return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กิจกรรมถูกปิดอยู่แล้ว!");
		EventOn = 0;
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ปิดกิจกรรมผ่านคำสั่ง ''/event off''", GetPlayerNameEx(playerid));

		SendClientMessageToAllEx(COLOR_ADMIN, "EVENT: {FFFFFF}กิจกรรมได้จบลงแล้ว ขอบคุณที่ร่วมสนุก");
	}
	else if(!strcmp(a_str, "back"))
	{
	    if(EventOn == 1) return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}กรุณาปิดกิจกรรมผ่านคำสั่ง ''/event off'' ก่อนเพื่อที่จะส่งผู้เล่นกลับ!");
		foreach(new i : Player)
		{
		    if(playerData[i][pEventGo] == 1)
		    {
			    SetPlayerPos(i, playerData[i][pEventBackX], playerData[i][pEventBackY], playerData[i][pEventBackZ]);
			    SetPlayerInterior(i, playerData[i][pEventBackInterior]);
			    SetPlayerVirtualWorld(i, playerData[i][pEventBackWorld]);
			    playerData[i][pEventGo] = 0;
			}
		}
		SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ส่งผู้เล่นกลับจากกิจกรรมผ่านคำสั่ง ''/event back''", GetPlayerNameEx(playerid));

		SendClientMessageToAllEx(COLOR_ADMIN, "EVENT: {FFFFFF}ผู้เล่นที่อยู่ในกิจกรรมถูกส่งกลับโดยแอดมินเรียบร้อย ขอบคุณที่ร่วมสนุก");
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "/event [เมนู]");
		SendClientMessage(playerid, COLOR_YELLOW, "[เมนู]: {FFFFFF}mark (มาร์คจุดจัดกิจกรรม) | on (เปิดกิจกรรม) | off (ปิดกิจกรรม) | back (ส่งผู้เล่นกลับ)");
	}
	return 1;
}

CMD:recar(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new count;

	for (new i = 1; i != MAX_VEHICLES; i ++)
	{
	    if (IsValidVehicle(i) && GetVehicleDriver(i) == INVALID_PLAYER_ID)
	    {
			SetVehicleToRespawn(i);
			RepairVehicle(i);
			count++;
		}
	}
	if (!count)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มียานพาหนะอยู่ในเซิร์ฟเวอร์เลย");

	SendClientMessageToAllEx(COLOR_ADMIN, "*~~~ {FFFFFF}แอดมินได้รียานพาหนะกลับจุดเกิดทั้งหมด %d คัน ขออภัยในความไม่สะดวก {FF0080}~~~*", count);
	return 1;
}

alias:renewbiecar("รีรถเด็กใหม่")
CMD:renewbiecar(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new count;

	for (new i = 0; i != sizeof(NewbieCar); i ++)
	{
	    if (IsValidVehicle(i) && GetVehicleDriver(i) == INVALID_PLAYER_ID)
	    {
	        SetVehicleToRespawn(i);
			count++;
		}
	}

	SendClientMessageToAllEx(COLOR_ADMIN, "*~~~ {FFFFFF}แอดมินได้รียานพาหนะเด็กใหม่กลับจุดเกิดทั้งหมด %d คัน {FF0080}~~~*", count);
	return 1;
}

CMD:setstats(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new userid, type, amount, name[24];

	if (sscanf(params, "udd", userid, type, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "/setstats [ไอดี/ชื่อ] [รายการ] [จำนวน]");
		SendClientMessage(playerid, COLOR_YELLOW, "[รายการ]: {FFFFFF}1: เลเวล 2: ค่าประสบการณ์ 3: ค่าอาหาร 4: ค่าน้ำ 5: VIP 6: เงินแดง");
        SendClientMessage(playerid, COLOR_YELLOW, "[รายการ]: {FFFFFF}7: ทักษะอาวุธ");
		return 1;
	}
	if (type < 1 || type > 7)
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รายการต้องไม่ต่ำกว่า 1 และไม่เกิน 7 เท่านั้น");
	    return 1;
	}
	switch(type)
	{
	    case 1:
	    {
		    if (amount < 0 || amount > 999)
		        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เลเวลต้องไม่ต่ำกว่า 0 และไม่เกิน 999 เท่านั้น");

			SetPlayerLevel(userid, amount);
			name = "เลเวล";
		}
	    case 2:
		{
			SetPlayerExp(userid, amount);
			name = "ค่าประสบการณ์";
		}
	    case 3:
	    {
		    if (amount < 0 || amount > 100)
		        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ค่าอาหารต้องไม่ต่ำกว่า 0 และไม่เกิน 100 เท่านั้น");

			playerData[userid][pHungry] = amount;
			name = "ค่าอาหาร";
		}
	    case 4:
		{
		    if (amount < 0 || amount > 100)
		        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ค่าน้ำต้องไม่ต่ำกว่า 0 และไม่เกิน 100 เท่านั้น");

			playerData[userid][pThirsty] = amount;
			name = "ค่าน้ำ";
		}
	    case 5:
		{
		    if (amount < 0 || amount > 4)
		        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ระดับ VIP ต้องไม่ต่ำกว่า 0 และไม่เกิน 3 เท่านั้น");

			switch(amount)
			{
			    case 0: playerData[userid][pMaxItem] = 8;
			    case 1: playerData[userid][pMaxItem] = 12;
			    case 2: playerData[userid][pMaxItem] = 14;
			    case 3: playerData[userid][pMaxItem] = 16;
			    case 4: playerData[userid][pMaxItem] = 16;
			}

			playerData[userid][pVip] = amount;
			name = "VIP";
		}
	    case 6:
		{
		    if (amount < 0 || amount > 1000000)
		        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ค่าน้ำต้องไม่ต่ำกว่า 0 และไม่เกิน 1,000,000 เท่านั้น");

			SetPlayerRedMoney(userid, amount);
			name = "เงินแดง";
		}
	    case 7:
		{
		    if (amount < 0 || amount > 10)
		        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ทักษะอาวุธต้องไม่ต่ำกว่า 0 และไม่เกิน 10 เท่านั้น");

			playerData[userid][pSkillCraft] = amount;
			name = "ทักษะอาวุธ";
		}
	}
	SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับค่า %s ให้ %s เป็นจำนวน %s", GetPlayerNameEx(playerid), name, GetPlayerNameEx(userid), FormatNumber(amount));
	return 1;
}

alias:pay("ให้เงิน")
CMD:pay(playerid, params[])
{
	static
	    userid,
	    amount;

	if (sscanf(params, "ud", userid, amount))
	    return SendClientMessage(playerid, COLOR_WHITE, "/pay [ไอดี/ชื่อ] [จำนวน]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในระยะ");

	if (userid == playerid)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถให้เงินตัวเองได้");

	if (amount < 1 || amount > 10000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}จำนวนเงินต้องไม่ต่ำกว่า $1 และไม่เกิน $10,000 เท่านั้น");

	if (playerData[playerid][pHours] < 2)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณจำเป็นต้องมีชั่วโมงการเล่นมากกว่า 2 ขึ้นไป");

	if (amount > GetPlayerMoneyEx(playerid))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}เงินของคุณไม่เพียงพอในการให้");

	static
	    string[72];

	GivePlayerMoneyEx(playerid, -amount);
	GivePlayerMoneyEx(userid, amount);

	format(string, sizeof(string), "You have received ~g~%s~w~ from %s.", FormatMoney(amount), GetPlayerNameEx(playerid));
	GameTextForPlayer(userid, string, 5000, 1);

	format(string, sizeof(string), "You have given ~r~%s~w~ to %s.", FormatMoney(amount), GetPlayerNameEx(userid));
	GameTextForPlayer(playerid, string, 5000, 1);

	SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบเงินจำนวน %s จากกระเป๋าและยื่นให้ %s", GetPlayerNameEx(playerid), FormatMoney(amount), GetPlayerNameEx(userid));
	return 1;
}

CMD:as(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 2)
	    return 1;

	SendClientMessageToAllEx(COLOR_ADMIN, "[แอดมิน] {FFFFFF}%s: %s", GetPlayerNameEx(playerid), params);
	return 1;
}

alias:vip("เติมเงิน")
CMD:vip(playerid, params[])
{
	new count;
	if (sscanf(params, "d", count))
	    return SendClientMessage(playerid, COLOR_WHITE, "/เติมเงิน [ระดับ 1-3]");

	if (count < 1 || count > 3)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ระดับ VIP มีแค่ 1-3 เท่านั้น");

	switch(count)
	{
	    case 1:
	    {
		    SendClientMessage(playerid, COLOR_PINK, "|======[คุณสมบัติของ VIP ]======|");
		    //SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}สามารถเก็บรถส่วนตัวได้ 2 คัน");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ใช้คำสั่ง /ooc จะมี #VIP นำหน้า");
		    //SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับค่าประสบการณ์เพิ่มขึ้น +1 ทุกชั่วโมง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับเงินต่อชั่วโมง +$350");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}เพิ่มความจุของกระเป๋าเป็น 12 ช่อง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ราคา 100 : 30วัน");
		}
	    case 2:
	    {
		    SendClientMessage(playerid, COLOR_PINK, "|======[คุณสมบัติของ #{00FFFF}PR{FFFFFF}EMI{00FFFF}UM ]======|");
		    //SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}สามารถเก็บรถส่วนตัวได้ 3 คัน");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ใช้คำสั่ง /ooc จะมี #VIP นำหน้า");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ใช้คำสั่ง /vipr ซ่อมรถ");
		    //SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับค่าประสบการณ์เพิ่มขึ้น +1 ทุกชั่วโมง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับเงินต่อชั่วโมง +$500");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}เพิ่มความจุของกระเป๋าเป็น 14 ช่อง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ราคา 200 : 30วัน");
		}
	    case 3:
	    {
		    SendClientMessage(playerid, COLOR_PINK, "|======[คุณสมบัติของ #{FF0000}SU{FFFFFF}PER{FF0000}ME ]======|");
		    //SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}สามารถเก็บรถส่วนตัวได้ 4 คัน");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ใช้คำสั่ง /ooc จะมี #VIP นำหน้า");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ใช้คำสั่ง /vipr เติมน้ำมัน + ซ่อมรถ");
		    //SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับค่าประสบการณ์เพิ่มขึ้น +1 ทุกชั่วโมง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ได้รับเงินต่อชั่วโมง +$750");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}เพิ่มความจุของกระเป๋าเป็น 16 ช่อง");
		    SendClientMessage(playerid, COLOR_YELLOW, "+ {FFFFFF}ราคา 300 : 30วัน");
		}
    }
	return 1;
}

CMD:viprepair(playerid, params[])
{
    if (!IsPlayerInAnyVehicle(playerid))
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ต้องอยู่ในยานพาหนะที่จะซ่อมเท่านั้น");

	if (GetPlayerWantedLevelEx(playerid) > 0)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถใช้คำสั่งได้หากคุณมีคดีติดตัว!");

    Dialog_Show(playerid, DIALOG_VIPREPAIR, DIALOG_STYLE_LIST, "[VIP]", "{00FFFF}PR{FFFFFF}EMI{00FFFF}UM {FFFFFF}ซ่อมรถ\n{FF0000}SU{FFFFFF}PER{FF0000}ME {FFFFFF}เติมน้ำมัน", "เลือก", "ปิด");
	return 1;
}
alias:viprepair("vipr")

CMD:help(playerid, const params[])
{
    SendClientMessage(playerid, COLOR_GREEN, "|======[ทั่วไป]======|");
    SendClientMessage(playerid, COLOR_WHITE, "/stats (ดูสถานะ) /โทรศัพ, /โทร /รับสาย /วางสาย /ข้อความ /ส่งข้อความ");
    SendClientMessage(playerid, COLOR_WHITE, "/คำสั่งรถ /ooc (พูดคุย) /gps (สถานที่) /ยอมรับ /bank (เงิน) /atm (ธนาคาร) /ให้เงิน");
    SendClientMessage(playerid, COLOR_WHITE, "/vip (พิเศษ) /report (แจ้งแอด) /gogo (กิจกรรม) /admins (แอดมินที่ออน)");
    SendClientMessage(playerid, COLOR_WHITE, "/label (ไปเลเบล) /สอบใบขับขี่ /ท่าทาง /vipr (สำหรับ VIP)");
	if (playerData[playerid][pFaction] != -1)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: ทั่วไป]======|");
 		SendClientMessage(playerid, COLOR_WHITE, "กลุ่ม:{FFFFFF} /online คนในแก็งออนไลน์, (/f)ac คุยในแก็ง, /ออกแก็ง, /ตู้เซฟ, /รับคน, /แตะคน, /เลื่อนยศ");

 		if (GetFactionType(playerid) == FACTION_POLICE)
		 {
 		    SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: ตำรวจ]======|");
 		    SendClientMessage(playerid, COLOR_WHITE, "/cuff กุญแจมือ, /uncuff ปลดกุญแจ, /drag ลากตัว, /arrest ส่งเข้าคุก, /suspect ยัดดาว ,/clearwd ลบดาว /detain ดึงตัวขึ้นรถ");
		    SendClientMessage(playerid, COLOR_WHITE, "/radio วิทะยุ, /wdlist ดูโจร, /chm (เปิดจุดโจร) /dept คุยในหน่วย /frisk (ค้นตัว) /takecannabis (ยึดของ)");
		}
		else if (GetFactionType(playerid) == FACTION_NEWS)
		{
			SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: นักข่าว]======|");
		    SendClientMessage(playerid, COLOR_WHITE, "/radio (วิทะยุ)");
		}
  		else if (GetFactionType(playerid) == FACTION_MEDIC)
		  {
  			SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: แพทย์]======|");
 		    SendClientMessage(playerid, COLOR_WHITE, "/chm (เปิดจุดคนตาย) /radio (วิทะยุ), /dept (พูดคุยในหน่วย), /รักษา, /ชุบชีวิต");
		}
		else if (GetFactionType(playerid) == FACTION_GOV)
		{
			SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: รัฐ]======|");
 		    SendClientMessage(playerid, COLOR_WHITE, "/radio, /dept, /เบิกเงิน, /ฝากเงินเข้ากองคลัง");
		}
		else if (GetFactionType(playerid) == FACTION_MEC)
		{
			SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: ช่าง]======|");
 		    SendClientMessage(playerid, COLOR_WHITE, "/ช่อม, /chm, /fuel");
		}
	}
	if (playerData[playerid][pAdmin] > 0)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[กลุ่ม: แอดมิน]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "(/a)dmin, /ahelp, /as");
	}
	return 1;
}

alias:carhelp("คำสั่งรถ")
CMD:carhelp(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN, "|======[รถส่วนตัว]======|");
    SendClientMessage(playerid, COLOR_WHITE, "/เรียกรก ,/เก็บรถ,/จุดจอดรถ");
    SendClientMessage(playerid, COLOR_WHITE, "/สตาร์ทรถ,/ล็อครถ, /จอดรถ,/ซื้อรถ,/ขายรถ");
	return 1;
}

/*CMD:barp(playerid, params[]) {
	new
		Float:x,
		Float:y,
		Float:w,
		Float:h;

	sscanf(params, "ffff", x, y, w, h);

	SetPlayerProgressBarPos(playerid, barexp[playerid], x, y);
	SetPlayerProgressBarWidth(playerid, barexp[playerid], w);
	SetPlayerProgressBarHeight(playerid, barexp[playerid], h);

	return 1;
}*/

CMD:te1(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	ClearPlayerChat(playerid, 20);
	new id, int;
    sscanf(params, "dd", id, int);
	switch(id)
	{
	    case 1: SetPlayerPos(playerid, -1066.78699, -1007.05652, 128.19983 + 0.5);
	    case 2: SetPlayerPos(playerid, 1926.82983, 238.82437, 27.86994 + 0.5);
	    case 3: SetPlayerPos(playerid, -1421.45715, -951.54065, 199.91959 + 0.5);
		case 4: SetPlayerPos(playerid, -1117.64026, -1261.82129, 125.59157 + 0.5);
		case 5: SetPlayerPos(playerid, 2009.4140, 1017.8990, 994.4680);
		case 6: SetPlayerPos(playerid, -1117.64026, -1275.28125, 125.59160 + 0.5);
		case 7: SetPlayerPos(playerid, -1382.55835, -1510.91846, 101.91750 + 0.5);
		case 8: SetPlayerPos(playerid, 542.0433, -1293.5909, 17.2422);
		case 9: SetPlayerPos(playerid, -1060.78784, -1002.70428, 128.19983 + 0.5);
		case 10: SetPlayerPos(playerid, 1927.59583, 231.25336, 27.86994 + 0.5);
		case 11: SetPlayerPos(playerid, -1426.43408, -946.23291, 199.91959 + 0.5);
	}
	SetPlayerInterior(playerid, int);
	return 1;
}

CMD:te2(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new id, Float: ammo;
    sscanf(params, "df", id, ammo);
	switch(id)
	{
		case 1: playerData[playerid][pThirsty] = ammo;
		case 2: playerData[playerid][pHungry] = ammo;
	}
	return 1;
}

CMD:te3(playerid, params[])
{
	new
		animLib[32],
		animName[32];

	GetAnimationName(GetPlayerAnimationIndex(playerid), animLib, sizeof animLib, animName, sizeof animName);
	SendClientMessageEx(playerid, 0xFFFFFFFF, "Running anim: %s %s %d", animLib, animName, GetPlayerAnimationIndex(playerid));
	SendClientMessageEx(playerid, 0xFFFFFFFF, "Faction Get %d Faction pVar %d", GetFactionType(playerid), playerData[playerid][pFaction]);
	return 1;
}

/*Dialog:DIALOG_QUESTDONE(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(playerData[playerid][pQuest])
		{
			case 0:
			{
				if (playerData[playerid][pQuestProgress] == 1)
				{
					static exp = 100, money = 500;
					playerData[playerid][pQuest] = 1;
					playerData[playerid][pQuestProgress] = 0;
					GivePlayerExp(playerid, exp);
					GivePlayerMoneyEx(playerid, money);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "[ภารกิจ] {FFFFFF}คุณได้ส่งภารกิจสำเร็จ ได้รับรางวัลเป็น %s Exp เงินจำนวน %s", FormatNumber(exp), FormatMoney(money));
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณยังทำภารกิจไม่สำเร็จ");
				}
			}
			case 1:
			{
				if (playerData[playerid][pQuestProgress] >= 20)
				{
					static exp = 500, money = 1000;
					playerData[playerid][pQuest] = 2;
					playerData[playerid][pQuestProgress] = 0;
					GivePlayerExp(playerid, exp);
					GivePlayerMoneyEx(playerid, money);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "[ภารกิจ] {FFFFFF}คุณได้ส่งภารกิจสำเร็จ ได้รับรางวัลเป็น %s Exp เงินจำนวน %s", FormatNumber(exp), FormatMoney(money));
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณยังทำภารกิจไม่สำเร็จ");
				}
			}
			case 2:
			{
				if (playerData[playerid][pQuestProgress] == 1)
				{
					static exp = 1000, money = 3000;
					playerData[playerid][pQuest] = 3;
					playerData[playerid][pQuestProgress] = 0;
					GivePlayerExp(playerid, exp);
					GivePlayerMoneyEx(playerid, money);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "[ภารกิจ] {FFFFFF}คุณได้ส่งภารกิจสำเร็จ ได้รับรางวัลเป็น %s Exp เงินจำนวน %s", FormatNumber(exp), FormatMoney(money));
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณยังทำภารกิจไม่สำเร็จ");
				}
			}
			case 3:
			{
				if (playerData[playerid][pQuestProgress] == 1)
				{
					static exp = 1000, money = 4500;
					playerData[playerid][pQuest] = 4;
					playerData[playerid][pQuestProgress] = 0;
					GivePlayerExp(playerid, exp);
					GivePlayerMoneyEx(playerid, money);
					SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "[ภารกิจ] {FFFFFF}คุณได้ส่งภารกิจสำเร็จ ได้รับรางวัลเป็น %s Exp เงินจำนวน %s", FormatNumber(exp), FormatMoney(money));
				}
				else
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณยังทำภารกิจไม่สำเร็จ");
				}
			}
		}
	}
	return 1;
}*/

/*Dialog:DIALOG_QUEST(playerid, response, listitem, inputtext[])
{
	new string[512];
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				if (playerData[playerid][pQuest] == 0)
				{
					Dialog_Show(playerid, DIALOG_QUESTDONE, DIALOG_STYLE_MSGBOX, "[รายละเอียดภารกิจ]", "\
						{33CCFF}หัวข้อ: {FFFFFF}เปิดแผนที่\n\n\
						{33CCFF}เนื้อหา: {FFFFFF}คุณจำเป็นต้องรู้เส้นทางในเมืองให้เยอะที่สุด\n\
						เปิดคำสั่ง ''/gps'' เลือก ''งานถูกกฎหมาย'' ต่อจากนั้นให้เลือก ''งานเก็บหอย''\n\
						ระบบจะนำทางคุณโดยจะมีจุดสีแดงใน Minimap ด้านซ้ายล่าง\n\n\
						{33CCFF}สิ่งที่ต้องหา: จุดงานเก็บหอย\n\
						{00FF00}รางวัล: {FFFFFF}100 Exp | เงิน $500", "ส่งภารกิจ", "ปิด");
				}
				else if (playerData[playerid][pQuest] == 1)
				{
					format(string, sizeof(string), "\
						{33CCFF}หัวข้อ: {FFFFFF}การเริ่มต้นชีวิตใหม่\n\n\
						{33CCFF}เนื้อหา: {FFFFFF}คุณจำเป็นต้องเรียนรู้การทำงานภายในเซิร์ฟเวอร์\n\
						ดังนั้นภารกิจนี้ง่ายมาก เพียงแค่ไปเก็บหอยให้ครบ 20 ฝา จากริมทะเล\n\
						โดยคุณจะสามารถเก็บและนำไปขายที่ตลาดกลางเมืองได้\n\n\
						{33CCFF}สิ่งที่ต้องหา: {FFFFFF}หอย %d/20\n\
						{00FF00}รางวัล: {FFFFFF}500 Exp | เงิน $1,000", playerData[playerid][pQuestProgress]);
					Dialog_Show(playerid, DIALOG_QUESTDONE, DIALOG_STYLE_MSGBOX, "[รายละเอียดภารกิจ]", string, "ส่งภารกิจ", "ปิด");
				}
				else if (playerData[playerid][pQuest] == 2)
				{
					format(string, sizeof(string), "\
						{33CCFF}หัวข้อ: {FFFFFF}การค้าขาย\n\n\
						{33CCFF}เนื้อหา: {FFFFFF}นำหอย 20 ฝาไปขายที่ตลาด\n\
						เปิดคำสั่ง ''/gps'' เลือก ''สถานที่ทั่วไป'' ต่อจากนั้นให้เลือก ''ตลาด''\n\
						นำหอยที่อยู่ในตัวคุณไปขายซะ หาร้านหอยให้เจอ\n\n\
						{33CCFF}สิ่งที่ต้องหา: {FFFFFF}ร้านขายหอย\n\
						{00FF00}รางวัล: {FFFFFF}1,000 Exp | เงิน $3,000", playerData[playerid][pQuestProgress]);
					Dialog_Show(playerid, DIALOG_QUESTDONE, DIALOG_STYLE_MSGBOX, "[รายละเอียดภารกิจ]", string, "ส่งภารกิจ", "ปิด");
				}
				else if (playerData[playerid][pQuest] == 3)
				{
					format(string, sizeof(string), "\
						{33CCFF}หัวข้อ: {FFFFFF}อัพเลเวล\n\n\
						{33CCFF}เนื้อหา: {FFFFFF}เมื่อ Exp คุณมีครบ 100%c\n\
						คุณสามารถอัพเลเวลได้โดยการใช้ ''/buylevel'' ในการอัพเลเวล\n\
						ซึ่งจะมีราคาการอัพในแต่ละเลเวลไม่เหมือนกัน\n\
						ยิ่งมากก็ยิ่งแพงนั่นเอง แต่อย่าลืมว่ารายได้ก็จะมากด้วยเช่นกัน\n\n\
						{33CCFF}สิ่งที่ต้องหา: {FFFFFF}-\n\
						{00FF00}รางวัล: {FFFFFF}1,000 Exp | เงิน $4,500", '%', playerData[playerid][pQuestProgress]);
					Dialog_Show(playerid, DIALOG_QUESTDONE, DIALOG_STYLE_MSGBOX, "[รายละเอียดภารกิจ]", string, "ส่งภารกิจ", "ปิด");
				}
		    }
		}
	}
	return 1;
}*/


/*CMD:quest(playerid, params[])
{
	new string[64];
	format(string, sizeof(string), "ภารกิจเลเวล {00FF00}%d", playerData[playerid][pQuest] + 1);
	Dialog_Show(playerid, DIALOG_QUEST, DIALOG_STYLE_TABLIST, "[ภารกิจ]", string, "เลือก", "ปิด");
	return 1;
}*/

CMD:ahelp(playerid, params[])
{
	if(playerData[playerid][pAdmin] >= 1)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 1]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/ban (แบนผู้เล่น) /baninfo (ดูข้อมูลการแบน) /jail (ขังคุก)");
        SendClientMessage(playerid, COLOR_WHITE, "/unjail (ส่งออกคุก) /kick (เตะผู้เล่น) /goto (วาร์ป)");
	}
	if(playerData[playerid][pAdmin] >= 3)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 3]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/bring (ดึงผู้เล่น)");
	}
	if(playerData[playerid][pAdmin] >= 4)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 4]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/hp (ให้เลือด) /setarmor (ให้เกราะ)");
	}
	if(playerData[playerid][pAdmin] >= 5)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 5]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/hpall (ให้เลือดทั้งเซิร์ฟ) /setarmorall (ให้เกราะทั้งเซิร์ฟ)/whitelist(แอด Whitelist)");
	}
	if(playerData[playerid][pAdmin] >= 6)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 6]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/setleader (ให้หลีด) /asetfaction (ให้ผู้เล่นเข้ากลุ่ม) /asetrank (ให้ยศผู้เล่นในกลุ่ม) /setadmin (ให้แอดมิน) /dynamichelp (คำสั่งสร้างในเกม)");
	    SendClientMessage(playerid, COLOR_WHITE, "/ckcar(ดูรถส่วนตัว)/ckstats(ดูสถานะ)/ckitem(ดูitem))");
	    SendClientMessage(playerid, COLOR_WHITE, " /fspawn (ปรับจุดเกิดของกลุ่ม) /toggle (ปิดระบบสื่อสาร)/spec(ส่อง)");
	    SendClientMessage(playerid, COLOR_WHITE, " /event (จัดกิจกรรม)/openwar(เปิดวอชิงธง)");
	    SendClientMessage(playerid, COLOR_WHITE, "/renewbiecar (รีจักรยานเด็กใหม่) /recar (รียานพาหนะทั้งหมด) /acpr (รักษาแอดมิน)");
	}
    return 1;
}

CMD:dynamichelp(playerid, params[])
{
	if(playerData[playerid][pAdmin] >= 6)
	{
	    SendClientMessage(playerid, COLOR_GREEN, "|======[LEVEL: 6 DYNAMIC]======|");
	    SendClientMessage(playerid, COLOR_WHITE, "/createfaction (สร้างกลุ่ม) /deletefaction (ลบกลุ่ม) /editfaction (แก้ไขกลุ่ม)");
	    SendClientMessage(playerid, COLOR_WHITE, "/veh (เสกรถ) /destroyveh (ลบรถเสก) /removevehicle (ลบรถออกจากฐานข้อมูล) /editvehicle (แก้ไขรถ)");
	    SendClientMessage(playerid, COLOR_WHITE, "/createarrest (สร้างพื้นที่จับกุม) /deletearrest (ลบพื้นที่จับกุม)");
	    SendClientMessage(playerid, COLOR_WHITE, "/createentrance (สร้างประตู) /deleteentrance (ลบประตู) /editentrance (แก้ไขประตู)");
	    SendClientMessage(playerid, COLOR_WHITE, "/createpump (สร้างปั้ม) /deletepump (ลบปั้ม) /createshop (สร้างร้านค้า) /deleteshop (ลบร้านค้า)");
	    SendClientMessage(playerid, COLOR_WHITE, "/createatm (สร้าง ATM) /deleteatm (ลบ ATM) /creategarage (สร้างอู่) /deletegarage (ลบอู่)");
	    SendClientMessage(playerid, COLOR_WHITE, "/creategps (สร้าง GPS) /deletegps (ลบ GPS) /editgps (แก้ไข GPS) /agps (ดูไอดี/วาร์ป GPS)");
	}
    return 1;
}

GetElapsedTime(time, &hours, &minutes, &seconds)
{
	hours = 0;
	minutes = 0;
	seconds = 0;

	if (time >= 3600)
	{
		hours = (time / 3600);
		time -= (hours * 3600);
	}
	while (time >= 60)
	{
	    minutes++;
	    time -= 60;
	}
	return (seconds = time);
}

Float:GetVehicleSpeed(vehicleid)
{
    new Float:vx, Float:vy, Float:vz;
    GetVehicleVelocity(vehicleid, vx, vy, vz);
	new Float:vel = floatmul(floatsqroot(floatadd(floatadd(floatpower(vx, 2), floatpower(vy, 2)),  floatpower(vz, 2))), 181.5);
	return vel;
}

forward SpeedoTimer(playerid, vehicleid);
public SpeedoTimer(playerid, vehicleid)
{
	if(vehicleid != GetPlayerVehicleID(playerid))
	{
		KillTimer(playerData[playerid][pSpeedoTimer]);
		return 0;
	}
	new Float:returnspeed = GetVehicleSpeed(vehicleid);
	new speed = floatround(returnspeed);
	new str[64];
 	format(str, sizeof(str), "%d", speed);
	PlayerTextDrawSetString(playerid, PlayerSpeedoCountTD[playerid], str);
 	format(str, sizeof(str), "%.2f", vehicleFuel[vehicleid]);
	PlayerTextDrawSetString(playerid, PlayerSpeedoFuelCountTD[playerid], str);

	new modelid = GetVehicleModel(vehicleid);
	new Float:speedtest = GetVehicleSpeed(vehicleid);
	new Float:maxspeed = vehicleData[modelid - 400][vSpeed];
	new Float:value = floatmul(floatdiv(speedtest, maxspeed), 0.01);

	if (IsEngineVehicle(vehicleid) && GetEngineStatus(vehicleid))
	{
		if(vehicleFuel[vehicleid] > 0)
		{
			vehicleFuel[vehicleid] -= value;
		}
		else
		{
		    SetEngineStatus(vehicleid, false);
		    vehicleFuel[vehicleid] = 0;
		}
	}
	return 1;
}

ptask PlayerTimerSecond[1000](playerid)
{
	if (!playerData[playerid][IsLoggedIn]) return 0;

	SetPlayerScore(playerid, playerData[playerid][pLevel]);

	if (ClothingCooldown[playerid] > 0) ClothingCooldown[playerid] --;
	if (ClothingCooldown[playerid] < 0) ClothingCooldown[playerid] = 0;

	if (schoolCD[playerid] > 0) schoolCD[playerid] --;
	if (schoolCD[playerid] < 0) schoolCD[playerid] = 0;

	// ค่าอาหาร
	new hHours, hMins, hSecs;
	new year, month,day;
	getdate(year, month, day);
	GetRealTime(hHours, hMins, hSecs);
	TextDrawSetString(ui_clock, sprintf("~w~%d %s %02d:%02d:%02d", day, MONTH_DAY_SHORT[month-1], hHours, hMins,  hSecs));

	SetPlayerProgressBarMaxValue(playerid, PlayerProgressBar[playerid][0], GetPlayerRequiredExp(playerid));

	//ตั้งและอัพเดทหลอด
	SetPlayerProgressBarValue(playerid, PlayerProgressBar[playerid][0], playerData[playerid][pExp]); //exp
	SetPlayerProgressBarValue(playerid, PlayerProgressBar[playerid][1], playerData[playerid][pThirsty]); //water
	SetPlayerProgressBarValue(playerid, PlayerProgressBar[playerid][2], playerData[playerid][pHungry]); //food

	//stats
	PlayerTextDrawSetString(playerid, pTD_StatsNew[playerid][0], sprintf("%d", playerid)); //id
	PlayerTextDrawSetString(playerid, pTD_StatsNew[playerid][1], sprintf("%d", playerData[playerid][pLevel])); //level
	PlayerTextDrawSetString(playerid, pTD_StatsNew[playerid][2], sprintf("%d/%d", playerData[playerid][pExp], GetPlayerRequiredExp(playerid))); //exp

	new redmoney[12];
    format(redmoney, sizeof(redmoney), "%s", FormatNumber(GetPlayerRedMoney(playerid)));
    PlayerTextDrawSetString(playerid, PlayerTD[playerid][4], redmoney);

	new showname[256];
    format(showname, sizeof(showname), "%s", GetPlayerNameEx(playerid));
    PlayerTextDrawSetString(playerid, PlayerTD[playerid][3], showname);

	new point[12];
    format(point, sizeof(point), "%s", FormatNumber(playerData[playerid][pCoin]));
    PlayerTextDrawSetString(playerid, PlayerTD[playerid][11], point);

	new greenmoney[12];
    format(greenmoney, sizeof(greenmoney), "%s", FormatNumber(GetPlayerMoneyEx(playerid)));
    PlayerTextDrawSetString(playerid, PlayerTD[playerid][0], greenmoney);
    
	// ไมล์ความเร็วรถ
	if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
	
		new vehicleID = GetPlayerVehicleID(playerid), szMessage[256];

		if (vehicleHasEngine(vehicleID)) {

	    	format(szMessage, sizeof(szMessage), "%02d", GetPlayerSpeed(playerid, true));
	    	PlayerTextDrawSetString(playerid, ui_speed[playerid][8], szMessage);

		    format(szMessage, sizeof(szMessage), "FUEL: %.0f", vehicleFuel[vehicleID]);
		    PlayerTextDrawSetString(playerid, ui_speed[playerid][15], szMessage);

			new Float:vHealth;
			GetVehicleHealth(vehicleID, vHealth);
			format(szMessage, sizeof(szMessage), "VHP: %.0f", vHealth);
		    PlayerTextDrawSetString(playerid, ui_speed[playerid][16], szMessage);

		    PlayerTextDrawSetString(playerid, ui_speed[playerid][19], ReturnVehicleName(vehicleID));

			///////////////////////////////////////////////////////////////////////////////////////////////////
			// Engine
			if (IsVehicleRunning(vehicleID)) PlayerTextDrawBoxColor(playerid, ui_speed[playerid][4], -1962934017);
			else PlayerTextDrawBoxColor(playerid, ui_speed[playerid][4], 135);

			// Lock
			new id = carData[vehicleID][carID];
			if (carData[id][carLocked]) PlayerTextDrawBoxColor(playerid, ui_speed[playerid][5], -1962934017);
			else PlayerTextDrawBoxColor(playerid, ui_speed[playerid][5], 135);

			// light
			if (GetLightStatus(vehicleID)) PlayerTextDrawBoxColor(playerid, ui_speed[playerid][7], -1962934017);
			else PlayerTextDrawBoxColor(playerid, ui_speed[playerid][7], 1296911871);

			// truck
			if (getTrunkState(vehicleID)) PlayerTextDrawBoxColor(playerid, ui_speed[playerid][6], -1962934017);
			else PlayerTextDrawBoxColor(playerid, ui_speed[playerid][6], 135);


			///////////////////////////////////////////////////////////////////////////////////////////////////

			PlayerTextDrawShow(playerid, ui_speed[playerid][4]);
			PlayerTextDrawShow(playerid, ui_speed[playerid][5]);
			PlayerTextDrawShow(playerid, ui_speed[playerid][6]);
			PlayerTextDrawShow(playerid, ui_speed[playerid][7]);

		    /*if(getVehicleData(vehicleID, ownerID, slotID)) {
				PlayerTextDrawSetString(playerid, ui_speed[playerid][10], sprintf("%.0f KM", playerVehicles[ownerID][slotID][pCarDistance]));
				PlayerTextDrawSetString(playerid, ui_speed[playerid][18], sprintf("TIRE: %.0f", playerVehicles[ownerID][slotID][pCarTires]));
			}
			else {
			    PlayerTextDrawSetString(playerid, ui_speed[playerid][10], "-- KM");
			    PlayerTextDrawSetString(playerid, ui_speed[playerid][18], "TIRE: --"); //??
			}*/

			PlayerTextDrawSetString(playerid, ui_speed[playerid][10], "-- KM");
			PlayerTextDrawSetString(playerid, ui_speed[playerid][18], "TIRE: --"); //??
		}
	}
	
	// --> บาคาร่า
	if(StartPlayBacara[playerid] == 1)
	{
	    new string[256];
		if(BacaraTable[playerid] == 1)
		{
			if(BacaraTableOneTime > 0)
			{
				format(string, sizeof(string), "Start Bet In : %d Seconds", BacaraTableOneTime);
				PlayerTextDrawSetString(playerid, TextBacara[playerid][0], string);
			}
			if(BacaraTableOneTime == 0)
			{
				format(string, sizeof(string), "Start Bet Now");
				PlayerTextDrawSetString(playerid, TextBacara[playerid][0], string);
			}
		}
	}

	/*if (Inventory_Count(playerid, "Poon") > 20) Inventory_Set(playerid, "Poon", 20);
	if (Inventory_Count(playerid, "Fuel Can") > 1) Inventory_Set(playerid, "Fuel Can", 1);
	*/
	
    if(targeton[playerid] > 0)
	{
	    new Float:X, Float:Y, Float:Z;
		GetPlayerPos(targetonname[playerid], X, Y, Z);
	    SetPlayerCheckpoint(playerid, X,Y,Z, 5);
	}
	if (playerData[playerid][pStunned] > 0)
	{
        playerData[playerid][pStunned]--;
       	ApplyAnimation(playerid, "CRACK", "crckdeth4", 4.0, 0, 0, 0, 1, 0, 1);
        if (!playerData[playerid][pStunned])
        {
            TogglePlayerControllable(playerid, true);
		}
	}
	
	// เรียนหนังสือ
	if (schoolTake[playerid] == 1)
	{
	    new string[256];

		ApplyAnimation(playerid, "PARK","Tai_Chi_Loop", 4.1, 0, 0, 0, 0, 0, 1);
		schoolPoints[playerid] += 20;

		format(string, sizeof(string), "~n~~n~~n~~n~~n~~b~Study : ~w~%d/100", schoolPoints[playerid]);
		GameTextForPlayer(playerid,  string, 2000, 5);

		if (schoolPoints[playerid] >= 100)
		{
            schoolTake[playerid] = 0;
            schoolPoints[playerid] = 0;
            schoolCD[playerid] = 5;

			ClearAnimations(playerid);
			TogglePlayerControllable(playerid, true);

			playerData[playerid][pSchoolPoints] ++;
			playerData[playerid][pMaxSchool] ++;

			SendClientMessage(playerid, COLOR_GREEN, "|============= การเรียนหนังสือ =============|");
			SendClientMessage(playerid, COLOR_YELLOW, "คุณได้ทำการเรียนหนังสือเรียบร้อยแล้ว! (คะแนนการเรียน + 1)");
		}
	}
	
	//
	
	if (isHospital[playerid] == 1)
	{
	    new string[256];

		ApplyAnimation(playerid, "CRACK","crckidle2", 4.1, 0, 0, 0, 0, 0, 1);
		hospitalPoints[playerid] += 5;

		format(string, sizeof(string), "~n~~n~~n~~n~~n~~r~Hospital : ~w~%d/100", hospitalPoints[playerid]);
		GameTextForPlayer(playerid,  string, 2000, 5);

		if (hospitalPoints[playerid] >= 100)
		{
            isHospital[playerid] = 0;
            hospitalPoints[playerid] = 0;

			ClearAnimations(playerid);
			TogglePlayerControllable(playerid, true);

            GivePlayerMoneyEx(playerid, -500);
			new Float:hp;
			GetPlayerHealth(playerid, hp);
			
			SetPlayerHealth(playerid, hp + 50.0);
			
			SendClientMessage(playerid, COLOR_RED, "|========= เตียงฉุกเฉิน =========|");
			SendClientMessage(playerid, -1, "* คุณได้รับเลือดเพิ่ม 50.0 Health จากการนอนเตียงฉุกเฉิน");

		}
	}

	if (isHospital[playerid] == 2)
	{
	    new string[256];

		ApplyAnimation(playerid, "CRACK","crckidle2", 4.1, 0, 0, 0, 0, 0, 1);
		hospitalPoints[playerid] += 5;

		format(string, sizeof(string), "~n~~n~~n~~n~~n~~r~Hospital : ~w~%d/100", hospitalPoints[playerid]);
		GameTextForPlayer(playerid,  string, 2000, 5);

		if (hospitalPoints[playerid] >= 100)
		{
            isHospital[playerid] = 0;
            hospitalPoints[playerid] = 0;

			ClearAnimations(playerid);
			TogglePlayerControllable(playerid, true);

            GivePlayerMoneyEx(playerid, -500);
			new Float:hp;
			GetPlayerHealth(playerid, hp);

			SetPlayerHealth(playerid, hp + 50.0);

			SendClientMessage(playerid, COLOR_RED, "|========= เตียงฉุกเฉิน =========|");
			SendClientMessage(playerid, -1, "* คุณได้รับเลือดเพิ่ม 50.0 Health จากการนอนเตียงฉุกเฉิน");

		}
	}

	if (isHospital[playerid] == 3)
	{
	    new string[256];

		ApplyAnimation(playerid, "CRACK","crckidle2", 4.1, 0, 0, 0, 0, 0, 1);
		hospitalPoints[playerid] += 5;

		format(string, sizeof(string), "~n~~n~~n~~n~~n~~r~Hospital : ~w~%d/100", hospitalPoints[playerid]);
		GameTextForPlayer(playerid,  string, 2000, 5);

		if (hospitalPoints[playerid] >= 100)
		{
            isHospital[playerid] = 0;
            hospitalPoints[playerid] = 0;

			ClearAnimations(playerid);
			TogglePlayerControllable(playerid, true);

            GivePlayerMoneyEx(playerid, -500);
			new Float:hp;
			GetPlayerHealth(playerid, hp);

			SetPlayerHealth(playerid, hp + 50.0);

			SendClientMessage(playerid, COLOR_RED, "|========= เตียงฉุกเฉิน =========|");
			SendClientMessage(playerid, -1, "* คุณได้รับเลือดเพิ่ม 50.0 Health จากการนอนเตียงฉุกเฉิน");

		}
	}
	
	//
	
	if (isHarvest[playerid] == 1)
	{
	    new string[256];

		ApplyAnimation(playerid, "BOMBER", "BOM_PLANT_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
		harvestPoints[playerid] += 5;

		format(string, sizeof(string), "~n~~n~~n~~n~~n~~g~Harvest : ~w~%d/100", harvestPoints[playerid]);
		GameTextForPlayer(playerid,  string, 2000, 5);

		if (harvestPoints[playerid] >= 100)
		{
            isHarvest[playerid] = 0;
            harvestPoints[playerid] = 0;
            TogglePlayerControllable(playerid, true);
            ClearAnimations(playerid);
            
            //1.กระเพา (10$)2. มะเขือเทศ(20$) 3.ผักคะน้า(30$) 4.ผักกาดขาว(40$)
            
            new plants = random(4);
            switch (plants)
            {
                case 0:
                {
		            Inventory_Add(playerid, "กระเพา", 1);
		            SendClientMessage(playerid, COLOR_WHITE, "> คุณได้รับ {51DF0A}'กระเพา' + 1");
                }
                case 1:
                {
		            Inventory_Add(playerid, "มะเขือเทศ", 1);
		            SendClientMessage(playerid, COLOR_WHITE, "> คุณได้รับ {51DF0A}'มะเขือเทศ' + 1");
                }
                case 2:
                {
		            Inventory_Add(playerid, "ผักคะน้า", 1);
		            SendClientMessage(playerid, COLOR_WHITE, "> คุณได้รับ {51DF0A}'ผักคะน้า' + 1");
                }
                case 3:
                {
		            Inventory_Add(playerid, "ผักกาดขาว", 1);
		            SendClientMessage(playerid, COLOR_WHITE, "> คุณได้รับ {51DF0A}'ผักกาดขาว' + 1");
                }
            }
		}
	}

	//

	if (isPoonStart[playerid] == 1)
	{
	    new string[256];
	
		ApplyAnimation(playerid, "BD_FIRE", "wash_up", 4.1, 0, 0, 0, 0, 0, 1);
		poonPoints[playerid] += 5;

		format(string, sizeof(string), "~n~~n~~n~~n~~n~~r~Poon Take : ~w~%d/100", poonPoints[playerid]);
		GameTextForPlayer(playerid,  string, 2000, 5);

		if (poonPoints[playerid] >= 100)
		{
			TogglePlayerControllable(playerid, true);

            isPoonStart[playerid] = 0;
            poonPoints[playerid] = 0;

            Inventory_Add(playerid, "Poon", 1);
            SendClientMessage(playerid, COLOR_WHITE, "> คุณได้รับ {51DF0A}'ปูน' + 1");
		}
	}

	if (isUseMedicKit[playerid] == 1)
	{
		new string[256];

		if (isUseMedicKit[playerid] == 1)
		{
			ApplyAnimation(playerid, "BOMBER", "BOM_PLANT_LOOP", 4.1, 0, 0, 0, 0, 0, 1);
			medicPoints[playerid] += 5;

			format(string, sizeof(string), "~n~~n~~n~~n~~n~~r~Medic Kit : ~w~%d/100", medicPoints[playerid]);
			GameTextForPlayer(playerid,  string, 2000, 5);

			if (medicPoints[playerid] >= 100)
			{
	            isUseMedicKit[playerid] = 0;
	            medicPoints[playerid] = 0;

	            Inventory_Remove(playerid, "Medic Kit", 1);

				new Float:Health;
				GetPlayerHealth(playerid, Health);
				SetPlayerHealth(playerid, Health+50.0);
				
				TogglePlayerControllable(playerid, 1);
				
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้ใช้งาน Medic Kit เรียบร้อยแล้ว [เลือด + 50.0]");
			}
		}
	}
	
	if (isUseMedicKit[playerid] == 2)
	{
		new string[256];

		if (isUseMedicKit[playerid] == 2)
		{
			medicPoints[playerid] += 5;

			format(string, sizeof(string), "~n~~n~~n~~n~~n~~b~Fix Car : ~w~%d/100", medicPoints[playerid]);
			GameTextForPlayer(playerid,  string, 2000, 5);

			if (medicPoints[playerid] >= 100)
			{
	            isUseMedicKit[playerid] = 0;
	            medicPoints[playerid] = 0;
	            
	            TogglePlayerControllable(playerid, 1);

	            Inventory_Remove(playerid, "VehicleBox", 1);

				RepairVehicle(GetPlayerVehicleID(playerid));
				SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้ใช้งาน 'กล่องซ่อมรถ' ซ่อมรถของคุณเรียบร้อยแล้ว");
			}
		}
	}

	if (isUseMedicKit[playerid] == 3)
	{
		new string[256], vehicleid = GetPlayerVehicleID(playerid);

		if (isUseMedicKit[playerid] == 3)
		{
			medicPoints[playerid] += 5;

			format(string, sizeof(string), "~n~~n~~n~~n~~n~~r~Fuel Car : ~w~%d/100", medicPoints[playerid]);
			GameTextForPlayer(playerid,  string, 2000, 5);

			if (medicPoints[playerid] >= 100)
			{
				new Float:oldfuel = vehicleFuel[vehicleid];
			    new Float:fuel = oldfuel + 5.0;
			
	            isUseMedicKit[playerid] = 0;
	            medicPoints[playerid] = 0;

	            TogglePlayerControllable(playerid, 1);

	            Inventory_Remove(playerid, "Fuel Can", 1);

				vehicleFuel[vehicleid] = fuel;
				SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้ใช้งาน 'ถังน้ำมัน' กับรถของคุณแล้ว [น้ำมัน + 5.0]");
			}
		}
	}

	if (playerData[playerid][pJailTime] > 0)
	{
	    static
	        hours,
	        minutes,
	        seconds,
			str[128];

	    playerData[playerid][pJailTime]--;

		GetElapsedTime(playerData[playerid][pJailTime], hours, minutes, seconds);

		format(str, sizeof(str), "~g~Prison Time:~w~ %02d:%02d:%02d", hours, minutes, seconds);
		GameTextForPlayer(playerid, str, 2000, 6);

	    if (!playerData[playerid][pJailTime])
	    {
	        new id = playerData[playerid][pPrisonOut];
	        SetPlayerPos(playerid, arrestData[id][arrestPosX], arrestData[id][arrestPosY], arrestData[id][arrestPosZ]);
	        SetPlayerInterior(playerid, arrestData[id][arrestInterior]);
	        SetPlayerVirtualWorld(playerid, arrestData[id][arrestWorld]);

			SendClientMessage(playerid, COLOR_WHITE, "คุณถูกปล่อยตัวจากห้องขังแล้ว");
		}
	}
	if (GetPlayerWantedLevelEx(playerid) > 0)
	{
	    playerData[playerid][pWantedTime]++;
	    if(playerData[playerid][pWantedTime] > 300)
	    {
	        playerData[playerid][pWantedTime] = 0;
	        GivePlayerWanted(playerid, -1);
	        SendClientMessageEx(playerid, COLOR_GREEN, "[คดีความ] {FFFFFF}ดาวของคุณถูกลบออกไป 1 หลังจากคุณรอดนานครบ 5 นาที! ดาวทั้งหมด {00FF00}%d", GetPlayerWantedLevelEx(playerid));
	    }
	}
	if (playerData[playerid][pInjured])
	{
	    if (playerData[playerid][pInjuredTime] > 0)
	    {
		    static
		        hours,
		        minutes,
		        seconds,
				str[128];

			playerData[playerid][pInjuredTime]--;

		    GetElapsedTime(playerData[playerid][pInjuredTime], hours, minutes, seconds);

			format(str, sizeof(str), "~r~RESPAWN ~w~AVAILABLE IN ~r~%02d MINUTES %02d SECONDS", minutes, seconds);
			PlayerTextDrawSetString(playerid, PlayerDeathTD[playerid], str);

			ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.1, 0, 1, 1, 1, 0, 1);
		}
		if (!playerData[playerid][pInjuredTime])
		{
		    playerData[playerid][pHealth] = 10.0;
		    playerData[playerid][pInjured] = 0;
		    playerData[playerid][pInjuredTime] = 0;
		    playerData[playerid][pHospital] = 1;
		    SpawnPlayer(playerid);
		}
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:vehiclehealth;
	GetVehicleHealth(vehicleid, vehiclehealth);
	if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
		switch (GetEngineStatus(vehicleid))
		{
			case true:
			{
  				if (vehiclehealth < 350)
				{
				    SetVehicleHealth(vehicleid, 350);
			        SetEngineStatus(vehicleid, false);
				}
			}
		}
	}
	if (playerData[playerid][pDrivingTest] && IsPlayerInVehicle(playerid, playerData[playerid][pTestCar]))
	{
	    if (!IsPlayerInRangeOfPoint(playerid, 100.0, g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][0], g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][1], g_arrDrivingCheckpoints[playerData[playerid][pTestStage]][2]))
		{
	        CancelDrivingTest(playerid);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน]{FFFFFF} คุณขับออกนอกเขตมากเกินไป การสอบจึงถูกยกเลิก");
		}
		else if (GetVehicleSpeed(vehicleid) >= 90.0)
		{
			if (++playerData[playerid][pTestWarns] < 3)
			{
				SendClientMessageEx(playerid, COLOR_LIGHTRED, "[คำเตือน]{FFFFFF} คุณขับเร็วมากเกินไป เตือนครั้งที่ (%d/3)", playerData[playerid][pTestWarns]);
				SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน]{FFFFFF} ความเร็วต้องไม่เกิน 90 KM/H");
    		}
       		else
			{
				CancelDrivingTest(playerid);
    			SendClientMessage(playerid, COLOR_LIGHTRED, "[คำเตือน]{FFFFFF} คุณขับเร็วมากเกินไป  ครบ 3 ครั้ง การสอบจึงถูกยกเลิก");
		    }
		}
	}
	if (playerData[playerid][pOOCSpam] > 0) playerData[playerid][pOOCSpam]--;
	if (playerData[playerid][pHungry] > 100) playerData[playerid][pHungry] = 100;
	if (playerData[playerid][pThirsty] > 100) playerData[playerid][pThirsty] = 100;
	if (playerData[playerid][pHungry] < 0) playerData[playerid][pHungry] = 0;
	if (playerData[playerid][pThirsty] < 0) playerData[playerid][pThirsty] = 0;
	if (playerData[playerid][pPVPFreeze] > 0)
	{
		playerData[playerid][pPVPFreeze]--;
		if (playerData[playerid][pPVPFreeze] <= 0)
		{
		    TogglePlayerControllable(playerid, true);
			playerData[playerid][pPVPFreeze] = 0;
		}
	}
	if (playerData[playerid][pPVPFreeze] < 0)
	{
	    TogglePlayerControllable(playerid, true);
		playerData[playerid][pPVPFreeze] = 0;
	}
	new Float:hp, Float:armour;
	GetPlayerHealth(playerid, hp);
	GetPlayerArmour(playerid, armour);
	SetPlayerProgressBarValue(playerid, barhungry[playerid], playerData[playerid][pHungry]);
	SetPlayerProgressBarValue(playerid, bardrink[playerid], playerData[playerid][pThirsty]);
	SetPlayerProgressBarValue(playerid, barhp[playerid], hp);
	SetPlayerProgressBarValue(playerid, bararmour[playerid], armour);
	new string[15];
	format(string, sizeof(string), "%d %s", playerid, GetPlayerNameEx(playerid));
	PlayerTextDrawSetString(playerid, tdidname[playerid], string);
	if (playerData[playerid][pArmorOn])
	{
	    if (armour == 0)
	    {
		    RemovePlayerAttachedObject(playerid, 9);
	    }
	}
    return 1;
}

ptask PlayerTimerPayday[60*1000](playerid)
{
	if (!playerData[playerid][IsLoggedIn]) return 0;

	playerData[playerid][pMinutes]++;
	if (playerData[playerid][pMinutes] >= 60)
	{
	    new morereward;
	    switch(playerData[playerid][pVip])
	    {
	        case 1: morereward = 350;
	        case 2: morereward = 500;
	        case 3: morereward = 750;
			case 4: morereward = 1000;
	    }
	    //new reward = playerData[playerid][pLevel]*1100+morereward;
	    new reward = 500+morereward;
	    playerData[playerid][pHours]++;
	    playerData[playerid][pMinutes] = 0;
	    GivePlayerMoneyEx(playerid, reward);
	    SendClientMessageEx(playerid, COLOR_YELLOW, "** {FFFFFF}คุณได้เล่นครบ {00FF00}%d {FFFFFF}ชั่วโมงแล้ว", playerData[playerid][pHours]);
	    SendClientMessageEx(playerid, COLOR_YELLOW, "** {FFFFFF}คุณได้รับเงินจำนวน {00FF00}%s", FormatMoney(reward));

		if (GetFactionType(playerid) == FACTION_POLICE)
		{
		    GivePlayerMoneyEx(playerid, 2500);
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "[เงินเดือน] : คุณได้รับเงิน $2,500 จากการเป็นเจ้าหน้าที่ตำรวจ");
		}

		if (GetFactionType(playerid) == FACTION_MEDIC)
		{
            GivePlayerMoneyEx(playerid, 1000);
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "[เงินเดือน] : คุณได้รับเงิน $1,000 จากการเป็นหมอ");
		}

		if (GetFactionType(playerid) == FACTION_MEC)
		{
            GivePlayerMoneyEx(playerid, 1000);
		    SendClientMessage(playerid, COLOR_ORANGE, "[เงินเดือน] : คุณได้รับเงิน $1,000 จากการเป็นช่างซ่อมรถ");
		}

	    /*new Float:insterest;
	    switch(playerData[playerid][pVip])
	    {
	        case 1: insterest = 0.005;
	        case 2: insterest = 0.008;
	        case 3: insterest = 0.01;
	    }

		new Float:banklist = playerData[playerid][pBankMoney] * insterest;
        playerData[playerid][pBankMoney] += banklist;
        
        SendClientMessageEx(playerid, COLOR_GREEN, "* คุณได้รับเงินจำนวน $%f เข้าธนาคาร (ดอกเบี้ยธนาคาร : %f%)", banklist, insterest);*/
	}
    return 1;
}

ptask PlayerTimerHunger[60000*3](playerid)
{
	if(!playerData[playerid][IsLoggedIn]) return 0;

	if(playerData[playerid][pJailTime]) return 0;

	if(playerData[playerid][pInjured]) return 0;

	if(playerData[playerid][pThirsty] > 0) playerData[playerid][pThirsty] -= 1.0;//
	if(playerData[playerid][pHungry] > 0) playerData[playerid][pHungry] -= 1.0;//

	if(playerData[playerid][pThirsty] < 10 && playerData[playerid][pHungry] < 10)
	{
	    new Float:hp;
	    GetPlayerHealth(playerid, hp);
	    SetPlayerHealth(playerid, hp-0.3);
	}
	else if(playerData[playerid][pThirsty] < 10)
	{
	    new Float:hp;
	    GetPlayerHealth(playerid, hp);
	    SetPlayerHealth(playerid, hp-0.2);
	}
	else if(playerData[playerid][pHungry] < 10)
	{
	    new Float:hp;
	    GetPlayerHealth(playerid, hp);
	    SetPlayerHealth(playerid, hp-0.2);
	}
    return 1;
}

forward OnProgressUpdate(playerid, progress, objectid);
forward OnProgressFinish(playerid, objectid);

StartProgress(playerid, duration, startvalue = 0, objectid)
{
	if(ProgressState[playerid] == 1)
		return 0;

	stop ProgressTimer[playerid];
	ProgressTimer[playerid] = repeat ProgressUpdate(playerid, objectid);

	ProgressLimit[playerid] = duration;
	ProgressCount[playerid] = startvalue;
	ProgressState[playerid] = 1;
	ProgressObject[playerid] = objectid;

	SetPlayerProgressBarMaxValue(playerid, PlayerProgressJob[playerid], ProgressLimit[playerid]);
	SetPlayerProgressBarValue(playerid, PlayerProgressJob[playerid], ProgressCount[playerid]);
	ShowPlayerProgressBar(playerid, PlayerProgressJob[playerid]);
	PlayerTextDrawShow(playerid, PlayerJobCountTD[playerid]);

	return 1;
}

StopProgress(playerid)
{
	if(ProgressState[playerid] == 0)
		return 0;

	stop ProgressTimer[playerid];
	ProgressLimit[playerid] = 0;
	ProgressCount[playerid] = 0;
	ProgressState[playerid] = 0;
	ProgressObject[playerid] = INVALID_STREAMER_ID;

	HidePlayerProgressBar(playerid, PlayerProgressJob[playerid]);
	PlayerTextDrawHide(playerid, PlayerJobCountTD[playerid]);

	ClearAnimations(playerid);

	return 1;
}

timer ProgressUpdate[100](playerid, objectid)
{
	if(ProgressCount[playerid] >= ProgressLimit[playerid])
	{
		StopProgress(playerid);
		CallLocalFunction("OnProgressFinish", "dd", playerid, objectid);
		return;
	}

	SetPlayerProgressBarMaxValue(playerid, PlayerProgressJob[playerid], ProgressLimit[playerid]);
	SetPlayerProgressBarValue(playerid, PlayerProgressJob[playerid], ProgressCount[playerid]);
	ShowPlayerProgressBar(playerid, PlayerProgressJob[playerid]);

	CallLocalFunction("OnProgressUpdate", "ddd", playerid, ProgressCount[playerid], objectid);

	static
		string[32];

	ProgressCount[playerid]++;

	new Float:current_progress;
	if (ProgressLimit[playerid] == 0)
	{ } else { current_progress = (ProgressCount[playerid]*100/ProgressLimit[playerid]); }

	format(string, sizeof string, "%.0f%c", current_progress, '%');
	PlayerTextDrawSetString(playerid, PlayerJobCountTD[playerid], string);

	return;
}

/*forward OnPlayerUseItem(playerid, const name[]);
public OnPlayerUseItem(playerid, const name[])
{
	if (!strcmp(name, "Shell", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}

	// แฟชั่น
	
	else if (!strcmp(name, "Dragon Tribe", true))
	{
		SetPlayerAttachedObject(playerid, 1, 3528, 3, 0.0129, -0.0430, 0.0270, 0.0000, -86.5000, 24.4000, 0.0700, 0.0859, 0.0999, 0, 0); // "Object.3" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 2, 3528, 4, 0.0000, 0.0120, 0.0029, -155.8000, -76.4998, -8.9999, 0.0899, 0.0960, 0.0879, 0, 0); // "Object.3" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 3, 339, 5, 0.0399, 0.0000, 0.0170, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "Object.3" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 4, 1247, 2, 0.2909, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.3149, 0.2599, 0.3319, 0, 0); // "Object.3" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 5, 3528, 9, 0.0000, 0.0520, 0.0469, -91.0000, -111.5999, -0.3999, 0.1099, 0.1190, 0.0889, 0, 0); // "Object.3" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 6, 3528, 10, 0.0000, 0.0179, 0.0179, -89.5000, -103.3998, 0.0000, 0.1299, 0.1209, 0.0979, 0, 0); // "Object.3" by @nice (Skin:108)

		SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดเผ่ามังกร");
	}

	else if (!strcmp(name, "ชุดลูบู", true))
	{
		SetPlayerAttachedObject(playerid, 1, 18844, 1, 0.3639, 0.0000, -0.4219, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
		SetPlayerAttachedObject(playerid, 2, 18844, 1, 0.3339, 0.0000, 0.4659, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
		SetPlayerAttachedObject(playerid, 3, 18844, 1, 0.7929, 0.0000, 0.1629, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
		SetPlayerAttachedObject(playerid, 4, 18844, 1, 0.8009, 0.0000, -0.1220, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
		SetPlayerAttachedObject(playerid, 5, 18701, 1, -1.2599, 0.0000, 0.4069, 0.0000, 87.8999, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
		SetPlayerAttachedObject(playerid, 6, 18701, 1, -1.2330, -0.0010, -0.4740, 0.0000, 87.8999, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
		SetPlayerAttachedObject(playerid, 7, 3533, 1, 0.0099, -0.1389, -0.0009, 0.0000, 106.5000, 0.0000, 0.0260, 0.0279, 0.2129, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
		SetPlayerAttachedObject(playerid, 8, 335, 1, -0.6570, -0.0509, 0.3420, 0.0000, -76.7999, -169.5999, 1.9539, 1.6839, 1.9980, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
		SetPlayerAttachedObject(playerid, 9, 3528, 1, -0.6589, -0.1129, 0.1930, 177.1000, 114.4999, 0.0000, 0.0829, 0.0779, 0.0769, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)

		SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดลูบู");
	}

	else if (!strcmp(name, "ชุดหัวหน้าเผ่า", true))
	{
		SetPlayerAttachedObject(playerid, 1, 19314, 9, 0.0780, 0.0719, 0.0039, -94.6999, 1.2999, 91.4999, 1.4259, 1.2879, 0.4690, 0, 0); // "Object.2" by @nice (Skin:230)
		SetPlayerAttachedObject(playerid, 2, 19079, 1, 0.2759, -0.0439, 0.1379, 0.0000, 0.0000, 0.0000, 0.5860, 0.5429, 0.6830, 0, 0); // "Object.2" by @nice (Skin:230)
		SetPlayerAttachedObject(playerid, 3, 1603, 1, 0.2099, -0.2080, -0.0700, -32.1999, -23.6999, 0.0000, 0.8019, 0.1379, 0.6479, 0, 0); // "Object.2" by @nice (Skin:230)
		SetPlayerAttachedObject(playerid, 4, 1603, 1, 0.2099, -0.2080, -0.0700, -32.1999, 22.7000, 0.0000, 0.6560, 0.1379, 0.4699, 0, 0); // "Object.2" by @nice (Skin:230)
		SetPlayerAttachedObject(playerid, 5, 1603, 1, 0.2099, -0.2080, 0.0740, -154.7999, -15.4999, 0.0000, 0.8149, 0.1379, 0.6409, 0, 0); // "Object.2" by @nice (Skin:230)
		SetPlayerAttachedObject(playerid, 6, 1603, 1, 0.1879, -0.2080, 0.0740, -154.7999, 28.4000, 0.0000, 0.5540, 0.1379, 0.4149, 0, 0); // "Object.2" by @nice (Skin:230)
		SetPlayerAttachedObject(playerid, 7, 19314, 10, 0.0659, 0.0829, 0.0000, 90.7999, 2.4999, 94.1999, 1.5209, 1.0729, 0.4990, 0, 0); // "Object.2" by @nice (Skin:230)
		SetPlayerAttachedObject(playerid, 8, 18701, 1, 0.5749, -0.2520, -0.1179, 0.0000, 88.6999, 0.0000, 1.0000, 1.0000, 0.0000, 0, 0); // "Object.2" by @nice (Skin:230)
		SetPlayerAttachedObject(playerid, 9, 18701, 1, 0.5699, -0.2520, 0.1640, 0.0000, 88.6999, 0.0000, 1.0000, 1.0000, 0.0000, 0, 0); // "Object.2" by @nice (Skin:230)

		SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดหัวหน้าเผ่า");
	}

	else if (!strcmp(name, "ชุดปีกดำ", true))
	{
		SetPlayerAttachedObject(playerid, 1, 18975, 1, -0.2059, -0.3189, 0.3189, 124.5001, 10.8000, 90.7999, 3.4969, 6.8429, 0.2649, 0, 0); // "Object4" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 2, 18975, 1, -0.2059, -0.3310, -0.3050, -131.9999, -7.2999, 90.7999, 3.4969, 6.8429, 0.2649, 0, 0); // "Object4" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 3, 19347, 1, -0.1049, 0.1309, 0.1849, -68.4000, 31.8999, -10.0000, 2.3820, 2.5779, 3.0269, 0, 0); // "Object4" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 4, 339, 1, 0.0019, 0.1000, 0.1990, 112.9000, -33.0999, 176.8000, 1.3409, 1.4010, 1.2999, 0, 0); // "Object4" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 5, 19314, 1, 0.3079, -0.0649, -0.0020, 0.0000, 0.0000, -136.9998, 1.0000, 1.0000, 0.2409, 0, 0); // "Object4" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 6, 19314, 1, 0.2319, -0.0649, -0.0020, 0.0000, 0.0000, -168.3997, 1.0000, 1.0000, 0.2409, 0, 0); // "Object4" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 7, 19314, 1, 0.1620, -0.0649, -0.0020, 0.0000, 0.0000, 147.3001, 1.0000, 1.6669, 0.2409, 0, 0); // "Object4" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 8, 18702, 1, 0.2290, -0.0689, 0.0000, -56.1999, 0.0000, 8.4000, 1.0000, 0.5030, 0.0000, 0, 0); // "Object4" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 9, 18702, 1, 0.2290, -0.0689, -0.0649, 46.4000, 0.0000, 10.0999, 1.0000, 0.5030, 0.0000, 0, 0); // "Object4" by @nice (Skin:108)

		SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดปีกดำ");
	}

	else if (!strcmp(name, "ชุดปีกแดง", true))
	{
		SetPlayerAttachedObject(playerid, 1, 339, 6, 0.0000, 0.0000, 0.0549, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "admin" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 2, 339, 5, 0.0320, 0.0000, 0.0230, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "admin" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 3, 339, 2, 0.0269, 0.0479, 0.0659, 0.0000, 0.0000, 82.1998, 1.0000, 1.0000, 1.0000, 0, 0); // "admin" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 4, 19274, 1, -0.2089, -0.2669, 0.3009, 117.6001, 8.1999, 95.7000, 2.4059, 4.5589, 0.1539, 0, 0); // "admin" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 5, 19274, 1, -0.2099, -0.2649, -0.2899, -119.2996, -8.0999, 95.7000, 2.3199, 4.6029, 0.1539, 0, 0); // "admin" by @nice (Skin:108)
		SetPlayerAttachedObject(playerid, 6, 19294, 1, 0.0240, 0.0000, 0.0000, 0.0000, 87.8998, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "admin" by @nice (Skin:108)

		SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดปีกแดง");
	}

	else if (!strcmp(name, "ชุดแมลงเทพ", true))
	{
		SetPlayerAttachedObject(playerid, 1, 19059, 1, 0.2979, -0.2509, -0.3149, -34.3999, -28.2999, 0.0000, 0.3719, 0.1019, 1.0000, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
		SetPlayerAttachedObject(playerid, 2, 19059, 1, 0.2979, -0.2300, 0.3349, -151.1000, -28.2999, 0.0000, 0.3719, 0.1019, 1.0000, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
		SetPlayerAttachedObject(playerid, 3, 19063, 1, 0.0399, -0.2280, -0.2890, -34.1000, 0.0000, 0.0000, 0.3119, 0.0669, 0.7850, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
		SetPlayerAttachedObject(playerid, 4, 19063, 1, 0.0399, -0.2150, 0.2999, -149.2000, 0.0000, 0.0000, 0.3119, 0.0669, 0.7850, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
		SetPlayerAttachedObject(playerid, 5, 19060, 1, -0.1389, -0.1480, -0.1889, -36.4999, 27.5999, 0.0000, 0.2520, 0.0599, 0.5210, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
		SetPlayerAttachedObject(playerid, 6, 19060, 1, -0.1389, -0.1480, 0.1889, -146.0001, 27.5999, 0.0000, 0.2520, 0.0599, 0.5210, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
		SetPlayerAttachedObject(playerid, 7, 18706, 5, 0.1019, 0.0189, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
		SetPlayerAttachedObject(playerid, 8, 3790, 1, 0.0000, -0.1029, 0.0000, 0.0000, 9.0999, 0.0000, 0.3559, 0.3589, 0.3269, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
		SetPlayerAttachedObject(playerid, 9, 3790, 1, 0.0000, -0.1029, 0.0000, 0.0000, -13.5000, 0.0000, 0.3559, 0.3589, 0.3269, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)

		SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดแมลงเทพ");
	}

	//
	else if (!strcmp(name, "Medic Kit", true))
	{
	    if (isUseMedicKit[playerid] == 1)
	        return SendClientMessage(playerid, COLOR_GREY, "* คุณอยู่ระหว่างการใช้งาน Medic Kit");
	
	    TogglePlayerControllable(playerid, 0);
		isUseMedicKit[playerid] = 1;
		SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้เริ่มต้นการใช้ 'Medic Kit' เรียบร้อยแล้ว");
	}
	else if (!strcmp(name, "Vape", true))
	{
	    SetTimerEx("SmokeWeed", 2000, false, "d", playerid);
		Inventory_Remove(playerid, "Vape", 1);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังสูบ {00FF00}%s", name);
	}
	else if (!strcmp(name, "VehicleBox", true))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	
	    if (!IsPlayerInAnyVehicle(playerid))
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

		switch (GetEngineStatus(vehicleid))
		{
  			case true:
   			{
		    	return SendClientMessage(playerid, COLOR_GREY, "* คุณต้องดับเครื่องยนต์ก่อน");
   			}
		}

	    if (isUseMedicKit[playerid] != 0)
	        return SendClientMessage(playerid, COLOR_GREY, "* คุณอยู่ระหว่างการใช้งาน กล่องซ่อมรถ");

        TogglePlayerControllable(playerid, 0);
		isUseMedicKit[playerid] = 2;
		SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้เริ่มต้นการใช้ 'กล่องซ่อมรถ' เรียบร้อยแล้ว");
	}
	else if (!strcmp(name, "Fuel Can", true))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);

	    if (!IsPlayerInAnyVehicle(playerid))
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

		switch (GetEngineStatus(vehicleid))
		{
  			case true:
   			{
		    	return SendClientMessage(playerid, COLOR_GREY, "* คุณต้องดับเครื่องยนต์ก่อน");
   			}
		}

	    if (isUseMedicKit[playerid] != 0)
	        return SendClientMessage(playerid, COLOR_GREY, "* คุณอยู่ระหว่างการใช้งาน กล่องซ่อมรถ");

        TogglePlayerControllable(playerid, 0);
		isUseMedicKit[playerid] = 3;
		SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้เริ่มต้นการใช้ 'ถังน้ำมัน' เรียบร้อยแล้ว");
	}
	else if (!strcmp(name, "Pizza", true))
	{
	    if (playerData[playerid][pHungry] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีหิว");

		playerData[playerid][pHungry] += 10;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
	}
	else if (!strcmp(name, "Wagyu Steak", true))
	{
	    if (playerData[playerid][pHungry] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีหิว");

		playerData[playerid][pHungry] += 20;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
	}
	else if (!strcmp(name, "Sushi", true))
	{
	    if (playerData[playerid][pHungry] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีหิว");

		playerData[playerid][pHungry] += 30;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
	}
	else if (!strcmp(name, "Water Bottle", true))
	{
	    if (playerData[playerid][pThirsty] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

		playerData[playerid][pThirsty] += 10;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังดื่ม {00FF00}%s", name);
	}
	else if (!strcmp(name, "Orange Juice", true))
	{
	    if (playerData[playerid][pThirsty] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

		playerData[playerid][pThirsty] += 20;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังดื่ม {00FF00}%s", name);
	}
	else if (!strcmp(name, "Apple Juice", true))
	{
	    if (playerData[playerid][pThirsty] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

		playerData[playerid][pThirsty] += 30;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังดื่ม {00FF00}%s", name);
	}

	else if (!strcmp(name, "Chicken Basil", true))
	{
	    if (playerData[playerid][pHungry] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่หิว");

		playerData[playerid][pHungry] += 40;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
	}
	else if (!strcmp(name, "Tomato Juice", true))
	{
	    if (playerData[playerid][pThirsty] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

		playerData[playerid][pThirsty] += 40;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังดื่ม {00FF00}%s", name);
	}

	//
	else if (!strcmp(name, "Shark Fin", true))
	{
	    if (playerData[playerid][pHungry] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่หิว");

		playerData[playerid][pHungry] += 50;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
	}
	else if (!strcmp(name, "Vegetable Juice", true))
	{
	    if (playerData[playerid][pThirsty] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

		playerData[playerid][pThirsty] += 50;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังดื่ม {00FF00}%s", name);
	}
	else if (!strcmp(name, "Seafood", true))
	{
	    if (playerData[playerid][pThirsty] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

	    if (playerData[playerid][pHungry] >= 100)
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่หิว");

		playerData[playerid][pThirsty] += 40;
		playerData[playerid][pHungry] += 40;
		Inventory_Remove(playerid, name);
	    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
	}
	//

	else if (!strcmp(name, "Toolbox", true))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);

	    if (!IsPlayerInAnyVehicle(playerid))
	        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

	    RepairVehicle(vehicleid);
	    SendClientMessage(playerid, COLOR_WHITE, "คุณได้ใช้เครื่องมือในการซ่อมรถสำเร็จ");
	    Inventory_Remove(playerid, "Toolbox", 1);
	}
	else if (!strcmp(name, "Driving License", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}เป็นแค่ใบอนุญาติขับรถเท่านั้น", name);
	}
	
	if (warJoin[playerid] == 1)
	{
		if (!strcmp(name, "Flower", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 14, 20000);
			//Inventory_Remove(playerid, "Flower", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Dildo", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 10, 20000);
			//Inventory_Remove(playerid, "Dildo", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Pool Cue", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 7, 20000);
			//Inventory_Remove(playerid, "Pool Cue", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Golf Club", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 2, 20000);
			//Inventory_Remove(playerid, "Golf Club", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Baseball Bat", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 5, 20000);
			//Inventory_Remove(playerid, "Baseball Bat", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Shovel", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 6, 20000);
			//Inventory_Remove(playerid, "Shovel", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Brass Knuckles", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 1, 20000);
			//Inventory_Remove(playerid, "Brass Knuckles", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Katana", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 8, 20000);
			//Inventory_Remove(playerid, "Katana", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Knife", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 4, 20000);
			//Inventory_Remove(playerid, "Knife", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "M4", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 31, 20000);
			//Inventory_Remove(playerid, "M4", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "MP5", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 29, 20000);
			//Inventory_Remove(playerid, "MP5", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
	}
	
	if (warJoin[playerid] == 0)
	{
		if (!strcmp(name, "Flower", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 14, 20000);
			//Inventory_Remove(playerid, "Flower", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Dildo", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 10, 20000);
			//Inventory_Remove(playerid, "Dildo", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Pool Cue", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 7, 20000);
			//Inventory_Remove(playerid, "Pool Cue", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Golf Club", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 2, 20000);
			//Inventory_Remove(playerid, "Golf Club", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Baseball Bat", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 5, 20000);
			//Inventory_Remove(playerid, "Baseball Bat", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Shovel", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 6, 20000);
			//Inventory_Remove(playerid, "Shovel", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Brass Knuckles", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 1, 20000);
			//Inventory_Remove(playerid, "Brass Knuckles", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Katana", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 8, 20000);
		//	Inventory_Remove(playerid, "Katana", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "Knife", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 4, 20000);
			//Inventory_Remove(playerid, "Knife", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "M4", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 31, 20000);
			//Inventory_Remove(playerid, "M4", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
		else if (!strcmp(name, "MP5", true))
		{
		    playerData[playerid][pTazer] = 1;
			GivePlayerWeaponEx(playerid, 29, 20000);
			//Inventory_Remove(playerid, "MP5", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
		}
	}
	
	//
	
	
	else if (!strcmp(name, "Cannabis", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Cocain", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Beef", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Chicken", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Hematite", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Rock Salt", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Coal Ore", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Uranium Ore", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Orange", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Apple", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Lemon", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Woods", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Hacksaw", true))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}ไปที่จุดตัดไม้และใช้งานได้เลย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Bait", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}ไปที่จุดตกปลาแต่จำเป็นต้องมีเบ็ดตกปลาและใช้งานผ่านเบ็ดตกปลาได้เลย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Grouper", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Salmon", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Stingray", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Shark", true))
	{
	    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Fishing Rod", true))
	{
		SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}ไปที่จุดตกปลาและใช้งานได้เลย {FFFF00}(/gps)", name);
	}
	else if (!strcmp(name, "Helmet 1", true))
	{
	    if (!playerData[playerid][pHelmetOn])
	    {
	        playerData[playerid][pHelmetOn] = true;
	        SendClientMessage(playerid, COLOR_WHITE, "คุณได้สวมหมวกกันน็อค");
	    	SetPlayerAttachedObject(playerid, 8, 18976, 2, 0.071999, 0.035999, 0.000000, 97.400009, 83.900024, -4.899995, 1.133001, 0.975000, 1.180003);
		}
		else
		{
		    playerData[playerid][pHelmetOn] = false;
		    SendClientMessage(playerid, COLOR_WHITE, "คุณได้ถอดหมวกกันน็อค");
		    RemovePlayerAttachedObject(playerid, 8);
		}
	}
	else if (!strcmp(name, "Helmet 2", true))
	{
	    if (!playerData[playerid][pHelmetOn])
	    {
	        playerData[playerid][pHelmetOn] = true;
	        SendClientMessage(playerid, COLOR_WHITE, "คุณได้สวมหมวกกันน็อค");
	    	SetPlayerAttachedObject(playerid, 8, 18979, 2, 0.071999, 0.035999, 0.000000, 97.400009, 83.900024, -4.899995, 1.133001, 0.975000, 1.180003);
		}
		else
		{
		    playerData[playerid][pHelmetOn] = false;
		    SendClientMessage(playerid, COLOR_WHITE, "คุณได้ถอดหมวกกันน็อค");
		    RemovePlayerAttachedObject(playerid, 8);
		}
	}
	else if (!strcmp(name, "Helmet 3", true))
	{
	    if (!playerData[playerid][pHelmetOn])
	    {
	        playerData[playerid][pHelmetOn] = true;
	        SendClientMessage(playerid, COLOR_WHITE, "คุณได้สวมหมวกกันน็อค");
	    	SetPlayerAttachedObject(playerid, 8, 18645, 2, 0.071999, 0.035999, 0.000000, 97.400009, 83.900024, -4.899995, 1.133001, 0.975000, 1.180003);
		}
		else
		{
		    playerData[playerid][pHelmetOn] = false;
		    SendClientMessage(playerid, COLOR_WHITE, "คุณได้ถอดหมวกกันน็อค");
		    RemovePlayerAttachedObject(playerid, 8);
		}
	}
	return 1;
}

forward OnPlayerClickItem(playerid, itemid,  name[]);
public OnPlayerClickItem(playerid, itemid,  name[])
{
	if (!strcmp(name, "Phone", true))
	{
		callcmd::phone(playerid, "\1");
	}
	else if (!strcmp(name, "Driving License", true))
	{
        Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	}
	else if (!strcmp(name, "Hacksaw", true))
	{
	    Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	}
	else if (!strcmp(name, "Fishing Rod", true))
	{
	    Dialog_Show(playerid, DIALOG_INVENTORYMENU1, DIALOG_STYLE_LIST, name, "ใช้\nทิ้ง", "เลือก", "ปิด");
	}
	else
	{
		Dialog_Show(playerid, DIALOG_INVENTORYMENU, DIALOG_STYLE_LIST, name, "ใช้\nให้\nทิ้ง", "เลือก", "ปิด");
	}
	playerData[playerid][pItemSelect] = itemid;
 	return 1;
}*/

/*forward OpenInventory(playerid);
public OpenInventory(playerid)
{
    if (playerData[playerid][IsLoggedIn] == false)
	    return 0;

	new
		string[4096],
		string2[4096],
		count,
		var[4096];

    for (new i = 0; i < playerData[playerid][pMaxItem]; i ++)
	{
 		if (invData[playerid][i][invExists])
		 {
   			format(string, sizeof(string), "%s\t{D0AEEB}({FFFFFF}%d{D0AEEB})\n", invData[playerid][i][invItem], invData[playerid][i][invQuantity]);
   			strcat(string2, string);
   			format(var, sizeof(var), "itemlist%d", count);
   			SetPVarInt(playerid, var, i);
   			count++;
		}
	}
	if (!count)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีไอเท็มอยู่ในตัวเลย");
		return 1;
	}
	playerData[playerid][pItemSelect] = 0;
	format(string, sizeof(string), "ชื่อ\tความจุ (%d/%d)\n%s", Inventory_Items(playerid), playerData[playerid][pMaxItem], string2);
	return Dialog_Show(playerid, DIALOG_INVENTORY, DIALOG_STYLE_TABLIST_HEADERS, "[กระเป๋า]", string, "เลือก", "ปิด");
}*/

//
/*forward toggleInventory(playerid, targetid);
public toggleInventory(playerid, targetid)
{
    if (playerData[playerid][IsLoggedIn] == false)
	    return 0;

	new
		string[512],
		string2[512],
		count,
		var[32];

    for (new i = 0; i < playerData[targetid][pMaxItem]; i ++)
	{
 		if (invData[targetid][i][invExists])
		 {
   			format(string, sizeof(string), "%s\t{D0AEEB}({FFFFFF}%d{D0AEEB})\n", invData[targetid][i][invItem], invData[targetid][i][invQuantity]);
   			strcat(string2, string);
   			format(var, sizeof(var), "itemlist%d", count);
   			SetPVarInt(targetid, var, i);
   			count++;
		}
	}
	if (!count)
	{
		SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นไม่มีของภายในตัว");
		return 1;
	}
	//playerData[playerid][pItemSelect] = 0;
	format(string, sizeof(string), "ชื่อ\tความจุ (%d/%d)\n%s", Inventory_Items(targetid), playerData[targetid][pMaxItem], string2);
	return Dialog_Show(playerid, ShowOnly, DIALOG_STYLE_TABLIST_HEADERS, "[กระเป๋า]", string, "เลือก", "ปิด");
}


Inventory_Clear(playerid)
{
	static
	    string[64];

	for (new i = 0; i < MAX_INVENTORY; i ++)
	{
	    if (invData[playerid][i][invExists])
	    {
	        invData[playerid][i][invExists] = 0;
	        invData[playerid][i][invQuantity] = 0;
		}
	}
	mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `inventory` WHERE `invOwner` = '%d'", playerData[playerid][pID]);
	return mysql_tquery(g_SQL, string);
}

Inventory_Set(playerid, const item[], amount)
{
	new itemid = Inventory_GetItemID(playerid, item);

	if (itemid == -1 && amount > 0)
	{
		Inventory_Add(playerid, item, amount);
	}
	else if (amount > 0 && itemid != -1)
	{
	    Inventory_SetQuantity(playerid, item, amount);
	}
	else if (amount < 1 && itemid != -1)
	{
	    Inventory_Remove(playerid, item, -1);
	}
	return 1;
}

Inventory_GetItemID(playerid, const item[])
{
	for (new i = 0; i < MAX_INVENTORY; i ++)
	{
	    if (!invData[playerid][i][invExists])
	        continue;

		if (!strcmp(invData[playerid][i][invItem], item)) return i;
	}
	return -1;
}

Inventory_GetFreeID(playerid)
{
	if (Inventory_Items(playerid) >= playerData[playerid][pMaxItem])
		return -1;

	for (new i = 0; i < MAX_INVENTORY; i ++)
	{
	    if (!invData[playerid][i][invExists])
	        return i;
	}
	return -1;
}

Inventory_Items(playerid)
{
    new count;

    for (new i = 0; i != MAX_INVENTORY; i ++) if (invData[playerid][i][invExists])
	{
        count++;
	}
	return count;
}

Inventory_Count(playerid, const item[])
{
	new itemid = Inventory_GetItemID(playerid, item);

	if (itemid != -1)
	    return invData[playerid][itemid][invQuantity];

	return 0;
}

Inventory_HasItem(playerid, const item[])
{
	return (Inventory_GetItemID(playerid, item) != -1);
}

Inventory_SetQuantity(playerid, const item[], quantity)
{
	new
	    itemid = Inventory_GetItemID(playerid, item),
	    string[128];

	if (itemid != -1)
	{
		mysql_format(g_SQL, string, sizeof(string), "UPDATE `inventory` SET `invQuantity` = %d WHERE `invOwner` = '%d' AND `invID` = '%d'", quantity, playerData[playerid][pID], invData[playerid][itemid][invID]);
	    mysql_tquery(g_SQL, string);

	    invData[playerid][itemid][invQuantity] = quantity;
	}
	return 1;
}

Inventory_Add(playerid, const item[], quantity = 1)
{
	new
		itemid = Inventory_GetItemID(playerid, item),
		string[128];

	if (itemid == -1)
	{
	    itemid = Inventory_GetFreeID(playerid);

	    if (itemid != -1)
	    {
	        invData[playerid][itemid][invExists] = true;
	        invData[playerid][itemid][invQuantity] = quantity;

	        format(invData[playerid][itemid][invItem], 32, item);

			mysql_format(g_SQL, string, sizeof(string), "INSERT INTO `inventory` (`invOwner`, `invItem`, `invQuantity`) VALUES ('%d', '%e', '%d')", playerData[playerid][pID], item, quantity);
			mysql_tquery(g_SQL, string, "OnInventoryAdd", "dd", playerid, itemid);

	        return itemid;
		}
		return -1;
	}
	else
	{
	    mysql_format(g_SQL, string, sizeof(string), "UPDATE `inventory` SET `invQuantity` = `invQuantity` + %d WHERE `invOwner` = '%d' AND `invID` = '%d'", quantity, playerData[playerid][pID], invData[playerid][itemid][invID]);
	    mysql_tquery(g_SQL, string);

	    invData[playerid][itemid][invQuantity] += quantity;
	}
	return itemid;
}

Inventory_Remove(playerid, const item[], quantity = 1)
{
	new
		itemid = Inventory_GetItemID(playerid, item),
		string[128];

	if (itemid != -1)
	{
	    if (invData[playerid][itemid][invQuantity] > 0)
	    {
	        invData[playerid][itemid][invQuantity] -= quantity;
		}
		if (quantity == -1 || invData[playerid][itemid][invQuantity] < 1)
		{
		    invData[playerid][itemid][invExists] = false;
		    invData[playerid][itemid][invQuantity] = 0;

		    mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `inventory` WHERE `invOwner` = '%d' AND `invID` = '%d'", playerData[playerid][pID], invData[playerid][itemid][invID]);
	        mysql_tquery(g_SQL, string);
		}
		else if (quantity != -1 && invData[playerid][itemid][invQuantity] > 0)
		{
			mysql_format(g_SQL, string, sizeof(string), "UPDATE `inventory` SET `invQuantity` = `invQuantity` - %d WHERE `invOwner` = '%d' AND `invID` = '%d'", quantity, playerData[playerid][pID], invData[playerid][itemid][invID]);
            mysql_tquery(g_SQL, string);
		}
		return 1;
	}
	return 0;
}

forward Inventory_Load(playerid);
public Inventory_Load(playerid)
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows && i < MAX_INVENTORY; i ++)
	{
	    invData[playerid][i][invExists] = true;
	    cache_get_value_name_int(i, "invID", invData[playerid][i][invID]);
        cache_get_value_name_int(i, "invQuantity", invData[playerid][i][invQuantity]);

		cache_get_value_name(i, "invItem", invData[playerid][i][invItem], 32);
	}
	return 1;
}*/

forward Contact_Load(playerid);
public Contact_Load(playerid)
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows && i < MAX_CONTACTS; i ++)
	{
		cache_get_value_name(i, "contactName", contactData[playerid][i][contactName], 32);

		contactData[playerid][i][contactExists] = true;
	    cache_get_value_name_int(i, "contactID", contactData[playerid][i][contactID]);
	    cache_get_value_name_int(i, "contactNumber", contactData[playerid][i][contactNumber]);
	}
	return 1;
}

GetNumberOwner(number)
{
	foreach (new i : Player) if (playerData[i][pPhone] == number && Inventory_HasItem(i, "Phone"))
	{
		return i;
	}
	return INVALID_PLAYER_ID;
}

ShowContacts(playerid)
{
	new
	    string[32 * MAX_CONTACTS],
		count = 0;

	string = "เพิ่มเบอร์\n";

	for (new i = 0; i != MAX_CONTACTS; i ++) if (contactData[playerid][i][contactExists])
	{
	    format(string, sizeof(string), "%s%s - #%d\n", string, contactData[playerid][i][contactName], contactData[playerid][i][contactNumber]);

		ListedContacts[playerid][count++] = i;
	}
	Dialog_Show(playerid, DIALOG_CONTACTS, DIALOG_STYLE_LIST, "[รายชื่อผู้ติดต่อ]", string, "เลือก", "กลับ");
	return 1;
}

CancelCall(playerid)
{
    if (playerData[playerid][pCallLine] != INVALID_PLAYER_ID)
	{
 		playerData[playerData[playerid][pCallLine]][pCallLine] = INVALID_PLAYER_ID;
   		playerData[playerData[playerid][pCallLine]][pIncomingCall] = 0;

		playerData[playerid][pCallLine] = INVALID_PLAYER_ID;
		playerData[playerid][pIncomingCall] = 0;
	}
	return 1;
}

PlayerPlaySoundEx(playerid, sound)
{
	new
	    Float:x,
	    Float:y,
	    Float:z;

	GetPlayerPos(playerid, x, y, z);

	foreach (new i : Player) if (IsPlayerInRangeOfPoint(i, 20.0, x, y, z))
	{
	    PlayerPlaySound(i, sound, x, y, z);
	}
	return 1;
}

IsPlayerOnPhone(playerid)
{
	if (playerData[playerid][pEmergency] > 0 || playerData[playerid][pCallLine] != INVALID_PLAYER_ID)
	    return 1;

	return 0;
}


public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if (playerData[playerid][pAdmin] >= 6)
	{
    	SetPlayerPosFindZ(playerid, fX, fY, fZ+5);
	}
	return 1;
}


CMD:stats(playerid,params[])
{
    static const aGender[3][10] = {"แก้ไข", "ชาย", "หญิง"};

	SendClientMessageEx(playerid, COLOR_GREEN, "|---------- {FFFFFF}(%d)%s %s{00FF00} ----------|", playerid, GetPlayerNameEx(playerid), ReturnDateEx());
	SendClientMessageEx(playerid, COLOR_WHITE, "เพศ: {FFFF00}[%s] {FFFFFF}เงินในตัว: {FFFF00}[%s] {FFFFFF}เงินแดง: {FFFF00}[%s] {FFFFFF}วันเดือนปีเกิด: {FFFF00}[%s]", aGender[playerData[playerid][pGender]], FormatMoney(GetPlayerMoneyEx(playerid)), FormatMoney(GetPlayerRedMoney(playerid)), playerData[playerid][pBirthday]);
	SendClientMessageEx(playerid, COLOR_WHITE, "ฆ่า: {FFFF00}[%s] {FFFFFF}ตาย: {FFFF00}[%s] {FFFFFF}น้ำ: {FFFF00}[%.3f] {FFFFFF}อาหาร: {FFFF00}[%.3f]", FormatNumber(playerData[playerid][pKills]), FormatNumber(playerData[playerid][pDeaths]), playerData[playerid][pThirsty], playerData[playerid][pHungry]);
    SendClientMessageEx(playerid, COLOR_WHITE, "เลเวล: {FFFF00}[%d] {FFFFFF}ค่าประสบการณ์: {FFFF00}[%d/%d] {FFFFFF}ชั่วโมงที่เล่น: {FFFF00}[%d] {FFFFFF}ครบชั่วโมง: {FFFF00}[%d/60]", GetPlayerLevel(playerid), GetPlayerExp(playerid), GetPlayerRequiredExp(playerid), playerData[playerid][pHours], playerData[playerid][pMinutes]);
	SendClientMessageEx(playerid, COLOR_WHITE, "วันที่ลงทะเบียน: {FFFF00}[%s]", playerData[playerid][pRegisterDate]);
	SendClientMessageEx(playerid, COLOR_WHITE, "เงินฝากในธนาคาร : {FFFF00}[$%s]", FormatNumber(playerData[playerid][pBankMoney]));
	SendClientMessageEx(playerid, COLOR_YELLOW, "สกิลการคราฟอาวุธ:[%d] | Exp ของสกิลการคราฟอาวุธ:[%d/%d]", playerData[playerid][pSkillCraft], playerData[playerid][pExpCraft], GetPlayerRequiredExpCraft(playerid));

	return 1;
}

CMD:sattach(playerid, params[])
{
	new user,slot,slot2;
	if(sscanf(params, "ddd", user, slot, slot2))
		SendClientMessage(playerid, COLOR_GREY, "/sattach [slot] [object] [bone]");

	if(playerData[playerid][pAdmin] >= 6)
	{
        SetPlayerAttachedObject(playerid, user, slot, slot2);
	}
	return 1;
}

CMD:eattach(playerid, params[])
{
	new user;
	if(sscanf(params, "d", user))
		SendClientMessage(playerid, COLOR_GREY, "/eattach [slot]");

	if(playerData[playerid][pAdmin] >= 6)
	{
	    SetPVarInt(playerid, "ATTACH", 1);
        EditAttachedObject(playerid, user);
	}
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(response == EDIT_RESPONSE_FINAL)
    {
	   	if(GetPVarInt(playerid, "ATTACH") == 1)
	   	{
   			SetPVarInt(playerid, "ATTACH", 0);
        	SetPlayerAttachedObject(playerid, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ);
			printf("%d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f, %f", index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ);

			SendClientMessageEx(playerid, COLOR_GREEN, "%d Attached object ถูกบันทึกแล้ว",modelid);
		}
		if(EditClothing[playerid] == 1)
		{
			if(response)
			{
			    new str[1024];

			    format(str,sizeof(str),"UPDATE clothing SET x = '%f', y = '%f', z = '%f', rx = '%f', ry = '%f', rz = '%f', scalex = '%f', scaley = '%f', scalez = '%f' WHERE id = '%d' AND owner = '%d' LIMIT 1",
			    fOffsetX,
			    fOffsetY,
			    fOffsetZ,
				fRotX,
				fRotY,
				fRotZ,
				fScaleX,
				fScaleY,
				fScaleZ,
				ClothingData[playerid][cl_selected[playerid]][cl_sid],
				playerData[playerid][pID]);
				mysql_query(g_SQL, str);

				ClothingData[playerid][cl_selected[playerid]][cl_x] = fOffsetX;
				ClothingData[playerid][cl_selected[playerid]][cl_y] = fOffsetY;
				ClothingData[playerid][cl_selected[playerid]][cl_z] = fOffsetZ;
				ClothingData[playerid][cl_selected[playerid]][cl_rx] = fRotX;
				ClothingData[playerid][cl_selected[playerid]][cl_ry] = fRotY;
				ClothingData[playerid][cl_selected[playerid]][cl_rz] = fRotZ;
				ClothingData[playerid][cl_selected[playerid]][cl_scalex] = fScaleX;
				ClothingData[playerid][cl_selected[playerid]][cl_scaley] = fScaleY;
				ClothingData[playerid][cl_selected[playerid]][cl_scalez] = fScaleZ;

			}
			ClearAnimations(playerid);

			RemovePlayerClothing(playerid);

			GameTextForPlayer(playerid, "~g~UPDATED YOUR ITEM!~n~~w~Use ~y~/clothing ~w~to put it back on.", 3000, 4);

			EditClothing[playerid] = 0;
		}


		if(EditClothing[playerid] == 2)
		{
			if(response)
			{//cl_SportsData[cl_buyingslot[playerid]][e_model]
			    new str[1024], money, name[32];

				switch(cl_buying[playerid])
				{
				    case BUYSPORTS: for(new i=0;i!=sizeof(cl_SportsData);++i) if(cl_SportsData[i][e_model] == modelid) format(name, 32, cl_SportsData[i][e_name]), money = cl_SportsData[i][e_price];
	                case BUYZIP: for(new i=0;i!=sizeof(cl_ZipData);++i) if(cl_ZipData[i][e_model] == modelid) format(name, 32, cl_ZipData[i][e_name]), money = cl_ZipData[i][e_price];
				}

				if(!strcmp(name, "Holster", true))
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมีใบอนุญาตในการพกอาวุธเพื่อจะซื้อไอเท็มชิ้นนี้");
					RemovePlayerClothing(playerid);
					cl_ResetDressPlayer(playerid);

					cl_buying[playerid]=0; cl_buyingpslot[playerid]=-1;
					ClearAnimations(playerid);
					EditClothing[playerid] = 0;
					return 1;
				}

				if (cl_buying[playerid] != BUYSPECIAL)
				{
					if (GetPlayerMoneyEx(playerid) >= money)
					{
						new id = -1;
						if((id = AddPlayerClothing(playerid,modelid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,boneid,index,fScaleX,fScaleY,fScaleZ,0,0,name)) != -1)
						{
							format(str,sizeof(str),"INSERT INTO `clothing` (`object`, `x`, `y`, `z`, `rx`, `ry`, `rz`, `bone`, `slot`, `owner`, `equip`, `scalex`, `scaley`, `scalez`, `name`) VALUES ('%d', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d', '%d', '0', '%f', '%f', '%f', '%s')",
							modelid,
							fOffsetX,
							fOffsetY,
							fOffsetZ,
							fRotX,
							fRotY,
							fRotZ,
							boneid,
							index,
							playerData[playerid][pID],
							fScaleX,
							fScaleY,
							fScaleZ,
							name);
							mysql_tquery(g_SQL, str, "OnQueryBuyClothing", "dd", playerid, id);

							GivePlayerMoneyEx(playerid, -money);
							SendClientMessage(playerid, COLOR_WHITE, "ใช้ "EMBED_YELLOW"/clothing"EMBED_WHITE" เพื่อแก้ไขไอเท็มเครื่องแต่งกายของคุณ");

							GameTextForPlayer(playerid, "~g~Enjoy your purchase!~n~~w~Use ~y~/clothing ~w~to edit your clothing items.", 3000, 4);
						}
						else {
							SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่สามารถซื้อได้มากกว่านี้แล้ว");
						}
					}
					else SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่สามารถจ่ายมันได้ขออถัยด้วย");
				}
			}
			RemovePlayerClothing(playerid);
	        cl_ResetDressPlayer(playerid);

			cl_buying[playerid]=0; cl_buyingpslot[playerid]=-1;
			ClearAnimations(playerid);
		    EditClothing[playerid] = 0;
		}
		return 1;
	}
	return 1;
}

CreateVehicles()
{
	//NewbieCar[0] = AddStaticVehicle(481, 1674.1898, -2310.3252, 13.1100, 0.0000, -1, -1);

}

CreateMap()
{
	TuningGate = CreateDynamicObject(19872, 1595.772949, -2166.462646, 10.737877, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningGate, 0, 2669, "cj_chris", "cj_metalplate2", 0x00000000);


	new TuningShop[78];
	TuningShop[0] = CreateDynamicObject(11317, 1573.328979, -2164.786376, 17.798563, 0.000080, 0.000000, 89.999717, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[0], 2, 18901, "matclothes", "beretred", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[0], 3, 18646, "matcolours", "grey-93-percent", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[0], 4, 18646, "matcolours", "red-3", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[0], 5, 18646, "matcolours", "grey-40-percent", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[0], 6, 18646, "matcolours", "grey", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[0], 7, 18646, "matcolours", "grey-90-percent", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[0], 8, 18646, "matcolours", "grey-20-percent", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[0], 9, 18646, "matcolours", "grey-60-percent", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[0], 10, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[0], 11, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[0], 12, 10850, "bakerybit2_sfse", "GB_truckdepot29", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[0], 13, 18646, "matcolours", "grey-93-percent", 0x00000000);
	TuningShop[1] = CreateDynamicObject(19912, 1587.999755, -2157.860839, 13.866855, 0.000000, 0.000073, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[1], 0, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[1], 1, 19325, "lsmall_shops", "lsmall_window01", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[1], 2, 19297, "matlights", "invisible", 0x00000000);
	TuningShop[2] = CreateDynamicObject(19912, 1557.039062, -2184.041259, 13.866854, 0.000000, 0.000072, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[2], 0, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[2], 1, 19325, "lsmall_shops", "lsmall_window01", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[2], 2, 19297, "matlights", "invisible", 0x00000000);
	TuningShop[3] = CreateDynamicObject(19912, 1574.899414, -2184.041259, 13.866854, 0.000000, 0.000072, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[3], 0, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[3], 1, 19325, "lsmall_shops", "lsmall_window01", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[3], 2, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[3], 7, 10765, "airportgnd_sfse", "crackedgroundb", 0x00000000);
	TuningShop[4] = CreateDynamicObject(19912, 1602.577026, -2170.591064, 13.866847, -0.000050, 0.000022, -89.999839, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[4], 0, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[4], 1, 19325, "lsmall_shops", "lsmall_window01", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[4], 2, 19297, "matlights", "invisible", 0x00000000);
	TuningShop[5] = CreateDynamicObject(19912, 1601.189331, -2157.860839, 13.866855, 0.000000, 0.000073, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[5], 0, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[5], 1, 19325, "lsmall_shops", "lsmall_window01", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[5], 2, 19297, "matlights", "invisible", 0x00000000);
	TuningShop[6] = CreateDynamicObject(19912, 1602.577026, -2183.551269, 13.866847, -0.000050, 0.000022, -89.999839, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[6], 0, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[6], 1, 19325, "lsmall_shops", "lsmall_window01", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[6], 2, 19297, "matlights", "invisible", 0x00000000);
	TuningShop[7] = CreateDynamicObject(19912, 1560.148803, -2184.041259, 16.796861, 0.000000, -89.999923, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[7], 0, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[7], 1, 19325, "lsmall_shops", "lsmall_window01", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[7], 2, 19297, "matlights", "invisible", 0x00000000);
	TuningShop[8] = CreateDynamicObject(18981, 1564.651367, -2170.810546, 12.077868, 0.000000, -89.999946, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[8], 0, 14846, "genintintpoliceb", "p_floor3", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[8], 13, 18901, "matclothes", "bowlerblue", 0x00000000);
	TuningShop[9] = CreateDynamicObject(18981, 1589.650512, -2170.810546, 12.077868, 0.000000, -89.999946, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[9], 0, 14846, "genintintpoliceb", "p_floor3", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[9], 13, 18901, "matclothes", "bowlerblue", 0x00000000);
	TuningShop[10] = CreateDynamicObject(18981, 1558.000976, -2170.810546, 12.087864, 0.000000, -89.999946, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[10], 0, 14846, "genintintpoliceb", "p_floor3", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[10], 13, 18901, "matclothes", "bowlerblue", 0x00000000);
	TuningShop[11] = CreateDynamicObject(18980, 1563.644775, -2167.736816, 6.404767, 0.000000, 32.900024, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[11], 0, 18646, "matcolours", "red", 0x00000000);
	TuningShop[12] = CreateDynamicObject(18980, 1545.527099, -2167.736816, 6.382367, 0.000000, 32.900024, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[12], 0, 18646, "matcolours", "red", 0x00000000);
	TuningShop[13] = CreateDynamicObject(2960, 1585.377807, -2166.541748, 13.638527, -0.000022, 90.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[13], 0, 18901, "matclothes", "beretred", 0x00000000);
	TuningShop[14] = CreateDynamicObject(9191, 1588.533081, -2184.339355, 25.316907, 0.000022, -90.000000, 89.999931, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[14], 1, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterialText(TuningShop[14], 0, "PIMP MY RIDE", 120, "Ariel", 60, 1, 0xFFCC0000, 0x00000000, 0);
	TuningShop[15] = CreateDynamicObject(9191, 1589.072875, -2188.038818, 25.316907, -0.000022, -90.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[15], 1, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterialText(TuningShop[15], 0, "PIMP MY RIDE", 120, "Ariel", 60, 1, 0xFFCC0000, 0x00000000, 0);
	TuningShop[16] = CreateDynamicObject(2960, 1579.377807, -2166.541748, 13.638527, -0.000022, 90.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[16], 0, 18901, "matclothes", "beretred", 0x00000000);
	TuningShop[17] = CreateDynamicObject(939, 1588.859497, -2163.502197, 15.017869, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[17], 0, 18646, "matcolours", "grey-40-percent", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[17], 1, 18646, "matcolours", "grey-93-percent", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[17], 3, 18901, "matclothes", "beretred", 0x00000000);
	TuningShop[18] = CreateDynamicObject(939, 1588.859497, -2170.451904, 15.017869, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[18], 0, 18646, "matcolours", "grey-40-percent", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[18], 1, 18646, "matcolours", "grey-93-percent", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[18], 2, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[18], 3, 18901, "matclothes", "beretred", 0x00000000);
	TuningShop[19] = CreateDynamicObject(18980, 1544.302490, -2143.127929, 4.653812, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[19], 0, 18646, "matcolours", "grey-80-percent", 0x00000000);
	TuningShop[20] = CreateDynamicObject(939, 1575.299804, -2170.451904, 15.017869, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[20], 0, 18646, "matcolours", "grey-40-percent", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[20], 1, 18646, "matcolours", "grey-93-percent", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[20], 2, 19297, "matlights", "invisible", 0x00000000);
	SetDynamicObjectMaterial(TuningShop[20], 3, 18901, "matclothes", "beretred", 0x00000000);
	TuningShop[21] = CreateDynamicObject(19903, 1586.346435, -2161.694091, 12.557873, 0.000000, 0.000000, -141.700027, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[21], 1, 18646, "matcolours", "red", 0x00000000);
	TuningShop[22] = CreateDynamicObject(19903, 1596.203735, -2159.799072, 12.557873, 0.000000, 0.000000, -92.000038, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[22], 1, 18646, "matcolours", "red", 0x00000000);
	TuningShop[23] = CreateDynamicObject(19872, 1582.292480, -2166.462646, 10.737878, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[23], 0, 2669, "cj_chris", "cj_metalplate2", 0x00000000);
	TuningShop[24] = CreateDynamicObject(14724, 1581.750244, -2164.218261, 9.737870, 0.000000, 0.000000, -25.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[24], 0, 2627, "genintint_gym", "bench_test2b", 0x00000000);
	TuningShop[25] = CreateDynamicObject(14724, 1585.477172, -2163.109863, 9.737870, 0.000000, 0.000000, -25.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[25], 0, 2627, "genintint_gym", "bench_test2b", 0x00000000);
	TuningShop[26] = CreateDynamicObject(14724, 1579.236816, -2163.156005, 9.737870, 0.000000, 0.000000, 25.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[26], 0, 2627, "genintint_gym", "bench_test2b", 0x00000000);
	TuningShop[27] = CreateDynamicObject(14724, 1582.950073, -2164.260742, 9.737870, 0.000000, 0.000000, 25.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[27], 0, 2627, "genintint_gym", "bench_test2b", 0x00000000);
	TuningShop[28] = CreateDynamicObject(2960, 1598.858276, -2166.541748, 13.638526, -0.000029, 90.000000, -89.999908, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[28], 0, 18901, "matclothes", "beretred", 0x00000000);
	TuningShop[29] = CreateDynamicObject(2960, 1592.858276, -2166.541748, 13.638526, -0.000029, 90.000000, -89.999908, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[29], 0, 18901, "matclothes", "beretred", 0x00000000);
	TuningShop[31] = CreateDynamicObject(14724, 1595.230712, -2164.218261, 9.737870, -0.000003, 0.000006, -24.999996, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[31], 0, 2627, "genintint_gym", "bench_test2b", 0x00000000);
	TuningShop[32] = CreateDynamicObject(14724, 1598.957641, -2163.109863, 9.737870, -0.000003, 0.000006, -24.999996, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[32], 0, 2627, "genintint_gym", "bench_test2b", 0x00000000);
	TuningShop[33] = CreateDynamicObject(14724, 1592.717285, -2163.156005, 9.737870, 0.000003, 0.000006, 24.999996, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[33], 0, 2627, "genintint_gym", "bench_test2b", 0x00000000);
	TuningShop[34] = CreateDynamicObject(14724, 1596.430541, -2164.260742, 9.737870, 0.000003, 0.000006, 24.999996, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(TuningShop[34], 0, 2627, "genintint_gym", "bench_test2b", 0x00000000);
	TuningShop[35] = CreateDynamicObject(1175, 1574.848754, -2168.370849, 12.997873, 90.000000, -62.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	TuningShop[36] = CreateDynamicObject(1157, 1588.400268, -2170.585693, 13.386030, -0.000022, 0.000004, -74.999992, -1, -1, -1, 300.00, 300.00);
	TuningShop[37] = CreateDynamicObject(1893, 1595.668945, -2164.022949, 16.827844, -0.000029, 0.000000, -89.999908, -1, -1, -1, 300.00, 300.00);
	TuningShop[38] = CreateDynamicObject(1893, 1582.270263, -2164.022949, 16.827844, -0.000029, 0.000000, -89.999908, -1, -1, -1, 300.00, 300.00);
	TuningShop[39] = CreateDynamicObject(1893, 1582.270263, -2174.693603, 16.827844, -0.000029, 0.000000, -89.999908, -1, -1, -1, 300.00, 300.00);
	TuningShop[40] = CreateDynamicObject(1074, 1552.915161, -2167.745361, 14.817863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[41] = CreateDynamicObject(1097, 1554.915161, -2167.745361, 14.817863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[42] = CreateDynamicObject(1075, 1553.915161, -2167.745361, 13.637863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[43] = CreateDynamicObject(1080, 1555.915161, -2167.745361, 13.637863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[44] = CreateDynamicObject(1073, 1551.915161, -2167.745361, 13.637863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[45] = CreateDynamicObject(1082, 1557.915161, -2167.745361, 13.637863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[46] = CreateDynamicObject(1085, 1559.915161, -2167.745361, 13.637863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[47] = CreateDynamicObject(1098, 1561.915161, -2167.745361, 13.637863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[48] = CreateDynamicObject(1079, 1556.915161, -2167.745361, 14.817863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[49] = CreateDynamicObject(1096, 1558.915161, -2167.745361, 14.817863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[50] = CreateDynamicObject(1081, 1560.915161, -2167.745361, 14.817863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[51] = CreateDynamicObject(1076, 1562.915161, -2167.745361, 14.817863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[52] = CreateDynamicObject(1078, 1563.915161, -2167.745361, 13.637863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[53] = CreateDynamicObject(1084, 1565.915161, -2167.745361, 13.637863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[54] = CreateDynamicObject(1083, 1564.915161, -2167.745361, 14.817863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[55] = CreateDynamicObject(1077, 1566.915161, -2167.745361, 14.817863, -0.000022, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[56] = CreateDynamicObject(1893, 1595.668945, -2174.693603, 16.827844, -0.000029, 0.000000, -89.999908, -1, -1, -1, 300.00, 300.00);
	TuningShop[57] = CreateDynamicObject(1893, 1569.419433, -2174.693603, 16.827844, -0.000029, 0.000000, -89.999908, -1, -1, -1, 300.00, 300.00);
	TuningShop[58] = CreateDynamicObject(1893, 1561.419433, -2174.693603, 16.827844, -0.000029, 0.000000, -89.999908, -1, -1, -1, 300.00, 300.00);
	TuningShop[59] = CreateDynamicObject(1893, 1553.419433, -2174.693603, 16.827844, -0.000029, 0.000000, -89.999908, -1, -1, -1, 300.00, 300.00);
	TuningShop[60] = CreateDynamicObject(19899, 1600.539794, -2172.298583, 12.578522, 0.000000, 0.000029, 179.999893, -1, -1, -1, 300.00, 300.00);
	TuningShop[61] = CreateDynamicObject(19815, 1601.011474, -2175.325683, 14.578530, 0.000029, 0.000000, -90.000061, -1, -1, -1, 300.00, 300.00);
	TuningShop[62] = CreateDynamicObject(19379, 1469.399414, -1754.000000, 3284.199951, 0.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	TuningShop[63] = CreateDynamicObject(19899, 1600.539794, -2175.329101, 13.838519, 0.000000, 179.999984, -0.000167, -1, -1, -1, 300.00, 300.00);
	TuningShop[64] = CreateDynamicObject(1010, 1576.965698, -2162.554443, 13.827869, -0.000018, 0.000011, -60.899967, -1, -1, -1, 300.00, 300.00);
	TuningShop[65] = CreateDynamicObject(1073, 1590.047729, -2173.117675, 13.047862, -0.000012, 0.000018, -36.999988, -1, -1, -1, 300.00, 300.00);
	TuningShop[66] = CreateDynamicObject(19379, 1479.000000, -1754.000000, 3284.199951, 0.000000, 90.000000, 90.000000, -1, -1, -1, 300.00, 300.00);
	TuningShop[67] = CreateDynamicObject(19899, 1592.691528, -2160.069091, 13.838519, 0.000014, 179.999984, 107.399948, -1, -1, -1, 300.00, 300.00);
	TuningShop[68] = CreateDynamicObject(1536, 1475.699951, -1748.863037, 3284.300048, 0.000000, 0.000000, 180.000000, -1, -1, -1, 300.00, 300.00);
	TuningShop[69] = CreateDynamicObject(1536, 1472.699218, -1748.899414, 3284.300048, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	TuningShop[70] = CreateDynamicObject(19899, 1577.051147, -2165.296630, 12.578522, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	TuningShop[71] = CreateDynamicObject(19815, 1576.579467, -2162.269531, 14.578530, 0.000022, 0.000000, 89.999931, -1, -1, -1, 300.00, 300.00);
	TuningShop[72] = CreateDynamicObject(19899, 1577.051147, -2162.266113, 13.838519, 0.000000, 179.999984, 179.999893, -1, -1, -1, 300.00, 300.00);
	TuningShop[73] = CreateDynamicObject(19900, 1586.062988, -2169.098144, 12.547871, 0.000000, 0.000000, -26.200000, -1, -1, -1, 300.00, 300.00);
	TuningShop[74] = CreateDynamicObject(19921, 1575.802124, -2168.976318, 14.647878, 0.000000, 0.000000, 33.100002, -1, -1, -1, 300.00, 300.00);
	TuningShop[75] = CreateDynamicObject(19917, 1575.411621, -2172.258544, 12.867877, 0.000000, 0.000000, -42.400012, -1, -1, -1, 300.00, 300.00);
	TuningShop[76] = CreateDynamicObject(1148, 1588.118652, -2168.476318, 13.417879, 0.000000, 0.000000, 126.099975, -1, -1, -1, 300.00, 300.00);
	TuningShop[77] = CreateDynamicObject(1014, 1588.815063, -2171.586914, 14.537877, 0.000000, 0.000000, -41.700004, -1, -1, -1, 300.00, 300.00);

	//Objects////////////////////////////////////////////////////////////////////////////////////////////////////////

	//เซเว่น
	new tmpobjid;
	tmpobjid = CreateObject(2655, 1928.328491, -1774.801269, 13.703713, 0.000022, 90.000000, 89.999931, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(1897, 1928.311889, -1775.429321, 13.616864, 0.000000, -0.000022, 179.999862, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(1897, 1928.291870, -1775.702148, 13.616864, 0.000000, 0.000022, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19426, 1928.289550, -1773.655517, 14.236889, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(1897, 1928.291870, -1776.570190, 13.616864, 0.000000, -0.000022, 179.999862, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19466, 1928.307739, -1774.588256, 13.566872, 89.999992, 450.000000, -89.999969, 300.00);
	SetObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateObject(18880, 1928.294067, -1772.720947, 15.976885, 0.000000, 180.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19325, 1928.305908, -1769.516845, 13.912822, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0xFFFFFFFF);
	tmpobjid = CreateObject(19466, 1928.307739, -1776.538330, 13.566872, 89.999992, 450.000000, -89.999969, 300.00);
	SetObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0x00000000);
	tmpobjid = CreateObject(2662, 1928.338378, -1775.009887, 13.676882, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterialText(tmpobjid, "MARKET", 0, 130, "Arial", 60, 1, 0xFFFFFFFF, 0x00000000, 1);
	tmpobjid = CreateObject(1897, 1928.271850, -1774.591186, 13.616864, 0.000000, 0.000022, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(2655, 1928.328491, -1776.391357, 13.703713, 0.000022, 90.000000, 89.999931, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(19426, 1928.289550, -1777.505737, 14.236888, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(18880, 1928.294067, -1778.422485, 15.976884, 0.000000, 180.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19325, 1928.305908, -1781.558105, 13.912821, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0xFFFFFFFF);
	tmpobjid = CreateObject(2662, 1928.338378, -1776.150634, 13.676882, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterialText(tmpobjid, "SUPER", 0, 130, "Arial", 60, 1, 0xFFFFFFFF, 0x00000000, 1);
	tmpobjid = CreateObject(2655, 1928.287719, -1774.801269, 13.703713, 0.000022, 90.000000, 269.999938, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2655, 1928.285400, -1776.381347, 13.703713, 0.000022, 90.000000, 269.999938, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(18880, 1928.294067, -1766.250366, 15.976885, 0.000000, 180.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19325, 1924.875976, -1766.215209, 13.912822, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0xFFFFFFFF);
	tmpobjid = CreateObject(19353, 1920.081909, -1766.263671, 14.249073, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19353, 1916.902099, -1766.263671, 14.249073, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19445, 1914.304199, -1776.594482, 14.232809, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19426, 1915.039794, -1771.863891, 14.236887, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19376, 1923.044799, -1780.135253, 12.496848, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 18081, "cj_barb", "ab_marble_checks", 0xFFFFFFFF);
	tmpobjid = CreateObject(19376, 1923.044799, -1771.016357, 12.496848, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 18081, "cj_barb", "ab_marble_checks", 0xFFFFFFFF);
	tmpobjid = CreateObject(19445, 1916.045043, -1780.125000, 12.492811, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 18081, "cj_barb", "ab_marble_checks", 0xFFFFFFFF);
	tmpobjid = CreateObject(19445, 1916.045043, -1771.025756, 12.492811, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 18081, "cj_barb", "ab_marble_checks", 0xFFFFFFFF);
	tmpobjid = CreateObject(19353, 1915.241699, -1767.783447, 14.249073, 0.000000, 0.000000, 180.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19353, 1915.241699, -1770.294921, 14.249073, 0.000000, 0.000000, 180.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19445, 1919.135253, -1784.934326, 14.232809, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(18880, 1928.294067, -1784.932983, 15.976884, 0.000000, 180.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19089, 1928.301025, -1769.957031, 15.973294, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19172, 1928.300537, -1767.714477, 13.390835, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19172, 1928.300537, -1771.325317, 13.390835, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19089, 1928.301025, -1769.086181, 15.973294, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(1897, 1928.271850, -1775.579467, 14.626874, 90.000000, 89.999977, 269.999877, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(1897, 1928.271850, -1775.579467, 12.466865, 90.000000, 89.999977, 269.999877, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19089, 1928.301025, -1782.131347, 15.973294, 0.000000, 0.000007, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19172, 1928.300537, -1779.888793, 13.390835, 0.000007, 0.000000, 89.999977, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19172, 1928.300537, -1783.499633, 13.390835, 0.000007, 0.000000, 89.999977, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19089, 1928.301025, -1781.260498, 15.973294, 0.000000, 0.000007, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19089, 1925.455688, -1766.222778, 15.973294, 0.000022, 0.000014, 89.999900, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19172, 1923.213134, -1766.223266, 13.390835, 0.000014, -0.000022, 179.999786, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19172, 1926.823974, -1766.223266, 13.390835, 0.000014, -0.000022, 179.999786, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19089, 1924.584838, -1766.222778, 15.973294, 0.000022, 0.000014, 89.999900, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(18880, 1921.784301, -1766.250366, 15.976884, 0.000000, 180.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 2, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19866, 1927.948730, -1769.093872, 16.070556, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1926.208374, -1766.603759, 16.070556, 0.000000, 90.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1928.319091, -1768.613403, 15.960554, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1925.718383, -1766.211914, 15.960554, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1927.948730, -1774.093017, 16.070556, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1927.948730, -1779.092285, 16.070556, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1927.948730, -1782.863159, 16.070556, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19325, 1924.976074, -1784.969116, 13.912820, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0xFFFFFFFF);
	tmpobjid = CreateObject(19325, 1914.295776, -1781.667968, 13.912820, 0.000000, 0.000000, 180.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0xFFFFFFFF);
	tmpobjid = CreateObject(19172, 1926.190551, -1784.971069, 13.390834, 0.000007, 0.000000, 179.999969, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(18880, 1924.063232, -1784.932983, 15.976883, 0.000000, 180.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 2, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(18880, 1914.303344, -1784.932983, 15.976883, 0.000000, 180.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 2, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(18880, 1914.303344, -1781.502197, 15.976883, 0.000000, 180.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 2, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19089, 1927.540649, -1784.970458, 15.973294, 0.000000, 0.000007, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19089, 1924.840087, -1784.970458, 15.973294, 0.000000, 0.000007, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(2662, 1928.333251, -1781.673217, 13.385739, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1928.273193, -1781.673217, 13.385739, 0.000000, 0.000000, 270.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1928.333251, -1769.461914, 13.385739, 0.000007, 0.000000, 89.999977, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1928.273193, -1769.461914, 13.385739, -0.000007, 0.000000, -89.999977, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1925.012207, -1766.191040, 13.385739, 0.000014, -0.000014, 179.999832, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1925.012207, -1766.251098, 13.385739, -0.000014, 0.000014, 0.000014, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1923.991210, -1784.942382, 13.385739, 0.000014, -0.000029, 179.999740, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1923.991210, -1785.002441, 13.385739, -0.000014, 0.000029, 0.000014, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1927.321533, -1784.942382, 13.385739, 0.000014, -0.000037, 179.999694, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1927.321533, -1785.002441, 13.385739, -0.000014, 0.000037, 0.000014, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(19172, 1914.298217, -1783.215454, 13.390834, -0.000007, -0.000007, 89.999969, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19089, 1914.298828, -1784.565551, 15.973294, 0.000014, 0.000014, -90.000045, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19089, 1914.298828, -1781.864990, 15.973294, 0.000014, 0.000014, -90.000045, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(2662, 1914.326904, -1781.016113, 13.385739, 0.000000, -0.000037, 89.999740, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1914.266845, -1781.016113, 13.385739, 0.000000, 0.000037, -90.000030, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1914.326904, -1784.046508, 13.385739, 0.000007, -0.000045, 89.999671, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(2662, 1914.266845, -1784.046508, 13.385739, -0.000007, 0.000045, -90.000007, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19655, "mattubes", "greendirt1", 0x00000000);
	tmpobjid = CreateObject(19866, 1928.319091, -1773.603149, 15.960554, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1928.319091, -1778.592529, 15.960554, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1928.319091, -1782.572875, 15.960554, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1925.458618, -1784.612060, 16.070556, 0.000000, 90.000000, 270.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1925.899169, -1784.984130, 15.960554, 0.000000, 0.000000, 270.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1920.467895, -1784.612060, 16.070556, 0.000000, 90.000000, 270.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1916.436523, -1784.612060, 16.070556, 0.000000, 90.000000, 270.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1920.909179, -1784.984130, 15.960554, 0.000000, 0.000000, 270.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1916.708862, -1784.984130, 15.960554, 0.000000, 0.000000, 270.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1913.926635, -1782.852661, 16.070556, 0.000000, 90.000000, 360.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1914.307861, -1782.573486, 15.960554, 0.000000, 0.000000, 360.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1913.926635, -1777.873046, 16.070556, 0.000000, 90.000000, 360.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1913.926635, -1774.112304, 16.070556, 0.000000, 90.000000, 360.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1914.307861, -1777.603271, 15.960554, 0.000000, 0.000000, 360.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1914.307861, -1773.924194, 15.960554, 0.000000, 0.000000, 360.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19376, 1923.044799, -1780.135253, 16.156877, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9903, "pier69", "rooftop_gz4", 0xFFFFFFFF);
	tmpobjid = CreateObject(19376, 1923.044799, -1771.113769, 16.156877, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9903, "pier69", "rooftop_gz4", 0xFFFFFFFF);
	tmpobjid = CreateObject(19445, 1916.045043, -1780.125000, 16.152835, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9903, "pier69", "rooftop_gz4", 0xFFFFFFFF);
	tmpobjid = CreateObject(19445, 1917.005859, -1771.114868, 16.152835, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9903, "pier69", "rooftop_gz4", 0xFFFFFFFF);
	tmpobjid = CreateObject(19866, 1921.228515, -1766.603759, 16.070556, 0.000000, 90.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1920.758544, -1766.211914, 15.960554, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19172, 1928.300537, -1775.577026, 15.500849, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19353, 1915.752197, -1767.783447, 14.249073, 0.000000, -0.000007, 179.999954, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19353, 1915.752197, -1770.294921, 14.249073, 0.000000, -0.000007, 179.999954, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19866, 1917.296997, -1766.603759, 16.070556, 0.000000, 90.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1914.797119, -1769.094604, 16.070556, 0.000000, 90.000000, 360.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1917.677612, -1766.211914, 15.960554, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1915.276855, -1768.812744, 15.960554, 0.000000, 0.000000, 360.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1916.427246, -1772.173828, 16.070556, 0.000000, 90.000000, 450.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19383, 1916.959350, -1772.296386, 14.245261, 0.000000, 0.000000, 70.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19353, 1921.561401, -1767.944213, 14.249073, 0.000000, 0.000000, 180.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19353, 1921.561401, -1771.143920, 14.249073, 0.000000, 0.000000, 180.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(19353, 1920.042114, -1772.835449, 14.249073, 0.000000, 0.000000, 270.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16639, "a51_labs", "a51_labwall1", 0x00000000);
	tmpobjid = CreateObject(2691, 1919.985595, -1772.962158, 14.588752, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 2821, "gb_foodwrap01", "GB_foodwrap04", 0x00000000);
	tmpobjid = CreateObject(2660, 1915.878784, -1770.578979, 14.432792, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 2821, "gb_foodwrap01", "GB_foodwrap02", 0x00000000);
	tmpobjid = CreateObject(2660, 1915.878784, -1768.909057, 14.432792, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 2821, "gb_foodwrap01", "GB_foodwrap03", 0x00000000);
	tmpobjid = CreateObject(2660, 1915.878784, -1767.349243, 14.432792, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 2821, "gb_foodwrap01", "GB_foodwrap03", 0x00000000);
	tmpobjid = CreateObject(2660, 1915.878784, -1767.349243, 14.432792, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 2821, "gb_foodwrap01", "GB_foodwrap03", 0x00000000);
	tmpobjid = CreateObject(2608, 1918.140136, -1766.588623, 14.012805, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 1, 1419, "break_fence3", "CJ_FRAME_Glass", 0x00000000);
	SetObjectMaterial(tmpobjid, 3, 1419, "break_fence3", "CJ_FRAME_Glass", 0x00000000);
	SetObjectMaterial(tmpobjid, 5, 1419, "break_fence3", "CJ_FRAME_Glass", 0x00000000);
	tmpobjid = CreateObject(19172, 1916.368286, -1784.836669, 15.250841, -0.000007, -0.000014, 179.999923, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19172, 1919.088256, -1784.836669, 15.250841, -0.000007, -0.000014, 179.999923, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19172, 1921.818359, -1784.836669, 15.250841, -0.000007, -0.000014, 179.999923, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19089, 1917.729736, -1784.824951, 15.973294, 0.000014, 0.000014, -90.000045, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19089, 1920.449951, -1784.824951, 15.973294, 0.000014, 0.000014, -90.000045, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19426, 1915.039794, -1773.585205, 16.156892, 0.000000, 90.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9903, "pier69", "rooftop_gz4", 0xFFFFFFFF);
	tmpobjid = CreateObject(19376, 1923.044799, -1780.135253, 16.056875, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10891, "bakery_sfse", "cabin6", 0xFFFFFFFF);
	tmpobjid = CreateObject(18075, 1921.240722, -1778.958496, 16.042793, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "des_tunnellight", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 14477, "crlsbits", "lightbulb", 0x00000000);
	tmpobjid = CreateObject(19376, 1923.044799, -1770.945800, 16.056875, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10891, "bakery_sfse", "cabin6", 0xFFFFFFFF);
	tmpobjid = CreateObject(18075, 1921.240722, -1774.637451, 16.042793, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "des_tunnellight", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 14477, "crlsbits", "lightbulb", 0x00000000);
	tmpobjid = CreateObject(19445, 1916.045043, -1780.125000, 16.052833, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10891, "bakery_sfse", "cabin6", 0xFFFFFFFF);
	tmpobjid = CreateObject(19445, 1916.915893, -1770.975952, 16.052833, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10891, "bakery_sfse", "cabin6", 0xFFFFFFFF);
	tmpobjid = CreateObject(19426, 1915.039794, -1773.585205, 16.046890, 0.000000, 90.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10891, "bakery_sfse", "cabin6", 0xFFFFFFFF);
	tmpobjid = CreateObject(19172, 1921.665649, -1771.078857, 15.250841, -0.000029, -0.000022, -89.999992, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19172, 1921.665649, -1768.358886, 15.250841, -0.000029, -0.000022, -89.999992, 300.00);
	SetObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "247sign1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 7088, "casinoshops1", "247sign1", 0x00000000);
	tmpobjid = CreateObject(19089, 1921.653930, -1769.717407, 15.973294, 0.000007, 0.000036, -0.000052, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(2662, 1928.328369, -1771.339599, 14.266874, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterialText(tmpobjid, "AatBalthazar", 0, 130, "Arial", 60, 1, 0xFFFFFFFF, 0x00000000, 1);
	tmpobjid = CreateObject(1977, 1928.937744, -1773.592041, 12.453449, 0.000022, 0.000014, 89.999900, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateObject(2490, 1929.192016, -1773.720092, 13.325204, 0.000022, 0.000014, 89.999900, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 2541, "cj_ss_1", "cj_juice", 0x00000000);
	SetObjectMaterial(tmpobjid, 2, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateObject(2490, 1929.151977, -1773.720092, 13.505208, 0.000022, 0.000014, 89.999900, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 2541, "cj_ss_1", "CJ_CEREAL", 0x00000000);
	SetObjectMaterial(tmpobjid, 2, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateObject(2490, 1929.192016, -1773.720092, 13.845213, 0.000022, 0.000014, 89.999900, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 2535, "cj_ss_4", "CJ_FISHY", 0x00000000);
	SetObjectMaterial(tmpobjid, 2, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateObject(2490, 1929.151977, -1773.720092, 14.025213, 0.000022, 0.000014, 89.999900, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 2543, "cj_ss_3", "CJ_DOOG_FOOD", 0x00000000);
	SetObjectMaterial(tmpobjid, 2, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateObject(2490, 1929.192016, -1773.720092, 14.355216, 0.000022, 0.000014, 89.999900, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 10310, "boigas_sfe", "vgnburger_256", 0x00000000);
	SetObjectMaterial(tmpobjid, 2, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateObject(2443, 1928.893188, -1773.604736, 12.298362, 0.000022, 0.000014, 89.999900, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetObjectMaterial(tmpobjid, 2, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetObjectMaterial(tmpobjid, 3, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetObjectMaterial(tmpobjid, 4, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetObjectMaterial(tmpobjid, 5, 19962, "samproadsigns", "materialtext1", 0x00000000);
	tmpobjid = CreateObject(19797, 1929.367797, -1773.288940, 14.163387, 0.000022, 90.000015, 89.999923, 300.00);
	SetObjectMaterialText(tmpobjid, "g", 0, 130, "Webdings", 40, 1, 0xFFFFFFFF, 0x00000000, 1);
	tmpobjid = CreateObject(1897, 1923.818481, -1786.019775, 13.316308, 18.000000, 180.000000, 179.999847, 300.00);
	SetObjectMaterial(tmpobjid, 0, 11712, "cross1", "cross1", 0x00000000);
	tmpobjid = CreateObject(1897, 1923.818481, -1785.269042, 13.369308, -18.000000, 180.000000, 179.999832, 300.00);
	SetObjectMaterial(tmpobjid, 0, 11712, "cross1", "cross1", 0x00000000);
	tmpobjid = CreateObject(1897, 1922.775512, -1785.721313, 14.537315, -89.999992, 180.000015, 89.999961, 300.00);
	SetObjectMaterial(tmpobjid, 0, 11712, "cross1", "cross1", 0x00000000);
	tmpobjid = CreateObject(1897, 1922.175537, -1785.744018, 14.534317, -89.999992, -334.403289, 115.596694, 300.00);
	SetObjectMaterial(tmpobjid, 0, 11712, "cross1", "cross1", 0x00000000);
	tmpobjid = CreateObject(1897, 1921.108520, -1786.019775, 13.316308, 18.000000, 180.000015, 179.999847, 300.00);
	SetObjectMaterial(tmpobjid, 0, 11712, "cross1", "cross1", 0x00000000);
	tmpobjid = CreateObject(1897, 1921.108520, -1785.269042, 13.369308, -18.000000, 180.000015, 179.999832, 300.00);
	SetObjectMaterial(tmpobjid, 0, 11712, "cross1", "cross1", 0x00000000);
	tmpobjid = CreateObject(2431, 1921.508422, -1785.145385, 14.656902, 74.999992, 0.000058, -0.000072, 300.00);
	SetObjectMaterial(tmpobjid, 0, 11712, "cross1", "cross1", 0xFFFFFFFF);
	SetObjectMaterial(tmpobjid, 1, 11712, "cross1", "cross1", 0x00000000);
	SetObjectMaterial(tmpobjid, 2, 11712, "cross1", "cross1", 0x00000000);
	SetObjectMaterial(tmpobjid, 3, 11712, "cross1", "cross1", 0x00000000);
	SetObjectMaterial(tmpobjid, 4, 11712, "cross1", "cross1", 0x00000000);
	tmpobjid = CreateObject(1368, 1922.459228, -1785.730224, 13.276309, 0.000000, 0.000014, -0.000014, 300.00);
	SetObjectMaterial(tmpobjid, 0, 11712, "cross1", "cross1", 0xFFFFFFFF);
	SetObjectMaterial(tmpobjid, 1, 19962, "samproadsigns", "materialtext1", 0x00000000);
	SetObjectMaterial(tmpobjid, 3, 11712, "cross1", "cross1", 0x00000000);
	tmpobjid = CreateObject(1270, 1923.696044, -1785.655029, 13.945871, 0.000000, -0.000014, 179.999801, 300.00);
	SetObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	SetObjectMaterial(tmpobjid, 1, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateObject(1270, 1921.256103, -1785.655029, 13.945871, 0.000000, -0.000014, 179.999801, 300.00);
	SetObjectMaterial(tmpobjid, 0, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0xFFFFFFFF);
	SetObjectMaterial(tmpobjid, 1, 2755, "ab_dojowall", "mp_apt1_roomfloor", 0x00000000);
	tmpobjid = CreateObject(3465, 1941.334350, -1774.011596, 13.628742, 0.000000, 0.000037, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 1676, "wshxrefpump", "petrolpumpbase_256", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 10789, "xenon_sfse", "ws_xenomart", 0x00000000);
	tmpobjid = CreateObject(2682, 1941.316040, -1774.641479, 13.788784, -0.000017, 0.000034, -26.600025, 300.00);
	SetObjectMaterial(tmpobjid, 0, 5397, "barrio1_lae", "gassign1_256", 0x00000000);
	tmpobjid = CreateObject(3465, 1941.345214, -1774.007446, 13.626741, 0.000000, -0.000037, 179.999771, 300.00);
	SetObjectMaterial(tmpobjid, 0, 1676, "wshxrefpump", "petrolpumpbase_256", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 10789, "xenon_sfse", "ws_xenomart", 0x00000000);
	tmpobjid = CreateObject(2682, 1941.378051, -1773.374877, 13.788784, 0.000019, -0.000039, 153.399597, 300.00);
	SetObjectMaterial(tmpobjid, 0, 5397, "barrio1_lae", "gassign1_256", 0x00000000);
	tmpobjid = CreateObject(19445, 1939.686645, -1775.507324, 16.895202, 0.000000, 110.000022, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1942.099609, -1773.214843, 12.440559, 0.000000, 89.999984, 179.999908, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1941.358886, -1773.214843, 12.440559, 0.000000, 89.999984, 179.999908, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1942.099609, -1776.474975, 12.440559, 0.000000, 89.999977, 179.999862, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1941.358886, -1776.474975, 12.440559, 0.000000, 89.999977, 179.999862, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1941.328247, -1772.873291, 13.871664, 105.499885, 176.800064, 0.199935, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1941.297851, -1778.250122, 13.854319, 105.499885, 176.800064, 0.199935, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(3465, 1941.334350, -1776.362548, 13.628742, 0.000000, 0.000045, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 1676, "wshxrefpump", "petrolpumpbase_256", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 10789, "xenon_sfse", "ws_xenomart", 0x00000000);
	tmpobjid = CreateObject(2682, 1941.316040, -1776.992431, 13.788784, -0.000019, 0.000039, -26.600025, 300.00);
	SetObjectMaterial(tmpobjid, 0, 5397, "barrio1_lae", "gassign1_256", 0x00000000);
	tmpobjid = CreateObject(3465, 1941.345214, -1776.358398, 13.626741, 0.000000, -0.000045, 179.999725, 300.00);
	SetObjectMaterial(tmpobjid, 0, 1676, "wshxrefpump", "petrolpumpbase_256", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 10789, "xenon_sfse", "ws_xenomart", 0x00000000);
	tmpobjid = CreateObject(2682, 1941.378051, -1775.725830, 13.788784, 0.000023, -0.000046, 153.399551, 300.00);
	SetObjectMaterial(tmpobjid, 0, 5397, "barrio1_lae", "gassign1_256", 0x00000000);
	tmpobjid = CreateObject(19866, 1944.493530, -1773.165771, 17.567966, 0.000000, 164.999984, 359.999908, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19130, "matarrows", "green", 0x00000000);
	tmpobjid = CreateObject(19866, 1944.493530, -1777.835937, 17.567966, 0.000000, 164.999984, 359.999908, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19130, "matarrows", "green", 0x00000000);
	tmpobjid = CreateObject(19445, 1942.966064, -1775.506958, 16.749050, 0.000000, 75.000022, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19445, 1939.000488, -1775.507324, 17.144857, 0.000000, 110.000022, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 16640, "a51", "vgs_shopwall01_128", 0x00000000);
	tmpobjid = CreateObject(19866, 1937.488647, -1777.835937, 18.148426, 0.000000, 199.999984, 359.999908, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19130, "matarrows", "green", 0x00000000);
	tmpobjid = CreateObject(19866, 1937.488647, -1772.805175, 18.148426, 0.000000, 199.999984, 359.999908, 300.00);
	SetObjectMaterial(tmpobjid, 0, 19130, "matarrows", "green", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateObject(1431, 1914.537231, -1767.219726, 12.928029, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(1431, 1914.087524, -1768.752807, 12.928029, 0.000000, 0.000000, 118.400001, 300.00);
	tmpobjid = CreateObject(1332, 1914.445556, -1770.706054, 13.008246, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2986, 1926.305541, -1769.459838, 16.284486, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(2986, 1918.454345, -1769.459838, 16.284486, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1687, 1922.163818, -1769.458618, 17.073364, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1687, 1919.392211, -1774.338989, 17.073364, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2986, 1919.885253, -1778.470336, 16.284486, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1696, 1925.114746, -1781.552246, 17.220581, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1690, 1919.237060, -1782.262329, 16.860591, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2494, 1921.797729, -1774.661621, 13.456748, 0.000000, -0.000007, 91.100006, 300.00);
	tmpobjid = CreateObject(2496, 1921.472290, -1774.364624, 13.446985, -0.000007, 0.000000, 179.599945, 300.00);
	tmpobjid = CreateObject(2594, 1921.445800, -1774.655761, 13.265831, 0.000000, 0.000007, -90.000038, 300.00);
	tmpobjid = CreateObject(2496, 1921.501586, -1774.971923, 13.456565, 0.000007, 0.000000, 1.800024, 300.00);
	tmpobjid = CreateObject(2504, 1920.799804, -1774.826538, 13.346705, 0.000006, -0.000003, 26.299907, 300.00);
	tmpobjid = CreateObject(2362, 1920.542724, -1774.478637, 13.467308, 0.000007, 0.000000, -6.900031, 300.00);
	tmpobjid = CreateObject(1984, 1920.631835, -1774.623168, 12.526207, -0.000007, 0.000000, -179.339920, 300.00);
	tmpobjid = CreateObject(2484, 1920.336059, -1774.345214, 14.277366, 0.000007, -0.000000, 8.900060, 300.00);
	tmpobjid = CreateObject(2362, 1919.873657, -1774.467041, 13.467308, 0.000007, -0.000000, 13.999979, 300.00);
	tmpobjid = CreateObject(1987, 1924.319824, -1769.022094, 12.632678, 0.000000, -0.000007, -90.000083, 300.00);
	tmpobjid = CreateObject(1987, 1924.320922, -1769.986328, 12.632740, 0.000000, -0.000007, -90.000083, 300.00);
	tmpobjid = CreateObject(1987, 1924.319946, -1770.970947, 12.632433, 0.000000, -0.000007, -90.000083, 300.00);
	tmpobjid = CreateObject(1987, 1924.319213, -1771.947265, 12.642870, 0.000000, -0.000007, -90.000083, 300.00);
	tmpobjid = CreateObject(2871, 1924.337402, -1778.085693, 12.682909, -0.000007, -0.000007, -90.000061, 300.00);
	tmpobjid = CreateObject(2871, 1924.337890, -1779.068237, 12.692858, -0.000007, -0.000007, -90.000061, 300.00);
	tmpobjid = CreateObject(2541, 1925.304687, -1782.054443, 12.663134, 0.000014, -0.000007, 89.999809, 300.00);
	tmpobjid = CreateObject(2541, 1925.304077, -1781.065429, 12.663134, 0.000014, -0.000007, 89.999809, 300.00);
	tmpobjid = CreateObject(2541, 1925.309326, -1780.070678, 12.663134, 0.000014, -0.000007, 89.999809, 300.00);
	tmpobjid = CreateObject(2871, 1924.337890, -1780.046508, 12.692736, -0.000007, -0.000007, -90.000061, 300.00);
	tmpobjid = CreateObject(2541, 1925.307617, -1779.069946, 12.663134, 0.000014, -0.000007, 89.999809, 300.00);
	tmpobjid = CreateObject(2871, 1924.343872, -1781.026489, 12.693102, -0.000007, -0.000007, -90.000061, 300.00);
	tmpobjid = CreateObject(2543, 1925.369018, -1772.911376, 12.662464, 0.000007, -0.000007, 89.999832, 300.00);
	tmpobjid = CreateObject(2871, 1924.335937, -1782.007324, 12.692736, -0.000007, -0.000007, -90.000061, 300.00);
	tmpobjid = CreateObject(2543, 1925.369018, -1771.907958, 12.662464, 0.000007, -0.000007, 89.999832, 300.00);
	tmpobjid = CreateObject(2543, 1925.369018, -1770.975830, 12.662464, 0.000007, -0.000007, 89.999832, 300.00);
	tmpobjid = CreateObject(2543, 1925.369018, -1769.991699, 12.662464, 0.000007, -0.000007, 89.999832, 300.00);
	tmpobjid = CreateObject(2543, 1925.369018, -1769.013793, 12.662464, 0.000007, -0.000007, 89.999832, 300.00);
	tmpobjid = CreateObject(1776, 1914.806640, -1776.236816, 13.572788, 0.000000, 0.000000, 450.000000, 300.00);
	tmpobjid = CreateObject(1302, 1924.547607, -1773.042236, 12.562784, 0.000000, 0.000000, 270.000000, 300.00);
	tmpobjid = CreateObject(955, 1925.307495, -1777.959106, 12.952787, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2942, 1914.758056, -1780.725463, 13.208756, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2942, 1914.758056, -1779.564575, 13.208756, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2452, 1914.838134, -1777.949829, 12.532782, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2365, 1927.634887, -1777.055664, 12.582784, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2365, 1927.634887, -1773.593872, 12.582784, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(1842, 1920.741821, -1778.340576, 12.979553, 0.000000, 0.000007, 0.000000, 300.00);
	tmpobjid = CreateObject(1843, 1920.677001, -1782.248901, 12.459534, -0.000007, 0.000000, 0.800010, 300.00);
	tmpobjid = CreateObject(2012, 1920.668090, -1781.211791, 12.459107, -0.000007, 0.000000, 180.200027, 300.00);
	tmpobjid = CreateObject(2582, 1916.696899, -1784.598022, 13.369323, 0.000000, -0.000007, -179.699996, 300.00);
	tmpobjid = CreateObject(2583, 1915.201782, -1784.587524, 13.359802, 0.000000, -0.000007, 179.999893, 300.00);
	tmpobjid = CreateObject(2166, 1920.729370, -1769.791503, 12.578747, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(19893, 1919.691406, -1769.332275, 13.382787, 0.000000, 0.000000, 114.799987, 300.00);
	tmpobjid = CreateObject(11730, 1920.958251, -1772.506835, 12.582784, 0.000000, 0.000000, 180.000000, 300.00);
	tmpobjid = CreateObject(11729, 1920.285888, -1772.495361, 12.582784, 0.000000, 0.000000, 180.000000, 300.00);
	tmpobjid = CreateObject(11729, 1919.645263, -1772.495361, 12.582784, 0.000000, 0.000000, 180.000000, 300.00);
	tmpobjid = CreateObject(19994, 1916.169555, -1769.549682, 12.582784, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(19994, 1916.169555, -1768.959106, 12.582784, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(1550, 1920.430786, -1766.760620, 13.755824, -23.400001, 85.299995, -151.499969, 300.00);
	tmpobjid = CreateObject(1493, 1916.181640, -1772.008911, 12.478749, 0.000000, 0.000000, 30.000000, 300.00);
	tmpobjid = CreateObject(19618, 1920.410644, -1766.776367, 13.032779, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1714, 1921.047729, -1769.068603, 12.545351, -0.000007, 0.000000, 270.000030, 300.00);
	tmpobjid = CreateObject(1300, 1928.961303, -1777.476440, 12.905153, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(638, 1917.845458, -1785.536987, 13.241602, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(1223, 1920.127929, -1785.482910, 12.517029, 0.000000, 0.000000, 270.000000, 300.00);
	tmpobjid = CreateObject(1223, 1915.536987, -1785.482910, 12.517029, 0.000000, 0.000000, 270.000000, 300.00);
	tmpobjid = CreateObject(638, 1918.270019, -1765.640991, 13.241602, -0.000007, 0.000000, -89.999946, 300.00);
	tmpobjid = CreateObject(1223, 1915.987548, -1765.695068, 12.517029, 0.000007, 0.000000, 89.999916, 300.00);
	tmpobjid = CreateObject(1223, 1920.578491, -1765.695068, 12.517029, 0.000007, 0.000000, 89.999916, 300.00);
	tmpobjid = CreateObject(3460, 1933.457641, -1783.939331, 16.342092, 0.000000, 0.000000, 270.000000, 300.00);
	tmpobjid = CreateObject(3460, 1933.457641, -1767.577636, 16.342092, 0.000000, 0.000000, 270.000000, 300.00);

	//prison
	CreateObject(4079, 2495.00098, -2103.38989, 25.24000,   0.00000, 0.00000, 225.10001);
	CreateObject(3279, 2429.15991, -2103.54004, 12.53000,   0.00000, 0.00000, 0.00000);
	CreateObject(3279, 2468.86011, -2140.04004, 12.53000,   0.00000, 0.00000, 90.00000);
	CreateObject(3279, 2535.08008, -2139.91992, 12.53000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2068.45996, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(12950, 2479.62012, -2075.15991, 13.79000,   0.00000, 0.00000, -45.00000);
	CreateObject(7191, 2540.80005, -2088.16992, 12.32000,   0.00000, 0.00000, 0.00000);
	CreateObject(7191, 2540.79956, -2122.44995, 12.32000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2540.59009, -2073.71997, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2078.96997, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2084.22998, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2089.48999, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2094.75000, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2100.01001, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2105.28003, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2110.53003, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2115.79004, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2121.05005, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2126.32007, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2136.84009, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2131.58008, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2540.59009, -2142.10010, 18.01000,   0.00000, 0.00000, 90.00000);
	CreateObject(1411, 2538.15991, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2532.89990, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2527.63989, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2522.37988, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2517.12012, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2511.86011, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2506.60010, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2501.34009, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2496.08008, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2490.82007, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2485.55005, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2480.29004, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2475.03003, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2469.76001, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2464.50000, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2459.22998, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2453.96997, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2448.69995, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2443.42993, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2438.15991, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2432.90991, -2144.50000, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2427.64990, -2144.48999, 18.01000,   0.00000, 0.00000, 0.00000);
	CreateObject(1411, 2424.46411, -2076.82422, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(1411, 2424.44995, -2071.55005, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(1411, 2433.04004, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2538.21997, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2532.95996, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2527.68994, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2522.43994, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2517.16992, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2511.90991, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2506.63989, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2501.37988, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2496.12988, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2490.87012, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2485.60010, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2480.34009, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2475.08008, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2469.82007, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2464.57007, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2459.30005, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2454.05005, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2448.80005, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2443.55005, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2438.30005, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2427.78003, -2066.06006, 18.01000,   0.00000, 0.00000, 180.00000);
	CreateObject(1411, 2424.44995, -2102.09009, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(1411, 2424.44995, -2107.34009, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(1411, 2424.44995, -2112.60010, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(1411, 2424.44995, -2117.87012, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(1411, 2424.44995, -2123.13989, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(1411, 2424.44995, -2128.39990, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(1411, 2424.44995, -2133.66992, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(1411, 2424.44995, -2138.89990, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(1411, 2424.44995, -2140.65991, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(1411, 2424.44995, -2069.80005, 18.01000,   0.00000, 0.00000, -90.00000);
	CreateObject(12950, 2480.79004, -2083.76001, 18.55000,   0.00000, 0.00000, -29.00000);
	CreateObject(987, 2516.80005, -2117.37988, 12.46410,   0.00000, 0.00000, 0.00000);
	CreateObject(987, 2528.80005, -2117.37988, 12.46414,   0.00000, 0.00000, 0.00000);
	CreateObject(3934, 2492.00000, -2104.12012, 21.91000,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 2474.65991, -2083.70996, 17.70000,   0.00000, 0.00000, -37.00000);
	CreateObject(970, 2477.96997, -2086.20996, 17.70000,   0.00000, 0.00000, -37.00000);
	CreateObject(970, 2474.50000, -2080.97998, 17.70000,   0.00000, 0.00000, 45.00000);
	CreateObject(970, 2477.41992, -2078.04004, 17.70000,   0.00000, 0.00000, 45.00000);
	CreateObject(970, 2480.37012, -2075.10010, 17.70000,   0.00000, 0.00000, 45.00000);
	CreateObject(970, 2484.40771, -2072.43018, 17.70000,   0.00000, 0.00000, -44.00000);
	CreateObject(970, 2484.64014, -2079.83008, 22.48000,   0.00000, 0.00000, -28.00000);
	CreateObject(3666, 2486.91992, -2099.62988, 22.42000,   0.00000, 0.00000, 0.00000);
	CreateObject(3666, 2496.60010, -2099.70996, 22.42000,   0.00000, 0.00000, 0.00000);
	CreateObject(3666, 2496.63989, -2108.73999, 22.42000,   0.00000, 0.00000, 0.00000);
	CreateObject(3666, 2487.12988, -2108.79004, 22.42000,   0.00000, 0.00000, 0.00000);
	CreateObject(14791, 2526.03003, -2078.09009, 14.59000,   0.00000, 0.00000, 0.00000);
	CreateObject(16096, 2519.38403, -2138.90869, 14.42000,   0.00000, 0.00000, 0.00000);
	CreateObject(16093, 2436.77002, -2133.03003, 16.66000,   0.00000, 0.00000, 180.00000);
	CreateObject(16638, 2436.67993, -2132.06006, 14.92000,   0.00000, 0.00000, 180.00000);
	CreateObject(2596, 2520.13989, -2095.58008, 14.06000,   0.00000, 0.00000, 90.00000);
	CreateObject(2629, 2539.47998, -2094.33008, 12.54000,   0.00000, 0.00000, -90.00000);
	CreateObject(2630, 2539.87988, -2105.63989, 12.54000,   0.00000, 0.00000, 0.00000);
	CreateObject(2631, 2538.01001, -2102.58008, 12.54000,   0.00000, 0.00000, 10.00000);
	CreateObject(2632, 2538.23999, -2099.27002, 12.54000,   0.00000, 0.00000, 0.00000);
	CreateObject(2627, 2539.12988, -2096.52002, 12.54000,   0.00000, 0.00000, -90.00000);
	CreateObject(2628, 2538.70996, -2091.44995, 12.54000,   0.00000, 0.00000, -80.00000);
	CreateObject(3819, 2534.00000, -2078.12012, 13.49000,   0.00000, 0.00000, 0.00000);
	CreateObject(3819, 2517.93994, -2078.45996, 13.49000,   0.00000, 0.00000, 180.00000);
	CreateObject(3819, 2526.12988, -2070.53003, 13.49000,   0.00000, 0.00000, 90.00000);
	CreateObject(3819, 2526.31006, -2086.69995, 13.49000,   0.00000, 0.00000, -90.00000);
	CreateObject(1533, 2519.96680, -2104.10767, 12.59000,   0.00000, 0.00000, 90.00000);
	CreateObject(1537, 2519.96631, -2101.10718, 12.59000,   0.00000, 0.00000, 90.00000);
	CreateObject(3864, 2538.16992, -2114.76001, 18.62000,   0.00000, 0.00000, -45.00000);
	CreateObject(3864, 2522.45996, -2114.54004, 18.62000,   0.00000, 0.00000, 225.00000);
	CreateObject(3864, 2538.40991, -2068.92993, 18.62000,   0.00000, 0.00000, 45.00000);
	CreateObject(3864, 2502.35010, -2068.79004, 18.62000,   0.00000, 0.00000, 150.00000);
	CreateObject(1290, 2419.37988, -2071.97998, 18.56000,   0.00000, 0.00000, 90.00000);
	CreateObject(1290, 2408.21997, -2132.10010, 18.56000,   0.00000, 0.00000, 90.00000);
	CreateObject(1290, 2419.19995, -2109.32007, 18.56000,   0.00000, 0.00000, 90.00000);
	CreateObject(1290, 2408.44995, -2087.96997, 18.56000,   0.00000, 0.00000, 90.00000);
	CreateObject(10183, 2451.89990, -2070.84009, 12.56000,   0.00000, 0.00000, 45.60000);
	CreateObject(3864, 2477.23999, -2069.39990, 18.62000,   0.00000, 0.00000, 45.00000);
	CreateObject(3864, 2427.52051, -2069.74731, 18.62000,   0.00000, 0.00000, 135.00000);
	CreateObject(3864, 2427.52002, -2141.58008, 18.62000,   0.00000, 0.00000, 225.00000);
	CreateObject(1691, 2476.41992, -2099.56006, 17.56000,   0.00000, 0.00000, 0.00000);
	CreateObject(1689, 2496.82007, -2088.83008, 23.08000,   0.00000, 0.00000, 138.00000);
	CreateObject(1688, 2493.58008, -2120.89990, 22.92000,   0.00000, 0.00000, 0.00000);
	CreateObject(1687, 2500.80005, -2113.92993, 22.68000,   0.00000, 0.00000, 90.00000);
	CreateObject(2114, 2525.09009, -2116.08008, 12.66000,   0.00000, 0.00000, 0.00000);
	CreateObject(946, 2523.79004, -2110.77002, 14.71000,   0.00000, 0.00000, -90.00000);
	CreateObject(946, 2536.00757, -2110.77002, 14.71000,   0.00000, 0.00000, 90.00000);
	CreateObject(2114, 2533.89990, -2112.02002, 12.66000,   0.00000, 0.00000, 0.00000);
	CreateObject(1368, 2523.35522, -2093.42700, 13.24000,   0.00000, 0.00000, -90.00000);
	CreateObject(2916, 2539.16992, -2097.73999, 12.64000,   0.00000, 0.00000, 0.00000);
	CreateObject(2916, 2538.47998, -2097.44995, 12.64000,   0.00000, 0.00000, -50.00000);
	CreateObject(2675, 2538.64990, -2110.28003, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateObject(2675, 2530.41992, -2082.59009, 12.62000,   0.00000, 0.00000, 0.00000);
	CreateObject(14782, 2520.36157, -2107.89917, 13.46000,   0.00000, 0.00000, 90.00000);
	CreateObject(3077, 2505.93994, -2080.95996, 12.59000,   0.00000, 0.00000, -45.00000);
	CreateObject(1368, 2509.67993, -2077.67993, 13.24000,   0.00000, 0.00000, -45.00000);
	CreateObject(2670, 2506.90991, -2070.57007, 12.64000,   0.00000, 0.00000, 0.00000);
	CreateObject(1368, 2525.47681, -2093.42700, 13.24000,   0.00000, 0.00000, -90.00000);
	CreateObject(1368, 2525.47681, -2096.06006, 13.24000,   0.00000, 0.00000, -90.00000);
	CreateObject(1368, 2523.35522, -2096.06006, 13.24000,   0.00000, 0.00000, -90.00000);
	CreateObject(1368, 2522.92993, -2099.07007, 13.24000,   0.00000, 0.00000, -155.00000);
	CreateObject(2671, 2532.36011, -2093.52002, 12.56000,   0.00000, 0.00000, 0.00000);
	CreateObject(1985, 2539.62012, -2087.23999, 15.40000,   0.00000, 0.00000, 0.00000);
	CreateObject(928, 2511.19995, -2066.90991, 12.82000,   0.00000, 0.00000, 0.00000);
	CreateObject(926, 2512.47998, -2066.84009, 12.83000,   0.00000, 0.00000, 0.00000);
	CreateObject(2677, 2520.90991, -2071.22998, 12.82000,   0.00000, 0.00000, 0.00000);
	CreateObject(2674, 2513.79004, -2083.20996, 12.58000,   0.00000, 0.00000, 0.00000);
	CreateObject(2673, 2535.68994, -2067.65991, 12.64000,   0.00000, 0.00000, 0.00000);
	CreateObject(2670, 2526.44995, -2108.08008, 12.65000,   0.00000, 0.00000, 0.00000);
	CreateObject(2929, 2494.58008, -2140.25000, 15.33000,   0.00000, 0.00000, 0.00000);
	CreateObject(2929, 2491.79004, -2140.22998, 15.33000,   0.00000, 0.00000, 0.00000);
	CreateObject(2929, 2494.58008, -2140.25000, 11.76000,   0.00000, 0.00000, 0.00000);
	CreateObject(2929, 2491.79004, -2140.22998, 11.76000,   0.00000, 0.00000, 0.00000);
	CreateObject(3004, 2540.90991, -2087.23999, 15.32000,   0.00000, 0.00000, 90.00000);
	CreateObject(3004, 2540.90991, -2087.26001, 15.32000,   0.00000, 0.00000, 90.00000);
	CreateObject(3004, 2540.90991, -2087.28003, 15.32000,   0.00000, 0.00000, 90.00000);
	CreateObject(3004, 2540.90991, -2087.26001, 15.34000,   0.00000, 0.00000, 90.00000);
	CreateObject(3004, 2540.90991, -2087.26001, 15.30000,   0.00000, 0.00000, 90.00000);
	CreateObject(1280, 2532.22998, -2106.45996, 12.94000,   0.00000, 0.00000, 90.00000);
	CreateObject(1280, 2528.12012, -2106.45996, 12.94000,   0.00000, 0.00000, 90.00000);
	CreateObject(1280, 2528.12012, -2114.55005, 12.94000,   0.00000, 0.00000, -90.00000);
	CreateObject(1280, 2532.22998, -2114.55005, 12.94000,   0.00000, 0.00000, -90.00000);
	CreateObject(7191, 2540.80005, -2088.16992, 16.28000,   0.00000, 0.00000, 0.00000);
	CreateObject(7191, 2540.79956, -2122.44995, 16.28000,   0.00000, 0.00000, 0.00000);
	CreateObject(987, 2423.99390, -2071.85547, 12.08000,   0.00000, 0.00000, -90.00000);
	CreateObject(987, 2423.99390, -2095.37622, 12.08000,   0.00000, 0.00000, -90.00000);
	CreateObject(980, 2423.75684, -2089.54126, 15.32470,   0.00000, 0.00000, 90.00000);
	CreateObject(1290, 2454.75610, -2113.43921, 18.56000,   0.00000, 0.00000, 90.00000);
	CreateObject(1290, 2454.75610, -2113.43921, 18.56000,   0.00000, 0.00000, 0.00000);
	CreateObject(1622, 2478.37842, -2105.44775, 16.02180,   0.00000, 0.00000, 0.00000);
	CreateObject(1622, 2430.84375, -2101.21362, 18.50000,   0.00000, 0.00000, -90.00000);
	CreateObject(1622, 2472.94214, -2081.90869, 17.40000,   0.00000, 0.00000, -90.00000);
	CreateObject(1622, 2479.72266, -2086.38989, 22.00000,   0.00000, 0.00000, -90.00000);
	CreateObject(1622, 2501.19775, -2117.67505, 28.00000,   0.00000, 0.00000, -90.00000);
	CreateObject(1622, 2490.45386, -2140.72754, 18.50000,   0.00000, 0.00000, 90.00000);
	CreateObject(1622, 2508.20801, -2123.27319, 20.00000,   0.00000, 0.00000, 90.00000);
	CreateObject(1622, 2520.52954, -2112.22754, 18.86000,   0.00000, 0.00000, 180.00000);
	CreateObject(1622, 2515.38989, -2084.85498, 18.86000,   0.00000, 0.00000, 180.00000);
	CreateObject(1622, 2540.30371, -2071.49756, 18.70000,   0.00000, 0.00000, 0.00000);
	CreateObject(1622, 2423.33496, -2078.82153, 18.50000,   0.00000, 0.00000, 0.00000);
	CreateObject(1622, 2423.10889, -2109.64844, 22.00000,   0.00000, 0.00000, 90.00000);
	CreateObject(1622, 2423.86035, -2144.66528, 23.06000,   0.00000, 0.00000, 180.00000);
	CreateObject(1622, 2472.39722, -2146.09473, 23.06000,   0.00000, 0.00000, 0.00000);
	CreateObject(1622, 2510.09131, -2145.98340, 23.06000,   0.00000, 0.00000, 0.00000);
	CreateObject(1622, 2428.64233, -2067.18164, 23.34000,   0.00000, 0.00000, 90.00000);
	CreateObject(1622, 2461.65723, -2064.48999, 27.00000,   0.00000, 0.00000, 45.00000);
	CreateObject(1622, 2422.94775, -2144.85938, 23.06000,   0.00000, 0.00000, 0.00000);
	CreateObject(1622, 2473.29541, -2146.07495, 23.06000,   0.00000, 0.00000, 180.00000);
	CreateObject(1622, 2511.10034, -2145.76099, 23.06000,   0.00000, 0.00000, 180.00000);
	CreateObject(1622, 2509.12183, -2060.55151, 27.50000,   0.00000, 0.00000, 130.00000);
	CreateObject(1622, 2508.37720, -2059.89502, 27.50000,   0.00000, 0.00000, -50.00000);
	CreateObject(1622, 2462.14429, -2063.63550, 27.00000,   0.00000, 0.00000, 225.00000);
	CreateObject(1622, 2428.37769, -2066.21216, 23.34000,   0.00000, 0.00000, 270.00000);
	CreateObject(1622, 2422.85205, -2108.78296, 22.00000,   0.00000, 0.00000, -90.00000);
	CreateObject(970, 2519.90674, -2107.63623, 22.49070,   0.00000, 0.00000, 91.00000);
	CreateObject(970, 2519.83643, -2103.47412, 22.49070,   0.00000, 0.00000, 91.00000);
	CreateObject(970, 2519.75952, -2099.30200, 22.49070,   0.00000, 0.00000, 91.00000);
	CreateObject(2949, 2507.09473, -2102.71436, 21.91460,   0.00000, 0.00000, 0.00000);
	CreateObject(987, 2507.26709, -2104.29297, 19.36200,   0.00000, 0.00000, -90.00000);
	CreateObject(987, 2507.27075, -2090.79810, 19.36197,   0.00000, 0.00000, -90.00000);
	CreateObject(987, 2507.26709, -2093.03442, 24.42200,   0.00000, 0.00000, -90.00000);
	//รวมแมพ
	CreateDynamicObject(18765, -705.93445, 2606.11792, 1002.60840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19462, -706.11279, 2612.82690, 1005.03833,   0.00001, 90.00000, 89.99998);
	CreateDynamicObject(19462, -712.67480, 2605.82690, 1005.05835,   0.00000, 89.99999, 179.99995);
	CreateDynamicObject(19462, -712.67285, 2609.76709, 1005.04834,   0.00000, 89.99999, 179.99995);
	CreateDynamicObject(18765, -719.11414, 2606.11792, 1002.67847,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19462, -709.32312, 2596.32690, 1005.02832,   0.00000, 89.99999, 179.99995);
	CreateDynamicObject(14877, -711.78235, 2599.34180, 1002.97491,   -0.00001, 0.00001, -0.00012);
	CreateDynamicObject(19456, -701.22974, 2606.31934, 1010.35840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19392, -708.26733, 2611.48047, 1006.85352,   -0.00001, -0.00001, -90.00001);
	CreateDynamicObject(19392, -708.26733, 2611.16016, 1006.85352,   -0.00001, -0.00001, -90.00001);
	CreateDynamicObject(19456, -706.74951, 2615.90723, 1006.85840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19456, -701.84937, 2611.15942, 1006.85840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(19433, -710.12061, 2611.16162, 1006.85840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(19433, -710.12061, 2611.47461, 1006.85840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(18765, -719.11414, 2606.11792, 1011.02856,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19940, -714.10339, 2602.35156, 1008.69855,   0.00002, 89.99999, 179.99979);
	CreateDynamicObject(19940, -714.10339, 2604.35156, 1008.69855,   0.00002, 89.99999, 179.99979);
	CreateDynamicObject(19940, -714.10339, 2606.35156, 1008.69855,   0.00002, 89.99999, 179.99979);
	CreateDynamicObject(19940, -714.10339, 2608.35156, 1008.69855,   0.00002, 89.99999, 179.99979);
	CreateDynamicObject(19940, -714.10339, 2610.35156, 1008.69855,   0.00002, 89.99999, 179.99979);
	CreateDynamicObject(19940, -714.11877, 2601.33716, 1006.06079,   89.99999, 701.46533, -71.46534);
	CreateDynamicObject(19456, -714.04895, 2615.88940, 1006.85840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19940, -714.11877, 2601.33716, 1008.06079,   89.99999, 701.46533, -71.46534);
	CreateDynamicObject(19456, -710.14978, 2614.63916, 1006.85840,   -0.00001, 0.00000, -89.99998);
	CreateDynamicObject(19392, -714.51306, 2603.11182, 1006.89429,   -0.00001, 0.00000, -0.00006);
	CreateDynamicObject(19456, -715.71045, 2601.06934, 1006.85840,   -0.00001, 0.00000, -89.99998);
	CreateDynamicObject(19456, -718.94897, 2601.42969, 1006.85840,   -0.00001, 0.00000, -89.99998);
	CreateDynamicObject(19456, -718.79883, 2611.17944, 1006.85840,   -0.00001, 0.00000, -89.99998);
	CreateDynamicObject(19456, -722.95789, 2606.32959, 1006.85840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19392, -709.30481, 2601.05859, 1006.85840,   -0.00001, -0.00001, -90.00001);
	CreateDynamicObject(19392, -709.30481, 2600.73828, 1006.85840,   -0.00001, -0.00001, -90.00001);
	CreateDynamicObject(19456, -702.92004, 2601.05957, 1006.85840,   -0.00001, 0.00000, -89.99998);
	CreateDynamicObject(19456, -701.22974, 2606.31934, 1006.85840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19433, -701.22021, 2601.91162, 1006.85840,   0.00000, -0.00001, 179.99995);
	CreateDynamicObject(19433, -701.22021, 2601.91162, 1010.35840,   0.00000, -0.00001, 179.99995);
	CreateDynamicObject(19456, -706.09937, 2611.15942, 1010.35840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(19456, -709.66992, 2601.05957, 1010.35840,   -0.00001, 0.00000, -89.99998);
	CreateDynamicObject(19456, -702.85229, 2601.05347, 1010.35840,   -0.00001, 0.00000, -89.99998);
	CreateDynamicObject(19369, -710.96082, 2602.71753, 1006.85840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(2445, -711.39246, 2604.79785, 1005.10840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(2445, -711.39246, 2605.79785, 1005.10840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(2445, -711.39246, 2606.79785, 1005.10840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(2445, -711.39246, 2607.79785, 1005.10840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(2445, -711.39246, 2608.79785, 1005.10840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(2445, -711.39246, 2609.79785, 1005.10840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(2445, -711.39246, 2610.79785, 1005.10840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(19430, -711.65015, 2606.06445, 1005.35437,   89.99999, 89.99999, -89.99999);
	CreateDynamicObject(19430, -711.65405, 2609.55713, 1005.35437,   89.99999, 89.99999, -89.99999);
	CreateDynamicObject(19466, -710.91614, 2609.70996, 1007.79828,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19456, -710.95996, 2605.81934, 1010.35840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19433, -710.96130, 2611.16162, 1010.35840,   0.00000, -0.00001, 179.99995);
	CreateDynamicObject(19466, -710.91614, 2607.46973, 1007.79828,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19466, -710.91614, 2605.22998, 1007.79828,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19087, -710.92468, 2606.33984, 1009.26855,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19087, -710.92468, 2608.60010, 1009.26855,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(18765, -705.93445, 2606.11792, 1014.01837,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19462, -706.11279, 2612.82690, 1008.63843,   0.00001, 90.00000, 89.99998);
	CreateDynamicObject(19462, -712.60278, 2609.76709, 1008.64838,   0.00000, 89.99999, 179.99995);
	CreateDynamicObject(19462, -712.60474, 2605.82690, 1008.63843,   0.00000, 89.99999, 179.99995);
	CreateDynamicObject(19392, -712.51245, 2611.47461, 1006.88428,   -0.00001, -0.00001, -90.00001);
	CreateDynamicObject(19392, -712.51245, 2611.15430, 1006.88428,   -0.00001, -0.00001, -90.00001);
	CreateDynamicObject(19940, -701.33191, 2610.11133, 1008.61865,   0.00000, 90.00001, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2608.11133, 1008.61865,   0.00000, 90.00001, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2606.11133, 1008.61865,   0.00000, 90.00001, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2604.11133, 1008.61865,   0.00000, 90.00001, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2602.11133, 1008.61865,   0.00000, 90.00001, 0.00000);
	CreateDynamicObject(19940, -710.34192, 2601.14160, 1008.61865,   0.00001, 90.00001, 89.99992);
	CreateDynamicObject(19940, -708.34192, 2601.14160, 1008.61865,   0.00001, 90.00001, 89.99992);
	CreateDynamicObject(19940, -706.34192, 2601.14160, 1008.61865,   0.00001, 90.00001, 89.99992);
	CreateDynamicObject(19940, -704.34192, 2601.14160, 1008.61865,   0.00001, 90.00001, 89.99992);
	CreateDynamicObject(19940, -702.34192, 2601.14160, 1008.61865,   0.00001, 90.00001, 89.99992);
	CreateDynamicObject(19940, -709.90198, 2611.06128, 1008.61865,   0.00002, 90.00001, 89.99990);
	CreateDynamicObject(19940, -707.90198, 2611.06128, 1008.61865,   0.00002, 90.00001, 89.99990);
	CreateDynamicObject(19940, -705.90198, 2611.06128, 1008.61865,   0.00002, 90.00001, 89.99990);
	CreateDynamicObject(19940, -703.90198, 2611.06128, 1008.61865,   0.00002, 90.00001, 89.99990);
	CreateDynamicObject(19940, -701.90198, 2611.06128, 1008.61865,   0.00002, 90.00001, 89.99990);
	CreateDynamicObject(19940, -710.85315, 2602.06128, 1008.61865,   0.00002, 89.99999, 179.99979);
	CreateDynamicObject(19940, -710.85315, 2604.06128, 1008.61865,   0.00002, 89.99999, 179.99979);
	CreateDynamicObject(19940, -710.85315, 2606.06128, 1008.61865,   0.00002, 89.99999, 179.99979);
	CreateDynamicObject(19940, -710.85315, 2608.06128, 1008.61865,   0.00002, 89.99999, 179.99979);
	CreateDynamicObject(19940, -710.85315, 2610.06128, 1008.61865,   0.00002, 89.99999, 179.99979);
	CreateDynamicObject(19940, -710.91321, 2610.92139, 1007.82892,   89.99999, -28.07356, 118.07337);
	CreateDynamicObject(19940, -710.91321, 2604.52124, 1007.82892,   89.99999, -28.07356, 118.07337);
	CreateDynamicObject(19392, -714.19275, 2603.11182, 1006.89429,   -0.00001, 0.00000, -0.00006);
	CreateDynamicObject(19456, -714.18835, 2609.51953, 1006.85840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19456, -714.51965, 2609.51953, 1006.85840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19940, -711.06384, 2604.31641, 1007.62067,   89.99999, 791.46533, 108.53464);
	CreateDynamicObject(19940, -711.06384, 2604.31641, 1005.62067,   89.99999, 791.46533, 108.53464);
	CreateDynamicObject(19369, -711.21106, 2602.71753, 1006.85840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19940, -711.05383, 2611.07617, 1007.62067,   89.99999, 800.49634, -80.49635);
	CreateDynamicObject(19940, -711.05383, 2611.07617, 1005.62067,   89.99999, 800.49634, -80.49635);
	CreateDynamicObject(19087, -710.92468, 2611.12012, 1006.84845,   0.00000, 90.00002, 90.00000);
	CreateDynamicObject(19087, -710.92468, 2608.69019, 1006.84845,   0.00000, 90.00002, 90.00000);
	CreateDynamicObject(19087, -710.92468, 2606.27026, 1006.84845,   55.00000, 90.00002, 90.00000);
	CreateDynamicObject(1897, -701.25464, 2608.34619, 1006.48846,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1897, -701.25464, 2608.34619, 1004.25848,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1897, -701.25464, 2605.25830, 1006.48846,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1897, -701.25464, 2605.25830, 1004.25848,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1897, -701.25464, 2606.32422, 1007.65900,   180.00000, 450.00000, 270.00000);
	CreateDynamicObject(1897, -701.25256, 2607.29932, 1007.68414,   360.00000, 450.00000, 450.00000);
	CreateDynamicObject(19940, -701.33191, 2610.11133, 1011.52948,   0.00000, 90.00002, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2608.11133, 1011.52948,   0.00000, 90.00002, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2606.11133, 1011.52948,   0.00000, 90.00002, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2604.11133, 1011.52948,   0.00000, 90.00002, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2602.11133, 1011.52948,   0.00000, 90.00002, 0.00000);
	CreateDynamicObject(19940, -710.34192, 2601.14160, 1011.52948,   0.00002, 90.00001, 89.99990);
	CreateDynamicObject(19940, -708.34192, 2601.14160, 1011.52948,   0.00002, 90.00001, 89.99990);
	CreateDynamicObject(19940, -706.34192, 2601.14160, 1011.52948,   0.00002, 90.00001, 89.99990);
	CreateDynamicObject(19940, -704.34192, 2601.14160, 1011.52948,   0.00002, 90.00001, 89.99990);
	CreateDynamicObject(19940, -702.34192, 2601.14160, 1011.52948,   0.00002, 90.00001, 89.99990);
	CreateDynamicObject(19940, -709.90198, 2611.06128, 1011.52948,   0.00003, 90.00001, 89.99988);
	CreateDynamicObject(19940, -707.90198, 2611.06128, 1011.52948,   0.00003, 90.00001, 89.99988);
	CreateDynamicObject(19940, -705.90198, 2611.06128, 1011.52948,   0.00003, 90.00001, 89.99988);
	CreateDynamicObject(19940, -703.90198, 2611.06128, 1011.52948,   0.00003, 90.00001, 89.99988);
	CreateDynamicObject(19940, -701.90198, 2611.06128, 1011.52948,   0.00003, 90.00001, 89.99988);
	CreateDynamicObject(19940, -710.85315, 2602.06128, 1011.52948,   0.00002, 89.99998, 179.99974);
	CreateDynamicObject(19940, -710.85315, 2604.06128, 1011.52948,   0.00002, 89.99998, 179.99974);
	CreateDynamicObject(19940, -710.85315, 2606.06128, 1011.52948,   0.00002, 89.99998, 179.99974);
	CreateDynamicObject(19940, -710.85315, 2608.06128, 1011.52948,   0.00002, 89.99998, 179.99974);
	CreateDynamicObject(19940, -710.85315, 2610.06128, 1011.52948,   0.00002, 89.99998, 179.99974);
	CreateDynamicObject(19940, -701.33191, 2610.11133, 1004.90735,   0.00000, 90.00002, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2608.11133, 1004.90735,   0.00000, 90.00002, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2606.11133, 1004.90735,   0.00000, 90.00002, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2604.11133, 1004.90735,   0.00000, 90.00002, 0.00000);
	CreateDynamicObject(19940, -701.33191, 2602.11133, 1004.90735,   0.00000, 90.00002, 0.00000);
	CreateDynamicObject(19940, -710.34192, 2601.14160, 1004.90735,   0.00003, 90.00001, 89.99988);
	CreateDynamicObject(19940, -708.34192, 2601.14160, 1004.90735,   0.00003, 90.00001, 89.99988);
	CreateDynamicObject(19940, -706.34192, 2601.14160, 1004.90735,   0.00003, 90.00001, 89.99988);
	CreateDynamicObject(19940, -704.34192, 2601.14160, 1004.90735,   0.00003, 90.00001, 89.99988);
	CreateDynamicObject(19940, -702.34192, 2601.14160, 1004.90735,   0.00003, 90.00001, 89.99988);
	CreateDynamicObject(19940, -709.90198, 2611.06128, 1004.90735,   0.00004, 90.00001, 89.99986);
	CreateDynamicObject(19940, -707.90198, 2611.06128, 1004.90735,   0.00004, 90.00001, 89.99986);
	CreateDynamicObject(19940, -705.90198, 2611.06128, 1004.90735,   0.00004, 90.00001, 89.99986);
	CreateDynamicObject(19940, -703.90198, 2611.06128, 1004.90735,   0.00004, 90.00001, 89.99986);
	CreateDynamicObject(19940, -701.90198, 2611.06128, 1004.90735,   0.00004, 90.00001, 89.99986);
	CreateDynamicObject(19940, -710.85120, 2602.06128, 1004.90936,   0.00002, 89.99998, 179.99969);
	CreateDynamicObject(19940, -710.85120, 2603.30127, 1004.90936,   0.00002, 89.99998, 179.99969);
	CreateDynamicObject(19940, -710.90320, 2606.06128, 1004.90735,   0.00002, 89.99998, 179.99969);
	CreateDynamicObject(19940, -710.90320, 2608.06128, 1004.90735,   0.00002, 89.99998, 179.99969);
	CreateDynamicObject(19940, -710.90320, 2610.06128, 1004.90735,   0.00002, 89.99998, 179.99969);
	CreateDynamicObject(2773, -709.60852, 2604.40039, 1005.62842,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2412, -702.10425, 2608.85815, 1005.10840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2412, -702.10425, 2607.17798, 1005.10840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2412, -702.10425, 2605.36816, 1005.10840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2001, -701.81470, 2610.45972, 1005.10840,   0.00000, 0.00000, -2.20001);
	CreateDynamicObject(2001, -701.77710, 2601.62012, 1005.10840,   0.00000, 0.00000, -59.09999);
	CreateDynamicObject(1708, -703.08936, 2601.77930, 1005.10840,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1708, -704.58936, 2601.77930, 1005.10840,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1708, -706.08936, 2601.77930, 1005.10840,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1708, -703.65967, 2610.33887, 1005.10840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(1708, -705.15967, 2610.33887, 1005.10840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(1708, -706.65967, 2610.33887, 1005.10840,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(11721, -701.20508, 2609.56641, 1007.08832,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(11721, -701.20508, 2603.55664, 1007.08832,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19366, -705.93848, 2606.08032, 1011.49817,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19940, -707.70178, 2606.68433, 1011.60858,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19940, -707.69983, 2605.47437, 1011.60858,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19940, -704.17712, 2606.68433, 1011.60858,   0.00000, 90.00001, 0.00000);
	CreateDynamicObject(19940, -704.17517, 2605.47437, 1011.60858,   0.00000, 90.00001, 0.00000);
	CreateDynamicObject(19940, -705.16028, 2604.49048, 1011.60858,   0.00000, 90.00001, 270.00000);
	CreateDynamicObject(19940, -706.71460, 2604.48828, 1011.60858,   0.00000, 90.00001, 270.00000);
	CreateDynamicObject(19940, -705.16028, 2607.67261, 1011.60858,   -0.00001, 90.00001, -89.99995);
	CreateDynamicObject(19940, -706.71460, 2607.67041, 1011.60858,   -0.00001, 90.00001, -89.99995);
	CreateDynamicObject(2709, -710.62354, 2601.41138, 1011.60852,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(2709, -701.52283, 2610.80127, 1011.60852,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19834, -706.86853, 2614.52246, 1007.42865,   0.00000, 90.00000, 135.00000);
	CreateDynamicObject(19834, -706.86853, 2614.52246, 1005.09851,   0.00000, 90.00000, 135.00000);
	CreateDynamicObject(19834, -713.91980, 2614.52246, 1007.42865,   0.00000, 89.99998, -135.00000);
	CreateDynamicObject(19834, -713.91980, 2614.52246, 1005.09851,   0.00000, 89.99998, -135.00000);
	CreateDynamicObject(19834, -714.05420, 2611.04248, 1007.46954,   0.00000, 89.99997, -135.00000);
	CreateDynamicObject(19834, -714.05420, 2611.04248, 1005.13940,   0.00000, 89.99997, -135.00000);
	CreateDynamicObject(19834, -706.87097, 2611.60840, 1007.45947,   0.00000, 89.99996, -135.00000);
	CreateDynamicObject(19834, -706.87097, 2611.60840, 1005.12933,   0.00000, 89.99996, -135.00000);
	CreateDynamicObject(19834, -713.92383, 2611.60034, 1007.44952,   -0.00001, 89.99998, -45.00000);
	CreateDynamicObject(19834, -713.92383, 2611.60034, 1005.11938,   -0.00001, 89.99998, -45.00000);
	CreateDynamicObject(19940, -710.90320, 2604.07129, 1004.90735,   0.00002, 89.99998, 179.99969);
	CreateDynamicObject(1671, -712.18408, 2609.16406, 1005.58466,   0.00000, 0.00000, 81.40000);
	CreateDynamicObject(1671, -712.29175, 2606.20508, 1005.58466,   0.00000, 0.00000, 101.40002);
	CreateDynamicObject(1499, -714.30432, 2602.37744, 1005.14429,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, -722.74731, 2604.37012, 1005.17847,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(1518, -720.13806, 2611.20850, 1007.09839,   2.00000, 0.00000, 0.00000);
	CreateDynamicObject(1518, -719.50745, 2611.20850, 1007.09839,   2.00000, 0.00000, 0.00000);
	CreateDynamicObject(1518, -718.87683, 2611.20850, 1007.09839,   2.00000, 0.00000, 0.00000);
	CreateDynamicObject(1518, -718.25647, 2611.20850, 1007.09839,   2.00000, 0.00000, 0.00000);
	CreateDynamicObject(19569, -717.88708, 2611.13818, 1006.86835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1518, -720.13806, 2611.20850, 1007.66833,   2.00000, 0.00001, 0.00000);
	CreateDynamicObject(1518, -719.50745, 2611.20850, 1007.66833,   2.00000, 0.00001, 0.00000);
	CreateDynamicObject(1518, -718.87683, 2611.20850, 1007.66833,   2.00000, 0.00001, 0.00000);
	CreateDynamicObject(1518, -718.25647, 2611.20850, 1007.66833,   2.00000, 0.00001, 0.00000);
	CreateDynamicObject(11721, -716.48462, 2611.21631, 1007.41827,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(11721, -721.55432, 2611.21631, 1007.41827,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(19832, -715.93384, 2601.32129, 1007.25903,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject(19832, -716.31384, 2601.32129, 1007.25903,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject(19832, -716.69385, 2601.32129, 1007.25903,   90.00000, 0.00000, 180.00000);
	CreateDynamicObject(1898, -716.81653, 2601.46973, 1007.25592,   0.00000, 99.50001, 270.00000);
	CreateDynamicObject(1898, -715.81653, 2601.46973, 1007.25592,   0.00000, 99.50001, 270.00000);
	CreateDynamicObject(1898, -716.01648, 2601.46973, 1007.25592,   0.00000, 99.50001, 270.00000);
	CreateDynamicObject(1898, -716.21643, 2601.46973, 1007.25592,   0.00000, 99.50001, 270.00000);
	CreateDynamicObject(1898, -716.41638, 2601.46973, 1007.25592,   0.00000, 99.50001, 270.00000);
	CreateDynamicObject(1898, -716.61633, 2601.46973, 1007.25592,   0.00000, 99.50001, 270.00000);
	CreateDynamicObject(2689, -715.81226, 2601.61865, 1006.91077,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19834, -722.84387, 2601.56982, 1007.34357,   0.00000, 89.99998, -45.00000);
	CreateDynamicObject(19834, -722.84387, 2601.56982, 1005.01343,   0.00000, 89.99998, -45.00000);
	CreateDynamicObject(19834, -722.84387, 2611.01953, 1007.34357,   -0.00001, 90.00000, 44.99998);
	CreateDynamicObject(19834, -722.84387, 2611.01953, 1005.01343,   -0.00001, 90.00000, 44.99998);
	CreateDynamicObject(2183, -718.52124, 2604.73682, 1005.17847,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19893, -718.68335, 2605.36206, 1005.99866,   0.00000, 0.00000, 74.40001);
	CreateDynamicObject(19893, -718.64258, 2606.95996, 1005.99866,   0.00000, 0.00000, 91.10001);
	CreateDynamicObject(19893, -719.59241, 2606.95337, 1005.99866,   0.00000, 0.00000, -95.50001);
	CreateDynamicObject(19825, -710.84363, 2610.19873, 1009.32867,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19327, -714.09778, 2603.62720, 1007.19891,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19834, -714.63367, 2611.05444, 1007.38361,   0.00000, 89.99998, -45.00000);
	CreateDynamicObject(19834, -714.63367, 2611.05444, 1005.05347,   0.00000, 89.99998, -45.00000);
	CreateDynamicObject(19834, -714.63367, 2601.54419, 1007.38361,   -0.00001, 90.00000, 44.99998);
	CreateDynamicObject(19834, -714.63367, 2601.54419, 1005.05347,   -0.00001, 90.00000, 44.99998);
	CreateDynamicObject(3078, -710.86426, 2604.79053, 1009.39935,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(3078, -710.86938, 2604.81055, 1009.36932,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19815, -716.34949, 2599.34009, 1000.96570,   55.00000, 0.00001, 89.99984);
	CreateDynamicObject(19815, -715.52942, 2599.34009, 1001.53937,   55.00000, 0.00001, 89.99984);
	CreateDynamicObject(19815, -714.71057, 2599.34009, 1002.11298,   55.00000, 0.00001, 89.99984);
	CreateDynamicObject(19815, -713.89978, 2599.34009, 1002.68079,   55.00000, 0.00001, 89.99984);
	CreateDynamicObject(19815, -713.07947, 2599.34009, 1003.25433,   55.00000, 0.00001, 89.99984);
	CreateDynamicObject(19815, -712.26868, 2599.34009, 1003.82214,   55.00000, 0.00001, 89.99984);
	CreateDynamicObject(19815, -711.46570, 2599.34009, 1004.38428,   55.00000, 0.00001, 89.99984);
	CreateDynamicObject(19815, -710.92517, 2599.34009, 1004.75885,   55.00000, 0.00001, 89.99984);
	CreateDynamicObject(19815, -710.55505, 2599.34009, 1004.69885,   89.99999, 466.53329, -16.53343);
	CreateDynamicObject(19815, -709.66418, 2599.34009, 1004.70288,   89.99999, 466.53329, -16.53343);
	CreateDynamicObject(19462, -714.46277, 2599.11694, 1006.29651,   35.00000, 89.99999, 269.99994);
	CreateDynamicObject(19392, -710.92603, 2599.05029, 1006.86426,   -0.00001, -0.00001, -0.00006);
	CreateDynamicObject(19392, -710.60571, 2599.05029, 1006.86426,   -0.00001, -0.00001, -0.00006);
	CreateDynamicObject(19377, -715.33838, 2597.73291, 1005.11426,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, -715.33838, 2600.53271, 1005.11426,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19433, -719.14294, 2599.08203, 1003.54437,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19462, -721.50232, 2599.11694, 1000.81848,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19433, -719.86279, 2599.08203, 1004.26422,   90.00000, 270.00000, 90.00000);
	CreateDynamicObject(19392, -720.15918, 2599.11133, 1002.65442,   -0.00001, -0.00001, -0.00006);
	CreateDynamicObject(19392, -719.83887, 2599.11133, 1002.65442,   -0.00001, -0.00001, -0.00006);
	CreateDynamicObject(19377, -725.03857, 2595.58301, 1000.83374,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19456, -720.16052, 2592.70166, 1002.66968,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19456, -724.93066, 2591.20166, 1002.66968,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19456, -727.25867, 2596.02148, 1002.66968,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19456, -724.93066, 2600.68164, 1002.66968,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19302, -723.71387, 2592.16504, 1002.15985,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19302, -723.71387, 2595.63477, 1002.15985,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19447, -728.26660, 2594.66821, 1002.66504,   0.00001, 0.00001, 89.99995);
	CreateDynamicObject(19940, -723.45667, 2594.80005, 1003.40564,   89.99999, 134.99998, -45.00002);
	CreateDynamicObject(19447, -728.26660, 2597.95850, 1002.66504,   0.00001, 0.00001, 89.99992);
	CreateDynamicObject(19940, -723.45667, 2598.09033, 1003.40564,   89.99999, 154.47119, -64.47124);
	CreateDynamicObject(19302, -723.71582, 2600.90479, 1002.15985,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19940, -723.45471, 2594.80103, 1001.89575,   89.99999, 134.99998, -45.00002);
	CreateDynamicObject(19447, -728.26660, 2594.93823, 1002.66504,   0.00001, 0.00001, 89.99995);
	CreateDynamicObject(19940, -723.45471, 2598.09131, 1001.89575,   89.99999, 154.47119, -64.47124);
	CreateDynamicObject(19447, -728.26660, 2598.22852, 1002.66504,   0.00001, 0.00001, 89.99992);
	CreateDynamicObject(19377, -725.03857, 2595.58301, 1004.22333,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(11728, -720.21851, 2595.75293, 1002.60956,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(14877, -711.79248, 2599.34180, 1002.96490,   -0.00001, 0.00001, -0.00012);
	CreateDynamicObject(1499, -710.69482, 2598.30762, 1005.11426,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3078, -710.47461, 2599.06104, 1007.81927,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19939, -710.50171, 2599.07324, 1007.85437,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(950, -710.46301, 2602.96997, 1005.63879,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(950, -707.89258, 2601.53003, 1005.63879,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(950, -709.86340, 2610.75000, 1005.63879,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2649, -721.83911, 2592.06665, 1003.65930,   180.00000, 0.00000, 180.00000);
	CreateDynamicObject(19834, -719.70923, 2597.86401, 1003.06952,   0.00000, 89.99998, -45.00000);
	CreateDynamicObject(19834, -719.70923, 2597.86401, 1000.73938,   0.00000, 89.99998, -45.00000);
	CreateDynamicObject(19834, -719.70923, 2600.40430, 1003.06952,   0.00000, 89.99999, 44.99998);
	CreateDynamicObject(19834, -719.70923, 2600.40430, 1000.73938,   0.00000, 89.99999, 44.99998);
	CreateDynamicObject(19378, -715.86633, 2592.70898, 1005.11426,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19461, -710.69727, 2592.63135, 1003.44952,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19461, -715.41699, 2597.36377, 1006.95020,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19392, -711.02136, 2595.71313, 1006.95020,   -0.00001, 0.00001, -0.00004);
	CreateDynamicObject(19392, -710.70105, 2595.71313, 1006.95020,   -0.00001, 0.00001, -0.00004);
	CreateDynamicObject(19834, -710.55664, 2597.40015, 1007.80975,   0.00000, 89.99996, -135.00000);
	CreateDynamicObject(19834, -710.55664, 2597.40015, 1005.47961,   0.00000, 89.99996, -135.00000);
	CreateDynamicObject(19834, -710.59668, 2597.34009, 1007.73975,   -0.00002, 89.99996, -89.99994);
	CreateDynamicObject(19834, -710.59668, 2597.34009, 1005.40961,   -0.00002, 89.99996, -89.99994);
	CreateDynamicObject(19834, -710.65503, 2597.26611, 1007.73975,   -0.00003, 89.99997, 0.00005);
	CreateDynamicObject(19834, -710.65503, 2597.26611, 1005.40961,   -0.00003, 89.99997, 0.00005);
	CreateDynamicObject(19461, -719.91675, 2592.48389, 1006.95020,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19405, -710.70166, 2592.55176, 1006.95020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19466, -710.74622, 2592.55322, 1007.02429,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19405, -711.01196, 2592.55176, 1006.95020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19466, -711.02649, 2592.55322, 1007.02429,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1656, -710.87793, 2592.81055, 1006.34436,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1656, -710.87793, 2592.27051, 1006.34235,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1656, -710.87793, 2592.27051, 1007.85364,   0.00001, -179.99997, 89.99997);
	CreateDynamicObject(1656, -710.87988, 2592.81055, 1007.85559,   0.00001, -179.99997, 89.99997);
	CreateDynamicObject(1656, -710.87793, 2591.59155, 1007.10431,   0.00001, -269.99997, 89.99998);
	CreateDynamicObject(1656, -710.87988, 2591.58960, 1007.64435,   0.00001, -269.99997, 89.99998);
	CreateDynamicObject(1656, -710.88696, 2593.51953, 1007.10431,   0.00001, -269.99997, -90.00004);
	CreateDynamicObject(1656, -710.88501, 2593.52148, 1007.64435,   0.00001, -269.99997, -90.00004);
	CreateDynamicObject(19368, -711.00659, 2589.47314, 1006.95020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19368, -710.71631, 2589.47314, 1006.95020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19461, -715.45703, 2587.95386, 1006.95020,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19378, -715.86633, 2592.70898, 1008.76477,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19834, -711.15051, 2588.08594, 1007.61554,   0.00000, 89.99996, -135.00000);
	CreateDynamicObject(19834, -711.15051, 2588.08594, 1005.28540,   0.00000, 89.99996, -135.00000);
	CreateDynamicObject(19834, -719.79150, 2588.08594, 1007.61554,   -0.00001, 89.99996, -45.00000);
	CreateDynamicObject(19834, -719.79150, 2588.08594, 1005.28540,   -0.00001, 89.99996, -45.00000);
	CreateDynamicObject(19834, -719.79150, 2597.22607, 1007.70532,   -0.00001, 89.99998, 44.99998);
	CreateDynamicObject(19834, -719.79150, 2597.22607, 1005.37518,   -0.00001, 89.99998, 44.99998);
	CreateDynamicObject(19834, -711.14124, 2597.22607, 1007.70532,   0.00000, 90.00000, 134.99995);
	CreateDynamicObject(19834, -711.14124, 2597.22607, 1005.37518,   0.00000, 90.00000, 134.99995);
	CreateDynamicObject(950, -719.12048, 2588.86670, 1005.73889,   0.00000, 0.00000, 129.09988);
	CreateDynamicObject(2674, -716.20398, 2591.55737, 1005.21021,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2674, -712.05530, 2590.85400, 1005.21021,   0.00000, 0.00000, 52.49998);
	CreateDynamicObject(2674, -717.74707, 2595.99316, 1005.21021,   0.00000, 0.00000, -167.70006);
	CreateDynamicObject(2674, -715.20276, 2594.83398, 1005.21021,   0.00000, 0.00000, 91.09995);
	CreateDynamicObject(1820, -712.52332, 2592.01294, 1005.20020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1499, -710.81677, 2594.97754, 1005.17834,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18765, -702.69434, 2596.02808, 1002.62842,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19377, -702.92493, 2600.75049, 1003.38763,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, -698.59448, 2595.88037, 1003.38763,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19377, -702.92493, 2590.98071, 1003.38763,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18765, -702.71436, 2596.02808, 1011.08813,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19462, -709.32312, 2596.32690, 1008.64880,   0.00000, 89.99999, 179.99995);
	CreateDynamicObject(19392, -707.63184, 2599.05420, 1006.87842,   -0.00001, -0.00001, -0.00006);
	CreateDynamicObject(19392, -707.31152, 2599.05420, 1006.87842,   -0.00001, -0.00001, -0.00006);
	CreateDynamicObject(19377, -707.31506, 2592.66064, 1003.38763,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19377, -707.61536, 2592.66064, 1003.38763,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19368, -709.08569, 2591.59302, 1006.84009,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1708, -706.64990, 2593.45923, 1005.10840,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(2612, -702.44092, 2591.11182, 1007.39813,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2612, -707.17151, 2593.68164, 1007.51825,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(2614, -698.73743, 2595.91016, 1007.55847,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19825, -707.19189, 2599.04858, 1008.08893,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3078, -710.58472, 2595.73096, 1007.89935,   89.99999, 179.99998, -90.00001);
	CreateDynamicObject(19939, -710.61182, 2595.74316, 1007.93445,   0.00000, 90.00001, 0.00000);
	CreateDynamicObject(3078, -707.75146, 2599.06299, 1007.85931,   89.99999, 269.96042, 0.03952);
	CreateDynamicObject(19939, -707.72437, 2599.05078, 1007.89441,   0.00000, 90.00001, 179.99989);
	CreateDynamicObject(1499, -707.43689, 2598.31763, 1005.10828,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19834, -707.76868, 2591.72021, 1007.57959,   0.00000, 89.99997, -135.00000);
	CreateDynamicObject(19834, -707.76868, 2591.72021, 1005.24945,   0.00000, 89.99997, -135.00000);
	CreateDynamicObject(19834, -710.56580, 2591.71045, 1007.57959,   0.00000, 89.99996, -45.00000);
	CreateDynamicObject(19834, -710.56580, 2591.71045, 1005.24945,   0.00000, 89.99996, -45.00000);
	CreateDynamicObject(3078, -709.24316, 2591.72021, 1008.18958,   89.99999, 584.96039, -44.96052);
	CreateDynamicObject(19939, -709.25537, 2591.69312, 1008.09454,   0.00000, 90.00001, 89.99985);
	CreateDynamicObject(3078, -709.24316, 2591.72021, 1007.96936,   89.99999, 584.96039, -44.96052);
	CreateDynamicObject(19940, -716.07751, 2597.84424, 1001.38947,   -34.99999, 90.00001, 89.99984);
	CreateDynamicObject(19940, -714.43933, 2597.84424, 1002.53662,   -34.99999, 90.00001, 89.99984);
	CreateDynamicObject(19940, -712.80090, 2597.84424, 1003.68372,   -34.99999, 90.00001, 89.99984);
	CreateDynamicObject(19940, -709.01294, 2611.31274, 1006.59949,   89.99999, 701.46533, -71.46536);
	CreateDynamicObject(19940, -709.01294, 2611.31274, 1004.59955,   89.99999, 701.46533, -71.46536);
	CreateDynamicObject(19940, -707.48315, 2611.31274, 1006.59949,   89.99999, 701.46533, -71.46534);
	CreateDynamicObject(19940, -707.48315, 2611.31274, 1004.59955,   89.99999, 701.46533, -71.46534);
	CreateDynamicObject(19940, -708.41113, 2611.31421, 1007.60748,   -0.00001, -0.00001, -90.00007);
	CreateDynamicObject(19940, -710.05042, 2600.89087, 1006.60437,   89.99999, 701.46533, -71.46536);
	CreateDynamicObject(19940, -710.05042, 2600.89087, 1004.60443,   89.99999, 701.46533, -71.46536);
	CreateDynamicObject(19940, -708.52063, 2600.89087, 1006.60437,   89.99999, 701.46533, -71.46534);
	CreateDynamicObject(19940, -708.52063, 2600.89087, 1004.60443,   89.99999, 701.46533, -71.46534);
	CreateDynamicObject(19940, -709.44861, 2600.89233, 1007.61237,   -0.00001, -0.00001, -90.00007);
	CreateDynamicObject(19940, -713.25806, 2611.30688, 1006.63025,   89.99999, 701.46533, -71.46536);
	CreateDynamicObject(19940, -713.25806, 2611.30688, 1004.63031,   89.99999, 701.46533, -71.46536);
	CreateDynamicObject(19940, -711.72827, 2611.30688, 1006.63025,   89.99999, 701.46533, -71.46534);
	CreateDynamicObject(19940, -711.72827, 2611.30688, 1004.63031,   89.99999, 701.46533, -71.46534);
	CreateDynamicObject(19940, -712.65625, 2611.30835, 1007.63824,   -0.00001, -0.00001, -90.00007);
	CreateDynamicObject(19940, -714.34534, 2602.36621, 1006.64026,   89.99999, 791.46533, -71.46536);
	CreateDynamicObject(19940, -714.34534, 2602.36621, 1004.64032,   89.99999, 791.46533, -71.46536);
	CreateDynamicObject(19940, -714.34534, 2603.89600, 1006.64026,   89.99999, 791.46533, -71.46536);
	CreateDynamicObject(19940, -714.34534, 2603.89600, 1004.64032,   89.99999, 791.46533, -71.46536);
	CreateDynamicObject(19940, -714.34680, 2602.96802, 1007.64825,   0.00000, 0.00001, -0.00012);
	CreateDynamicObject(1569, -701.33423, 2605.33105, 1005.10840,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(1569, -701.33423, 2608.32080, 1005.10840,   -0.00001, 0.00000, -89.99998);
	CreateDynamicObject(2961, -703.08655, 2611.03906, 1006.71857,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(2962, -703.08887, 2611.02930, 1006.71863,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(11713, -702.56531, 2611.05591, 1006.93842,   -0.00001, 0.00000, -89.99998);
	CreateDynamicObject(2690, -702.59058, 2610.97949, 1006.90851,   0.00000, 0.00001, 0.00000);
	CreateDynamicObject(19099, -711.39819, 2610.84058, 1006.22845,   181.78799, 105.00000, 46.00000);
	CreateDynamicObject(2611, -714.03638, 2609.98804, 1007.15411,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1433, -702.06250, 2602.87549, 1005.27844,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16779, -705.95496, 2606.05200, 1011.71979,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19173, -705.07947, 2601.15234, 1007.61871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2191, -713.37463, 2613.56738, 1005.12427,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(2000, -713.39954, 2612.50903, 1005.12427,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2000, -713.39954, 2611.99902, 1005.12427,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2066, -713.70325, 2610.52100, 1005.14429,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2002, -711.83752, 2604.00195, 1005.14429,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19810, -714.08777, 2604.11426, 1007.29449,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2193, -721.35547, 2602.07031, 1005.17847,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(2172, -718.95544, 2602.03076, 1005.17847,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2191, -722.35278, 2606.18677, 1005.17847,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2356, -721.18591, 2603.22607, 1005.17847,   0.00000, 0.00000, 127.90011);
	CreateDynamicObject(2356, -719.66650, 2603.14233, 1005.17847,   0.00000, 0.00000, -165.19986);
	CreateDynamicObject(2202, -715.13074, 2606.01172, 1005.17847,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2197, -715.01953, 2609.55225, 1005.17847,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2612, -722.81689, 2608.72852, 1007.13824,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2205, -719.85193, 2610.51831, 1005.17847,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2200, -714.76062, 2608.59082, 1005.17847,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1806, -719.04688, 2609.26807, 1005.17847,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2059, -719.25806, 2610.70020, 1006.12457,   0.00000, 0.00000, -33.30000);
	CreateDynamicObject(2162, -722.13733, 2611.01025, 1005.17847,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2163, -717.12549, 2611.02783, 1005.17847,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1808, -717.71313, 2601.75000, 1005.17847,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19347, -718.16833, 2610.53955, 1006.11877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19773, -716.71240, 2610.78320, 1006.12872,   0.00000, 90.00000, 160.69998);
	CreateDynamicObject(19099, -716.78564, 2601.63184, 1007.20416,   270.00000, 270.00000, 0.00000);
	CreateDynamicObject(2356, -720.10498, 2605.30371, 1005.17847,   0.00000, 0.00000, -70.19987);
	CreateDynamicObject(2356, -721.24817, 2607.11328, 1005.17847,   0.00000, 0.00000, -96.49986);
	CreateDynamicObject(2356, -718.18958, 2606.99463, 1005.17847,   0.00000, 0.00000, 92.30010);
	CreateDynamicObject(2356, -718.25989, 2605.33716, 1005.17847,   0.00000, 0.00000, 89.10015);
	CreateDynamicObject(19894, -719.74780, 2605.34082, 1005.99866,   0.00000, 0.00000, -95.50001);
	CreateDynamicObject(19807, -718.61475, 2605.92676, 1006.03857,   0.00000, 0.00000, 56.80001);
	CreateDynamicObject(19807, -718.39636, 2610.65088, 1006.16864,   0.00000, 0.00000, -5.99999);
	CreateDynamicObject(330, -718.74585, 2607.68799, 1005.95880,   90.00000, -96.09999, 0.00000);
	CreateDynamicObject(2059, -719.47314, 2606.09180, 1006.00250,   0.00000, 0.00000, -123.10000);
	CreateDynamicObject(18075, -718.63647, 2608.56543, 1008.52905,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19808, -719.57080, 2610.29492, 1006.14899,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2281, -704.21582, 2610.59155, 1007.17877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, -712.35547, 2601.18750, 1005.13330,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2282, -705.94043, 2610.57959, 1007.05835,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1742, -706.75732, 2613.92578, 1005.12427,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2002, -707.38611, 2612.32764, 1005.12427,   0.00000, 0.00000, 267.00000);
	CreateDynamicObject(2273, -707.35522, 2601.63452, 1007.17847,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19940, -711.85022, 2597.84619, 1004.34583,   -34.99999, 90.00003, 89.99987);
	CreateDynamicObject(19940, -716.07751, 2600.43555, 1001.38947,   -34.99995, 90.00001, 89.99980);
	CreateDynamicObject(19940, -714.43933, 2600.43555, 1002.53662,   -34.99995, 90.00001, 89.99980);
	CreateDynamicObject(19940, -712.80090, 2600.43555, 1003.68372,   -34.99995, 90.00001, 89.99980);
	CreateDynamicObject(19940, -711.85022, 2600.43750, 1004.34583,   -34.99995, 90.00003, 89.99982);
	CreateDynamicObject(19940, -710.15881, 2597.84814, 1004.88074,   0.00001, 90.00002, 89.99988);
	CreateDynamicObject(19940, -710.15881, 2600.43970, 1004.88074,   0.00001, 90.00002, 89.99988);
	CreateDynamicObject(19940, -710.75830, 2598.30469, 1006.61023,   89.99999, 775.74774, -55.74781);
	CreateDynamicObject(19940, -710.75830, 2598.30469, 1004.61029,   89.99999, 775.74774, -55.74781);
	CreateDynamicObject(19940, -710.75830, 2599.83447, 1006.61023,   89.99999, 775.74774, -55.74779);
	CreateDynamicObject(19940, -710.75830, 2599.83447, 1004.61029,   89.99999, 775.74774, -55.74779);
	CreateDynamicObject(19940, -710.75977, 2598.90649, 1007.61823,   0.00000, 0.00000, -0.00012);
	CreateDynamicObject(19940, -719.99146, 2598.36572, 1002.40039,   89.99999, 775.74774, -55.74781);
	CreateDynamicObject(19940, -719.99146, 2598.36572, 1000.40045,   89.99999, 775.74774, -55.74781);
	CreateDynamicObject(19940, -719.99146, 2599.89551, 1002.40039,   89.99999, 775.74774, -55.74779);
	CreateDynamicObject(19940, -719.99146, 2599.89551, 1000.40045,   89.99999, 775.74774, -55.74779);
	CreateDynamicObject(19940, -719.99292, 2598.96753, 1003.40839,   0.00000, 0.00000, -0.00012);
	CreateDynamicObject(1771, -725.78625, 2592.06519, 1001.49908,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19302, -723.71582, 2593.89502, 1002.15985,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19302, -723.71582, 2597.39502, 1002.15985,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19302, -723.71582, 2599.15479, 1002.15985,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19304, -723.71680, 2593.05078, 1004.05951,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, -723.71680, 2596.57080, 1004.05951,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, -723.69678, 2600.04102, 1004.05951,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2602, -726.78455, 2593.72363, 1001.41003,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(2670, -723.30737, 2593.50024, 1000.99969,   0.00000, 0.00000, -56.59999);
	CreateDynamicObject(19940, -733.07263, 2594.80005, 1003.40564,   89.99999, 134.99998, -45.00002);
	CreateDynamicObject(19940, -733.07068, 2594.80103, 1001.89575,   89.99999, 134.99998, -45.00002);
	CreateDynamicObject(19940, -733.07263, 2598.09033, 1003.40564,   89.99999, 154.47119, -64.47124);
	CreateDynamicObject(19940, -733.07068, 2598.09131, 1001.89575,   89.99999, 154.47119, -64.47124);
	CreateDynamicObject(1771, -725.78625, 2595.73535, 1001.49908,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(2602, -726.78455, 2597.39355, 1001.41003,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(1771, -725.78625, 2598.99512, 1001.49908,   0.00001, 0.00000, 89.99995);
	CreateDynamicObject(2602, -726.01392, 2600.23340, 1001.41003,   0.00001, 0.00000, 359.99994);
	CreateDynamicObject(2310, -720.66064, 2594.28076, 1001.39972,   0.00000, 0.00000, 16.40000);
	CreateDynamicObject(2310, -720.70618, 2593.38696, 1001.39972,   0.00000, 0.00000, -23.10000);
	CreateDynamicObject(2310, -720.59509, 2597.49756, 1001.39972,   0.00000, 0.00000, -0.90000);
	CreateDynamicObject(2670, -721.07190, 2595.93481, 1000.99969,   0.00000, 0.00000, 173.10001);
	CreateDynamicObject(1738, -722.40918, 2591.49121, 1001.45984,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1738, -722.40918, 2600.34131, 1001.45984,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19940, -710.85364, 2594.96753, 1006.69617,   89.99999, 798.13239, -78.13245);
	CreateDynamicObject(19940, -710.85364, 2594.96753, 1004.69623,   89.99999, 798.13239, -78.13245);
	CreateDynamicObject(19940, -710.85364, 2596.49731, 1006.69617,   89.99999, 798.13239, -78.13245);
	CreateDynamicObject(19940, -710.85364, 2596.49731, 1004.69623,   89.99999, 798.13239, -78.13245);
	CreateDynamicObject(19940, -710.85510, 2595.56934, 1007.70416,   -0.00001, 0.00001, -0.00010);
	CreateDynamicObject(18075, -715.16797, 2590.65918, 1008.70105,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2186, -719.25891, 2595.86084, 1005.20020,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2181, -716.97363, 2596.69336, 1005.20020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2173, -715.53992, 2591.26050, 1005.20020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14632, -710.24573, 2586.55371, 1006.69049,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2167, -719.28467, 2590.95605, 1005.20020,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(2167, -719.28467, 2591.87598, 1005.20020,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(2167, -719.27466, 2593.70605, 1005.20020,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(2167, -719.27466, 2592.78613, 1005.20020,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(1999, -711.61743, 2590.30713, 1005.20020,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2002, -713.23828, 2596.71777, 1005.20020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2055, -711.13867, 2591.01514, 1007.28021,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19825, -711.14429, 2595.54150, 1008.15039,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2813, -711.53882, 2590.26025, 1006.00055,   0.00000, 0.00000, -71.20000);
	CreateDynamicObject(3077, -716.75146, 2588.72925, 1005.20020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2309, -712.04724, 2589.40332, 1005.20020,   0.00000, 0.00000, -83.10001);
	CreateDynamicObject(2309, -716.48706, 2596.27344, 1005.20020,   0.00000, 0.00000, -0.90001);
	CreateDynamicObject(2161, -712.40735, 2597.26221, 1005.20020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2161, -714.59778, 2597.26221, 1005.20020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2610, -713.06030, 2588.43066, 1006.02020,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2610, -713.60083, 2588.43066, 1006.02020,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2610, -714.14136, 2588.43066, 1006.02020,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1738, -711.24182, 2592.46265, 1005.74036,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, -715.11072, 2589.89233, 1005.20020,   0.00000, 0.00000, 162.00005);
	CreateDynamicObject(2253, -715.77942, 2591.27173, 1006.27069,   0.00000, 0.00000, 33.49999);
	CreateDynamicObject(19807, -714.29895, 2591.32813, 1006.08051,   0.00000, 0.00000, -14.60000);
	CreateDynamicObject(2263, -711.61890, 2594.15088, 1007.02045,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1721, -715.73914, 2592.87646, 1005.20020,   0.00000, 0.00000, 198.00000);
	CreateDynamicObject(1721, -714.28796, 2592.82202, 1005.20020,   0.00000, 0.00000, 173.89999);
	CreateDynamicObject(2611, -714.26501, 2597.23779, 1007.46405,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(1747, -712.12671, 2597.26855, 1006.54028,   0.00000, 0.00000, -3.30000);
	CreateDynamicObject(2612, -717.60559, 2588.81982, 1007.24042,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2836, -714.50256, 2594.05640, 1005.20020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19835, -714.68542, 2591.29248, 1006.09082,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2221, -715.83142, 2596.72192, 1006.07257,   0.00000, 0.00000, 2.60000);
	CreateDynamicObject(1721, -711.29724, 2593.70386, 1005.20020,   0.00000, 0.00000, 90.70000);
	CreateDynamicObject(11710, -709.27332, 2600.69922, 1007.80481,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11743, -717.24438, 2610.79297, 1006.10889,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19347, -715.12610, 2591.39966, 1006.01868,   0.00000, 0.00001, -53.99998);
	CreateDynamicObject(19773, -715.41125, 2591.26221, 1006.01862,   0.00000, 89.99998, -77.19999);
	CreateDynamicObject(14892, -699.44141, 2594.93799, 1004.03802,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19940, -707.46411, 2598.30859, 1006.62439,   89.99999, 775.74774, -55.74781);
	CreateDynamicObject(19940, -707.46411, 2598.30859, 1004.62445,   89.99999, 775.74774, -55.74781);
	CreateDynamicObject(19940, -707.46411, 2599.83838, 1006.62439,   89.99999, 775.74774, -55.74779);
	CreateDynamicObject(19940, -707.46411, 2599.83838, 1004.62445,   89.99999, 775.74774, -55.74779);
	CreateDynamicObject(19940, -707.46558, 2598.91016, 1007.63239,   0.00000, 0.00000, -0.00012);
	CreateDynamicObject(18075, -703.03723, 2594.31885, 1008.57104,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2162, -705.90845, 2591.21411, 1005.12842,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2172, -699.29175, 2597.49731, 1005.12842,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2608, -706.92664, 2595.61279, 1005.72827,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2181, -700.69690, 2600.15625, 1005.12842,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2356, -700.15198, 2599.30176, 1005.12842,   0.00000, 0.00000, -8.59997);
	CreateDynamicObject(1721, -707.07349, 2597.72339, 1005.12842,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1721, -707.07349, 2597.10352, 1005.12842,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2202, -699.25159, 2595.56055, 1005.12842,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2197, -701.64734, 2599.60596, 1005.12842,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2197, -702.36804, 2599.60596, 1005.12842,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, -704.07275, 2591.09961, 1005.12842,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2607, -702.75378, 2596.40088, 1005.50836,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1713, -701.43787, 2591.58105, 1005.12842,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2002, -700.42114, 2591.62476, 1005.12842,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2002, -706.65430, 2600.38477, 1005.12842,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2356, -699.98157, 2596.87915, 1005.12842,   0.00000, 0.00000, -74.59998);
	CreateDynamicObject(2165, -703.25330, 2595.46240, 1005.12842,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1714, -702.70593, 2594.96680, 1005.12842,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1714, -702.65625, 2597.00757, 1005.12842,   0.00000, 0.00000, -20.90002);
	CreateDynamicObject(2181, -704.31689, 2600.15625, 1005.12842,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2356, -703.82520, 2599.74316, 1005.12842,   0.00000, 0.00000, 3.90002);
	CreateDynamicObject(16779, -703.02490, 2596.33203, 1008.67059,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1738, -699.55115, 2591.28979, 1005.64844,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2611, -707.17542, 2596.66797, 1007.46405,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(2596, -705.77454, 2600.35278, 1007.65833,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2596, -706.90442, 2597.84277, 1007.77844,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1569, -710.01367, 2591.69873, 1005.11371,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19938, -707.03308, 2591.26953, 1006.80847,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19938, -707.03308, 2591.26953, 1007.41888,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1778, -707.60437, 2591.98047, 1005.11426,   0.00000, 0.00000, -81.79999);
	CreateDynamicObject(19462, -330.74118, 2842.47192, 939.04169,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(14877, -328.13193, 2842.38184, 940.17932,   0.00000, 0.00001, -0.00007);
	CreateDynamicObject(19815, -332.69882, 2842.38013, 938.17017,   55.00000, 0.00000, 89.99992);
	CreateDynamicObject(19815, -331.87900, 2842.38013, 938.74377,   55.00000, 0.00000, 89.99992);
	CreateDynamicObject(19815, -331.05991, 2842.38013, 939.31738,   55.00000, 0.00000, 89.99992);
	CreateDynamicObject(19815, -330.24911, 2842.38013, 939.88519,   55.00000, 0.00000, 89.99992);
	CreateDynamicObject(19815, -329.42905, 2842.38013, 940.45874,   55.00000, 0.00000, 89.99992);
	CreateDynamicObject(19815, -328.61826, 2842.38013, 941.02655,   55.00000, 0.00000, 89.99992);
	CreateDynamicObject(19815, -327.81528, 2842.38013, 941.58868,   55.00000, 0.00000, 89.99992);
	CreateDynamicObject(19815, -327.27451, 2842.38013, 941.96326,   55.00000, 0.00000, 89.99992);
	CreateDynamicObject(19815, -326.90463, 2842.38013, 941.90326,   89.99999, 134.99998, -45.00002);
	CreateDynamicObject(19815, -326.01376, 2842.38013, 941.90729,   89.99999, 134.99998, -45.00002);
	CreateDynamicObject(19377, -330.36304, 2840.78760, 944.28632,   0.00000, 180.00000, 90.00000);
	CreateDynamicObject(19377, -330.36304, 2843.98071, 944.28632,   0.00000, 180.00000, 90.00000);
	CreateDynamicObject(19377, -335.13309, 2845.56787, 944.28632,   0.00000, 180.00000, 180.00000);
	CreateDynamicObject(19462, -336.66110, 2842.47192, 942.59180,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19462, -327.95850, 2842.47192, 945.34650,   -35.00000, 90.00000, 90.00000);
	CreateDynamicObject(19834, -334.99832, 2843.85547, 941.47290,   0.00000, 89.99996, -135.00000);
	CreateDynamicObject(19834, -334.99832, 2843.85547, 939.14276,   0.00000, 89.99996, -135.00000);
	CreateDynamicObject(19834, -334.99832, 2840.92261, 941.47290,   -0.00001, 89.99996, -45.00000);
	CreateDynamicObject(19834, -334.99832, 2840.92261, 939.14276,   -0.00001, 89.99996, -45.00000);
	CreateDynamicObject(19939, -333.27850, 2843.89111, 941.91766,   0.00000, 90.00000, 270.00000);
	CreateDynamicObject(3078, -333.30740, 2843.87061, 941.92511,   90.00000, 90.00000, 630.00000);
	CreateDynamicObject(19433, -325.57587, 2842.21802, 941.48499,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19433, -323.20587, 2842.21802, 941.48499,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, -323.78116, 2839.14282, 942.21179,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject(19940, -325.55737, 2840.64014, 943.19757,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject(18765, -330.52173, 2835.58008, 939.81757,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19940, -325.55737, 2840.64014, 945.19757,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject(19940, -325.55737, 2840.64014, 947.19757,   90.00000, 0.00000, 270.00000);
	CreateDynamicObject(19377, -330.36304, 2840.49731, 944.28632,   0.00000, 180.00000, 90.00000);
	CreateDynamicObject(19392, -325.95953, 2838.85229, 944.04773,   -0.00001, -0.00001, -0.00006);
	CreateDynamicObject(19392, -325.63922, 2838.85229, 944.04773,   -0.00001, -0.00001, -0.00006);
	CreateDynamicObject(19447, -325.63083, 2833.20825, 944.04755,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19462, -325.60129, 2836.05151, 940.58142,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -325.95087, 2833.20825, 944.04755,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19447, -330.77097, 2830.52808, 944.04755,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19447, -330.77097, 2840.24023, 944.04755,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19447, -335.53085, 2835.43677, 944.04755,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(19940, -329.69290, 2830.78979, 944.14789,   89.99999, 180.00000, -89.99999);
	CreateDynamicObject(19940, -330.69290, 2830.80981, 945.14789,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(19940, -330.69290, 2830.80981, 943.14789,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(19940, -331.69290, 2830.78979, 944.14789,   89.99999, 180.00000, -89.99999);
	CreateDynamicObject(19940, -331.19290, 2830.75977, 944.14789,   89.99999, 180.00000, -89.99999);
	CreateDynamicObject(19940, -330.69290, 2830.75977, 944.14789,   89.99999, 180.00000, -89.99999);
	CreateDynamicObject(19940, -330.19290, 2830.75977, 944.14789,   89.99999, 180.00000, -89.99999);
	CreateDynamicObject(19940, -330.69290, 2830.70972, 944.64789,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(19940, -330.69290, 2830.70972, 944.14789,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(19940, -330.69290, 2830.70972, 943.64789,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(19377, -331.27188, 2835.40161, 945.87823,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1898, -331.59613, 2830.54248, 945.13812,   0.00000, 90.00000, 270.00000);
	CreateDynamicObject(1898, -329.77618, 2830.54248, 945.13812,   0.00000, 90.00000, 270.00000);
	CreateDynamicObject(1898, -329.77618, 2830.54248, 944.63770,   0.00000, 90.00000, 270.00000);
	CreateDynamicObject(1898, -331.56610, 2830.54248, 944.63770,   0.00000, 90.00000, 270.00000);
	CreateDynamicObject(2616, -326.07852, 2833.27661, 944.23822,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(18637, -328.07574, 2840.13721, 942.89697,   80.00000, 0.00000, 0.00000);
	CreateDynamicObject(18637, -328.75592, 2840.13721, 942.89697,   80.00000, 0.00000, 0.00000);
	CreateDynamicObject(18637, -327.48596, 2840.13721, 942.89697,   80.00000, 0.00000, 0.00000);
	CreateDynamicObject(18637, -326.83594, 2840.13721, 942.89697,   80.00000, 0.00000, 0.00000);
	CreateDynamicObject(18644, -335.63300, 2834.96875, 943.83752,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject(18644, -335.63300, 2835.53931, 943.86755,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject(18644, -335.63300, 2834.96875, 944.34796,   0.00000, 89.99999, 179.99995);
	CreateDynamicObject(18644, -335.63300, 2835.53931, 944.37799,   0.00000, 89.99999, 179.99995);
	CreateDynamicObject(18644, -335.63300, 2834.96875, 944.81842,   0.00000, 89.99998, 179.99991);
	CreateDynamicObject(18644, -335.63300, 2835.53931, 944.84845,   0.00000, 89.99998, 179.99991);
	CreateDynamicObject(18644, -335.63300, 2833.76880, 944.81842,   0.00000, 89.99998, 179.99991);
	CreateDynamicObject(18644, -335.63300, 2834.33936, 944.84845,   0.00000, 89.99998, 179.99991);
	CreateDynamicObject(18644, -335.63300, 2833.76880, 944.31836,   0.00000, 89.99998, 179.99991);
	CreateDynamicObject(18644, -335.63300, 2834.33936, 944.34839,   0.00000, 89.99998, 179.99991);
	CreateDynamicObject(18644, -335.63300, 2833.76880, 943.81836,   0.00000, 89.99998, 179.99991);
	CreateDynamicObject(18644, -335.63300, 2834.33936, 943.84839,   0.00000, 89.99998, 179.99991);
	CreateDynamicObject(19834, -326.09302, 2840.11768, 944.80298,   -0.00001, 89.99998, -45.00000);
	CreateDynamicObject(19834, -326.09302, 2840.11768, 942.47284,   -0.00001, 89.99998, -45.00000);
	CreateDynamicObject(19834, -326.09302, 2830.65723, 944.80298,   -0.00001, 89.99999, 44.99998);
	CreateDynamicObject(19834, -326.09302, 2830.65723, 942.47284,   -0.00001, 89.99999, 44.99998);
	CreateDynamicObject(19834, -335.40283, 2830.65723, 944.80298,   -0.00001, 89.99998, 134.99995);
	CreateDynamicObject(19834, -335.40283, 2830.65723, 942.47284,   -0.00001, 89.99998, 134.99995);
	CreateDynamicObject(19834, -335.40283, 2840.11768, 944.80298,   -0.00001, 89.99999, -135.00000);
	CreateDynamicObject(19834, -335.40283, 2840.11768, 942.47284,   -0.00001, 89.99999, -135.00000);
	CreateDynamicObject(14877, -328.15195, 2842.38184, 940.16931,   0.00000, 0.00001, -0.00007);
	CreateDynamicObject(19462, -323.78107, 2839.14282, 945.81195,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject(19462, -325.46124, 2839.14282, 947.48248,   0.00000, 180.00000, 180.00000);
	CreateDynamicObject(19447, -322.05078, 2839.13745, 944.04755,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(19447, -320.76071, 2834.52075, 944.04755,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(19447, -320.75070, 2843.98267, 944.04755,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(19834, -322.18317, 2834.65381, 944.78314,   0.00000, 89.99996, -135.00000);
	CreateDynamicObject(19834, -322.18317, 2834.65381, 942.45300,   0.00000, 89.99996, -135.00000);
	CreateDynamicObject(19834, -325.46332, 2834.65381, 944.78314,   -0.00001, 89.99998, -45.00000);
	CreateDynamicObject(19834, -325.46332, 2834.65381, 942.45300,   -0.00001, 89.99998, -45.00000);
	CreateDynamicObject(19834, -322.18332, 2843.83984, 944.78314,   0.00000, 89.99996, 134.99995);
	CreateDynamicObject(19834, -322.18332, 2843.83984, 942.45300,   0.00000, 89.99996, 134.99995);
	CreateDynamicObject(19834, -325.50320, 2843.88403, 945.78320,   -0.00001, 89.99998, 0.00001);
	CreateDynamicObject(19834, -325.50320, 2843.88403, 943.45306,   -0.00001, 89.99998, 0.00001);
	CreateDynamicObject(19939, -322.19574, 2841.85254, 945.07898,   0.00000, 89.99999, 179.99982);
	CreateDynamicObject(3078, -322.21625, 2841.88135, 945.08643,   89.99999, 334.47119, -64.47124);
	CreateDynamicObject(19940, -325.52625, 2838.86084, 945.07898,   0.00000, 89.99999, -0.00020);
	CreateDynamicObject(3078, -325.50574, 2838.83203, 945.08643,   89.99999, 256.63147, -166.63155);
	CreateDynamicObject(19377, -334.55298, 2841.89819, 938.95575,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19940, -332.42709, 2840.88428, 938.59387,   -34.99999, 90.00000, 89.99991);
	CreateDynamicObject(19940, -330.78867, 2840.88428, 939.74103,   -34.99999, 90.00000, 89.99991);
	CreateDynamicObject(19940, -329.15048, 2840.88428, 940.88812,   -34.99999, 90.00000, 89.99991);
	CreateDynamicObject(19940, -328.19980, 2840.88623, 941.55023,   -34.99999, 90.00002, 89.99993);
	CreateDynamicObject(19940, -332.42709, 2843.87598, 938.59387,   -34.99997, 90.00000, 89.99989);
	CreateDynamicObject(19940, -330.78867, 2843.87598, 939.74103,   -34.99997, 90.00000, 89.99989);
	CreateDynamicObject(19940, -329.15048, 2843.87598, 940.88812,   -34.99997, 90.00000, 89.99989);
	CreateDynamicObject(19940, -328.19980, 2843.87793, 941.55023,   -34.99996, 90.00002, 89.99990);
	CreateDynamicObject(19940, -326.50839, 2840.88818, 942.08508,   0.00001, 90.00002, 89.99995);
	CreateDynamicObject(19940, -326.50839, 2843.87988, 942.08508,   0.00001, 90.00002, 89.99995);
	CreateDynamicObject(1569, -335.05292, 2841.67065, 939.12762,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1569, -334.03293, 2843.91162, 939.12762,   0.00000, 0.00000, 360.00000);
	CreateDynamicObject(11710, -335.03403, 2842.45850, 941.80774,   0.00000, 0.00000, 450.00000);
	CreateDynamicObject(19940, -325.79181, 2838.10669, 943.79370,   89.99999, 775.74774, -55.74781);
	CreateDynamicObject(19940, -325.79181, 2838.10669, 941.79376,   89.99999, 775.74774, -55.74781);
	CreateDynamicObject(19940, -325.79181, 2839.63647, 943.79370,   89.99999, 775.74774, -55.74779);
	CreateDynamicObject(19940, -325.79181, 2839.63647, 941.79376,   89.99999, 775.74774, -55.74779);
	CreateDynamicObject(19940, -325.79327, 2838.70850, 944.80170,   0.00000, 0.00000, -0.00012);
	CreateDynamicObject(14852, -357.88989, 2830.79565, 942.00726,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11729, -329.36066, 2839.86523, 942.31757,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14401, -323.16983, 2823.22144, 942.63757,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11729, -330.06067, 2839.86523, 942.31757,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11729, -330.76068, 2839.86523, 942.31757,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11729, -331.46069, 2839.86523, 942.31757,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11729, -332.16071, 2839.86523, 942.31757,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11729, -332.86072, 2839.86523, 942.31757,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11729, -333.56073, 2839.86523, 942.31757,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11729, -334.26074, 2839.86523, 942.31757,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11729, -334.96075, 2839.86523, 942.31757,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11729, -335.16083, 2838.23389, 942.31757,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11729, -335.16083, 2837.53394, 942.31757,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11729, -335.16083, 2836.83398, 942.31757,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11749, -330.61182, 2830.78711, 943.16791,   0.00000, 0.00000, 5.40000);
	CreateDynamicObject(18875, -330.34286, 2830.81177, 943.17993,   0.00000, 0.00000, -158.20003);
	CreateDynamicObject(19773, -330.45978, 2830.91602, 943.17798,   0.00000, 90.00000, -158.20003);
	CreateDynamicObject(19995, -330.43750, 2830.69873, 943.17798,   0.00000, 90.00000, -158.20003);
	CreateDynamicObject(11749, -331.60666, 2830.88867, 943.16791,   0.00000, 0.00001, -39.79997);
	CreateDynamicObject(18875, -331.39966, 2830.71509, 943.17993,   0.00000, -0.00001, 156.59996);
	CreateDynamicObject(19773, -331.40805, 2830.87158, 943.17798,   0.00000, 89.99999, 156.59996);
	CreateDynamicObject(19995, -331.54654, 2830.70239, 943.17798,   0.00000, 89.99999, 156.59996);
	CreateDynamicObject(11749, -330.80527, 2830.74194, 943.66791,   0.00001, 0.00002, 155.49989);
	CreateDynamicObject(18875, -331.05078, 2830.85474, 943.67993,   -0.00001, -0.00001, -8.10006);
	CreateDynamicObject(19773, -331.00125, 2830.70581, 943.67798,   -0.00001, 89.99998, -8.10006);
	CreateDynamicObject(19995, -330.91232, 2830.90576, 943.67798,   -0.00001, 89.99998, -8.10006);
	CreateDynamicObject(11749, -329.79544, 2830.74194, 944.66791,   0.00001, 0.00001, 155.49985);
	CreateDynamicObject(18875, -330.04095, 2830.85474, 944.67993,   -0.00001, -0.00001, -8.10006);
	CreateDynamicObject(19773, -329.99142, 2830.70581, 944.67798,   -0.00001, 89.99999, -8.10006);
	CreateDynamicObject(19995, -329.90250, 2830.90576, 944.67798,   -0.00001, 89.99999, -8.10006);
	CreateDynamicObject(11749, -330.29538, 2830.73193, 944.16791,   0.00001, 0.00000, 155.49980);
	CreateDynamicObject(18875, -330.54089, 2830.84473, 944.17993,   -0.00001, 0.00000, -8.10006);
	CreateDynamicObject(19773, -330.49136, 2830.69580, 944.17798,   -0.00001, 90.00000, -8.10006);
	CreateDynamicObject(19995, -330.40244, 2830.89575, 944.17798,   -0.00001, 90.00000, -8.10006);
	CreateDynamicObject(11749, -330.07086, 2830.82983, 944.16791,   0.00001, -0.00001, -24.50019);
	CreateDynamicObject(18875, -329.82526, 2830.71704, 944.17993,   -0.00001, 0.00001, 171.89986);
	CreateDynamicObject(19773, -329.87482, 2830.86597, 944.17798,   -0.00001, 90.00001, 171.89986);
	CreateDynamicObject(19995, -329.96368, 2830.66577, 944.17798,   -0.00001, 90.00001, 171.89986);
	CreateDynamicObject(11749, -331.59576, 2830.77563, 944.16791,   0.00001, -0.00001, -24.50019);
	CreateDynamicObject(18875, -331.32526, 2830.71704, 944.17993,   -0.00001, 0.00001, 171.89986);
	CreateDynamicObject(19773, -331.37482, 2830.86597, 944.17798,   -0.00001, 90.00001, 171.89986);
	CreateDynamicObject(19995, -331.46368, 2830.66577, 944.17798,   -0.00001, 90.00001, 171.89986);
	CreateDynamicObject(11749, -331.30188, 2830.79175, 944.66791,   0.00004, -0.00011, 177.70909);
	CreateDynamicObject(18875, -331.57193, 2830.80493, 944.67993,   0.00000, 0.00012, 14.10983);
	CreateDynamicObject(19773, -331.46512, 2830.74878, 944.67798,   0.00000, 90.00011, 14.10983);
	CreateDynamicObject(19995, -331.46329, 2830.90405, 944.67798,   0.00000, 90.00011, 14.10983);
	CreateDynamicObject(11749, -329.77527, 2830.74194, 943.66791,   0.00001, 0.00001, 155.49985);
	CreateDynamicObject(18875, -330.02078, 2830.85474, 943.67993,   -0.00001, -0.00001, -8.10006);
	CreateDynamicObject(19773, -329.98541, 2830.74829, 943.67798,   -0.00001, 89.99999, -8.10006);
	CreateDynamicObject(19995, -329.87564, 2830.87646, 943.67798,   -0.00001, 89.99999, 12.89993);
	CreateDynamicObject(2372, -333.34689, 2834.35986, 942.31757,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19515, -333.07742, 2833.04785, 943.18817,   180.00000, 90.00000, 90.00000);
	CreateDynamicObject(19515, -333.07742, 2833.49829, 943.18817,   180.00000, 90.00000, 90.00000);
	CreateDynamicObject(19515, -333.07742, 2833.91870, 943.18817,   180.00000, 90.00000, 90.00000);
	CreateDynamicObject(19515, -333.07742, 2834.42920, 943.18817,   180.00000, 90.00000, 90.00000);
	CreateDynamicObject(2372, -334.44678, 2834.35986, 942.31757,   0.00000, -0.00001, 179.99995);
	CreateDynamicObject(19515, -334.17731, 2833.04785, 943.18817,   0.00000, 270.00000, -90.00001);
	CreateDynamicObject(19515, -334.17731, 2833.49829, 943.18817,   0.00000, 270.00000, -90.00001);
	CreateDynamicObject(19515, -334.17731, 2833.91870, 943.18817,   0.00000, 270.00000, -90.00001);
	CreateDynamicObject(19515, -334.17731, 2834.42920, 943.18817,   0.00000, 270.00000, -90.00001);
	CreateDynamicObject(1721, -326.22748, 2837.00488, 942.31757,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(1721, -326.22748, 2836.34424, 942.31757,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(1721, -326.22748, 2834.24268, 942.31757,   0.00001, 0.00000, 89.99998);
	CreateDynamicObject(1721, -329.99719, 2833.44189, 942.31757,   -0.00001, 0.00000, -89.99998);
	CreateDynamicObject(1721, -329.80551, 2832.72461, 942.31757,   -0.00001, 0.00000, -74.99999);
	CreateDynamicObject(1721, -329.41025, 2832.04321, 942.31757,   -0.00001, 0.00000, -59.99999);
	CreateDynamicObject(1721, -329.78476, 2834.23633, 942.31757,   -0.00001, 0.00000, -104.99998);
	CreateDynamicObject(1721, -329.40979, 2834.88574, 942.31757,   -0.00001, 0.00000, -119.99998);
	CreateDynamicObject(1721, -331.52725, 2833.44189, 942.31757,   -0.00001, 0.00000, -89.99995);
	CreateDynamicObject(1721, -331.33557, 2832.72461, 942.31757,   -0.00001, 0.00000, -74.99999);
	CreateDynamicObject(1721, -330.94031, 2832.04321, 942.31757,   -0.00001, 0.00001, -59.99998);
	CreateDynamicObject(1721, -331.31482, 2834.23633, 942.31757,   -0.00001, 0.00000, -104.99995);
	CreateDynamicObject(1721, -330.93985, 2834.88574, 942.31757,   -0.00001, -0.00001, -119.99995);
	CreateDynamicObject(349, -335.32709, 2834.87549, 943.81274,   0.00000, 7.20000, 97.49996);
	CreateDynamicObject(19942, -331.47998, 2830.73047, 943.75812,   0.00000, 0.00000, 167.60001);
	CreateDynamicObject(19942, -331.31543, 2830.82666, 943.75812,   0.00000, 0.00000, -171.09999);
	CreateDynamicObject(19942, -331.28326, 2830.75098, 943.25684,   0.00000, 0.00000, -171.09999);
	CreateDynamicObject(19942, -330.29620, 2830.97339, 943.25684,   0.00000, 0.00000, -171.09999);
	CreateDynamicObject(19942, -330.14365, 2830.78027, 943.76733,   0.00000, 0.00000, 81.39997);
	CreateDynamicObject(19942, -330.14447, 2830.68457, 944.24768,   0.00000, 0.00000, 128.49997);
	CreateDynamicObject(349, -335.32709, 2834.87549, 944.32318,   0.00001, 7.20000, 97.49994);
	CreateDynamicObject(349, -335.32709, 2834.87549, 944.79364,   0.00001, 7.20000, 97.49992);
	CreateDynamicObject(349, -335.32709, 2833.67554, 944.79364,   0.00001, 7.20000, 97.49992);
	CreateDynamicObject(349, -335.32709, 2833.67554, 944.29358,   0.00001, 7.20000, 97.49992);
	CreateDynamicObject(349, -335.32709, 2833.67554, 943.79358,   0.00001, 7.20000, 97.49992);
	CreateDynamicObject(18075, -330.00238, 2833.54004, 945.79755,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1569, -322.15521, 2842.60693, 942.28894,   -0.00001, 0.00000, -90.00002);
	CreateDynamicObject(3524, 1861.88403, -1391.01025, 15.00000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3524, 1861.88403, -1370.73608, 15.00000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3472, 1903.42871, -1434.25806, 13.01267,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1969.65405, -1420.71460, 13.01267,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1935.55347, -1394.96436, 13.01267,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1959.71313, -1371.63306, 20.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8483, 1962.96704, -1387.05115, 20.00000,   0.00000, 0.00000, 236.00000);
	CreateDynamicObject(8483, 1948.25769, -1366.12195, 22.54000,   0.00000, 2.00000, 205.00000);
	CreateDynamicObject(17025, 1949.67273, -1364.12622, 16.61230,   0.00000, 0.00000, -92.00000);
	CreateDynamicObject(3593, 1899.81482, -1422.50867, 13.47340,   0.00000, 0.00000, -40.00000);
	CreateDynamicObject(3593, 1903.41516, -1369.02490, 12.85144,   0.00000, 0.00000, 62.00000);
	CreateDynamicObject(3593, 1947.15247, -1433.90588, 13.47340,   0.00000, 0.00000, 47.00000);
	CreateDynamicObject(2745, 1891.56506, -1433.84375, 14.25000,   0.00000, 0.00000, -207.00000);
	CreateDynamicObject(8644, 1950.29541, -1377.77429, 25.00000,   0.00000, 0.00000, 74.00000);
	CreateDynamicObject(16778, 1929.89526, -1404.09973, 12.90000,   0.00000, 0.00000, 62.00000);
	CreateDynamicObject(3524, 1897.19751, -1350.95459, 15.00000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3524, 1876.90430, -1350.65796, 15.00000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3524, 1956.68140, -1450.82471, 15.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3524, 1961.81592, -1450.83667, 15.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3528, 1950.95032, -1376.97974, 19.88000,   0.00000, 0.00000, 230.00000);
	CreateDynamicObject(615, 1880.24731, -1442.03003, 13.02030,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(615, 1868.09851, -1357.58374, 13.02030,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18651, 1910.84888, -1417.47900, 16.71080,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18649, 1925.04187, -1416.93872, 16.71050,   0.00000, 0.00000, 95.00000);
	CreateDynamicObject(18647, 1907.91235, -1435.71802, 16.71460,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(18648, 1923.99243, -1435.43958, 16.69900,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(19123, 1890.20667, -1366.21069, 13.60000,   0.00000, 0.00000, 113.00000);
	CreateDynamicObject(19124, 1923.21228, -1366.21069, 13.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19125, 1889.22339, -1438.26672, 13.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 1969.09521, -1437.86829, 13.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, 1539.71948, -1627.80042, 18.33790,   0.00000, 0.00000, 90.19780);
	CreateDynamicObject(1415, 1186.71680, -1379.69812, 12.54840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1415, 1071.91260, -1379.08984, 12.54840,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1415, 1020.58435, -1311.11890, 12.56840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1415, 909.26477, -1340.77161, 12.56840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1415, 946.26837, -1415.24219, 12.56840,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(0, 1260.94128, -1271.31873, 12.54840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1415, 1538.45642, -1609.41858, 12.53520,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1415, 1425.72168, -1742.98303, 12.53060,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1415, 1195.54199, -1703.29980, 12.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1415, 1028.08374, -1761.21118, 12.53830,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1415, 1172.13440, -1860.59717, 12.52920,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1415, 885.59814, -1795.62964, 12.53460,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1415, 908.33484, -1683.96252, 12.53860,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1415, 646.29602, -1560.50708, 14.51240,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1415, 401.70139, -1441.50305, 31.35210,   0.00000, -8.00000, 124.00000);
	CreateDynamicObject(1415, 258.28439, -1410.06189, 12.61920,   0.00000, 0.00000, 28.00000);
	CreateDynamicObject(1415, 473.72202, -1318.96619, 14.52680,   0.00000, 0.00000, 218.00000);
	CreateDynamicObject(1415, 669.95709, -1159.69055, 14.34010,   0.00000, 0.00000, 58.00000);
	CreateDynamicObject(1415, 1065.01501, -969.66284, 41.78740,   0.00000, 0.00000, 187.00000);
	CreateDynamicObject(1415, 1404.28638, -958.33740, 34.39960,   0.00000, 0.00000, 170.00000);
	CreateDynamicObject(1415, 1366.79602, -1308.23425, 12.53390,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(11544, 411.16040, -2090.77686, 5.75240,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(11544, 397.45380, -2090.77881, 0.40000,   0.00000, 0.00000, -90.02000);
	CreateDynamicObject(11544, 404.09641, -2090.77515, 3.00000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1607, 394.26248, -2140.00854, 0.62000,   0.00000, 0.00000, 25.00000);
	CreateDynamicObject(1608, 413.81345, -2125.93555, 0.65000,   0.00000, 0.00000, -47.00000);
	CreateDynamicObject(1608, 357.55850, -2136.45874, 0.65000,   0.00000, 0.00000, 125.00000);
	CreateDynamicObject(1607, 340.47946, -2119.77368, 0.62000,   0.00000, 0.00000, 25.00000);
	CreateDynamicObject(18651, 1696.02954, -2309.38477, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1693.97876, -2309.39526, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1691.95654, -2309.45190, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1689.91760, -2309.44360, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1700.18213, -2309.42285, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1698.09534, -2309.43286, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1702.25500, -2309.38843, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1704.29736, -2309.39087, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1706.34155, -2309.40869, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1708.39526, -2309.39795, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1710.42090, -2309.36084, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1712.52893, -2309.35327, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1714.58801, -2309.41016, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1716.68640, -2309.39893, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1718.76404, -2309.36304, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1720.73462, -2309.39063, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1646.54980, -2309.45630, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1648.42444, -2309.45313, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1650.11169, -2309.42505, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1651.89807, -2309.42163, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1653.81982, -2309.45972, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1655.67041, -2309.46973, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1657.51208, -2309.44629, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1659.37317, -2309.44385, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1661.80212, -2309.38892, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1663.82971, -2309.38428, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1665.67090, -2309.35620, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1667.61279, -2309.35132, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1669.69153, -2309.38843, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1671.70056, -2309.39844, 12.62350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1675.72583, -2309.37085, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18651, 1673.70325, -2309.37451, 12.58350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19337, 866.53503, -1972.97485, 40.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19332, 851.11383, -1877.81152, 50.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19338, 794.05859, -1924.10864, 20.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19159, 845.45752, -2062.77344, 14.90000,   0.00000, 54.00000, 0.00000);
	CreateDynamicObject(19159, 827.21191, -2062.80151, 14.90000,   0.00000, -54.00000, 0.00000);
	CreateDynamicObject(3472, 848.91760, -1924.20862, 10.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8493, 394.15979, -1968.78979, 20.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 823.70441, -2004.95569, 10.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 849.08691, -2004.98743, 10.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 825.65784, -2004.78296, 12.61719,   3.14159, 0.00000, 3.14159);
	CreateDynamicObject(1281, 845.90674, -2004.64771, 12.61719,   3.14159, 0.00000, 3.14159);
	CreateDynamicObject(19870, -2716.36963, 215.20050, 5.19100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14602, 418.38489, 171.57080, 1012.72998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14593, 401.69199, 201.44231, 1009.67090,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14597, 414.18411, 144.50500, 1009.34998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14598, 406.55530, 171.63631, 1022.89752,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 418.10770, 182.95880, 1007.37500,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1703, 415.39600, 183.77859, 1007.37500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 417.36719, 180.22881, 1007.37500,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1817, 415.77631, 181.46040, 1007.37500,   0.00000, 0.00000, 1.00000);
	CreateDynamicObject(1776, 415.86200, 186.81610, 1008.47662,   0.00000, 0.00000, -3.14160);
	CreateDynamicObject(2002, 414.74661, 186.67070, 1007.37500,   0.00000, 0.00000, 3.14160);
	CreateDynamicObject(2010, 418.79599, 178.29910, 1007.37500,   0.00000, 0.00000, 2.35620);
	CreateDynamicObject(2010, 411.55859, 186.89430, 1007.37500,   0.00000, 0.00000, 2.35620);
	CreateDynamicObject(2010, 418.75812, 186.80000, 1007.37500,   0.00000, 0.00000, 2.35620);
	CreateDynamicObject(2164, 410.73279, 212.60760, 1007.40002,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2164, 410.69571, 214.48140, 1007.40002,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2164, 410.75031, 210.76830, 1007.40002,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2164, 408.92529, 215.40739, 1007.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 407.10849, 215.41901, 1007.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 405.28650, 215.42010, 1007.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2162, 403.38351, 215.43040, 1007.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 392.30600, 195.29890, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2186, 395.58411, 214.91479, 1007.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2162, 392.33759, 211.77490, 1007.40002,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2162, 392.29950, 209.28140, 1007.40002,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1776, 392.61191, 205.10770, 1008.29999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2002, 392.75009, 203.04089, 1007.40002,   0.00000, 0.00000, 90.50000);
	CreateDynamicObject(2164, 392.36749, 213.88721, 1007.40002,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 392.28809, 197.36520, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1998, 396.72345, 198.98067, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 398.72986, 199.97337, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 397.73199, 201.03140, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1998, 399.73581, 202.01680, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(2009, 405.21838, 201.88672, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1999, 403.19562, 200.88663, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1999, 404.20615, 199.86311, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2009, 402.19662, 198.86960, 1007.36719,   360.00000, 0.00000, 360.00000);
	CreateDynamicObject(1998, 402.78937, 206.72913, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 403.83002, 208.73209, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1998, 405.79977, 209.73985, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(2008, 404.77655, 207.70142, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2009, 399.28079, 209.68851, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1999, 398.27548, 207.66566, 1007.36719,   360.00000, 0.00000, 0.00000);
	CreateDynamicObject(2009, 396.29199, 206.67398, 1007.36719,   360.00000, 0.00000, 360.00000);
	CreateDynamicObject(1999, 397.30716, 208.67833, 1007.36719,   360.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 405.13614, 198.68797, 1007.36719,   3.00000, 0.00000, 40.00000);
	CreateDynamicObject(1806, 403.99408, 201.93964, 1007.36719,   356.85840, 0.00000, -0.27381);
	CreateDynamicObject(2001, 392.70721, 203.82300, 1007.40002,   0.00000, 0.00000, 2.35620);
	CreateDynamicObject(2001, 400.05869, 208.33217, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(2001, 406.24423, 200.60674, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(1806, 402.45224, 201.94583, 1007.36719,   356.85840, 0.00000, -0.27381);
	CreateDynamicObject(1806, 398.54208, 201.98740, 1007.36719,   356.85840, 0.00000, -0.27381);
	CreateDynamicObject(1806, 396.78116, 201.76532, 1007.36719,   356.85840, 0.00000, -0.27381);
	CreateDynamicObject(1806, 398.20276, 209.74106, 1007.36719,   356.85840, 0.00000, -0.27381);
	CreateDynamicObject(1806, 396.59061, 209.82210, 1007.36719,   357.00000, 0.00000, -193.00000);
	CreateDynamicObject(1806, 403.07495, 198.71400, 1007.36719,   3.00000, 0.00000, -55.00000);
	CreateDynamicObject(1806, 403.01962, 209.51520, 1007.36719,   3.00000, 0.00000, -149.00000);
	CreateDynamicObject(1806, 404.68481, 209.69321, 1007.36719,   3.00000, 0.00000, -215.00000);
	CreateDynamicObject(1806, 398.93652, 206.79149, 1007.36719,   3.00000, 0.00000, 40.00000);
	CreateDynamicObject(1806, 397.39496, 206.79083, 1007.36719,   3.00000, 0.00000, -55.00000);
	CreateDynamicObject(1806, 397.49600, 198.97701, 1007.36719,   3.00000, 0.00000, -55.00000);
	CreateDynamicObject(1806, 399.45111, 199.00618, 1007.36719,   3.00000, 0.00000, 40.00000);
	CreateDynamicObject(1806, 403.84955, 206.60876, 1007.36719,   3.00000, 0.00000, -55.00000);
	CreateDynamicObject(1806, 405.45557, 206.60748, 1007.36719,   3.00000, 0.00000, 40.00000);
	CreateDynamicObject(2164, 395.42419, 158.53920, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 395.44159, 160.60660, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 395.42010, 164.31680, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 395.40829, 166.80251, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2167, 395.46191, 172.16991, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2163, 395.47150, 173.23660, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 395.46771, 177.32249, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2163, 395.45071, 179.12669, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2161, 395.49051, 181.55960, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2162, 395.48071, 183.12000, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2186, 396.33374, 156.30034, 1007.33594,   356.85840, 0.00000, 0.00000);
	CreateDynamicObject(2002, 395.93420, 186.03090, 1007.37500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2169, 396.21747, 188.65045, 1007.38281,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1714, 400.11539, 171.33560, 1007.38281,   3.00000, 0.00000, 120.00000);
	CreateDynamicObject(2190, 401.71158, 169.14883, 1008.10162,   0.00000, 0.00000, -164.00000);
	CreateDynamicObject(2190, 402.21439, 173.26140, 1008.10162,   0.00000, 0.00000, -53.00000);
	CreateDynamicObject(2190, 399.47949, 176.80991, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(2190, 399.49661, 181.45500, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(2190, 399.53360, 186.05650, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(2190, 399.40540, 165.38010, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(2190, 399.42068, 161.95020, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(2190, 399.43771, 157.80321, 1008.30157,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(1714, 397.34521, 181.57777, 1007.38281,   3.00000, 0.00000, 105.00000);
	CreateDynamicObject(1714, 397.54919, 162.29880, 1007.38281,   3.00000, 0.00000, 84.00000);
	CreateDynamicObject(2001, 407.12921, 175.34694, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(2001, 406.93155, 167.93735, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(1801, 424.08841, 147.48628, 1007.38019,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(16377, 424.60583, 143.07411, 1008.36090,   0.00000, 0.00000, -25.00000);
	CreateDynamicObject(1997, 419.36258, 141.71600, 1007.38080,   0.00000, 0.00000, 215.00000);
	CreateDynamicObject(3387, 427.20129, 145.26012, 1006.18073,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2994, 423.14661, 146.70056, 1007.86267,   0.00000, 0.00000, -18.00000);
	CreateDynamicObject(2167, 427.74414, 141.07100, 1007.37500,   3.00000, 0.00000, -90.00000);
	CreateDynamicObject(2164, 427.65836, 142.92435, 1007.38220,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19903, 421.00970, 141.58229, 1007.38422,   0.00000, 0.00000, 149.00000);
	CreateDynamicObject(1721, 419.45062, 147.84911, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 420.27441, 147.85506, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 421.15579, 147.85692, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 419.11395, 155.49455, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 419.88324, 155.49831, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1721, 420.66022, 155.53610, 1007.38342,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1997, 419.54971, 149.98726, 1007.38080,   0.00000, 0.00000, 215.00000);
	CreateDynamicObject(19903, 421.19489, 150.34261, 1007.38422,   0.00000, 0.00000, 149.00000);
	CreateDynamicObject(2994, 422.74072, 154.53233, 1007.86267,   0.00000, 0.00000, -18.00000);
	CreateDynamicObject(16377, 424.06845, 150.76564, 1008.36090,   0.00000, 0.00000, -25.00000);
	CreateDynamicObject(1801, 423.73242, 155.24417, 1007.38019,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3387, 427.23947, 153.10025, 1006.18073,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 427.64038, 150.73344, 1007.38220,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2167, 427.71249, 148.93996, 1007.37500,   3.00000, 0.00000, -90.00000);
	CreateDynamicObject(1997, 412.39059, 138.89627, 1007.38080,   0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19903, 412.85895, 137.55309, 1007.38422,   0.00000, 0.00000, 105.00000);
	CreateDynamicObject(1721, 416.81628, 139.02765, 1007.38342,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1721, 416.82538, 138.25108, 1007.38342,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1721, 416.80676, 137.50496, 1007.38342,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2994, 414.73987, 135.11220, 1007.86267,   0.00000, 0.00000, -156.00000);
	CreateDynamicObject(1801, 416.56482, 135.10068, 1007.38019,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(3387, 414.49197, 131.73947, 1006.18073,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 411.51868, 134.06529, 1007.38220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2167, 412.01706, 131.49315, 1007.37500,   3.00000, 0.00000, -180.00000);
	CreateDynamicObject(1801, 404.57126, 154.12048, 1007.38019,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1997, 406.71771, 154.44984, 1007.38080,   0.00000, 0.00000, 353.00000);
	CreateDynamicObject(19903, 408.13727, 154.39952, 1007.38422,   0.00000, 0.00000, 171.00000);
	CreateDynamicObject(2994, 405.73718, 149.06244, 1007.86267,   0.00000, 0.00000, -267.00000);
	CreateDynamicObject(3387, 401.07504, 153.12494, 1006.18073,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(2164, 400.69208, 148.98962, 1007.34222,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2167, 400.70883, 150.84512, 1007.37500,   3.00000, 0.00000, 90.00000);
	CreateDynamicObject(1721, 409.65012, 148.60045, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 408.85919, 148.56850, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 408.12833, 148.55437, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19903, 409.97711, 145.82530, 1007.38422,   0.00000, 0.00000, 171.00000);
	CreateDynamicObject(1997, 408.00580, 146.17200, 1007.38080,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(1801, 404.75684, 146.48698, 1007.38019,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3387, 401.21362, 145.48138, 1006.18073,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(2167, 400.75641, 143.20757, 1007.37500,   3.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 400.90930, 141.30533, 1007.38220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2994, 405.26932, 145.68243, 1007.86267,   0.00000, 0.00000, -215.00000);
	CreateDynamicObject(1721, 408.03473, 140.65816, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 408.79315, 140.68774, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1721, 409.57312, 140.71614, 1007.38342,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16377, 404.46057, 142.14714, 1008.36090,   0.00000, 0.00000, 25.00000);
	CreateDynamicObject(16377, 403.53854, 150.13910, 1008.36090,   0.00000, 0.00000, 25.00000);
	CreateDynamicObject(1817, 402.99652, 158.03528, 1007.37500,   0.00000, 0.00000, 1.00000);
	CreateDynamicObject(1703, 404.42780, 157.03709, 1007.37500,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 402.25031, 160.07997, 1007.37500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 405.52917, 159.44566, 1007.37500,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2001, 400.31689, 185.92545, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(2001, 400.26065, 156.61852, 1007.37500,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(19530, 379.50000, 170.20000, 1007.20410,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1569, 433.00290, 170.85530, 1007.34052,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19530, 379.50000, 170.20000, 1007.24408,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(955, 413.28375, 131.82051, 1007.54437,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(955, 401.05643, 144.33298, 1007.73792,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(955, 400.91080, 151.96339, 1007.55170,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(955, 427.48419, 151.91928, 1007.51111,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(955, 427.43854, 144.10306, 1007.51111,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(0, 764.86188, -1366.64001, 12.28760,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19898, 770.92969, -1377.18542, 12.54500,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(19425, 780.37451, -1384.91345, 12.71600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 777.23260, -1384.90295, 12.71598,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 774.11102, -1384.89307, 12.71598,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 780.83917, -1330.22534, 12.55600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 777.70532, -1330.19763, 12.55600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 774.53778, -1330.17004, 12.55600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 786.52289, -1384.17566, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 786.68164, -1331.05957, 12.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3851, 564.08362, -1258.59973, 19.10000,   0.00000, 0.00000, 12.00000);
	CreateDynamicObject(3851, 566.10583, -1268.13879, 19.10000,   0.00000, 0.00000, 12.00000);
	CreateDynamicObject(3851, 568.21191, -1277.86096, 19.10000,   0.00000, 0.00000, 12.50000);
	CreateDynamicObject(3851, 570.05438, -1286.14697, 19.10000,   0.00000, 0.00000, 12.50000);
	CreateDynamicObject(19425, 553.97168, -1257.87964, 16.22520,   0.00000, 0.00000, 35.00000);
	CreateDynamicObject(19425, 556.60132, -1256.22400, 16.22520,   0.00000, 0.00000, 29.00000);
	CreateDynamicObject(19425, 559.29700, -1254.79138, 16.22520,   0.00000, 0.00000, 27.00000);
	CreateDynamicObject(19425, 561.63098, -1253.61816, 16.22520,   0.00000, 0.00000, 27.00000);
	CreateDynamicObject(18651, 551.92950, -1259.58411, 16.25840,   0.00000, 0.00000, 125.00000);
	CreateDynamicObject(18651, 542.24097, -1266.36438, 16.25840,   0.00000, 0.00000, 125.00000);
	CreateDynamicObject(18651, 540.63141, -1267.58545, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 543.85175, -1265.23779, 16.25840,   0.00000, 0.00000, 125.00000);
	CreateDynamicObject(18651, 550.29633, -1260.73730, 16.25840,   0.00000, 0.00000, 125.00000);
	CreateDynamicObject(18651, 545.45709, -1264.12830, 16.25840,   0.00000, 0.00000, 125.00000);
	CreateDynamicObject(18651, 547.06500, -1262.99146, 16.25840,   0.00000, 0.00000, 125.00000);
	CreateDynamicObject(18651, 548.68060, -1261.86987, 16.25840,   0.00000, 0.00000, 125.00000);
	CreateDynamicObject(18651, 539.12292, -1268.77283, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 537.56934, -1269.99707, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 536.01782, -1271.25049, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 534.58191, -1272.40173, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 532.99146, -1273.66260, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 531.43842, -1274.91943, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 528.27295, -1277.40759, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 529.84943, -1276.14929, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 526.73315, -1278.63538, 16.25840,   0.00000, 0.00000, 127.00000);
	CreateDynamicObject(18651, 525.18848, -1279.83582, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 523.62964, -1281.09070, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 522.06921, -1282.33203, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 520.48462, -1283.58716, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 518.95636, -1284.81946, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(18651, 517.63202, -1285.85889, 16.25840,   0.00000, 0.00000, 129.00000);
	CreateDynamicObject(14412, 2553.88281, -1293.87500, 2052.46875,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14415, 2551.88281, -1293.62500, 2059.80469,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14463, 2552.28125, -1292.33032, 2056.63965,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14411, 2520.03906, -1290.99768, 2050.44531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14416, 2533.17139, -1286.91284, 2044.07385,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2531.33594, -1284.39063, 2053.64502,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1491, 2531.35596, -1287.40564, 2053.64502,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14451, 2526.59375, -1293.92188, 2051.35156,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14435, 2541.09375, -1285.89844, 2052.71875,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2649, 2523.07813, -1298.72656, 2051.42969,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2649, 2523.07813, -1292.23438, 2051.42969,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2649, 2523.07813, -1290.50781, 2051.42969,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2200, 2522.75000, -1285.22559, 2047.28125,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2200, 2522.75000, -1287.54688, 2047.28125,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2200, 2522.75000, -1295.63281, 2047.28125,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2608, 2522.82031, -1297.17969, 2048.17969,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2608, 2522.82031, -1290.93750, 2048.17969,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2608, 2522.82031, -1289.03125, 2048.17969,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19410, 2526.74048, -1297.51208, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19410, 2526.74048, -1281.51184, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19410, 2526.74048, -1284.70691, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19410, 2526.74048, -1287.89954, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19410, 2526.74048, -1291.09204, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19410, 2526.74048, -1294.30139, 2049.03345,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19456, 2526.74048, -1283.37122, 2052.51294,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19456, 2526.74048, -1306.98096, 2049.02637,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19456, 2526.74072, -1292.98230, 2052.51294,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19435, 2526.74658, -1297.30237, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2526.74658, -1281.64331, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2526.74658, -1285.12048, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2526.74658, -1288.59595, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2549.33008, -1294.26355, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2526.74658, -1295.54089, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(1810, 2528.35791, -1281.71497, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1810, 2528.33789, -1297.76038, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1810, 2528.35645, -1291.35645, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1810, 2528.35791, -1288.10645, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1810, 2528.35791, -1284.98999, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1810, 2528.35791, -1294.59277, 2047.60815,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1663, 2524.84229, -1297.54919, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1663, 2524.86279, -1281.52185, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1663, 2524.86279, -1284.77966, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1663, 2524.88281, -1287.90063, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1663, 2524.86279, -1291.12183, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1663, 2524.86279, -1294.35425, 2047.74304,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1622, 2530.09009, -1280.63306, 2052.63086,   0.00000, -12.00000, 23.00000);
	CreateDynamicObject(1886, 2522.85571, -1284.92432, 2050.66211,   22.00000, 180.00000, 133.86000);
	CreateDynamicObject(1886, 2526.27808, -1306.94690, 2053.10205,   32.00000, 0.00000, 577.97998);
	CreateDynamicObject(1886, 2530.44922, -1302.86328, 2050.66211,   34.00000, 180.00000, -33.00000);
	CreateDynamicObject(1886, 2522.91553, -1285.12915, 2050.66211,   15.00000, 180.00000, 19.86000);
	CreateDynamicObject(1886, 2522.79541, -1302.70520, 2050.66211,   15.00000, 180.00000, -200.00000);
	CreateDynamicObject(1886, 2530.36011, -1285.16187, 2050.66211,   15.00000, 180.00000, -7.38000);
	CreateDynamicObject(1886, 2530.30713, -1284.93359, 2050.66211,   22.00000, 180.00000, -144.86000);
	CreateDynamicObject(1886, 2564.89648, -1294.62891, 2053.20215,   33.00000, 0.00000, 270.00000);
	CreateDynamicObject(1886, 2530.27979, -1306.82202, 2053.10205,   30.00000, 0.00000, 561.00000);
	CreateDynamicObject(1738, 2525.62622, -1307.23767, 2047.84399,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1663, 2525.88477, -1306.25012, 2048.04077,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1788, 2522.95923, -1305.18103, 2048.12720,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2174, 2522.87207, -1305.63416, 2047.27148,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2894, 2525.14111, -1305.04883, 2048.08789,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2002, 2527.13574, -1306.88916, 2047.27478,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1958, 2526.69092, -1305.23254, 2048.93066,   90.00000, 270.00000, 0.00000);
	CreateDynamicObject(1778, 2523.03662, -1279.87708, 2047.28235,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2680, 2530.58594, -1281.85742, 2048.37036,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19302, 2567.58081, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19437, 2526.74048, -1299.66565, 2049.02637,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19304, 2530.79834, -1306.51526, 2049.00293,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(1704, 2526.11914, -1303.13757, 2047.09204,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2002, 2526.08984, -1299.61707, 2047.27478,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19302, 2526.74048, -1301.31885, 2048.54663,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, 2526.74048, -1302.15857, 2050.40283,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, 2530.84131, -1288.22937, 2051.85498,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, 2530.84131, -1296.23181, 2051.85498,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19304, 2530.84131, -1292.19983, 2051.85498,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19444, 2531.00439, -1282.62561, 2048.04321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 2565.36694, -1305.95496, 2047.19495,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19451, 2539.93481, -1285.61951, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2551.81689, -1295.60681, 2047.19482,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19451, 2529.90649, -1302.15662, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2565.36694, -1286.71191, 2047.19495,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19451, 2565.36694, -1296.34265, 2047.19495,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19451, 2558.79858, -1285.61951, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2558.78638, -1302.15662, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2549.14429, -1302.15662, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2539.52563, -1302.15662, 2047.19495,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2886, 2522.09570, -1300.11316, 2048.89893,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2886, 2531.09009, -1303.83606, 2048.89893,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2886, 2526.65454, -1305.60156, 2048.89893,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2886, 2526.83887, -1302.51770, 2048.89893,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2951, 2522.40186, -1303.42090, 2048.12036,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2886, 2522.59277, -1300.13281, 2048.95703,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2886, 2530.62671, -1303.88525, 2048.89893,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1566, 2521.66675, -1307.87231, 2048.82202,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1566, 2518.50293, -1307.87988, 2048.82202,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1663, 2520.78442, -1281.56421, 2054.43628,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19444, 2531.00439, -1281.04004, 2048.04321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2538.15063, -1279.80786, 2045.02087,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2560.15210, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2540.05127, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2542.07910, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2544.12695, -1279.80457, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2546.11646, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2548.17896, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2550.04443, -1279.80737, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2552.04980, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2554.12207, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2556.19800, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2558.11060, -1279.80786, 2045.00085,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2567.52075, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2571.41968, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2567.63550, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2543.51831, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2545.92749, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2548.32202, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2553.11938, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2555.52368, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2557.92944, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2560.30884, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2562.71631, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2565.11523, -1286.77600, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2569.81055, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2560.35474, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2545.89453, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2550.64502, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2536.70630, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2555.45020, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 2549.16626, -1285.61951, 2047.19482,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 2551.81689, -1292.18115, 2047.19482,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19457, 2545.85645, -1280.99036, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2536.32617, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2565.66284, -1298.98816, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2531.89136, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2534.25708, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2536.63477, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2539.02783, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2541.39331, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2543.78247, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2546.16455, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2548.56836, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2550.97046, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2553.36255, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2555.75562, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2558.14233, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2560.52295, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2565.06396, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2571.19238, -1305.26404, 2041.55444,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19457, 2560.56250, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2555.81055, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2551.06372, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2546.24756, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2541.42456, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2530.79834, -1305.01343, 2048.54663,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19302, 2538.77051, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2538.62622, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2548.37427, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2553.18164, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2557.98291, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2534.16187, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2562.78394, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2567.56543, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2558.04590, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2553.27100, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2548.46240, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2543.68164, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2538.93481, -1300.49890, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2569.16406, -1281.63782, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2569.15283, -1285.11157, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2549.93628, -1281.63782, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2540.32642, -1281.63782, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2540.32959, -1285.11157, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2558.77881, -1294.26355, 2044.37109,   34.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2559.55908, -1285.11157, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(14409, 2546.61548, -1293.97754, 2044.10437,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14409, 2556.89673, -1293.95752, 2044.08435,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(970, 2535.29370, -1285.72510, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2550.18311, -1298.51697, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2553.36572, -1298.52344, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2533.20581, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2559.55054, -1281.63782, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2532.36597, -1302.17102, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2544.60620, -1294.27161, 2044.30005,   -34.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2558.77905, -1293.69690, 2044.37109,   34.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2544.60620, -1293.68262, 2044.30005,   -34.00000, 90.00000, 90.00000);
	CreateDynamicObject(19438, 2550.73291, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 2526.74658, -1292.07703, 2048.36426,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2549.32715, -1293.69592, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2550.85229, -1293.69592, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2552.44336, -1293.69592, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2554.04175, -1293.69690, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2554.03320, -1294.26355, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2552.44385, -1294.26355, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2550.93359, -1294.26355, 2047.04395,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2774, 2551.69336, -1293.96484, 2034.15979,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2247, 2524.64258, -1304.65479, 2048.40186,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2563.74854, -1298.52893, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2537.37134, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2559.61279, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2553.36572, -1289.35535, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2563.75391, -1289.35815, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2563.75293, -1293.52405, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2563.75293, -1297.67896, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2561.68481, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2561.64648, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2557.49683, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2555.45239, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2548.08789, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2543.92529, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2539.78394, -1287.26575, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2550.18311, -1289.33533, 2047.84045,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2555.44385, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2548.09497, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2543.95166, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2539.79736, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2535.65698, -1300.60925, 2047.84045,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2549.94409, -1285.11157, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2535.90039, -1305.65076, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2545.51294, -1305.65076, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2555.11108, -1305.65076, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2570.83105, -1305.65076, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2570.85352, -1302.17102, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2551.59790, -1302.17102, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2540.36133, -1304.14526, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2960, 2559.81689, -1291.93994, 2043.94897,   0.00000, 34.48000, 0.00000);
	CreateDynamicObject(2960, 2552.87183, -1291.93994, 2047.20349,   0.00000, 0.06000, 0.00000);
	CreateDynamicObject(2960, 2557.01978, -1291.93994, 2045.88892,   0.00000, 35.30000, 0.00000);
	CreateDynamicObject(2960, 2552.87183, -1296.01575, 2047.20349,   0.00000, 0.06000, 0.00000);
	CreateDynamicObject(2960, 2546.48901, -1291.93994, 2045.88892,   0.00000, -35.06000, 0.00000);
	CreateDynamicObject(2960, 2550.63721, -1291.93994, 2047.20349,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2960, 2543.65625, -1291.93994, 2043.92896,   0.00000, -34.48000, 0.00000);
	CreateDynamicObject(2960, 2550.63721, -1296.01575, 2047.20349,   0.00000, 0.06000, 0.00000);
	CreateDynamicObject(2960, 2546.48901, -1296.01575, 2045.88892,   0.00000, -35.06000, 0.00000);
	CreateDynamicObject(2960, 2543.65112, -1296.01575, 2043.92896,   0.00000, -34.48000, 0.00000);
	CreateDynamicObject(2960, 2557.01978, -1296.01575, 2045.88892,   0.00000, 35.36000, 0.00000);
	CreateDynamicObject(2960, 2559.81812, -1296.01575, 2043.94897,   0.00000, 34.48000, 0.00000);
	CreateDynamicObject(19394, 2538.72021, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2541.11719, -1286.77502, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2541.07300, -1282.15039, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2541.10522, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2543.49512, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2545.88428, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2548.26050, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2553.05688, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2555.42627, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2557.81982, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2572.47095, -1297.85950, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2538.73267, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2565.66284, -1296.59949, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2536.33325, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2540.90747, -1279.76965, 2046.63428,   0.00000, -180.00000, 90.00000);
	CreateDynamicObject(19457, 2570.28589, -1291.84058, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2550.66724, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2565.66284, -1289.46777, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2565.66284, -1291.85669, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19394, 2565.66284, -1294.22437, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2565.66016, -1283.07324, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2568.99609, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2562.59692, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2560.21338, -1285.61719, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2562.59326, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2560.19312, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2557.81250, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2555.43237, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2553.03027, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2550.63989, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2548.25122, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2545.86890, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19394, 2543.49146, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2541.10986, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2565.66284, -1305.39331, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2535.62671, -1307.08801, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2541.12134, -1307.07678, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2545.85327, -1307.07678, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2550.66626, -1307.07678, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2555.46191, -1307.07678, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2560.17969, -1307.07678, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2560.19971, -1280.99036, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2555.43506, -1280.99036, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2550.62280, -1280.99036, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2541.97412, -1302.17102, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2540.36597, -1307.61938, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2549.97632, -1307.61938, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2559.58667, -1307.61938, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2569.19824, -1307.61938, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2570.81250, -1287.96777, 2050.69824,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 2559.58789, -1304.14526, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2549.97632, -1304.14526, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19302, 2543.58252, -1286.77502, 2044.34656,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2543.54761, -1285.61694, 2048.50659,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2548.31934, -1285.61694, 2048.50659,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2553.09619, -1285.61694, 2048.50659,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2557.87939, -1285.61694, 2048.50659,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2562.66406, -1285.61694, 2048.50659,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 2565.66284, -1289.52795, 2048.50659,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19302, 2565.66284, -1294.29321, 2048.50659,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19302, 2565.66284, -1299.06177, 2048.50659,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19302, 2562.48926, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2557.69922, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2552.93848, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2548.16333, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2543.39233, -1302.46802, 2048.50659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2564.34302, -1280.47034, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2567.33203, -1287.97815, 2050.69824,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 2567.33203, -1297.59485, 2050.69824,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 2570.81250, -1297.57996, 2050.69824,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 2569.19824, -1304.14526, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2564.34253, -1283.94714, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2545.13550, -1283.93689, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2554.73242, -1283.94714, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2545.13501, -1280.45325, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2554.77759, -1280.47034, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2571.54614, -1281.42505, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 2569.95459, -1281.42505, 2050.69824,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19457, 2540.39014, -1280.99036, 2049.03442,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2542.19238, -1279.78955, 2050.13452,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2551.81274, -1279.78955, 2050.13452,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2561.42603, -1279.78955, 2050.13452,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2560.13232, -1279.76965, 2046.63428,   0.00000, -180.00000, 90.00000);
	CreateDynamicObject(19457, 2550.52051, -1279.76965, 2046.63428,   0.00000, -180.00000, 90.00000);
	CreateDynamicObject(2606, 2543.73438, -1294.54395, 2056.99341,   20.00000, 0.00000, -90.00000);
	CreateDynamicObject(2165, 2521.44531, -1282.87903, 2053.62549,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 2518.60571, -1287.66638, 2053.63550,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2191, 2521.13159, -1280.35461, 2053.63599,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2197, 2519.11499, -1281.39258, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2197, 2518.44482, -1281.39258, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2518.34033, -1283.80603, 2053.63501,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19388, 2526.74097, -1285.85608, 2055.97510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19431, 2526.74097, -1287.86865, 2059.43506,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19431, 2526.74097, -1284.68506, 2059.43506,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(19431, 2526.74097, -1286.27380, 2059.43506,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(1491, 2522.33911, -1284.38892, 2053.62500,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1491, 2522.37207, -1287.43225, 2053.62500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1886, 2518.32739, -1299.30249, 2059.74463,   20.00000, 0.00000, 170.00000);
	CreateDynamicObject(1886, 2518.48022, -1307.29492, 2053.31421,   30.00000, 0.00000, 150.00000);
	CreateDynamicObject(19394, 2562.91553, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2565.25073, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19438, 2570.00830, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2565.95142, -1305.12439, 2044.87439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19438, 2571.60986, -1300.49890, 2044.87439,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2571.19238, -1305.25391, 2045.01440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 2562.81738, -1300.49976, 2044.34656,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2204, 2536.65918, -1298.19995, 2056.09326,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2541, 2540.14429, -1280.33801, 2053.58179,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2542, 2542.14453, -1280.39746, 2053.58179,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2500, 2538.38550, -1288.26758, 2055.03296,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1667, 2537.98047, -1287.39075, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2537.98047, -1284.95630, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2537.98560, -1283.71130, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.43726, -1280.46753, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2537.98047, -1286.24829, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1716, 2537.27783, -1287.04565, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1716, 2537.27783, -1283.35168, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1716, 2537.27783, -1284.61926, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1716, 2537.27783, -1285.89868, 2053.63550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1742, 2531.50635, -1281.11768, 2053.63257,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19173, 2540.94263, -1297.89124, 2056.93262,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1557, 2539.12329, -1298.19556, 2053.64502,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1557, 2536.06885, -1298.18481, 2053.65137,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1886, 2527.50391, -1282.73120, 2059.66870,   33.00000, 0.00000, 50.00000);
	CreateDynamicObject(1795, 2566.53906, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2535.87500, -1306.90649, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1795, 2531.60718, -1308.20300, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2537.31665, -1308.20300, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2545.43237, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2550.25049, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2554.96191, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2559.71997, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2565.11646, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1795, 2542.05005, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2546.83008, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2556.47363, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2561.16699, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2570.33765, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2570.33203, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2564.25684, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2559.52246, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2554.64355, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2549.78540, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2545.03125, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2540.19946, -1280.40039, 2043.12109,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2551.63892, -1308.22302, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2536.04663, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2565.64917, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2546.47168, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2541.64526, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2551.25049, -1283.41406, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2556.03271, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2560.94800, -1283.50720, 2043.12061,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19457, 2568.99170, -1302.46802, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19457, 2570.27417, -1296.65173, 2049.03442,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1795, 2571.92822, -1291.24670, 2047.30066,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1795, 2571.92822, -1296.06738, 2047.30066,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1795, 2571.92822, -1301.89099, 2047.30066,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1795, 2560.75708, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2556.04712, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2551.22852, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2546.40234, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2541.71143, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2536.20288, -1308.23352, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2544.30688, -1283.38794, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2553.89722, -1283.38635, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2558.64600, -1283.38635, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2564.10132, -1283.38635, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1795, 2549.07275, -1283.38794, 2047.30066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2540.62378, -1306.90759, 2043.12109,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2540.27637, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2545.03735, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2549.87354, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2554.69653, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2559.41650, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2564.91382, -1306.87329, 2047.28113,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2528, 2570.59546, -1297.41797, 2047.28113,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2528, 2570.59546, -1292.58167, 2047.28113,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2528, 2570.59546, -1286.44446, 2047.28113,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2528, 2560.95532, -1280.41211, 2047.30115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2556.20435, -1280.41211, 2047.30115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2551.39478, -1280.41211, 2047.30115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2546.64111, -1280.41211, 2047.30115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2528, 2541.18237, -1280.41211, 2047.30115,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1886, 2530.35620, -1302.70728, 2050.66211,   15.00000, 180.00000, 561.00000);
	CreateDynamicObject(1886, 2532.36792, -1294.67700, 2053.20215,   33.00000, 0.00000, 90.00000);
	CreateDynamicObject(2886, 2526.67139, -1286.87549, 2055.84766,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2886, 2526.83130, -1286.83594, 2055.84766,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2886, 2526.63452, -1302.58044, 2048.89893,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19304, 2530.84033, -1300.18018, 2051.85498,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2412, 2522.10278, -1307.26794, 2047.28308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2412, 2518.75659, -1307.26794, 2047.28308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1892, 2527.16113, -1301.80872, 2047.28296,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1892, 2526.34521, -1301.80872, 2047.28296,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1536, 2526.76099, -1286.61023, 2054.25488,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3084, 2535.65210, -1308.64075, 2051.70117,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3084, 2540.32227, -1279.48743, 2051.70117,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3084, 2541.77295, -1302.52234, 2051.70117,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3084, 2554.20044, -1302.52234, 2051.70117,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3084, 2566.63037, -1302.52234, 2051.70117,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3084, 2565.69189, -1297.14624, 2051.70117,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3084, 2565.69189, -1284.73767, 2051.70117,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3084, 2571.34912, -1285.58557, 2051.70117,   0.00000, 0.00000, 0.04000);
	CreateDynamicObject(3084, 2546.53076, -1285.58557, 2051.70117,   0.00000, 0.00000, 0.04000);
	CreateDynamicObject(3084, 2558.95508, -1285.58557, 2051.70117,   0.00000, 0.00000, 0.04000);
	CreateDynamicObject(1511, 2538.54932, -1279.96948, 2055.65381,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1488, 2538.16748, -1279.96594, 2055.66040,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1520, 2538.41211, -1283.71790, 2055.09302,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1551, 2538.34326, -1283.56299, 2055.26831,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.30103, -1280.57959, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.59521, -1280.55762, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.21582, -1280.45679, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.37183, -1280.67419, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1667, 2538.48315, -1280.61194, 2055.13257,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1541, 2538.88525, -1285.25745, 2054.60718,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2112, 2534.10718, -1282.02148, 2054.03564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2099, 2531.59961, -1293.22461, 2053.63330,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2120, 2534.17188, -1283.66284, 2054.25537,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2120, 2535.82959, -1281.99500, 2054.25537,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2120, 2534.16455, -1280.32324, 2054.25537,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2120, 2532.42554, -1282.00000, 2054.25537,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1216, 2570.81665, -1292.88977, 2043.61707,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1216, 2570.81665, -1294.84521, 2043.61707,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1216, 2570.81665, -1293.90967, 2043.61707,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1649, 2520.27148, -1283.63806, 2057.88672,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 2532.13208, -1296.35144, 2053.63379,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 2532.12573, -1291.93237, 2053.63379,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2126, 2534.83350, -1295.81116, 2053.63477,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2126, 2534.83350, -1291.50012, 2053.63477,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2606, 2517.98999, -1282.18066, 2056.99341,   20.00000, 0.00000, 90.00000);
	CreateDynamicObject(2606, 2543.56006, -1294.54395, 2057.43335,   25.00000, 0.00000, -90.00000);
	CreateDynamicObject(2606, 2543.73438, -1296.52368, 2056.99341,   20.00000, 0.00000, -90.00000);
	CreateDynamicObject(2606, 2543.55859, -1296.52344, 2057.43335,   25.00000, 0.00000, -90.00000);
	CreateDynamicObject(2737, 2543.55762, -1295.75049, 2055.29590,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2191, 2541.53076, -1297.45337, 2053.62085,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2002, 2543.09741, -1292.91394, 2053.62427,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1703, 2539.71802, -1296.48572, 2053.59082,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1742, 2531.50171, -1283.23083, 2053.63257,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2521.23145, -1283.77698, 2056.34131,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2526.04370, -1281.57239, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2527.44629, -1281.43262, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(364, 2526.04370, -1294.42334, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2526.04370, -1291.18811, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2526.04370, -1287.95264, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2526.04370, -1284.82288, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2526.04370, -1297.58374, 2048.39990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(364, 2527.44629, -1297.43933, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(364, 2527.44629, -1294.26953, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(364, 2527.42725, -1291.05444, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(364, 2527.44629, -1287.81519, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(364, 2527.44629, -1284.68091, 2048.39990,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1886, 2518.47974, -1284.52783, 2059.74463,   30.00000, 0.00000, 30.00000);
	CreateDynamicObject(3785, 2553.60376, -1293.90674, 2046.85168,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3785, 2549.97925, -1293.86963, 2046.85168,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2611, 2524.51001, -1307.35718, 2049.60620,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2008, 2524.94092, -1304.96765, 2047.28381,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2960, 2538.17285, -1286.50854, 2054.83569,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2538.67700, -1286.94922, 2054.83569,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2538.14111, -1285.42236, 2054.83569,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2538.69604, -1285.40942, 2054.83569,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2723, 2540.16870, -1288.93542, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2723, 2538.58643, -1288.66492, 2054.59546,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2723, 2538.58594, -1280.67871, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2723, 2539.23462, -1288.88843, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2723, 2538.87842, -1289.13062, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2723, 2540.18799, -1289.19165, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1775, 2543.27881, -1284.15894, 2054.71338,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1209, 2543.19458, -1285.38000, 2053.63330,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2723, 2539.55420, -1289.19336, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19431, 2526.74097, -1288.23145, 2055.97510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19431, 2526.74097, -1284.31445, 2055.97510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1297.52832, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1281.52283, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1285.00684, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1287.73279, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1290.97400, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1846, 2525.76001, -1294.10107, 2049.06372,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(1744, 2571.25854, -1289.58777, 2043.11853,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1744, 2571.23438, -1296.87292, 2043.11853,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19325, 2530.83350, -1286.73206, 2049.19702,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2530.83350, -1299.87585, 2049.19702,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 2530.83350, -1293.23999, 2049.19702,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2011, 2520.02808, -1280.22302, 2053.63525,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19174, 2520.19263, -1279.89417, 2056.82373,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2960, 2525.61108, -1286.09314, 2053.76001,   -30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2525.94214, -1286.09314, 2053.93994,   -30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2526.21362, -1286.09314, 2054.08496,   -30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2526.53394, -1286.09314, 2054.25806,   -30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2526.90283, -1285.91528, 2054.27979,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2527.23389, -1285.91528, 2054.09985,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2527.49512, -1285.91528, 2053.96191,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2527.80591, -1285.91528, 2053.80200,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2526.19165, -1283.70203, 2054.64307,   0.00000, 27.00000, 0.00000);
	CreateDynamicObject(638, 2529.13770, -1282.70935, 2054.31567,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2528.11987, -1285.91528, 2053.64209,   30.00000, 0.00000, 90.00000);
	CreateDynamicObject(2960, 2526.19189, -1288.11804, 2054.64209,   0.00000, 27.00000, 0.00000);
	CreateDynamicObject(638, 2529.13770, -1289.07092, 2054.31567,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(16779, 2537.63452, -1288.59094, 2059.65186,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19456, 2526.74048, -1302.60168, 2052.51294,   0.00000, 180.00000, 0.00000);
	CreateDynamicObject(2186, 2524.50903, -1306.91565, 2047.28406,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2723, 2538.16943, -1280.67786, 2054.61548,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 2561.22314, -1302.17102, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 2561.21387, -1305.65076, 2046.53833,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(870, 1191.01904, -1812.72803, 12.82300,   0.00000, 0.00000, 26.00000);
	CreateDynamicObject(870, 1191.06995, -1814.57300, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1191.06494, -1816.52905, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1191.06604, -1818.37000, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1191.67200, -1818.28894, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1192.64294, -1818.35901, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1193.58899, -1818.42798, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1194.36096, -1818.48499, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1194.47205, -1816.96497, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1192.92798, -1816.85095, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1193.00696, -1815.78003, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1193.95300, -1815.84900, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1194.09497, -1813.90601, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1192.94897, -1813.82104, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1193.04504, -1812.50000, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1194.45203, -1812.42798, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1191.58704, -1812.21704, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1191.33496, -1815.68298, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1192.23804, -1815.99902, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1191.22302, -1817.87695, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1192.09399, -1817.94104, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1193.75000, -1817.88696, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1194.29797, -1817.92700, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1194.43298, -1816.08398, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1191.31104, -1814.90601, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1191.22302, -1816.10095, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1193.15796, -1813.25903, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1194.48206, -1813.98206, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1194.45898, -1815.65796, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1192.30603, -1818.37805, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1194.62500, -1818.54602, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1194.64905, -1818.22205, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(870, 1194.64844, -1818.22168, 12.82300,   0.00000, 0.00000, 25.99915);
	CreateDynamicObject(1783, 1281.81702, -1805.59094, 12.92800,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19127, 1204.60303, -1837.08105, 12.95100,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1202.84399, -1825.58997, 12.97600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1207.36401, -1825.66602, 12.97600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1228.23206, -1825.83496, 12.97600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1229.76294, -1825.90796, 12.97500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1236.27295, -1825.70203, 12.97700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1236.36902, -1819.17798, 12.98900,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1236.40405, -1815.90698, 12.99400,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1223.13098, -1837.21899, 12.94600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1259.83899, -1837.21997, 12.94900,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1282.58203, -1836.65698, 12.94700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1195.23401, -1837.12195, 12.97000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1190.26904, -1825.54395, 13.16400,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1190.10095, -1820.15503, 13.14200,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1219.21497, -1817.48206, 13.16500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19127, 1212.71899, -1817.51196, 13.15600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(971, 1968.47839, 2162.16748, 11.31600,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(971, 720.07300, -462.58569, 17.23430,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(971, -99.92000, 1111.42896, 20.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(971, -1420.69995, 2591.14771, 56.94000,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(971, -1935.00000, 239.48129, 35.51500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(971, -1904.47009, 277.84760, 43.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(971, 2071.62280, -1830.77295, 14.94440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(971, 1025.79028, -1029.45764, 32.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(971, 1042.33875, -1025.97498, 31.87860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(971, 488.26001, -1735.25928, 12.73790,   0.00000, 0.00000, -7.80000);
	CreateDynamicObject(971, -2425.36475, 1028.08203, 52.70790,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(971, 2394.18579, 1483.60706, 13.36593,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(971, 2387.00000, 1043.56226, 12.29850,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 2357.69995, -648.50000, 128.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1649, 2357.69995, -648.50000, 128.20000,   0.00000, 0.00000, 272.00000);
	CreateDynamicObject(1491, 2353.89990, -656.70001, 126.62000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10150, 2351.59961, -659.19922, 128.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1491, 2354.89990, -650.82001, 126.62000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1491, 2354.00000, -647.62000, 127.00000,   0.00000, 0.00000, 268.00000);
	CreateDynamicObject(1649, 2349.00000, -651.70001, 128.20000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1649, 2349.00000, -651.70001, 128.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1649, 2349.00000, -656.00000, 128.50000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1649, 2349.00000, -656.00000, 128.20000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2173, 2352.00000, -647.50000, 127.10000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2123, 2351.60010, -646.79999, 127.70000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1550, 2353.39990, -646.29999, 127.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1550, 2353.39990, -646.90002, 127.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1550, 2352.89990, -646.29999, 127.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1550, 2349.80005, -653.29999, 128.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2173, 2349.89990, -653.20001, 127.10000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1550, 2349.69995, -652.79999, 128.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1578, 2349.89990, -652.20001, 127.87000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1212, 2351.10010, -647.79999, 127.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1212, 2350.80005, -647.79999, 127.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1212, 2351.10010, -647.50000, 127.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1212, 2350.80005, -647.50000, 127.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1210, 2349.50000, -651.59998, 127.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2354.00000, -650.50000, 127.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2357.50000, -650.59998, 127.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2354.00000, -646.40002, 127.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2357.39990, -646.40002, 127.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2353.50000, -659.00000, 127.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2349.39990, -659.00000, 127.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2349.50000, -646.50000, 127.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2356.60010, -651.09998, 127.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2354.80005, -651.09998, 127.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2354.19995, -656.90002, 127.70000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2354.19995, -655.00000, 127.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 2357.00000, -647.50000, 127.10000,   0.00000, 0.00000, 272.00000);
	CreateDynamicObject(948, 2353.19995, -650.79999, 127.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 2353.19995, -651.59998, 127.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 2353.19995, -652.40002, 127.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 2353.19995, -653.20001, 127.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(948, 2353.19995, -654.09998, 127.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2248, 2356.89990, -650.29999, 127.60000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1244.69897, -1375.15112, 15.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3660, 1244.68188, -1355.54468, 15.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1597, 1230.53174, -1295.90112, 14.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1597, 1230.60681, -1308.17419, 14.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1597, 1230.60449, -1321.52100, 15.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1242.51855, -1355.26782, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1341, 1242.54736, -1377.41309, 13.30000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1571, 1242.32324, -1366.43555, 13.60000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1281, 1242.41101, -1372.69690, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1340, 1242.43982, -1360.26172, 13.50000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1341, 1242.86182, -1351.34253, 13.30000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1568, 1230.90588, -1314.90100, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1230.47681, -1302.02759, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1230.93030, -1334.25549, 12.32714,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1341, 1218.91809, -1298.95288, 13.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 1219.65417, -1302.32520, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1340, 1219.59766, -1306.26965, 13.50000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1571, 1220.11157, -1311.52124, 13.60000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 1219.47888, -1317.16870, 13.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1341, 1219.03259, -1321.27893, 13.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1218.83337, -1296.18420, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1218.90405, -1314.62537, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1218.98340, -1327.69788, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1243.07507, -1302.20508, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1243.09399, -1315.05725, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1243.04077, -1328.46118, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1243.03247, -1348.03113, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1242.81836, -1369.45435, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1242.81616, -1380.51514, 12.33564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3861, 1143.97327, -1453.29102, 15.76670,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(3861, 1143.86267, -1458.48682, 15.76670,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(3861, 1143.90234, -1464.43408, 15.76670,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(3861, 1143.79431, -1447.37805, 15.76670,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(3861, 1143.93860, -1441.27734, 15.76670,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(3861, 1113.23181, -1464.16956, 15.76670,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3861, 1113.16528, -1457.34229, 15.76670,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3861, 1113.13000, -1450.81824, 15.76670,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3861, 1113.13855, -1444.63660, 15.76670,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3861, 1113.22449, -1438.77246, 15.76670,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1257, 1108.10095, -1414.95032, 13.81250,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(1257, 1148.86475, -1414.73511, 13.81250,   0.00000, 0.00000, -89.00000);
	CreateDynamicObject(19608, 1129.03101, -1466.96216, 14.81970,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19609, 1128.82727, -1468.01355, 14.85800,   0.00000, 0.00000, -178.00000);
	CreateDynamicObject(19614, 1126.68359, -1468.88025, 15.00000,   0.00000, 0.00000, -178.00000);
	CreateDynamicObject(19612, 1126.69678, -1468.93665, 15.61200,   0.00000, 0.00000, -178.00000);
	CreateDynamicObject(19611, 1129.12610, -1465.90186, 14.92130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19610, 1129.10010, -1465.87280, 16.57540,   0.00000, 0.00000, -200.00000);
	CreateDynamicObject(19317, 1133.06226, -1468.15808, 15.62230,   -13.50000, -0.50000, -88.00000);
	CreateDynamicObject(19318, 1133.08130, -1467.29443, 15.57120,   -15.00000, 0.00000, -91.00000);
	CreateDynamicObject(19319, 1133.03015, -1467.78357, 15.48310,   -15.00000, 0.00000, -91.00000);
	CreateDynamicObject(19614, 1131.42090, -1468.94189, 14.86700,   0.00000, 0.00000, -178.00000);
	CreateDynamicObject(19614, 1131.98352, -1468.90881, 14.86700,   0.00000, 0.00000, -178.00000);
	CreateDynamicObject(19612, 1131.17151, -1470.97546, 15.47900,   0.00000, 0.00000, -178.00000);
	CreateDynamicObject(1280, 1131.36841, -1463.69519, 15.26590,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1280, 1126.62170, -1463.64197, 15.26590,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1280, 1131.41589, -1461.98987, 15.26590,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1280, 1126.75378, -1461.88098, 15.26590,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(3861, 1126.05017, -1450.84131, 15.76670,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3861, 1131.95593, -1450.31628, 15.76670,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(3861, 1131.68347, -1444.88733, 15.76670,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(3861, 1131.62451, -1438.74951, 15.76670,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(3861, 1125.83167, -1438.89539, 15.76670,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3861, 1125.86804, -1445.06323, 15.76670,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1280, 1131.25085, -1460.01831, 15.26590,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1280, 1126.58362, -1459.93250, 15.26590,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1216, 1102.61279, -1429.97705, 15.18400,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1216, 1102.64587, -1428.33118, 15.18400,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1216, 1102.48193, -1431.70740, 15.18400,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1216, 1102.51111, -1426.71045, 15.18400,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(2232, 1132.60498, -1465.26050, 15.62600,   0.00000, 0.00000, 193.00000);
	CreateDynamicObject(2232, 1125.27844, -1465.38599, 15.62600,   0.00000, 0.00000, 156.00000);
	CreateDynamicObject(2381, 1145.05188, -1440.63159, 16.19440,   0.00000, 0.00000, 93.00000);
	CreateDynamicObject(2381, 1145.05408, -1441.79846, 16.19440,   0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2382, 1145.04272, -1440.96326, 15.40922,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2382, 1145.00415, -1440.13770, 15.40922,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2382, 1145.02979, -1441.96790, 15.40922,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2843, 1142.70386, -1440.80359, 15.41075,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2844, 1143.01489, -1441.21423, 15.41063,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2411, 1142.81995, -1439.95679, 15.80350,   0.00000, 0.00000, -62.00000);
	CreateDynamicObject(2845, 1142.80237, -1441.63379, 15.41044,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1331, 1154.62659, -1426.52454, 15.40880,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1339, 1154.67749, -1428.01294, 15.41730,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(19324, 1102.36328, -1438.34985, 15.36790,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(19324, 1102.35840, -1441.90808, 15.36790,   0.00000, 0.00000, 88.00000);
	CreateDynamicObject(737, 1124.65308, -1476.91113, 14.99390,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1805, 1128.87939, -1472.29370, 15.27083,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18645, 1143.36316, -1441.87646, 15.50340,   4.00000, -11.00000, 200.00000);
	CreateDynamicObject(18978, 1143.30249, -1442.13196, 15.51170,   0.00000, 0.00000, 200.00000);
	CreateDynamicObject(2035, 1143.12476, -1454.22815, 15.41020,   0.00000, 0.00000, 10.00000);
	CreateDynamicObject(2034, 1142.84094, -1454.06836, 15.41038,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2036, 1143.22363, -1454.55933, 15.40964,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(339, 1143.39783, -1452.15515, 15.41020,   -18.00000, -92.00000, 120.00000);
	CreateDynamicObject(2044, 1143.15454, -1453.89624, 15.51080,   0.00000, 0.00000, -178.00000);
	CreateDynamicObject(335, 1142.70752, -1452.26929, 15.41060,   47.00000, -84.00000, 113.00000);
	CreateDynamicObject(336, 1143.04065, -1452.98242, 15.41080,   40.00000, -93.00000, 149.00000);
	CreateDynamicObject(337, 1142.68884, -1447.13745, 15.60420,   0.00000, 84.00000, 0.00000);
	CreateDynamicObject(337, 1142.76135, -1447.48425, 15.60420,   0.00000, 84.00000, 0.00000);
	CreateDynamicObject(336, 1142.98083, -1453.17029, 15.41080,   40.00000, -93.00000, 149.00000);
	CreateDynamicObject(339, 1143.27393, -1452.30981, 15.41020,   -18.00000, -92.00000, 120.00000);
	CreateDynamicObject(335, 1142.69617, -1452.53223, 15.41060,   47.00000, -84.00000, 113.00000);
	CreateDynamicObject(1340, 1106.19495, -1427.35449, 16.14620,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1968, 1107.44604, -1425.42102, 15.34140,   0.00000, 0.00000, -2.00000);
	CreateDynamicObject(2212, 1107.47571, -1426.08777, 15.66500,   -25.00000, 25.00000, -25.00000);
	CreateDynamicObject(2212, 1107.61963, -1424.91760, 15.66500,   -25.00000, 25.00000, -200.00000);
	CreateDynamicObject(19473, 1142.52637, -1458.46338, 15.74710,   0.00000, 93.00000, -68.00000);
	CreateDynamicObject(19897, 1142.93848, -1458.03162, 15.41060,   0.00000, 0.00000, -84.00000);
	CreateDynamicObject(19897, 1142.84412, -1458.16296, 15.41060,   0.00000, 0.00000, -84.00000);
	CreateDynamicObject(19897, 1142.93250, -1457.89050, 15.41060,   0.00000, 0.00000, -84.00000);
	CreateDynamicObject(19897, 1143.11157, -1457.90894, 15.41060,   0.00000, 0.00000, -84.00000);
	CreateDynamicObject(19896, 1143.11682, -1457.65466, 15.41870,   0.00000, 0.00000, -98.00000);
	CreateDynamicObject(19896, 1142.81238, -1457.68372, 15.41870,   0.00000, 0.00000, -98.00000);
	CreateDynamicObject(19896, 1142.97192, -1457.49902, 15.41870,   0.00000, 0.00000, -98.00000);
	CreateDynamicObject(19896, 1143.22717, -1457.36438, 15.41870,   0.00000, 0.00000, -98.00000);
	CreateDynamicObject(19896, 1142.86914, -1457.32751, 15.41870,   0.00000, 0.00000, -98.00000);
	CreateDynamicObject(19896, 1143.36829, -1457.55957, 15.41870,   0.00000, 0.00000, -98.00000);
	CreateDynamicObject(2241, 1143.27075, -1458.44324, 15.80350,   0.00000, 0.00000, -33.00000);
	CreateDynamicObject(953, 1131.87292, -1443.69702, 15.60230,   0.00000, 0.00000, 47.00000);
	CreateDynamicObject(2782, 1132.63843, -1443.81433, 15.60250,   0.00000, 0.00000, 76.00000);
	CreateDynamicObject(1604, 1132.39417, -1445.76501, 15.60960,   0.00000, -98.00000, 25.00000);
	CreateDynamicObject(1604, 1132.81726, -1445.68689, 15.60960,   0.00000, -98.00000, 25.00000);
	CreateDynamicObject(1356, 1132.50562, -1437.62427, 15.60310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1356, 1132.48242, -1438.35242, 15.60310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1356, 1132.61670, -1445.73608, 15.60310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1356, 1132.57971, -1444.89661, 15.60310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3809, 1102.23535, -1462.02429, 17.04559,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19608, 1140.85901, -1425.63049, 21.74035,   0.00000, 180.00000, 180.00000);
	CreateDynamicObject(19608, 1132.34778, -1425.63232, 21.73035,   0.00000, 180.00000, 180.00000);
	CreateDynamicObject(19608, 1123.86060, -1425.64893, 21.72471,   0.00000, 180.00000, 180.00000);
	CreateDynamicObject(19608, 1115.37524, -1425.65393, 21.73378,   0.00000, 180.00000, 180.00000);
	CreateDynamicObject(3471, 1128.65002, -1436.63684, 15.90010,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2755, 1128.60852, -1437.25671, 16.67830,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3531, 1128.55286, -1436.27832, 16.78900,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1597, 1128.64722, -1444.88745, 17.33820,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19332, 1113.43445, -1474.73499, 60.88790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1597, 1134.07922, -1471.74036, 17.33820,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19637, 1114.16553, -1465.31958, 15.40690,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19637, 1114.16602, -1464.73633, 15.40690,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19637, 1114.16272, -1464.15601, 15.40690,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19637, 1114.16077, -1463.55505, 15.40690,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19637, 1114.15820, -1462.97412, 15.40690,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19637, 1124.90259, -1437.74817, 15.41060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19637, 1124.92957, -1438.36865, 15.41060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19637, 1124.95471, -1438.96973, 15.41060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19637, 1124.93762, -1439.55481, 15.41060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19637, 1124.97375, -1440.07446, 15.41060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19636, 1124.92822, -1443.95898, 15.40990,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19636, 1124.93652, -1444.53918, 15.40990,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19636, 1124.96472, -1445.11890, 15.40990,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19636, 1124.95288, -1445.70032, 15.40990,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19636, 1124.94031, -1446.26160, 15.40990,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19638, 1125.11499, -1449.72815, 15.40940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19638, 1125.12231, -1450.28833, 15.40940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19638, 1125.11206, -1450.84875, 15.40940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19638, 1125.12134, -1451.40833, 15.40940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19638, 1125.13049, -1451.94861, 15.40940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2453, 1143.15356, -1463.36731, 15.80770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2453, 1143.13733, -1463.91736, 15.80770,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2456, 1142.18750, -1465.53088, 14.77560,   0.00000, 0.00000, 36.00000);
	CreateDynamicObject(2222, 1133.16394, -1451.26538, 15.54320,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2222, 1132.68250, -1451.24158, 15.54320,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2223, 1133.15198, -1450.53906, 15.54320,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2223, 1132.66577, -1450.55481, 15.54320,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2849, 1132.82983, -1449.70776, 15.41060,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1597, 1123.72168, -1471.63647, 17.33820,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 1127.08228, -1381.78955, 13.54230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 1130.13916, -1381.94849, 13.54230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 1126.95117, -1379.86243, 13.54230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 1130.04980, -1379.08069, 13.54230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 1133.91724, -1382.07935, 13.54230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 1135.33313, -1379.87488, 13.54230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 1133.31250, -1378.03516, 13.54230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 1136.50537, -1377.50244, 13.54230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 1136.22925, -1382.27966, 13.54230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 1129.57568, -1377.68945, 13.54230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 1123.93469, -1381.55627, 13.54230,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(869, 1124.94446, -1378.80127, 13.54230,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(869, 1121.96069, -1378.69702, 13.54230,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(869, 1120.93420, -1380.78442, 13.54230,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(2251, 1129.46643, -1434.70557, 15.58990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2251, 1127.66406, -1434.66650, 15.58990,   0.00000, 0.00000, -135.00000);
	CreateDynamicObject(15038, 1114.45959, -1440.80505, 15.45590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(15038, 1114.35742, -1442.71960, 15.45590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(15038, 1114.29663, -1446.71021, 15.45590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(15038, 1114.28333, -1448.77515, 15.45590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(15038, 1114.31860, -1452.79639, 15.45590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(15038, 1114.32813, -1455.33679, 15.45590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(15038, 1114.32947, -1459.41968, 15.45590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(15038, 1114.40063, -1462.21924, 15.45590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1119.24927, -1450.53320, 17.05180,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1119.16028, -1439.98096, 17.05180,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1137.86047, -1439.98413, 17.05180,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1137.89917, -1450.48560, 17.05180,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1597, 1118.90100, -1445.41284, 17.33820,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1597, 1137.57935, -1445.27502, 17.33820,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1216, 1138.54602, -1439.88721, 15.18400,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1216, 1137.24622, -1439.85938, 15.18400,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1216, 1119.72278, -1439.88477, 15.18400,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1216, 1118.70190, -1439.88342, 15.18400,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19329, 1101.93640, -1457.84473, 18.29432,   0.00000, 0.00000, -90.48000);
	CreateDynamicObject(19377, 1123.93713, -1562.03857, 12.68927,   0.00000, 0.00000, -90.17997);
	CreateDynamicObject(19377, 1133.38330, -1562.10229, 12.68927,   0.00000, 0.00000, -90.59996);
	CreateDynamicObject(19377, 1186.00171, -1492.33716, 12.54420,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1186.01758, -1483.85864, 12.54420,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 1060.61816, -1496.12183, 12.56695,   0.00000, 0.00000, -15.06000);
	CreateDynamicObject(19377, 1060.22229, -1497.92712, 12.56695,   0.00000, 0.00000, -15.06000);
	CreateDynamicObject(970, 1143.23071, -1415.87524, 13.15997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1139.12976, -1415.86938, 13.15997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1135.01001, -1415.82288, 13.15997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1113.89868, -1415.88416, 13.15997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1118.03625, -1415.85461, 13.15997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1122.16321, -1415.84412, 13.15997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1364, 1118.81970, -1415.13904, 13.35910,   0.00000, 0.00000, 180.23984);
	CreateDynamicObject(1364, 1139.71069, -1415.16370, 13.35910,   0.00000, 0.00000, 180.23984);
	CreateDynamicObject(639, 1147.80188, -1423.37329, 20.48230,   0.00000, 0.00000, -89.33998);
	CreateDynamicObject(639, 1108.79138, -1423.33362, 20.48230,   0.00000, 0.00000, -89.33998);
	CreateDynamicObject(1597, 1139.41602, -1417.11536, 15.14790,   0.00000, 0.00000, 88.68003);
	CreateDynamicObject(1597, 1118.35754, -1417.19409, 15.14790,   0.00000, 0.00000, 88.68003);
	CreateDynamicObject(1561, 1101.53235, -1456.69202, 14.97725,   0.00000, 0.00000, 90.48003);
	CreateDynamicObject(1561, 1101.55823, -1458.16248, 14.97725,   0.00000, 0.00000, 90.48003);
	CreateDynamicObject(970, 1132.43225, -1415.86304, 13.15997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1126.32922, -1415.88367, 13.15997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1130.34802, -1415.89514, 12.58321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1568, 1128.38660, -1415.92456, 12.58321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1129.35315, -1416.03015, 12.58935,   0.00000, 0.00000, 1.20000);
	CreateDynamicObject(869, 1117.98645, -1378.05103, 13.54230,   0.00000, 0.00000, 43.70000);
	CreateDynamicObject(869, 1117.60156, -1380.57141, 13.54230,   0.00000, 0.00000, -21.99998);
	CreateDynamicObject(19425, 1129.35315, -1416.03015, 12.58935,   0.00000, 0.00000, 1.20000);
	CreateDynamicObject(759, 1150.40649, -1419.32495, 14.85491,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2805, 1114.45959, -1443.08252, 16.28886,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2805, 1114.55249, -1446.22290, 16.28886,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2806, 1113.71558, -1445.50159, 15.41135,   0.00000, 0.00000, -35.58000);
	CreateDynamicObject(2806, 1113.86926, -1450.44043, 15.41135,   0.00000, 0.00000, -38.99998);
	CreateDynamicObject(2806, 1113.66455, -1444.07471, 15.41135,   0.00000, 0.00000, -105.66003);
	CreateDynamicObject(2806, 1113.96069, -1443.94019, 15.41135,   0.00000, 0.00000, -104.99998);
	CreateDynamicObject(2805, 1113.79529, -1445.00354, 15.52927,   -84.00000, 0.00000, 116.40004);
	CreateDynamicObject(19570, 1113.55542, -1439.85144, 15.40976,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19587, 1113.92590, -1439.64087, 15.43130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19570, 1113.57373, -1439.59143, 15.40976,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19570, 1113.78760, -1439.78442, 15.40976,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19570, 1113.80591, -1439.52441, 15.40976,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19570, 1114.06763, -1439.80554, 15.40976,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19570, 1114.06604, -1439.54272, 15.40976,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19833, 1113.03577, -1438.55566, 15.50423,   0.00000, 90.00000, 14.51999);
	CreateDynamicObject(3931, 1143.15967, -1448.54297, 15.41152,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3931, 1142.98987, -1446.39014, 15.41152,   0.00000, 0.00000, 11.94000);
	CreateDynamicObject(2806, 1114.25073, -1445.31958, 15.41135,   0.00000, 0.00000, -104.99998);
	CreateDynamicObject(2806, 1113.84314, -1451.25476, 15.41135,   0.00000, 0.00000, -105.66003);
	CreateDynamicObject(19137, 1113.95276, -1451.82068, 15.45000,   18.00000, -91.00000, -113.00000);
	CreateDynamicObject(19137, 1113.86096, -1449.86304, 15.45000,   -4.00000, -120.00000, -47.00000);
	CreateDynamicObject(19793, 1113.99072, -1456.33496, 15.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1113.99670, -1456.72986, 15.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1114.01575, -1457.97852, 15.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1114.02173, -1458.37646, 15.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1114.00806, -1457.45020, 15.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1114.00452, -1457.26440, 15.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1113.99316, -1456.53174, 15.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1114.01929, -1458.17554, 15.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1114.02051, -1458.27954, 15.55000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1113.99854, -1456.42468, 15.55000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1114.01807, -1458.07556, 15.55000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1114.00952, -1457.36560, 15.55000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19793, 1114.00098, -1456.65466, 15.55000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2782, 1132.30701, -1439.63831, 15.41010,   -47.00000, 47.00000, 120.00000);
	CreateDynamicObject(1603, 1132.06897, -1439.32190, 15.47669,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1603, 1132.46204, -1438.95227, 15.47670,   0.00000, 18.00000, 0.00000);
	CreateDynamicObject(1603, 1132.39746, -1437.53162, 15.60000,   0.00000, 18.00000, 0.00000);
	CreateDynamicObject(2782, 1132.38000, -1438.28870, 15.41010,   33.00000, 113.00000, 105.00000);
	CreateDynamicObject(12937, -916.14417, -515.69464, 27.83271,   0.00000, 0.00000, -94.91994);
	CreateDynamicObject(18259, -954.67413, -506.77356, 26.30960,   0.00000, 0.00000, -181.43994);
	CreateDynamicObject(2589, -951.38782, -511.69809, 31.78374,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2589, -957.62854, -511.95789, 31.78374,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2589, -954.28113, -511.48291, 31.78374,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2589, -951.63416, -507.77731, 31.78374,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2589, -954.51538, -507.83389, 31.78374,   0.00000, 0.00000, -145.50005);
	CreateDynamicObject(2589, -957.21698, -507.85431, 31.78374,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(941, -957.58417, -503.10052, 26.90415,   0.00000, 0.00000, -87.84003);
	CreateDynamicObject(941, -957.75006, -499.91696, 26.90415,   0.00000, 0.00000, -87.84003);
	CreateDynamicObject(2806, -957.44629, -504.11664, 27.45900,   0.00000, 0.00000, -60.06000);
	CreateDynamicObject(2806, -957.54938, -502.60013, 27.45900,   0.00000, 0.00000, -60.06000);
	CreateDynamicObject(2806, -957.42572, -503.39447, 27.45900,   0.00000, 0.00000, -60.06000);
	CreateDynamicObject(2804, -957.51508, -501.02542, 27.41470,   0.00000, 0.00000, -64.80000);
	CreateDynamicObject(2804, -957.52539, -500.27518, 27.43466,   0.00000, 0.00000, -71.81998);
	CreateDynamicObject(2804, -957.76282, -499.54266, 27.41754,   0.00000, 0.00000, -77.39999);
	CreateDynamicObject(19583, -957.00311, -502.47681, 27.79277,   -227.52039, 43.61996, 100.98000);
	CreateDynamicObject(19583, -957.06537, -503.25668, 27.79277,   -227.52039, 43.61996, 100.98000);
	CreateDynamicObject(19583, -957.09076, -503.98865, 27.79277,   -227.52039, 43.61996, 100.98000);
	CreateDynamicObject(937, -953.77258, -498.74408, 26.91437,   0.00000, 0.00000, 2.04000);
	CreateDynamicObject(2805, -954.20361, -498.96445, 28.00341,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2805, -953.29187, -498.86368, 28.00341,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(937, -951.36639, -498.64612, 26.91437,   0.00000, 0.00000, 0.78000);
	CreateDynamicObject(19560, -951.93878, -498.82324, 27.38949,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19560, -951.94934, -498.29440, 27.38949,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19560, -951.29205, -498.25146, 27.38949,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19560, -951.27039, -498.86493, 27.38949,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19560, -950.65588, -498.87903, 27.38949,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19560, -950.64557, -498.23550, 27.38949,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -957.23285, -502.98798, 27.41721,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -957.76062, -503.85944, 27.39793,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -957.65887, -503.85217, 27.39793,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -955.58398, -503.17044, 26.43386,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -956.59161, -506.84601, 26.43386,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -956.60962, -506.73431, 26.43386,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -956.77100, -506.88913, 26.43386,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -956.82147, -506.75400, 26.43386,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -957.42706, -500.91119, 27.41721,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -957.45490, -501.07010, 27.41721,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -957.40936, -500.31116, 27.41721,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -957.83936, -499.56250, 27.41721,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -952.78772, -504.80237, 26.43386,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -951.67969, -511.04578, 26.43386,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -951.94391, -507.31616, 26.43386,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -954.53961, -507.27759, 26.43386,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -954.64783, -510.70370, 26.43386,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2803, -948.61401, -499.17511, 27.35276,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(910, -948.42969, -498.89914, 27.36510,   0.00000, 0.00000, 91.20002);
	CreateDynamicObject(2803, -948.81946, -498.43637, 27.35276,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3034, -949.60620, -500.54416, 28.71080,   0.00000, 0.00000, 92.34000);
	CreateDynamicObject(3034, -949.38654, -510.89325, 28.71080,   0.00000, 0.00000, 91.26002);
	CreateDynamicObject(19325, -954.62183, -514.09747, 27.48078,   0.00000, 0.00000, -88.38000);
	CreateDynamicObject(19325, -959.71985, -509.83521, 27.48078,   0.00000, 0.00000, -178.92000);
	CreateDynamicObject(19325, -959.77570, -500.85263, 27.48078,   0.00000, 0.00000, -178.92000);
	CreateDynamicObject(19325, -954.95306, -497.31393, 27.48078,   0.00000, 0.00000, -269.39993);
	CreateDynamicObject(19455, -957.56885, -508.90558, 26.35920,   0.54000, -89.75999, -0.48000);
	CreateDynamicObject(19455, -954.31586, -508.87836, 26.37324,   0.54000, -89.75999, -0.48000);
	CreateDynamicObject(19455, -951.42010, -508.88675, 26.36570,   0.54000, -89.75999, -0.48000);
	CreateDynamicObject(19455, -951.67444, -502.55798, 26.40111,   0.54000, -89.75999, 0.72000);
	CreateDynamicObject(19455, -955.16534, -502.66077, 26.39670,   0.54000, -89.75999, 1.02000);
	CreateDynamicObject(19455, -957.89459, -502.68323, 26.35479,   0.54000, -89.75999, -0.48000);
	CreateDynamicObject(937, -955.90869, -498.83771, 26.91437,   0.00000, 0.00000, 2.04000);
	CreateDynamicObject(19582, -956.71417, -498.60626, 27.39526,   0.00000, 0.00000, -6.30000);
	CreateDynamicObject(19582, -956.13391, -498.54898, 27.39526,   0.00000, 0.00000, -6.30000);
	CreateDynamicObject(19582, -955.46863, -498.54379, 27.39526,   0.00000, 0.00000, -6.30000);
	CreateDynamicObject(19582, -955.37732, -499.04523, 27.39526,   0.00000, 0.00000, -6.30000);
	CreateDynamicObject(19582, -955.99054, -499.07291, 27.39526,   0.00000, 0.00000, -6.30000);
	CreateDynamicObject(19582, -956.59302, -499.18219, 27.39526,   0.00000, 0.00000, -6.30000);
	CreateDynamicObject(19839, -956.75793, -530.51782, 25.00546,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19839, -956.77631, -530.78528, 25.00546,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19839, -956.81146, -531.16791, 25.00546,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19839, -956.92505, -531.51831, 25.00546,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19839, -957.37079, -531.48773, 25.00546,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19839, -957.26318, -530.96655, 25.00546,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19839, -957.26343, -530.44702, 25.00546,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, -959.92340, -489.50311, 24.83439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, -929.94061, -488.97379, 24.83439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, -907.81281, -519.58459, 24.83439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, -940.51398, -546.13794, 24.83439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, -907.35449, -505.30161, 24.94163,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, -910.96960, -544.55914, 24.83439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(639, -945.19751, -510.57346, 27.79111,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(639, -945.28424, -505.02972, 27.79111,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(17324, -925.33105, -535.29559, 24.51625,   0.00000, 0.00000, -179.87985);
	CreateDynamicObject(1736, -919.29333, -511.82974, 27.71106,   0.00000, 0.00000, -94.79998);
	CreateDynamicObject(669, -964.64111, -540.01398, 24.83439,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10252, -927.32953, -524.07623, 24.95481,   0.00000, 0.00000, -540.29913);
	CreateDynamicObject(639, -926.51544, -523.85602, 28.38539,   0.00000, 0.00000, -81.90002);
	CreateDynamicObject(639, -928.44238, -523.97260, 28.38539,   0.00000, 0.00000, -81.90002);
	CreateDynamicObject(1810, -920.25806, -515.09570, 25.54903,   0.00000, 0.00000, -83.33999);
	CreateDynamicObject(824, -924.72772, -541.42450, 23.90683,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(824, -928.90759, -541.44995, 23.90683,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(824, -921.43884, -541.48987, 23.90683,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, -920.30750, -531.58466, 25.21991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, -920.36340, -536.28491, 25.21991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, -924.46143, -530.62231, 25.21991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, -929.03748, -531.21136, 25.21991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, -924.45319, -537.15344, 25.21991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, -929.36981, -537.29089, 25.21991,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, -900.19934, -491.33755, 24.94163,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(669, -912.68701, -486.08267, 24.94163,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(17324, -1387.49158, -1515.20227, 100.87180,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3276, -1369.51953, -1527.00024, 102.21050,   356.85840, 0.00000, 82.07236);
	CreateDynamicObject(705, -1333.29175, -1463.90930, 102.39200,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3276, -1368.24084, -1515.06335, 102.21050,   356.85840, 0.00000, 87.03370);
	CreateDynamicObject(17059, -1377.38025, -1513.85742, 100.75000,   3.00000, 0.00000, 90.00000);
	CreateDynamicObject(3415, -1336.27490, -1453.38953, 102.66740,   0.00000, 0.00000, 277.55151);
	CreateDynamicObject(941, -1336.64832, -1450.86963, 103.09130,   0.00000, 0.00000, 6.74720);
	CreateDynamicObject(19847, -1337.28235, -1450.70813, 103.60470,   -7.80000, -0.02000, 26.53399);
	CreateDynamicObject(19836, -1335.73901, -1450.75073, 103.56750,   0.00000, 0.00000, 270.40503);
	CreateDynamicObject(19582, -1336.54663, -1450.50403, 103.56660,   0.00000, 0.00000, 159.02855);
	CreateDynamicObject(19582, -1336.31494, -1450.62500, 103.56660,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -1337.15918, -1451.77600, 102.68750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -1336.46143, -1450.68335, 103.56750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19137, -1337.94263, -1456.27234, 105.63110,   -47.00000, -90.00000, 99.00000);
	CreateDynamicObject(19582, -1336.58777, -1450.89978, 103.56660,   0.00000, 0.00000, 68.43761);
	CreateDynamicObject(19836, -1337.11462, -1451.14819, 103.56750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -1336.35095, -1450.99011, 103.56750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -1336.08875, -1451.29639, 102.68750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -1336.70374, -1451.28113, 102.68750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -1336.29297, -1451.09546, 102.68750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -1335.67542, -1451.00562, 102.68750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -1338.25024, -1453.75183, 105.46860,   -90.00000, -190.00000, 87.00000);
	CreateDynamicObject(3276, -1367.74341, -1503.29480, 102.21050,   356.85840, 0.00000, 89.11048);
	CreateDynamicObject(3276, -1331.68079, -1453.00146, 103.50323,   356.85840, 0.00000, 95.55168);
	CreateDynamicObject(3276, -1338.79614, -1446.23083, 103.50320,   357.00000, 0.00000, 184.21294);
	CreateDynamicObject(19137, -1335.90918, -1450.69592, 103.66670,   0.00000, 0.00000, 144.18069);
	CreateDynamicObject(19137, -1338.26782, -1453.75977, 105.63110,   -47.00000, -90.00000, 99.00000);
	CreateDynamicObject(19836, -1336.32410, -1451.59668, 102.68750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19836, -1337.91016, -1456.27185, 105.46860,   -90.00000, -190.00000, 87.00000);
	CreateDynamicObject(19590, -1338.01953, -1455.66199, 105.66600,   -34.00000, 0.00000, 190.00000);
	CreateDynamicObject(19590, -1338.17932, -1454.37817, 105.66600,   -34.00000, 0.00000, 6.00000);
	CreateDynamicObject(2770, -1334.90955, -1451.48328, 103.29300,   0.00000, 0.00000, 41.13350);
	CreateDynamicObject(705, -1373.56409, -1527.34265, 101.41200,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14875, -1341.38831, -1449.40698, 103.46240,   0.00000, 0.00000, 275.04230);
	CreateDynamicObject(1458, -1371.23999, -1503.09375, 101.28820,   0.00000, 0.00000, 271.55649);
	CreateDynamicObject(3286, -1398.87292, -1506.71863, 105.51858,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18652, -1337.87500, -1455.00342, 105.18310,   0.00000, 0.00000, 7.67570);
	CreateDynamicObject(2770, -1337.96472, -1458.27466, 103.29660,   0.00000, 0.00000, 21.29620);
	CreateDynamicObject(3525, -1393.69702, -1503.03149, 103.71030,   0.00000, 0.00000, 181.50130);
	CreateDynamicObject(3525, -1381.23706, -1503.03149, 103.71030,   0.00000, 0.00000, 181.50130);
	CreateDynamicObject(3276, 29.34992, -2627.84912, 39.88751,   0.00000, 0.00000, 182.02528);
	CreateDynamicObject(3276, 37.62361, -2621.24146, 40.08445,   0.00000, 0.00000, 271.52039);
	CreateDynamicObject(3276, 27.67456, -2612.22363, 39.88751,   0.00000, 0.00000, 182.02528);
	CreateDynamicObject(937, 26.89670, -2643.06396, 39.91620,   0.00000, 0.00000, 3.58710);
	CreateDynamicObject(1483, 27.76000, -2641.64551, 41.01520,   0.00000, 0.00000, 273.43829);
	CreateDynamicObject(1219, 31.03385, -2641.65283, 39.62208,   0.00000, 0.00000, 356.50327);
	CreateDynamicObject(1438, 31.14650, -2641.80127, 39.84450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19638, 27.40547, -2643.01807, 40.39030,   0.00000, 0.00000, 349.99649);
	CreateDynamicObject(19639, 26.52460, -2643.04370, 40.39064,   0.00000, 0.00000, 34.55677);
	CreateDynamicObject(19563, 26.60028, -2643.09424, 40.45030,   0.00000, 0.00000, 34.00000);
	CreateDynamicObject(19637, 26.80540, -2643.04370, 39.64720,   0.00000, 0.00000, 17.31862);
	CreateDynamicObject(3250, -1075.23389, -1264.39417, 128.20596,   0.00000, 0.00000, 270.26117);
	CreateDynamicObject(937, -1079.36597, -1267.23645, 129.26981,   0.00000, 0.00000, 90.45190);
	CreateDynamicObject(19637, -1079.39307, -1267.63403, 129.75240,   0.00000, 0.00000, 286.73682);
	CreateDynamicObject(19639, -1079.46692, -1266.92590, 129.76460,   0.00000, 0.00000, 266.36108);
	CreateDynamicObject(19564, -1079.38635, -1266.90369, 129.78461,   0.00000, 0.00000, 279.83801);
	CreateDynamicObject(1472, -1080.63025, -1267.14233, 128.22240,   0.00000, 0.00000, 270.32309);
	CreateDynamicObject(3374, -1070.81909, -1283.82043, 129.69780,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3374, -1076.25916, -1283.82043, 129.69780,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1483, -1077.40796, -1270.43396, 129.94611,   0.00000, 0.00000, 91.33070);
	CreateDynamicObject(1483, -1072.52795, -1270.33398, 129.94611,   0.00000, 0.00000, 91.33070);
	CreateDynamicObject(3286, -1070.93616, -1277.41919, 133.04321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(941, -534.65997, -174.00000, 77.88000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(941, -535.23090, -180.30000, 77.88000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(941, -530.76837, -176.99001, 77.88000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(941, -538.85608, -177.56000, 77.88000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(0, 1676.10388, -2308.15918, 12.54250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1690.10693, -2308.14771, 12.54254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1535.47998, -1662.67847, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1535.34521, -1682.73193, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1538.74646, -1723.46289, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1521.40063, -1601.25916, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1536.21338, -1600.75610, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1519.30005, -1725.07471, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1478.95947, -1725.77612, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1438.85840, -1724.18787, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1437.01282, -1663.53357, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1437.94409, -1601.33289, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1482.51868, -1600.05334, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1188.06067, -1344.03967, 12.55523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1187.95471, -1303.98010, 12.55523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1214.25891, -1289.12476, 12.55523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1214.04480, -1386.77881, 12.55523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1146.32007, -1412.01746, 12.55523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1118.56506, -1379.87610, 12.55523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1111.10364, -1412.65869, 12.55523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1248.24512, -1337.58972, 12.55523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1248.78455, -1386.58679, 12.55523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1500.08740, -1743.33008, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1462.71191, -1742.71667, 12.54094,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19076, 1675.58118, -2308.45605, 12.54254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3861, 1143.97327, -1453.29102, 15.76670,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(19868, 2480.55518, -1656.20483, 12.30000,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(19868, 2485.29077, -1654.48975, 12.30000,   0.00000, 0.00000, 6.00000);
	CreateDynamicObject(19868, 2490.44336, -1654.25769, 12.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 2508.30078, -1688.37561, 12.30000,   0.00000, 0.00000, -76.00000);
	CreateDynamicObject(19868, 2479.87305, -1685.92310, 12.30000,   0.00000, 0.00000, -267.00000);
	CreateDynamicObject(19868, 2479.52563, -1680.77051, 12.30000,   0.00000, 0.00000, -267.00000);
	CreateDynamicObject(19868, 2479.24780, -1675.60071, 12.30000,   0.00000, 0.00000, -267.00000);
	CreateDynamicObject(19868, 2479.13257, -1670.51270, 12.30000,   0.00000, 0.00000, -267.00000);
	CreateDynamicObject(19868, 2478.86035, -1665.38354, 12.30000,   0.00000, 0.00000, -267.00000);
	CreateDynamicObject(19868, 2478.54932, -1660.23962, 12.30000,   0.00000, 0.00000, -267.00000);
	CreateDynamicObject(19868, 2495.56396, -1654.76501, 12.30000,   0.00000, 0.00000, -14.00000);
	CreateDynamicObject(19868, 2500.19458, -1656.83020, 12.30000,   0.00000, 0.00000, -34.00000);
	CreateDynamicObject(19868, 2502.80981, -1660.81555, 12.30000,   0.00000, 0.00000, -80.00000);
	CreateDynamicObject(19868, 2503.72339, -1665.92676, 12.30000,   0.00000, 0.00000, -80.00000);
	CreateDynamicObject(19868, 2504.64575, -1671.04749, 12.30000,   0.00000, 0.00000, -80.00000);
	CreateDynamicObject(19868, 2507.77490, -1686.08789, 12.30000,   0.00000, 0.00000, -76.00000);
	CreateDynamicObject(1483, 2491.21313, -1659.34607, 14.10000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1483, 2497.93530, -1659.35364, 14.10000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1483, 2493.10059, -1671.58130, 14.10000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1483, 2499.81372, -1671.61157, 14.10000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1483, 2484.50952, -1659.31421, 14.10000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1597, 2497.11499, -1657.22791, 14.80000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1597, 2489.64673, -1657.27576, 14.70000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1597, 2492.45557, -1669.56616, 14.70000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1597, 2499.93213, -1669.72729, 14.70000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1597, 2482.50391, -1657.30652, 14.70000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3515, 2489.78198, -1685.78430, 12.20000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 2489.12427, -1670.33789, 12.32344,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7392, 2506.27905, -1677.83484, 13.50000,   0.00000, 0.00000, 12.00000);
	CreateDynamicObject(3524, 2479.88086, -1688.67065, 15.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3524, 2484.92407, -1689.12427, 15.00000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18761, 321.19324, -1187.75171, 80.08000,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(3528, 327.85913, -1182.32288, 84.65100,   0.00000, 0.00000, -50.00000);
	CreateDynamicObject(3528, 313.58078, -1193.81934, 84.65100,   0.00000, 0.00000, -50.00000);
	CreateDynamicObject(3524, 302.53503, -1157.47656, 79.90591,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3524, 297.34045, -1152.11621, 79.90590,   0.00000, 0.00000, -80.00000);
	CreateDynamicObject(6965, 282.64621, -1192.76538, 82.84000,   0.02000, -2.40000, 2.14000);
	CreateDynamicObject(14560, 265.38159, -1172.07922, 83.00000,   0.00000, 0.00000, 18.00000);
	CreateDynamicObject(19868, 331.15909, -1180.03149, 81.00000,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(19868, 335.23672, -1176.60205, 81.00000,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(19868, 339.34717, -1173.14722, 81.00000,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(19868, 343.36203, -1169.59509, 81.00000,   0.00000, 0.00000, 42.00000);
	CreateDynamicObject(19868, 347.20541, -1165.73291, 81.00000,   0.00000, 0.00000, 46.00000);
	CreateDynamicObject(19868, 311.15771, -1195.89331, 81.00000,   0.00000, 0.00000, 36.00000);
	CreateDynamicObject(19868, 306.85156, -1199.12537, 81.00000,   0.00000, 0.00000, 36.00000);
	CreateDynamicObject(19868, 302.50562, -1202.31970, 81.00000,   0.00000, 0.00000, 36.00000);
	CreateDynamicObject(19868, 298.18326, -1205.55286, 81.00000,   0.00000, 0.00000, 36.00000);
	CreateDynamicObject(19868, 293.89194, -1208.71045, 81.00000,   0.00000, 0.00000, 36.00000);
	CreateDynamicObject(19868, 289.53857, -1211.75366, 81.00000,   0.00000, 0.00000, 34.00000);
	CreateDynamicObject(19868, 285.30997, -1214.74670, 81.00000,   0.00000, 0.00000, 36.00000);
	CreateDynamicObject(1483, 279.20422, -1166.06079, 81.60000,   0.00000, 0.00000, 44.00000);
	CreateDynamicObject(1483, 293.13135, -1180.58569, 81.60000,   0.00000, 0.00000, 44.00000);
	CreateDynamicObject(1483, 297.80264, -1185.42249, 81.60000,   0.00000, 0.00000, 44.00000);
	CreateDynamicObject(1483, 283.84094, -1170.86719, 81.60000,   0.00000, 0.00000, 44.00000);
	CreateDynamicObject(1483, 288.45041, -1175.74451, 81.60000,   0.00000, 0.00000, 44.00000);
	CreateDynamicObject(13562, 317.18710, -1169.43103, 81.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -991.63513, -1674.34497, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -991.64117, -1677.14380, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -991.63409, -1679.96716, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -991.62689, -1682.83459, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -991.62042, -1685.67749, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -1070.15027, -1618.23682, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -1070.15027, -1621.43909, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -1070.15027, -1624.70374, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -1070.15027, -1627.85229, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -1070.15027, -1631.09253, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -1053.43176, -1623.45813, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -1053.43176, -1626.74329, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -1053.43176, -1630.09143, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -1053.43176, -1633.32715, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -1053.43176, -1636.65393, 75.35680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3261, -1019.64319, -1644.45276, 75.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3261, -1016.47412, -1644.48657, 75.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3261, -1013.29102, -1644.50317, 75.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3261, -1006.99561, -1644.50134, 75.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3261, -1010.12958, -1644.50134, 75.30000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3261, -1072.47314, -1679.07532, 75.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3261, -1069.35132, -1679.05286, 75.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3261, -1066.21008, -1679.01001, 75.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3261, -1063.02917, -1678.98694, 75.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3261, -1059.82886, -1678.96362, 75.20000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3261, -975.65631, -1700.71863, 75.20000,   0.00000, 2.00000, 90.00000);
	CreateDynamicObject(3261, -978.74188, -1700.65759, 75.20000,   0.00000, 2.00000, 90.00000);
	CreateDynamicObject(3261, -981.86621, -1700.65955, 75.20000,   0.00000, 2.00000, 90.00000);
	CreateDynamicObject(3261, -984.98669, -1700.64148, 75.20000,   0.00000, 2.00000, 90.00000);
	CreateDynamicObject(3261, -988.08691, -1700.62341, 75.20000,   0.00000, 2.00000, 90.00000);
	CreateDynamicObject(9741, -3395.04004, 1575.80005, -9.33000,   356.85999, 0.00000, 3.14000);
	CreateDynamicObject(8483, -3386.98999, 1573.39001, 20.26000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(16113, -3393.07007, 1541.06006, 14.58000,   0.00000, 0.00000, 55.00000);
	CreateDynamicObject(16113, -3383.60010, 1598.03003, 14.58000,   0.00000, 0.00000, 207.00000);
	CreateDynamicObject(16113, -3370.62988, 1568.22998, 14.58000,   0.00000, 0.00000, 134.00000);
	CreateDynamicObject(7916, -3387.28003, 1578.05005, 28.07000,   0.00000, 0.00000, 276.19000);
	CreateDynamicObject(3374, -3418.60010, 1571.03003, 21.19000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3374, -3413.38989, 1570.98999, 15.75000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3374, -3415.63989, 1571.01001, 18.53000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3743, -3426.88989, 1570.69995, 26.31000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3578, -3438.25000, 1570.68994, 28.22000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, -3448.54004, 1570.70996, 28.22000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, -3476.64990, 1570.79004, 35.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, -3457.87012, 1570.69995, 29.90000,   0.00000, 22.00000, 0.00000);
	CreateDynamicObject(3578, -3467.12012, 1570.72998, 33.61000,   0.00000, 22.00000, 0.00000);
	CreateDynamicObject(13562, -3484.41992, 1571.32996, 28.83000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3489.38989, 1571.13000, 28.83000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3493.95996, 1571.03003, 28.83000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3499.09009, 1570.68994, 28.83000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3502.60010, 1575.25000, 28.83000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3504.42993, 1568.18994, 28.83000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3508.66992, 1573.01001, 28.83000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(12990, -3525.56006, 1572.63000, 35.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3565, -3549.56006, 1573.06006, 46.74000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3565, -3540.13989, 1573.04004, 36.59000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3565, -3542.40991, 1573.02002, 39.09000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3565, -3544.66992, 1573.06006, 41.73000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3565, -3547.07007, 1573.06006, 44.32000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3502, -3555.02002, 1572.57996, 49.72000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3502, -3563.59009, 1572.58997, 49.72000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3502, -3571.98999, 1572.59998, 49.72000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3631, -3580.30005, 1572.52002, 47.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3631, -3588.83008, 1572.57996, 47.57000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16481, -3610.70996, 1572.54004, 52.65000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11496, -3636.76001, 1572.38000, 58.12000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18841, -3654.36011, 1588.89001, 63.18000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(974, -3652.44995, 1601.59998, 58.77000,   0.00000, 0.00000, 292.13000);
	CreateDynamicObject(974, -3650.88989, 1574.83997, 58.27000,   0.00000, 0.00000, 66.04000);
	CreateDynamicObject(974, -3656.81006, 1579.94995, 58.27000,   0.00000, 0.00000, 27.39000);
	CreateDynamicObject(3578, -3659.34009, 1585.85999, 59.65000,   0.00000, -41.00000, 97.00000);
	CreateDynamicObject(974, -3658.96997, 1589.32996, 60.31000,   0.00000, 0.00000, 348.48001);
	CreateDynamicObject(13749, -3642.65991, 1594.37000, 63.44000,   0.00000, 0.00000, 229.48000);
	CreateDynamicObject(16644, -3630.29004, 1582.77002, 69.97000,   0.00000, 0.00000, 358.73001);
	CreateDynamicObject(16640, -3614.70996, 1587.51001, 73.33000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18984, -3672.57007, 1592.71997, 78.84000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18827, -3770.09009, 1592.71997, 78.84000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(6052, -3828.30005, 1586.31995, 76.26000,   0.00000, 0.00000, 276.12000);
	CreateDynamicObject(13648, -3837.85010, 1557.46997, 78.45000,   0.00000, 0.00000, 355.16000);
	CreateDynamicObject(18566, -3839.70996, 1534.07996, 78.88000,   0.00000, 0.00000, 178.00000);
	CreateDynamicObject(18566, -3839.90991, 1531.81006, 78.88000,   0.00000, 0.00000, 359.35999);
	CreateDynamicObject(18367, -3840.03003, 1529.98999, 78.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3840.29004, 1498.07996, 75.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3843.33008, 1493.76001, 75.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3836.10010, 1493.40002, 75.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3833.32007, 1487.81995, 75.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3839.71997, 1487.27002, 75.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3845.91992, 1486.28003, 75.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3835.87012, 1481.10999, 75.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3842.47998, 1480.48999, 75.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13562, -3838.70996, 1475.13000, 75.10000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18367, -3838.07007, 1472.80005, 81.83000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18767, -3835.02002, 1437.17004, 90.32000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(18762, -3832.03003, 1442.79004, 92.72000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16644, -3825.04004, 1444.75000, 95.22000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18783, -3807.29004, 1397.96997, 101.66000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -3807.16992, 1431.31006, 96.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -3805.81006, 1432.81006, 95.17000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -3803.61011, 1429.18005, 97.22000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -3804.59009, 1431.21997, 96.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -3805.76001, 1429.17004, 97.22000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -3808.08008, 1429.01001, 97.22000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18786, -3807.29004, 1417.73999, 101.66000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18783, -3805.26001, 1443.27002, 92.68000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3533, -3801.31006, 1398.64001, 103.54000,   90.00000, 0.00000, -7.00000);
	CreateDynamicObject(3533, -3811.28003, 1398.34998, 103.54000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(3533, -3799.92993, 1398.70996, 103.54000,   90.00000, 0.00000, 22.00000);
	CreateDynamicObject(3533, -3813.18994, 1398.15002, 103.54000,   90.00000, 0.00000, 22.00000);
	CreateDynamicObject(3533, -3804.84009, 1398.37000, 103.54000,   90.00000, 0.00000, -3.00000);
	CreateDynamicObject(3533, -3814.72998, 1398.18005, 103.54000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(3533, -3803.12988, 1398.55005, 103.54000,   90.00000, 0.00000, 22.00000);
	CreateDynamicObject(3533, -3807.82007, 1398.53003, 103.54000,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(3534, -3808.04004, 1391.43994, 104.95000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6300, 833.60583, -1975.10303, 3.81768,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(792, 808.70465, -2010.60059, 12.17188,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1281, 856.23383, -1975.33984, 12.61719,   356.85840, 0.00000, -2.35619);
	CreateDynamicObject(792, 859.11584, -1986.76855, 12.17188,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1281, 854.39569, -1984.42578, 12.62621,   3.14159, 0.00000, 3.14159);
	CreateDynamicObject(6462, 821.88690, -1952.92883, 13.78882,   0.00000, 0.00000, -91.02000);
	CreateDynamicObject(792, 806.10449, -1973.96375, 12.17188,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1308, 854.38403, -1974.52600, 12.00990,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1308, 854.07062, -2005.68604, 11.80996,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6066, 847.13135, -1947.18335, 14.23479,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 831.11261, -1936.70593, 12.41896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 836.63275, -1936.69531, 12.41896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 842.17584, -1936.63135, 12.41896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 847.73511, -1936.55420, 12.41896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 817.43689, -1937.03027, 12.41896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 816.65698, -1936.99976, 12.41896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 825.94330, -1971.43030, 12.41896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 821.61566, -1971.42346, 12.41896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6295, 812.51160, -2005.00623, 35.16994,   0.00000, 0.00000, -61.14001);
	CreateDynamicObject(18284, 831.71472, -2006.34766, 14.71852,   0.00000, 0.00000, 91.49995);
	CreateDynamicObject(16360, 844.93610, -2005.62732, 11.60632,   0.00000, 0.00000, 198.77994);
	CreateDynamicObject(8947, 811.84125, -1987.64343, 9.60300,   0.00000, 0.00000, -0.18000);
	CreateDynamicObject(3567, 817.32001, -1966.82996, 10.94319,   -5.34000, 0.06000, 0.00000);
	CreateDynamicObject(3567, 815.53638, -1966.79834, 10.94319,   -5.34000, 0.06000, 0.00000);
	CreateDynamicObject(1408, 811.47430, -1975.51416, 13.09041,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 807.34637, -1975.48608, 13.09041,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 804.83691, -1978.31470, 13.09041,   0.00000, 0.00000, -89.70004);
	CreateDynamicObject(1408, 804.98694, -1983.84692, 13.09041,   0.00000, 0.00000, -89.70004);
	CreateDynamicObject(1408, 804.96100, -1994.91797, 13.09041,   0.00000, 0.00000, -89.70004);
	CreateDynamicObject(1408, 805.00494, -1989.37146, 13.09041,   0.00000, 0.00000, -89.70004);
	CreateDynamicObject(1238, 818.73816, -1976.77429, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 818.76080, -1978.85706, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 818.79974, -1980.72949, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 818.62183, -1983.03064, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 818.73822, -1985.77502, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 818.61456, -1988.54138, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 818.60486, -1991.07349, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 818.60095, -1994.11145, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 818.53583, -1997.90674, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 818.55621, -1999.39990, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 814.60028, -1999.52148, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 809.70673, -1999.36243, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 805.77319, -1999.31409, 13.00658,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19700, 811.73303, -1992.38098, 12.54121,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19700, 811.72198, -1982.03003, 12.58995,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 837.18988, -1995.50757, 12.61719,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(1281, 838.11658, -1986.95593, 12.61719,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(1281, 830.78632, -1980.69141, 12.61719,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(1281, 842.42712, -1979.28442, 12.61719,   3.14159, 0.00000, 2.35619);
	CreateDynamicObject(6466, 828.63428, -1978.81665, 13.68630,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3984, 331.69449, -2039.81934, 17.61820,   0.00000, 0.00000, 179.21997);
	CreateDynamicObject(4028, 326.27676, -2037.59705, 19.74143,   0.00000, 0.00000, 302.88031);
	CreateDynamicObject(700, 352.91888, -2035.89795, 8.17191,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(700, 357.95285, -2043.67261, 8.17191,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(713, 336.90036, -2011.75208, 8.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 342.89413, -2011.28247, 9.50000,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1232, 340.09320, -2006.49768, 9.50000,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1232, 334.78079, -2006.30823, 9.50000,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1232, 331.96939, -2010.88416, 9.50000,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1232, 334.86737, -2015.53198, 9.50000,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(1232, 340.06268, -2015.50903, 9.50000,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(716, 361.92508, -1966.72925, 6.78125,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(716, 361.54703, -2002.90271, 6.78125,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(716, 378.46671, -2009.90454, 6.78125,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(716, 377.90247, -1985.21948, 6.78125,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(3615, 357.18527, -2009.07056, 8.41025,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 361.86102, -2006.95374, 7.21094,   3.14159, 0.00000, 180.37627);
	CreateDynamicObject(1280, 351.86118, -2011.93555, 7.21094,   3.14159, 0.00000, 182.59619);
	CreateDynamicObject(1280, 352.23132, -2007.96814, 7.21094,   3.14159, 0.00000, 183.31613);
	CreateDynamicObject(1280, 351.86118, -2011.93555, 7.21094,   3.14159, 0.00000, 182.59619);
	CreateDynamicObject(700, 347.29388, -2051.23999, 8.17191,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(700, 306.14749, -2061.60059, 8.11190,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(700, 405.62231, -2051.93530, 8.17191,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4874, 339.83920, -1971.75745, 9.39120,   0.00000, 0.00000, -90.24001);
	CreateDynamicObject(1391, 322.50162, -1972.59912, -3.63450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1391, 322.64612, -1936.41113, -3.63450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1391, 353.56281, -1935.95532, -3.97804,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1391, 351.95053, -1973.24573, -3.97804,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1391, 351.37695, -1985.73352, -3.97804,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1391, 351.22726, -2000.31860, -3.97804,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1391, 305.82327, -2006.15332, -5.50832,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1391, 304.96033, -2062.78027, -5.50896,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1391, 330.23831, -2064.69067, -5.40372,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1391, 350.99432, -2072.70117, -5.67673,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 372.17688, -2009.53967, 6.63729,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 367.49747, -2009.58569, 6.63729,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 367.41708, -2008.51611, 6.63729,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 372.27731, -2010.60950, 6.63729,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 361.96512, -2034.77954, 7.83516,   0.00000, 0.00000, 180.17990);
	CreateDynamicObject(1341, 361.41483, -2029.86292, 7.80248,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1342, 363.00140, -2013.84790, 7.78818,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1342, 376.50223, -2017.77563, 7.78818,   0.00000, 0.00000, 163.13998);
	CreateDynamicObject(1341, 366.03442, -2048.46851, 7.80248,   0.00000, 0.00000, 90.42001);
	CreateDynamicObject(625, 361.21460, -2027.75293, 7.63182,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 358.22821, -2011.27454, 7.63182,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(625, 382.15564, -2013.45398, 7.63182,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 380.48373, -2025.59985, 7.42787,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 380.87665, -2037.34729, 7.60684,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 385.46741, -2050.29565, 7.60684,   0.00000, 0.00000, 72.60000);
	CreateDynamicObject(1281, 387.60184, -2075.37524, 7.60684,   0.00000, 0.00000, 36.89999);
	CreateDynamicObject(1281, 366.96970, -2078.92505, 7.60684,   0.00000, 0.00000, 36.89999);
	CreateDynamicObject(1281, 346.87561, -2032.60144, 8.72279,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 335.69431, -2018.02698, 8.54384,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(12843, 393.72739, -1903.40784, 6.74993,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(12844, 393.69049, -1900.44019, 8.82430,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(12845, 394.03180, -1900.74866, 8.92440,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(18284, 394.25339, -1920.40588, 9.59560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18284, 385.98895, -1920.54004, 9.59560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3465, 387.36954, -1912.21399, 8.09378,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 385.90280, -1912.21399, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 384.49799, -1912.21399, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 387.26929, -1917.84241, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 385.81009, -1917.84241, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 384.35419, -1917.84241, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 392.92599, -1917.84241, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 394.38641, -1917.84241, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 395.84619, -1917.84241, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 393.01141, -1912.21399, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 394.42749, -1912.21399, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 395.89719, -1912.21399, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 392.86261, -1923.32458, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 394.30981, -1923.32458, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 395.71341, -1923.32458, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 384.64441, -1923.32458, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 386.09311, -1923.32458, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 387.53751, -1923.32458, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 384.69162, -1928.88660, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 386.15836, -1928.87256, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 387.58740, -1928.84326, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 395.65320, -1928.83472, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 394.22839, -1928.84375, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3465, 392.76489, -1928.84326, 8.09380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 382.90479, -1896.08252, 7.42787,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 383.26807, -1900.36938, 7.42787,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 383.41418, -1904.86743, 7.42787,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7020, 1207.87488, -1320.21484, 9.38792,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7020, 1151.85046, -1325.35645, 9.38792,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7020, 1152.07080, -1359.78162, 9.38792,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7020, 1152.35938, -1385.56873, 9.38792,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7020, 1207.99854, -1354.86267, 9.38792,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7020, 1207.05969, -1388.92505, 9.38792,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8841, 1228.05615, -1361.95544, 15.66195,   0.00000, 0.00000, 90.35999);
	CreateDynamicObject(6977, 1228.62671, -1313.26318, 12.25773,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1220.86633, -1383.79761, 14.74321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1236.28479, -1383.86169, 14.74321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1246.14307, -1375.31616, 14.74321,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(3660, 1246.14478, -1355.76013, 14.74321,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(3660, 1246.18396, -1336.60107, 14.74321,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(3660, 1246.08899, -1317.01953, 14.74321,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(3660, 1246.06860, -1300.10059, 14.74321,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(3660, 1236.24133, -1291.05249, 14.74321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1220.64124, -1291.07642, 14.74321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1181.55225, -1291.30591, 14.74321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1181.60828, -1385.20740, 14.74321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1162.56433, -1385.51917, 14.74321,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9697, 1221.36157, -1329.58313, 12.36954,   0.00000, 0.00000, -89.70014);
	CreateDynamicObject(9697, 1236.36035, -1329.45007, 12.36954,   0.00000, 0.00000, 89.27981);
	CreateDynamicObject(3660, 1190.07068, -1374.78369, 14.74321,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(3660, 1190.07068, -1374.78369, 14.74321,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(3660, 1189.93970, -1355.68738, 14.74321,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(3660, 1190.04248, -1302.16418, 14.74321,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(9697, 1194.21362, -1342.91260, 12.36703,   0.00000, 0.00000, -89.70014);
	CreateDynamicObject(620, 1213.19861, -1384.43311, 11.95125,   356.85840, 0.00000, -2.49966);
	CreateDynamicObject(620, 1246.37549, -1384.51270, 11.95125,   356.85840, 0.00000, -2.49966);
	CreateDynamicObject(620, 1246.66284, -1344.82556, 11.95125,   356.85840, 0.00000, -2.49966);
	CreateDynamicObject(620, 1247.39673, -1330.39148, 11.95125,   356.85840, 0.00000, -2.49966);
	CreateDynamicObject(620, 1246.98120, -1292.25146, 11.95125,   356.85840, 0.00000, -2.49966);
	CreateDynamicObject(620, 1220.65076, -1291.86047, 11.95125,   356.85840, 0.00000, -2.49966);
	CreateDynamicObject(615, 1190.42334, -1358.62878, 12.54688,   3.14159, 0.00000, 1.61616);
	CreateDynamicObject(615, 1246.79382, -1296.49939, 12.54688,   3.14159, 0.00000, 1.61616);
	CreateDynamicObject(727, 1215.21631, -1291.94861, 12.39063,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(727, 1180.62976, -1295.34497, 12.39063,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(700, 1190.02161, -1295.86267, 13.41406,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(5811, 1190.08044, -1385.26379, 17.07031,   360.33823, 1.56001, 50.42159);
	CreateDynamicObject(3564, -924.31787, 2665.84692, 48.93308,   0.00000, 0.00000, 6.78001);
	CreateDynamicObject(8884, -943.93164, 2650.64282, 51.75010,   0.00000, 0.00000, 44.39999);
	CreateDynamicObject(8884, -955.19165, 2640.04810, 59.14816,   0.00000, 0.00000, 45.17999);
	CreateDynamicObject(8886, -963.15643, 2629.15894, 65.86201,   0.00000, 0.00000, 1.56000);
	CreateDynamicObject(17055, -972.98260, 2625.12036, 66.78465,   0.00000, 0.00000, 54.96000);
	CreateDynamicObject(3066, -962.61041, 2619.64209, 68.01083,   0.00000, 0.00000, -29.46000);
	CreateDynamicObject(12927, -981.45032, 2606.20703, 67.60384,   0.00000, 0.00000, -105.30000);
	CreateDynamicObject(3585, -969.64087, 2611.44165, 68.78416,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(5244, -988.86853, 2574.67651, 67.39049,   0.00000, 0.00000, 76.56003);
	CreateDynamicObject(10814, -1011.06488, 2580.32202, 66.51936,   1.98003, 9.53997, 0.00000);
	CreateDynamicObject(10231, -1022.27148, 2519.17944, 67.76759,   -20.88002, 1.68000, 88.62000);
	CreateDynamicObject(3724, -1013.99567, 2461.63110, 97.23760,   -0.42000, -18.05998, -65.03996);
	CreateDynamicObject(11484, -964.90790, 2406.22046, 72.80678,   3.14159, 0.00000, -123.21828);
	CreateDynamicObject(11484, -986.09656, 2376.98535, 74.47836,   3.14159, 0.00000, -184.65816);
	CreateDynamicObject(18776, -987.65649, 2363.80688, 94.14648,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19744, -989.41968, 2360.90967, 93.68919,   0.00000, 0.00000, 132.53996);
	CreateDynamicObject(18778, -987.11719, 2371.84937, 99.55592,   8.93999, -15.95999, 0.00000);
	CreateDynamicObject(18826, -1000.28125, 2394.24023, 105.28393,   -96.96007, 67.62000, 71.21999);
	CreateDynamicObject(18809, -969.60083, 2406.54785, 108.75991,   -128.57996, -76.49998, 0.00000);
	CreateDynamicObject(16037, -920.24457, 2361.05176, 119.17119,   352.77835, -10.50002, -56.51590);
	CreateDynamicObject(19634, -891.57635, 2297.60181, 134.20087,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11484, -781.27344, 2140.51563, 41.19531,   3.14159, 0.00000, 3.14159);
	CreateDynamicObject(11484, -934.98596, 2265.69019, 102.61953,   3.14159, 0.00000, 122.36158);
	CreateDynamicObject(3244, -937.65991, 2261.12549, 113.52959,   404.43561, 4.92312, -43.21486);
	CreateDynamicObject(19633, -953.07190, 2227.04712, 139.40063,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16776, -954.12964, 2212.62720, 140.74510,   0.00000, 0.00000, 76.86002);
	CreateDynamicObject(3172, -985.44910, 2584.89990, 66.07977,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3172, -985.44910, 2584.89990, 66.07977,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3172, -993.42035, 2570.84424, 66.07977,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3172, -1016.74506, 2559.97046, 66.07977,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3172, -1030.98523, 2479.68896, 66.07977,   -18.36000, -1.92000, 0.00000);
	CreateDynamicObject(620, 1831.43347, -1347.34753, 13.56250,   3.14159, 0.00000, 2.32178);
	CreateDynamicObject(620, 1831.33289, -1353.09180, 13.56250,   3.14159, 0.00000, 2.32178);
	CreateDynamicObject(620, 1831.08276, -1358.62195, 13.56250,   3.14159, 0.00000, 2.32178);
	CreateDynamicObject(620, 1830.95251, -1379.69775, 13.56250,   3.14159, 0.00000, 2.32178);
	CreateDynamicObject(620, 1831.38733, -1384.10498, 13.56250,   3.14159, 0.00000, 2.32178);
	CreateDynamicObject(14781, 1907.69714, -1394.58545, 13.63332,   -1.32000, -0.66000, 0.00000);
	CreateDynamicObject(14781, 1892.70911, -1362.88245, 13.63332,   -1.32000, -0.66000, 0.00000);
	CreateDynamicObject(3761, 1925.21924, -1369.15405, 14.60975,   0.00000, 0.00000, 25.92000);
	CreateDynamicObject(3761, 1921.88647, -1363.54138, 14.60975,   0.00000, 0.00000, 34.68000);
	CreateDynamicObject(1426, 1929.47400, -1398.06702, 12.20239,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1426, 1925.29736, -1389.63245, 12.20239,   0.00000, 0.00000, -58.55999);
	CreateDynamicObject(1426, 1921.88538, -1398.30481, 12.20239,   0.00000, 0.00000, -25.73999);
	CreateDynamicObject(3425, 1897.13770, -1389.95300, 12.05347,   0.00000, 0.00000, -4.26000);
	CreateDynamicObject(1231, 1873.87439, -1371.00952, 13.31526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1872.68860, -1388.13342, 13.31526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1885.74451, -1389.19202, 13.31526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1887.85071, -1370.09473, 13.31526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1897.09485, -1352.37170, 13.31526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1876.63660, -1352.96460, 13.31526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(751, 1913.06995, -1414.66321, 12.30021,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(654, 1866.53918, -1352.96692, 10.97663,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(654, 1907.30249, -1358.93872, 10.30927,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(654, 1930.91260, -1371.01807, 13.43842,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1908.14282, -1400.44434, 13.31526,   0.00000, 0.00000, -31.08000);
	CreateDynamicObject(718, 1858.62952, -1361.35547, 12.32109,   0.00000, 0.00000, 2.40000);
	CreateDynamicObject(718, 1858.83215, -1364.37244, 12.32109,   0.00000, 0.00000, 2.40000);
	CreateDynamicObject(718, 1858.98792, -1367.45349, 12.32109,   0.00000, 0.00000, 2.40000);
	CreateDynamicObject(718, 1859.10095, -1391.25757, 12.32109,   0.00000, 0.00000, 2.40000);
	CreateDynamicObject(718, 1859.24255, -1393.88318, 12.32109,   0.00000, 0.00000, 2.40000);
	CreateDynamicObject(718, 1859.65112, -1396.75281, 12.32109,   0.00000, 0.00000, 2.40000);
	CreateDynamicObject(718, 1859.63403, -1416.79150, 12.32109,   0.00000, 0.00000, 2.40000);
	CreateDynamicObject(718, 1859.73474, -1419.83118, 12.32109,   0.00000, 0.00000, 2.40000);
	CreateDynamicObject(718, 1859.88293, -1422.88843, 12.32109,   0.00000, 0.00000, 2.40000);
	CreateDynamicObject(1232, 1860.21460, -1371.94299, 14.50393,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1859.92029, -1389.07446, 14.50393,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14873, 1865.52930, -1360.58972, 13.27040,   0.00000, 0.00000, -6.00000);
	CreateDynamicObject(14873, 1870.94470, -1363.29541, 13.27040,   0.00000, 0.00000, 21.42000);
	CreateDynamicObject(1231, 1930.04724, -1434.96558, 13.46867,   0.00000, 0.00000, -3.12000);
	CreateDynamicObject(1231, 1937.53052, -1437.37036, 13.46867,   0.00000, 0.00000, -13.02000);
	CreateDynamicObject(1231, 1945.27563, -1440.69971, 13.46867,   0.00000, 0.00000, -13.02000);
	CreateDynamicObject(1231, 1954.24402, -1439.62634, 13.46867,   0.00000, 0.00000, 10.14000);
	CreateDynamicObject(1332, 1907.42004, -1436.71179, 13.26218,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1332, 1917.10437, -1436.58411, 13.26218,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(910, 1911.94385, -1437.21045, 13.66117,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(910, 1923.46350, -1436.58386, 13.66117,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(680, 1958.48938, -1411.13318, 12.51550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(680, 1950.00281, -1404.36597, 12.51550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 1954.57190, -1372.04810, 17.57279,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1988.60437, -2209.72900, 15.12129,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 2012.90393, -2209.75854, 15.12129,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 2062.31860, -2259.63330, 15.12129,   0.00000, 0.00000, -90.59999);
	CreateDynamicObject(8209, 2089.93896, -2240.74780, 15.12129,   0.00000, 0.00000, -90.59999);
	CreateDynamicObject(8209, 2061.35498, -2356.85229, 15.12129,   0.00000, 0.00000, -90.59999);
	CreateDynamicObject(8209, 2088.73267, -2335.48999, 15.12129,   0.00000, 0.00000, -90.59999);
	CreateDynamicObject(8209, 2087.63843, -2429.46265, 15.12129,   0.00000, 0.00000, -90.59999);
	CreateDynamicObject(8209, 2055.21021, -2449.00244, 15.12129,   0.00000, 0.00000, -96.83998);
	CreateDynamicObject(9623, 2070.93701, -2464.23877, 15.74837,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8575, 1997.14417, -2524.97729, 18.83576,   0.00000, 0.00000, 89.99999);
	CreateDynamicObject(4828, 1898.37524, -2542.17041, 24.68284,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8038, 2040.08765, -2534.15308, 32.52599,   0.00000, 0.00000, 0.83999);
	CreateDynamicObject(10770, 2002.76770, -2568.96021, 32.90961,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18805, 2040.39575, -2484.81274, 9.77604,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1948.57617, -2477.63965, 15.12129,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1949.77368, -2499.13696, 15.20091,   0.00000, 0.00000, 8.40000);
	CreateDynamicObject(8209, 1849.37830, -2477.77344, 15.12129,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1851.04065, -2506.37842, 15.12130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1756.54126, -2506.37842, 15.12130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1759.66748, -2477.87402, 15.12129,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1663.46423, -2478.06592, 15.12129,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1661.67249, -2506.37842, 15.12130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1565.80188, -2506.37842, 15.12130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1570.55347, -2478.39063, 15.12129,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1476.06079, -2478.47925, 15.12130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1475.88318, -2506.37842, 15.12130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1445.63770, -2478.47925, 15.12130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1462.11304, -2540.80127, 15.12129,   0.00000, 0.00000, 136.61984);
	CreateDynamicObject(8209, 1395.91187, -2557.26831, 15.12129,   0.00000, 0.00000, 90.42001);
	CreateDynamicObject(8209, 1445.29553, -2611.17480, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8209, 1548.13916, -2574.80933, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8209, 1539.94312, -2611.29150, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8209, 1632.24280, -2611.45557, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8209, 1731.22241, -2611.16772, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8209, 1735.01477, -2575.05835, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8209, 1637.75281, -2575.22900, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8209, 1832.57959, -2574.83545, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8209, 1828.36670, -2612.13867, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8209, 1923.82019, -2611.74805, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8209, 1928.37842, -2574.58667, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8209, 2021.81897, -2611.36865, 15.12129,   0.00000, 0.00000, 180.24007);
	CreateDynamicObject(8168, 2097.95972, -2603.52710, 14.11214,   0.00000, 0.00000, -314.33994);
	CreateDynamicObject(8168, 2091.91089, -2606.85156, 14.18263,   0.00000, 0.00000, -314.33994);
	CreateDynamicObject(8168, 2085.27759, -2609.51514, 14.18263,   0.00000, 0.00000, -325.91995);
	CreateDynamicObject(8168, 2078.29199, -2610.99805, 14.18263,   0.00000, 0.00000, -334.92001);
	CreateDynamicObject(8168, 2072.54663, -2611.91162, 14.18263,   0.00000, 0.00000, -334.92001);
	CreateDynamicObject(8168, 2103.64063, -2599.74487, 14.11214,   0.00000, 0.00000, -310.32040);
	CreateDynamicObject(8168, 2109.40820, -2595.01636, 14.11214,   0.00000, 0.00000, -303.54053);
	CreateDynamicObject(8168, 2114.62598, -2590.16357, 14.11214,   0.00000, 0.00000, -299.22049);
	CreateDynamicObject(8168, 2119.04321, -2584.81470, 14.22600,   0.00000, 0.00000, -289.50061);
	CreateDynamicObject(8168, 2122.39551, -2578.92383, 14.24197,   0.00000, 0.00000, -282.00073);
	CreateDynamicObject(8168, 2125.02710, -2572.81177, 14.22600,   0.00000, 0.00000, -269.16110);
	CreateDynamicObject(8168, 2072.56641, -2611.87134, 16.86847,   0.00000, 0.00000, -334.92001);
	CreateDynamicObject(8168, 2078.52905, -2610.94067, 16.86847,   0.00000, 0.00000, -334.92001);
	CreateDynamicObject(8168, 2085.27759, -2609.51514, 16.81888,   0.00000, 0.00000, -325.91995);
	CreateDynamicObject(8168, 2091.91089, -2606.85156, 17.01407,   0.00000, 0.00000, -314.33994);
	CreateDynamicObject(8168, 2097.95972, -2603.52710, 17.34541,   0.00000, 0.00000, -314.33994);
	CreateDynamicObject(8168, 2103.64063, -2599.74487, 17.40246,   0.00000, 0.00000, -310.32040);
	CreateDynamicObject(8168, 2119.04321, -2584.81470, 17.64508,   0.00000, 0.00000, -289.50061);
	CreateDynamicObject(8168, 2114.62598, -2590.16357, 17.37146,   0.00000, 0.00000, -299.22049);
	CreateDynamicObject(8168, 2109.40820, -2595.01636, 17.24365,   0.00000, 0.00000, -303.54053);
	CreateDynamicObject(8168, 2122.39551, -2578.92383, 17.38946,   0.00000, 0.00000, -282.00073);
	CreateDynamicObject(8168, 2125.02710, -2572.81177, 17.45337,   0.00000, 0.00000, -269.16110);
	CreateDynamicObject(8038, 2135.74023, -2530.32373, 32.52599,   0.00000, 0.00000, 181.56004);
	CreateDynamicObject(3629, 2121.85254, -2460.14795, 18.88281,   3.14159, 0.00000, 158.40001);
	CreateDynamicObject(7981, 2135.08398, -2540.89209, 25.58252,   0.00000, 0.00000, -86.87999);
	CreateDynamicObject(8856, 2040.19043, -2593.31714, 12.62754,   0.00000, 0.00000, 90.06001);
	CreateDynamicObject(8168, 2065.23169, -2612.67285, 14.18263,   0.00000, 0.00000, -338.39987);
	CreateDynamicObject(8168, 2065.23169, -2612.67285, 16.98630,   0.00000, 0.00000, -338.39987);
	CreateDynamicObject(3578, 2045.31641, -2593.30298, 13.38050,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, 2040.27185, -2593.28735, 13.38054,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8209, 1395.90991, -2528.38013, 15.12130,   0.00000, 0.00000, 90.42000);
	CreateDynamicObject(1315, 2047.07031, -2596.15405, 15.40641,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1315, 2046.68469, -2590.14502, 15.44337,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3578, 2035.24426, -2593.28247, 13.38054,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3578, 2047.31250, -2589.10815, 11.82096,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 2047.30762, -2579.48828, 11.82096,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 2047.29773, -2598.79980, 11.82096,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3578, 2047.29431, -2606.30884, 11.82096,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18284, 2047.23108, -2603.10181, 12.59741,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18284, 2074.58960, -2541.28955, 15.44120,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(12844, 2068.41382, -2562.68140, 14.55909,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(12843, 2071.41675, -2562.66016, 12.28401,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(12845, 2068.64697, -2562.08374, 14.67021,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1676, 2073.48535, -2569.78809, 12.56560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1676, 2073.48535, -2569.78809, 12.54563,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1676, 2082.89111, -2542.43921, 14.15600,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1676, 2082.89111, -2540.32837, 14.15595,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1676, 2077.35156, -2542.34644, 14.15600,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1676, 2077.35156, -2540.23413, 14.15595,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1676, 2071.86670, -2540.29028, 14.15595,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1676, 2071.86670, -2542.40479, 14.15600,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1676, 2066.32324, -2540.29614, 14.15600,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1676, 2066.32324, -2542.32715, 14.15600,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19536, 1924.31860, -1382.88647, 12.63612,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19536, 1924.63696, -1419.91870, 12.63612,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19533, 1893.23889, -1381.42883, 12.65256,   0.00000, 0.00000, 89.81995);
	CreateDynamicObject(620, 1867.40234, -1412.41443, 13.56536,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(620, 1867.40234, -1412.41443, 13.56536,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(620, 1867.03320, -1392.65356, 13.56536,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(620, 1868.58740, -1359.51575, 13.56536,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(620, 1889.45752, -1368.77454, 11.23633,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(620, 1962.86389, -1443.21167, 13.56536,   356.85840, 0.00000, 3.14159);
	CreateDynamicObject(3187, 1881.67249, -1430.65588, 16.77903,   0.00000, 0.00000, 87.71998);
	CreateDynamicObject(14826, 1877.28564, -1427.10901, 12.87732,   0.00000, 0.00000, -87.35996);
	CreateDynamicObject(3243, 1894.21338, -1420.54517, 12.59621,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3243, 1871.25842, -1409.98535, 12.59621,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3243, 1871.22656, -1357.89709, 12.59621,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3243, 1903.05542, -1361.80688, 12.59621,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3243, 1918.63574, -1410.04675, 12.59621,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3243, 1950.10339, -1428.28430, 12.59621,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3243, 1913.47449, -1443.53833, 12.59621,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3171, 1883.50012, -1360.50891, 12.55117,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3171, 1910.99854, -1365.34216, 12.54438,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3171, 1963.77832, -1411.07153, 13.37842,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3585, 1921.00757, -1399.69971, 14.32463,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3585, 1919.24182, -1431.38965, 13.94860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(12930, 1884.21960, -1398.82617, 13.29763,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8886, 1874.96802, -1392.89001, 16.00507,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8886, 1870.57031, -1369.08167, 16.00507,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8886, 1892.16296, -1353.98792, 16.00507,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8886, 1881.87122, -1351.98926, 16.00507,   0.00000, 0.00000, 34.26000);
	CreateDynamicObject(17055, 1909.26172, -1411.30750, 14.89438,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(12932, 1949.28967, -1426.79749, 15.29616,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, 1863.52002, -1380.94409, 18.19853,   0.00000, 0.00000, 89.27998);
	CreateDynamicObject(14469, 1911.64990, -1370.89600, 12.76133,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14469, 1911.64990, -1370.89600, 12.76133,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14469, 1916.15979, -1395.49963, 12.76133,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, 1916.04944, -1391.39258, 11.50102,   356.85840, 0.00000, -1.57080);
	CreateDynamicObject(673, 1913.29626, -1371.09900, 11.50102,   356.85840, 0.00000, -1.57080);
	CreateDynamicObject(673, 1891.74976, -1403.34546, 11.50102,   356.85840, 0.00000, -1.57080);
	CreateDynamicObject(673, 1880.51208, -1399.87463, 11.50102,   356.85840, 0.00000, -1.57080);
	CreateDynamicObject(673, 1885.42798, -1372.40234, 11.50102,   356.85840, 0.00000, -1.57080);
	CreateDynamicObject(673, 1933.94360, -1396.56360, 11.95166,   356.85840, 0.00000, -1.57080);
	CreateDynamicObject(18248, 1946.59277, -1419.08813, 20.67521,   0.00000, 0.00000, 121.97998);
	CreateDynamicObject(3425, 376.75504, -2035.33081, 8.79310,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1685, 1882.90039, -1324.16748, 48.92946,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1685, 1882.32971, -1322.57971, 48.74553,   0.00000, 0.00000, 33.48002);
	CreateDynamicObject(1685, 1884.27100, -1322.61646, 48.78474,   0.00000, 0.00000, -44.88000);
	CreateDynamicObject(1685, 1883.03040, -1323.17993, 50.19159,   0.00000, 0.00000, -38.15998);
	CreateDynamicObject(1685, 1878.22998, -1322.96899, 48.99635,   0.00000, 0.00000, -71.16000);
}

// --> ระบบ Animation ส่วนตัว
Dialog:D_Animlist(playerid, response, listitem, inputtext[])
{
	if(response) {
		switch(listitem)
		{
			case 0: //
			{
				ClearAnimations(playerid);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			}
			case 1: //
			{
				ApplyAnimation(playerid, "ROB_BANK","SHP_HandsUp_Scr",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 2: //
			{
				ApplyAnimation(playerid, "ped", "cower",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 3: //
			{
				ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.1, 0, 1, 1, 1, 1, 1);
			}
			case 4: //
			{
				SetPlayerSpecialAction(playerid, 68);
			}
			case 5: //
			{
				ApplyAnimation(playerid,"PED","KO_skid_front",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 6: //
			{
				ApplyAnimation(playerid, "PED","FLOOR_hit_f", 4.1, 0, 1, 1, 1, 1, 1);
			}
			case 7: //
			{
				ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.1, 0, 1, 1, 1, 1, 1); // Arms crossed
			}
			case 8:
			{
				ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1, 0, 1, 1, 0, 0, 1);
			}
			case 9: //seat 7
			{
				ApplyAnimation(playerid,"ped","SEAT_down",4.1, 0, 0, 0, 1, 0, 0);
			}
			case 10: //taxiL
			{
				ApplyAnimation(playerid,"MISC","Hiker_Pose_L",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 11: //taxiR
			{
				ApplyAnimation(playerid,"MISC","Hiker_Pose",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 12: //smoke 1
			{
				ApplyAnimation(playerid,"SMOKING","M_smk_in",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 13: //smoke 2
			{
				ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.1, 0, 1, 1, 1, 1, 1);
			}
			case 14: //angry
			{
				ApplyAnimation(playerid,"RIOT","RIOT_ANGRY",4.1, 0, 1, 1, 1, 1, 1);
			}
		}
	}
	return 1;
}

// --> ระบบบ้าน Dynamic

forward House_Load();
public House_Load()
{
	new
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows; i ++) if (i < MAX_HOUSES)
	{

		HouseData[i][houseExists] = true;
		HouseData[i][houseLights] = true;

		cache_get_value_name_int(i, "houseID", HouseData[i][houseID]);
		cache_get_value_name_int(i, "houseOwner", HouseData[i][houseOwner]);
		cache_get_value_name_int(i, "housePrice", HouseData[i][housePrice]);

	    cache_get_value_name(i, "houseAddress", HouseData[i][houseAddress], 32);

		cache_get_value_name_float(i, "housePosX", HouseData[i][housePos][0]);
		cache_get_value_name_float(i, "housePosY", HouseData[i][housePos][1]);
		cache_get_value_name_float(i, "housePosZ", HouseData[i][housePos][2]);
		cache_get_value_name_float(i, "housePosA", HouseData[i][housePos][3]);

		cache_get_value_name_float(i, "houseIntX", HouseData[i][houseInt][0]);
		cache_get_value_name_float(i, "houseIntY", HouseData[i][houseInt][1]);
		cache_get_value_name_float(i, "houseIntZ", HouseData[i][houseInt][2]);
		cache_get_value_name_float(i, "houseIntA", HouseData[i][houseInt][3]);

		cache_get_value_name_int(i, "houseInterior", HouseData[i][houseInterior]);
		cache_get_value_name_int(i, "houseExterior", HouseData[i][houseExterior]);
		cache_get_value_name_int(i, "houseExteriorVW", HouseData[i][houseExteriorVW]);
		cache_get_value_name_int(i, "houseLocked", HouseData[i][houseLocked]);
		cache_get_value_name_int(i, "houseMoney", HouseData[i][houseMoney]);

		House_Refresh(i);
	}
	return 1;
}

House_Save(houseid)
{
	new
	    query[1536];

	format(query, sizeof(query), "UPDATE `houses` SET `houseOwner` = '%d', `housePrice` = '%d', `houseAddress` = '%s', `housePosX` = '%.4f', `housePosY` = '%.4f', `housePosZ` = '%.4f', `housePosA` = '%.4f', `houseIntX` = '%.4f', `houseIntY` = '%.4f', `houseIntZ` = '%.4f', `houseIntA` = '%.4f', `houseInterior` = '%d', `houseExterior` = '%d', `houseExteriorVW` = '%d'",
	    HouseData[houseid][houseOwner],
	    HouseData[houseid][housePrice],
	    HouseData[houseid][houseAddress],
	    HouseData[houseid][housePos][0],
	    HouseData[houseid][housePos][1],
	    HouseData[houseid][housePos][2],
	    HouseData[houseid][housePos][3],
	    HouseData[houseid][houseInt][0],
	    HouseData[houseid][houseInt][1],
	    HouseData[houseid][houseInt][2],
	    HouseData[houseid][houseInt][3],
        HouseData[houseid][houseInterior],
        HouseData[houseid][houseExterior],
        HouseData[houseid][houseExteriorVW]
	);
	for (new i = 0; i < 10; i ++) {
		format(query, sizeof(query), "%s, `houseWeapon%d` = '%d', `houseAmmo%d` = '%d'", query, i + 1, HouseData[houseid][houseWeapons][i], i + 1, HouseData[houseid][houseAmmo][i]);
	}
	format(query, sizeof(query), "%s, `houseLocked` = '%d', `houseMoney` = '%d' WHERE `houseID` = '%d'",
	    query,
	    HouseData[houseid][houseLocked],
	    HouseData[houseid][houseMoney],
        HouseData[houseid][houseID]
	);
	return mysql_tquery(g_SQL, query);
}

House_Inside(playerid)
{
	if (playerData[playerid][pHouse] != -1)
	{
	    for (new i = 0; i != MAX_HOUSES; i ++) if (HouseData[i][houseExists] && HouseData[i][houseID] == playerData[playerid][pHouse] && GetPlayerInterior(playerid) == HouseData[i][houseInterior] && GetPlayerVirtualWorld(playerid) > 0) {
	        return i;
		}
	}
	return -1;
}

/*House_Area(playerid)
{
	new
        Float:fDistance[2] = {99999.0, 0.0},
		h = -1;

	for (new i = 0; i != MAX_HOUSES; i ++) {
		if (HouseData[i][houseExists])
		{
	        if(GetPlayerInterior(playerid) == HouseData[i][houseInterior] && GetPlayerVirtualWorld(playerid) > 0 && HouseData[i][houseID] == playerData[playerid][pHouse])
	        {
         		h = i;
         		break;
			}
			if(IsPlayerInRangeOfPoint(playerid, 15, HouseData[i][housePos][0], HouseData[i][housePos][1], HouseData[i][housePos][2]))
			{
			    fDistance[1] = GetPlayerDistanceFromPoint(playerid, HouseData[i][housePos][0], HouseData[i][housePos][1], HouseData[i][housePos][2]);

				if (fDistance[1] < fDistance[0])
				{
				    fDistance[0] = fDistance[1];
				    h = i;
				}
			}
		}
	}
	return h;
}*/

House_Nearest(playerid)
{
    for (new i = 0; i != MAX_HOUSES; i ++) if (HouseData[i][houseExists] && IsPlayerInRangeOfPoint(playerid, 2.5, HouseData[i][housePos][0], HouseData[i][housePos][1], HouseData[i][housePos][2]))
	{
		if (GetPlayerInterior(playerid) == HouseData[i][houseExterior] && GetPlayerVirtualWorld(playerid) == HouseData[i][houseExteriorVW])
			return i;
	}
	return -1;
}

House_Refresh(houseid)
{
	if (houseid != -1 && HouseData[houseid][houseExists])
	{
		if (IsValidDynamic3DTextLabel(HouseData[houseid][houseText3D]))
		    DestroyDynamic3DTextLabel(HouseData[houseid][houseText3D]);

		if (IsValidDynamicPickup(HouseData[houseid][housePickup]))
		    DestroyDynamicPickup(HouseData[houseid][housePickup]);

		if (IsValidDynamicMapIcon(HouseData[houseid][houseMapIcon]))
		    DestroyDynamicMapIcon(HouseData[houseid][houseMapIcon]);

		new
			string[512];

		if (!HouseData[houseid][houseOwner]) {
			format(string, sizeof(string), "{0BF5C7}[{FFFFFF}บ้านพักอาศัย{0BF5C7}]\n{FFFFFF}ราคาบ้าน : {FFFFFF}[{0D9D13}%s{FFFFFF}]\n{FFFFFF}ชื่อบ้าน : {FFFFFF}[{F5150B}%s{FFFFFF}]", FormatNumber(HouseData[houseid][housePrice]), HouseData[houseid][houseAddress]);
            HouseData[houseid][houseText3D] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, HouseData[houseid][housePos][0], HouseData[houseid][housePos][1], HouseData[houseid][housePos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, HouseData[houseid][houseExteriorVW], HouseData[houseid][houseExterior]);
		}
		else {
			format(string, sizeof(string), "{0BF5C7}[{FFFFFF}บ้านพักอาศัย{0BF5C7}]\n{FFFFFF}ราคาบ้าน : {FFFFFF}[{0D9D13}%s{FFFFFF}]\n{FFFFFF}ชื่อบ้าน : {FFFFFF}[{F5150B}%s{FFFFFF}]", FormatNumber(HouseData[houseid][housePrice]), HouseData[houseid][houseAddress]);
            HouseData[houseid][houseText3D] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, HouseData[houseid][housePos][0], HouseData[houseid][housePos][1], HouseData[houseid][housePos][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, HouseData[houseid][houseExteriorVW], HouseData[houseid][houseExterior]);
		}
        HouseData[houseid][housePickup] = CreateDynamicPickup(1273, 23, HouseData[houseid][housePos][0], HouseData[houseid][housePos][1], HouseData[houseid][housePos][2], HouseData[houseid][houseExteriorVW], HouseData[houseid][houseExterior]);
        HouseData[houseid][houseMapIcon] = CreateDynamicMapIcon(HouseData[houseid][housePos][0], HouseData[houseid][housePos][1], HouseData[houseid][housePos][2], (HouseData[houseid][houseOwner] != 0) ? (32) : (31), 0, HouseData[houseid][houseExteriorVW], HouseData[houseid][houseExterior]);
	}
	return 1;
}

House_Create(playerid, const address[], price)
{
	new
	    Float:x,
	    Float:y,
	    Float:z,
		Float:angle;

	if (GetPlayerPos(playerid, x, y, z) && GetPlayerFacingAngle(playerid, angle))
	{
		for (new i = 0; i != MAX_HOUSES; i ++)
		{
	    	if (!HouseData[i][houseExists])
		    {
    	        HouseData[i][houseExists] = true;
        	    HouseData[i][houseOwner] = 0;
            	HouseData[i][housePrice] = price;
            	HouseData[i][houseMoney] = 0;

				format(HouseData[i][houseAddress], 32, address);

    	        HouseData[i][housePos][0] = x;
    	        HouseData[i][housePos][1] = y;
    	        HouseData[i][housePos][2] = z;
    	        HouseData[i][housePos][3] = angle;

                HouseData[i][houseInt][0] = 2269.8772;
                HouseData[i][houseInt][1] = -1210.3240;
                HouseData[i][houseInt][2] = 1047.5625;
                HouseData[i][houseInt][3] = 90.0000;

				HouseData[i][houseInterior] = 10;
				HouseData[i][houseExterior] = GetPlayerInterior(playerid);
				HouseData[i][houseExteriorVW] = GetPlayerVirtualWorld(playerid);

				HouseData[i][houseLights] = true;
				HouseData[i][houseLocked] = false;

				House_Refresh(i);
				mysql_tquery(g_SQL, "INSERT INTO `houses` (`houseOwner`) VALUES(0)", "OnHouseCreated", "d", i);
				return i;
			}
		}
	}
	return -1;
}

House_Delete(houseid)
{
	if (houseid != -1 && HouseData[houseid][houseExists])
	{
	    new
	        string[64];

		format(string, sizeof(string), "DELETE FROM `houses` WHERE `houseID` = '%d'", HouseData[houseid][houseID]);
		mysql_tquery(g_SQL, string);

        if (IsValidDynamic3DTextLabel(HouseData[houseid][houseText3D]))
		    DestroyDynamic3DTextLabel(HouseData[houseid][houseText3D]);

		if (IsValidDynamicPickup(HouseData[houseid][housePickup]))
		    DestroyDynamicPickup(HouseData[houseid][housePickup]);

		if (IsValidDynamicMapIcon(HouseData[houseid][houseMapIcon]))
		    DestroyDynamicMapIcon(HouseData[houseid][houseMapIcon]);

	    HouseData[houseid][houseExists] = false;
	    HouseData[houseid][houseOwner] = 0;
	    HouseData[houseid][houseID] = 0;
	}
	return 1;
}

House_IsOwner(playerid, houseid)
{
	if (playerData[playerid][pID] == -1)
	    return 0;

    if ((HouseData[houseid][houseExists] && HouseData[houseid][houseOwner] != 0) && HouseData[houseid][houseOwner] == playerData[playerid][pID])
		return 1;

	return 0;
}

stock House_GetFreeID(houseid)
{
	if (houseid == -1 || !HouseData[houseid][houseExists])
	    return 0;

	for (new i = 0; i < MAX_HOUSE_STORAGE; i ++)
	{
	    if (!HouseStorage[houseid][i][hItemExists])
	        return i;
	}
	return -1;
}

stock House_GetFreeIDEx(houseid, item[], extended)
{
	if (houseid == -1 || !HouseData[houseid][houseExists])
	    return 0;

	for (new i = 0; i < MAX_HOUSE_STORAGE; i ++)
	{
	    if (!HouseStorage[houseid][i][hItemExists])
	        continue;

        if (!strcmp(HouseStorage[houseid][i][hItemName], item) && HouseStorage[houseid][i][hItemExtended] == extended) return i;
	}
	return -1;
}

stock GetHouseByID(sqlid)
{
	for (new i = 0; i != MAX_HOUSES; i ++) if (HouseData[i][houseExists] && HouseData[i][houseID] == sqlid)
	    return i;

	return -1;
}

forward OnHouseCreated(houseid);
public OnHouseCreated(houseid)
{
	if (houseid == -1 || !HouseData[houseid][houseExists])
	    return 0;

	HouseData[houseid][houseID] = cache_insert_id();
	House_Save(houseid);

	return 1;
}

GetPlayerSQLID(playerid)
{
	return (playerData[playerid][pID]);
}

House_GetCount(playerid)
{
	new
		count = 0;

	for (new i = 0; i != MAX_HOUSES; i ++)
	{
		if (HouseData[i][houseExists] && House_IsOwner(playerid, i))
   		{
   		    count++;
		}
	}
	return count;
}

stock SendAdminAlert(color, const str[], {Float,_}:...)
{
	static
	    args,
	    start,
	    end,
	    string[144]
	;
	#emit LOAD.S.pri 8
	#emit STOR.pri args

	if (args > 8)
	{
		#emit ADDR.pri str
		#emit STOR.pri start

	    for (end = start + (args - 8); end > start; end -= 4)
		{
	        #emit LREF.pri end
	        #emit PUSH.pri
		}
		#emit PUSH.S str
		#emit PUSH.C 144
		#emit PUSH.C string

		#emit LOAD.S.pri 8
		#emit ADD.C 4
		#emit PUSH.pri

		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

        foreach (new i : Player)
		{
			if (playerData[i][pAdmin] >= 1) {
  				SendClientMessage(i, color, string);
			}
		}
		return 1;
	}
	foreach (new i : Player)
	{
		if (playerData[i][pAdmin] >= 1) {
			SendClientMessage(i, color, str);
		}
	}
	return 1;
}

forward ModCar(playerid);
public ModCar(playerid)
{
	switch(pmodelid[playerid])
	{
        case 562,565,559,561,560,575,534,567,536,535,576,411,579,602,496,518,527,589,597,419,
		533,526,474,545,517,410,600,436,580,439,549,491,445,604,507,585,587,466,492,546,551,516,
		426, 547, 405, 409, 550, 566, 540, 421,	529,431,438,437,420,525,552,416,433,427,490,528,
		407,544,470,598,596,599,601,428,499,609,524,578,486,406,573,455,588,403,514,423,
		414,443,515,456,422,482,530,418,572,413,440,543,583,478,554,402,542,603,475,568,504,457,
        483,508,429,541,415,480,434,506,451,555,477,400,404,489,479,442,458,467,558:
		{
		    ShowMenuForPlayer(TuningMenu, playerid);
		    TogglePlayerControllable(playerid,0);
 			return SendClientMessage(playerid, COLOR_WHITE, "[Server]: เลือกรายการแล้วกดปุ่ม Spacebar");
		}
		default: return SendClientMessage(playerid,COLOR_RED,"[Server]: คุณไม่สามารถแต่งรถคันนี้ได้");
	}
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
    new Menu:Current = GetPlayerMenu(playerid);
	if(Current == TuningMenu)
	{
	    switch(row)
		{
	        case 0:	ShowMenuForPlayer(Paintjobs, playerid);
	        case 1:	ShowMenuForPlayer(Colors, playerid);
	        case 2: ShowMenuForPlayer(Exhausts, playerid);
	        case 3:ShowMenuForPlayer(Frontbumper, playerid);
	        case 4:ShowMenuForPlayer(Rearbumper, playerid);
	        case 5:ShowMenuForPlayer(Roof, playerid);
	        case 6:ShowMenuForPlayer(Spoilers, playerid);
	        case 7:ShowMenuForPlayer(Sideskirts, playerid);
			case 8:ShowMenuForPlayer(Bullbars, playerid);
	        case 9:ShowMenuForPlayer(Wheels, playerid);
	        case 10:ShowMenuForPlayer(Carstereo, playerid);
	        case 11:ShowMenuForPlayer(TuningMenu1, playerid);
		}
	}
	if(Current == Paintjobs)
	{
		switch(row)
		{
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
		        {
					new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,0);
					SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เพ้นท์สีรถเรียบร้อยแล้ว");
					ShowMenuForPlayer(Paintjobs, playerid);
				}
				else
				{
				   SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] รถรุ่นนี้ไม่สามารถเพ้นท์ได้");
			       ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 1:
			    if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,1);
					SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เพ้นท์สีรถเรียบร้อยแล้ว");
					ShowMenuForPlayer(Paintjobs, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] รถรุ่นนี้ไม่สามารถเพ้นท์ได้");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
	      		if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,2);
					SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เพ้นท์สีรถเรียบร้อยแล้ว");
					ShowMenuForPlayer(Paintjobs, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] รถรุ่นนี้ไม่สามารถเพ้นท์ได้");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,3);
					SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เพ้นท์สีรถเรียบร้อยแล้ว");
					ShowMenuForPlayer(Paintjobs, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] รถรุ่นนี้ไม่สามารถเพ้นท์ได้");
				    ShowMenuForPlayer(TuningMenu, playerid);
			}

			case 4:
		    if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560 ||
				pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 || // Broadway
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 535 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,4);
					SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เพ้นท์สีรถเรียบร้อยแล้ว");
					ShowMenuForPlayer(Paintjobs, playerid);
				}
				else
				{
	            	SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] รถรุ่นนี้ไม่สามารถเพ้นท์ได้");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
				case 5:
			{
		    	ShowMenuForPlayer(TuningMenu, playerid);
			}

		}
		}

	if(Current == Colors) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            SetVehicleColor(car,0,0);
		            //GivePlayerMoney(playerid,-150);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
		            ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,1,1);
			    //    GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,3,3);
			      //  GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
	      		 	SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,79,79);
			     //   GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 4:
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,86,86);
			     //   GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 5:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,6,6);
			      //  GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	            case 6:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,126,126);
			  //      GivePlayerMoney(playerid,-150);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 7:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,66,66);
			    //    GivePlayerMoney(playerid,-150);
	          		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 8:ShowMenuForPlayer(Colors1, playerid);
	 }
	 }

	if(Current == Colors1) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            SetVehicleColor(car,24,24);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
		            ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	         case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,123,123);
	          		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,53,53);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,93,93);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 4:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,83,83);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 5:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,60,60);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	            case 6:
	      		if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,126,126);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 7:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        SetVehicleColor(car,110,110);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้เปลี่ยนสีรถแล้ว");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 8:ShowMenuForPlayer(TuningMenu, playerid);
	 }
	 }


	if(Current == Exhausts) {
		switch(row){
		    case 0:

		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562)
		            {
		            	AddVehicleComponentEx(car,1034);
		            	SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Elegy");
		            	ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponentEx(car,1046);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Flash");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponentEx(car,1065);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Jetser");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponentEx(car,1064);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Stratum");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponentEx(car,1028);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Sultan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponentEx(car,1089);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Exhaust component on Uranus");
					    ShowMenuForPlayer(Exhausts, playerid);
	    			}
					}
	  			 	else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}



	//-------------------X-Flow Exausts-Wheel Arch Cars----------------------------------------------------------
			case 1:
			    if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562)
			        {
			            AddVehicleComponentEx(car,1037);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Exhaust component on Elegy");
			            ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 565)
					{
					    AddVehicleComponentEx(car,1045);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Exhaust component on Flash");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 559)
					{
					    AddVehicleComponentEx(car,1066);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow exaust component on Jester");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 561)
					{
					    AddVehicleComponentEx(car,1059);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Exhaust component on Stratum");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 560)
					{
					    AddVehicleComponentEx(car,1029);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Exhaust component on Sultan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 558)
					{
					    AddVehicleComponentEx(car,1092);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Exhaust component on Uranus");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------Locos Low Chromer Exausts----------------------------------------------------------
			case 2:
			    if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1044);
		             	SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Brodway");
			            ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1126);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Remington");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1129);
	                    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Savanna");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1104);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Blade");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1113);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Slamvan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1136);
					   	SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer Exhaust component on Tornado");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------Locos Low Salmin Exausts----------------------------------------------------------
			case 3:
			    if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1043);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Brodway");
			            ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1127);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Remingon");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1132);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Savanna");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1105);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Blade");
					    ShowMenuForPlayer(Exhausts, playerid);
					}

					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1114);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Slamvan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}

					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1135);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin Exhaust component on Tornado");
					    ShowMenuForPlayer(Exhausts, playerid);
					}

					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
		}

	if(Current == Frontbumper) {
		switch(row){


	//-------------------Alien Front Bumper-Wheel Arch Cars----------------------------------------------------------
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
				{
		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponentEx(car,1171);
	              		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Elegy");
		            	ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1153);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Flash");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponentEx(car,1160);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Jester");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1155);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Stratum");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1169);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Sultan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponentEx(car,1166);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien front bumper component on Uraus");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}


	//-------------------X-Flow Front Bumper-Wheel Arch Cars----------------------------------------------------------
			case 1:

				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponentEx(car,1172);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow front bumper component on Elegy");
			            ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1152);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow front bumper component on Flash");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponentEx(car,1173);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow front bumper component on Jester");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1157);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow front bumper component on Stratum");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1170);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow front bumper component on Sultan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponentEx(car,1165);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow front bumper component on Uranus");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------Locos Low Chromer Front Bumper----------------------------------------------------------
			case 2:

	      		if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
				{
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1174);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Brodway");
			            ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1179);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Remington");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1189);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Savanna");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1182);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Blade");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1115);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Slamvan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1191);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer front bumper component on Tornado");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}



	//-------------------Locos Low Salmin Front Bumper----------------------------------------------------------
			case 3:

			    if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
	            pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 576)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1175);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Brodway");
			            ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1185);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Remington");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1188);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Savanna");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1181);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Blade");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}

				    else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1116);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Slamvan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1190);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin front bumper component on Tornado");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}

					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
		}


	if(Current == Rearbumper) {
		switch(row){


	//-------------------Alien Rear Bumper-Wheel Arch Cars----------------------------------------------------------
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponentEx(car,1149);
	              		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Elegy");
		            	ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1150);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Flash");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponentEx(car,1159);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Jester");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1154);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Stratum");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1141);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Sultan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponentEx(car,1168);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien rear bumper component on Uranus");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------X-Flow Rear Bumper-Wheel Arch Cars----------------------------------------------------------
			case 1:

				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponentEx(car,1148);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Elegy");
			            ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1151);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Flash");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponentEx(car,1161);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Jester");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1156);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Stratum");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1140);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Sultan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponentEx(car,1167);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch  X-Flow rear bumper component on Uranus");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Chromer rear Bumper----------------------------------------------------------
			case 2:
			    if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1176);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Brodway");
			            ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1180);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Remington");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1187);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Savanna");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1184);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Blade");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1109);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Slamvan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1192);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chromer rear bumper component on Tornado");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Salmin Rear Bumper----------------------------------------------------------
			case 3:
			    if(pmodelid[playerid] == 575 ||
				pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536 ||
				pmodelid[playerid] == 576 ||
				pmodelid[playerid] == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
			            AddVehicleComponentEx(car,1177);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Brodway");
			            ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 534)// Remington
					{
					    AddVehicleComponentEx(car,1178);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Remington");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 567)// Savanna
					{
					    AddVehicleComponentEx(car,1186);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Savanna");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1183);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Blade");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}

					else if(pmodelid[playerid] == 535) // Slamvan
					{
					    AddVehicleComponentEx(car,1110);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Slamvan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}

					else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1193);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Slamin rear bumper component on Tornado");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}

					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
		}



	if(Current == Roof) {
		switch(row){


	//-------------------Alien Roof Vent-Wheel Arch Cars----------------------------------------------------------
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponentEx(car,1035);
	              		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Elegy");
		            	ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1054);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Flash");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponentEx(car,1067);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Jester");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1055);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Stratum");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1032);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Sultan");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponentEx(car,1088);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien roof vent component on Uranus");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------X-Flow Roof Vent-Wheel Arch Cars----------------------------------------------------------
			case 1:

				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponentEx(car,1035);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Elegy");
			            ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1053);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Flash");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponentEx(car,1068);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Jester");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1061);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Stratum");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1033);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Sultan");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponentEx(car,1091);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow roof vent component on Uranus");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Hardtop Roof ----------------------------------------------------------
			case 2:
			    if(pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 567) // Savanna
			        {
			            AddVehicleComponentEx(car,1130);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Hardtop Roof component on Brodway");
			            ShowMenuForPlayer(Roof, playerid);
					}
	   				else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1128);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Hardtop Roof component on Blade");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types Savanna and Blade");
					ShowMenuForPlayer(Roof, playerid);
					}
	//-------------------Locos Low Softtop Roof ----------------------------------------------------------
			case 3:
			    if(pmodelid[playerid] == 567 ||
				pmodelid[playerid] == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 567) // Savanna
			        {
			            AddVehicleComponentEx(car,1131);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Softtop Roof component on Brodway");
			            ShowMenuForPlayer(Roof, playerid);
					}
	   				else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1103);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Softtop Roof component on Blade");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types Savanna and Blade");
					ShowMenuForPlayer(Roof, playerid);
					}

			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
		}


	if(Current == Spoilers) {
		switch(row){


	//-------------------Alien Spoilers-Wheel Arch Cars----------------------------------------------------------
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponentEx(car,1147);
	              		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Elegy");
		            	ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1049);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Flash");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponentEx(car,1162);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Jester");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1158);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Stratum");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1138);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Sultan");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponentEx(car,1164);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Spoilers component on Uranus");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}


	//-------------------X-Flow Spoilers-Wheel Arch Cars----------------------------------------------------------
			case 1:

				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponentEx(car,1146);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Elegy");
			            ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1150);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Flash");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponentEx(car,1158);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Jester");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1060);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Stratum");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1139);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Sultan");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponentEx(car,1163);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Spoilers component on Uranus");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to X-Flow Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	        	case 2:
				{
	            ShowMenuForPlayer(TuningMenu, playerid);
	            }
		}
		}


	if(Current == Sideskirts) {
		switch(row){


	//-------------------Alien Sideskirts Wheel Arch Cars----------------------------------------------------------
		    case 0:
		        if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(pmodelid[playerid] == 562) // Elegy
		            {
		            	AddVehicleComponentEx(car,1036);
		            	AddVehicleComponentEx(car,1040);
	              		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Side Skirts component on Elegy");
		            	ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1047);
					    AddVehicleComponentEx(car,1051);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Sideskirts vent component on Flash");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jester
					{
					    AddVehicleComponentEx(car,1069);
					    AddVehicleComponentEx(car,1071);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Side Skirts component on Jester");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1056);
					    AddVehicleComponentEx(car,1062);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Side Skirts component on Stratum");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1026);
					    AddVehicleComponentEx(car,1027);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Side Skirts bumper component on Sultan");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 558) // Uranus
					{
					    AddVehicleComponentEx(car,1090);
					    AddVehicleComponentEx(car,1094);
				 	    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch Alien Side Skirts component on Uranus");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------X-Flow Sideskirts-Wheel Arch Cars----------------------------------------------------------
			case 1:

				if(pmodelid[playerid] == 562 ||
				pmodelid[playerid] == 565 ||
				pmodelid[playerid] == 559 ||
				pmodelid[playerid] == 561 ||
				pmodelid[playerid] == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 562) // Elegy
			        {
			            AddVehicleComponentEx(car,1039);
			            AddVehicleComponentEx(car,1041);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Elegy");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 565) // Flash
					{
					    AddVehicleComponentEx(car,1048);
					    AddVehicleComponentEx(car,1052);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Flash");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 559) // Jetser
					{
					    AddVehicleComponentEx(car,1070);
					    AddVehicleComponentEx(car,1072);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Jester");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 561) // Stratum
					{
					    AddVehicleComponentEx(car,1057);
					    AddVehicleComponentEx(car,1063);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Stratum");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 560) // Sultan
					{
					    AddVehicleComponentEx(car,1031);
					    AddVehicleComponentEx(car,1030);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Sultan");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(pmodelid[playerid] == 558)  // Uranus
					{
					    AddVehicleComponentEx(car,1093);
					    AddVehicleComponentEx(car,1095);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wheel Arch X-Flow Side Skirts component on Uranus");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------Locos Low Chrome Strip Side Skirts----------------------------------------------------------
			case 2:
			    if(pmodelid[playerid] == 575 ||
	               pmodelid[playerid] == 536 ||
	               pmodelid[playerid] == 576 ||
		 	       pmodelid[playerid] == 567)
	               {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 575) // Brodway
			        {
	       		        AddVehicleComponentEx(car,1042);
	       		        AddVehicleComponentEx(car,1099);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Strip Side Skirts component on Brodway");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
	   				else if(pmodelid[playerid] == 567) // Savanna
					{
					    AddVehicleComponentEx(car,1102);
					    AddVehicleComponentEx(car,1133);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Strip Side Skirts component on Savanna");
	    		        ShowMenuForPlayer(Sideskirts, playerid);
	                }
	                else if(pmodelid[playerid] == 576) // Tornado
					{
					    AddVehicleComponentEx(car,1134);
					    AddVehicleComponentEx(car,1137);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Strip Side Skirts component on Tornado");
	    		        ShowMenuForPlayer(Sideskirts, playerid);
	                }
	                else if(pmodelid[playerid] == 536) // Blade
					{
					    AddVehicleComponentEx(car,1108);
					    AddVehicleComponentEx(car,1107);
					    SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Strip Side Skirts component on Blade");
	                    ShowMenuForPlayer(Sideskirts, playerid);
	                }
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car types Brodway, Savanna Tornado and Blade");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Chrome Flames Side Skirts----------------------------------------------------------
			case 3:
			    if(pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponentEx(car,1122);
			            AddVehicleComponentEx(car,1101);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Flames Side Skirts component on Remington");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Chrome Arches Side Skirts----------------------------------------------------------

			case 4:
			    if(pmodelid[playerid] == 534 ||
				pmodelid[playerid] == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponentEx(car,1106);
			            AddVehicleComponentEx(car,1124);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Arches Side Skirts component on Remington");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}




	//-------------------Locos Low Chrome Trim Side Skirts----------------------------------------------------------
			case 5:
			    if(pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 535) // Slamvan
			        {
			            AddVehicleComponentEx(car,1118);
			            AddVehicleComponentEx(car,1120);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Trim Side Skirts component on Slamvan");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Slamvan ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	//-------------------Locos Low Chrome Wheelcovers Side Skirts----------------------------------------------------------
	  case 6:
			    if(pmodelid[playerid] == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 535) // Slamvan
			        {
			            AddVehicleComponentEx(car,1119);
			            AddVehicleComponentEx(car,1121);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Wheelcovers component on Slamvan");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Slamvan ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			   case 7:ShowMenuForPlayer(TuningMenu, playerid);
		}
		}

	//-------------------Locos Low Chrome Grill ----------------------------------------------------------

	if(Current == Bullbars) {
		switch(row){

	        case 0:
			    if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponentEx(car,1100);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Grill component on Remington");
			            ShowMenuForPlayer(Bullbars, playerid);
			        }
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Chrome Bars ----------------------------------------------------------
			case 1:
			    if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponentEx(car,1123);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Bars component on Remington");
			            ShowMenuForPlayer(Bullbars, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
	//-------------------Locos Low Chrome Lights ----------------------------------------------------------


			case 2:
			    if(pmodelid[playerid] == 534)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(pmodelid[playerid] == 534) // Remington
			        {
			            AddVehicleComponentEx(car,1125);
			            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Lights component on Remington");
			            ShowMenuForPlayer(Bullbars, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}




	//-------------------Locos Low Chrome Bullbar ----------------------------------------------------------


	    case 3:
		    if(pmodelid[playerid] == 535)
		    {
		        new car = GetPlayerVehicleID(playerid);
		        if(pmodelid[playerid] == 535) // Slamvan
		        {
		            AddVehicleComponentEx(car,1117);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Locos Low Chrome Lights component on Slamvan");
		            ShowMenuForPlayer(Bullbars, playerid);
				}
				}
				else
				{
					SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Locos Low Car type Slamvan ");
					ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
	}



	if(Current == Wheels) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1025);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Offroad Wheels ");
		            ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1074);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Mega Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponentEx(car,1076);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Wires Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1078);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Twist Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	      		 	SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(Wheels, playerid);
				}
			case 4:
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1081);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Grove Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 5:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponentEx(car,1082);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Import Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	   		case 6:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1085);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Atomic Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 7:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1096);
	          		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Ahab Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 8:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1097);
	          		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Virtual Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	 		case 9:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1098);
	          		SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Access Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	        case 10:
				{

				    ShowMenuForPlayer(Wheels1, playerid);
				}

			case 11:
				{

				    ShowMenuForPlayer(TuningMenu, playerid);
				}

	 	}
	 }

	if(Current == Wheels1) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1084);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Trance Wheels ");
		            ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1073);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Shadow Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponentEx(car,1075);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Rimshine Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	      	 		SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1077);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Classic Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(Wheels, playerid);
				}
			case 4:
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1079);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Cutter Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 5:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponentEx(car,1080);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Switch Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	   		case 6:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1083);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Dollar Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	        case 7:
				{

				    ShowMenuForPlayer(TuningMenu, playerid);
				}
		 }
	 }


	if(Current == Carstereo) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1086);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Stereo Bass bost system ");
		            ShowMenuForPlayer(Carstereo, playerid);
				}
				else
				{
	                SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
			    }
			case 1:

			    {
			        ShowMenuForPlayer(TuningMenu, playerid);
				}
		 }
	 }

	if(Current == Hydraulics) {
		switch(row){
		    case 0:
	            if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1087);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง Hydraulics ในรถ ");
		            ShowMenuForPlayer(Hydraulics, playerid);
				}
				else
				{
	                SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
			    }

			case 1:

			    {
			        ShowMenuForPlayer(TuningMenu, playerid);
				}
		 }
	 }

	/*if(Current == Nitro) {
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1008);
		            SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง 2x Nitro ในรถ ");
		            ShowMenuForPlayer(Nitro, playerid);
				}
				else
				{
	                SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
			    }
			case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1009);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง 5x Nitro ในรถ ");
			        ShowMenuForPlayer(Nitro, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponentEx(car,1010);
			        SendClientMessage(playerid,COLOR_WHITE,"[INFO] คุณได้ติดตั้ง 10x Nitro ในรถ ");
			        ShowMenuForPlayer(Nitro, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"เงินไม่พอ!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:

			    {
			        ShowMenuForPlayer(TuningMenu, playerid);
				}
	 	}
	}*/


	//--------------------------Main Menu page 2 ----------------------------------------------------------------------------
	if(Current == TuningMenu1) {
	    switch(row){
	        case 0:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Hydraulics, playerid);
				}
	        case 1:
				if(IsPlayerConnected(playerid))
				{
					//ShowMenuForPlayer(Nitro, playerid);
				}
	       case 2:
				{
				 	SendClientMessage(playerid,COLOR_WHITE,"[INFO] กรุณาไปซ่อมรถที่ร้านซ่อมรถค่ะ !");
					ShowMenuForPlayer(TuningMenu1, playerid);

				}

	       case 3:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(TuningMenu, playerid);
				}


		}
	}
	return 1;
}


stock IsComponentidCompatible(modelid, componentid)
{
    if(componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
         componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
         componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
         componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086)
         return true;

    switch (modelid)
    {
        case 400: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 401: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 402: return (componentid == 1009 || componentid == 1009 || componentid == 1010);
        case 404: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 405: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000);
        case 409: return (componentid == 1009);
        case 410: return (componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 411: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 412: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 415: return (componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 418: return (componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016);
        case 419: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 420: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003);
        case 421: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000);
        case 422: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007);
        case 426: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003);
        case 429: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 436: return (componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 438: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 439: return (componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013);
        case 442: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 445: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 451: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 458: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 466: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 467: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 474: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 475: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 477: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 478: return (componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 479: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 480: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 489: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000);
        case 491: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 492: return (componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000);
        case 496: return (componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020);
        case 500: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 506: return (componentid == 1009);
        case 507: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 516: return (componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 517: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 518: return (componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 526: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 527: return (componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007);
        case 529: return (componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 533: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 534: return (componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106);
        case 535: return (componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119);
        case 536: return (componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108);
        case 540: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 541: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 542: return (componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015);
        case 545: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 546: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 547: return (componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000);
        case 549: return (componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 550: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003);
        case 551: return (componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003);
        case 555: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 558: return (componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093);
        case 559: return (componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009);
        case 560: return (componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031);
        case 561: return (componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057);
        case 562: return (componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039);
        case 565: return (componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048);
        case 566: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 567: return (componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133);
        case 575: return (componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042);
        case 576: return (componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134);
        case 579: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 580: return (componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
        case 585: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
        case 587: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 589: return (componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
        case 600: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
        case 602: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
        case 603: return (componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
    }
    return false;
}

public OnPlayerExitedMenu(playerid)
{
    new Menu:Current = GetPlayerMenu(playerid);
	HideMenuForPlayer(Current, playerid);
	TogglePlayerControllable(playerid, true);

	return 1;
}


AddVehicleComponentEx(vehicleid, componentid) {
	if(vehicleid > 0 && vehicleid != INVALID_VEHICLE_ID) {
	    new temp_model = GetVehicleModel(vehicleid);
	    if(IsComponentidCompatible(temp_model, componentid)) {
	        AddVehicleComponent(vehicleid, componentid);
	    }
	}
	return 1;
}

stock StockAddMenuItem()
{
	//==========================================================================
    TuningMenu = CreateMenu("TuningMenu",1,20,120,150,40);
    AddMenuItem(TuningMenu,0,"Paint Jobs");
    AddMenuItem(TuningMenu,0,"Colors");
    AddMenuItem(TuningMenu,0,"Exhausts");
    AddMenuItem(TuningMenu,0,"Front Bumper");
    AddMenuItem(TuningMenu,0,"Rear Bumper");
    AddMenuItem(TuningMenu,0,"Roof");
    AddMenuItem(TuningMenu,0,"Spoilers");
    AddMenuItem(TuningMenu,0,"Side Skirts");
    AddMenuItem(TuningMenu,0,"Bullbars");
    AddMenuItem(TuningMenu,0,"Wheels");
    AddMenuItem(TuningMenu,0,"Car Stereo");
    AddMenuItem(TuningMenu,0,"Next Page");
    Paintjobs = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Paintjobs,0,"PaintJobs");
	AddMenuItem(Paintjobs,0,"Paintjob 1");
	AddMenuItem(Paintjobs,0,"Paintjob 2");
	AddMenuItem(Paintjobs,0,"Paintjob 3");
	AddMenuItem(Paintjobs,0,"Paintjob 4");
	AddMenuItem(Paintjobs,0,"Paintjob 5");
	AddMenuItem(Paintjobs,0,"Main Menu");
	Colors = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Colors,0,"Colors");
	AddMenuItem(Colors,0,"Black");
	AddMenuItem(Colors,0,"White");
	AddMenuItem(Colors,0,"Red");
	AddMenuItem(Colors,0,"Blue");
	AddMenuItem(Colors,0,"Green");
	AddMenuItem(Colors,0,"Yellow");
	AddMenuItem(Colors,0,"Pink");
	AddMenuItem(Colors,0,"Brown");
	AddMenuItem(Colors,0,"Next Page");
	Colors1 = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Colors1,0,"Colors");
    AddMenuItem(Colors1,0,"Grey");
	AddMenuItem(Colors1,0,"Gold");
	AddMenuItem(Colors1,0,"Dark Blue");
	AddMenuItem(Colors1,0,"Light Blue");
	AddMenuItem(Colors1,0,"Green");
	AddMenuItem(Colors1,0,"Light Grey");
	AddMenuItem(Colors1,0,"Dark Red");
	AddMenuItem(Colors1,0,"Dark Brown");
	AddMenuItem(Colors1,0,"Main Menu");
	Exhausts = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Exhausts,0,"Exhausts");
	AddMenuItem(Exhausts,0,"Wheel Arch Alien Exhaust");
	AddMenuItem(Exhausts,0,"Wheel Arch X-Flow Exhaust");
	AddMenuItem(Exhausts,0,"Locos Low Chromer Exhaust");
	AddMenuItem(Exhausts,0,"Locos Low Slamin Exhaust");
	AddMenuItem(Exhausts,0,"Main Menu");
	Frontbumper = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Frontbumper,0,"Frontbumpers");
	AddMenuItem(Frontbumper,0,"Wheel Arch Alien bumper");
	AddMenuItem(Frontbumper,0,"Wheel Arch X-Flow bumper");
	AddMenuItem(Frontbumper,0,"Locos Low Chromer bumper");
	AddMenuItem(Frontbumper,0,"Locos Low Slamin bumper");
	AddMenuItem(Frontbumper,0,"Main Menu");
	Rearbumper = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Rearbumper,0,"Rearbumpers");
	AddMenuItem(Rearbumper,0,"Wheel Arch Alien bumper");
	AddMenuItem(Rearbumper,0,"Wheel Arch X-Flow bumper");
	AddMenuItem(Rearbumper,0,"Locos Low Chromer bumper");
	AddMenuItem(Rearbumper,0,"Locos Low Slamin bumper");
	AddMenuItem(Rearbumper,0,"Main Menu");
	Roof = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Roof,0,"Roof");
	AddMenuItem(Roof,0,"Wheel Arch Alien Roof Vent");
	AddMenuItem(Roof,0,"Wheel Arch X-Flow Roof Vent");
	AddMenuItem(Roof,0,"Locos Low Hardtop Roof");
	AddMenuItem(Roof,0,"Locos Low Softtop Roof");
	AddMenuItem(Roof,0,"Main Menu");
	Spoilers = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Spoilers,0,"Spoliers");
	AddMenuItem(Spoilers,0,"Alien Spoiler");
	AddMenuItem(Spoilers,0,"X-Flow Spoiler");
	AddMenuItem(Spoilers,0,"Main Menu");
	Sideskirts = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Sideskirts,0,"SideSkirts");
	AddMenuItem(Sideskirts,0,"Wheel Arch Alien Side Skirts");
	AddMenuItem(Sideskirts,0,"Wheel Arch X-Flow Side Skirts");
    AddMenuItem(Sideskirts,0,"Locos Low Chrome Strip");
    AddMenuItem(Sideskirts,0,"Locos Low Chrome Flames");
    AddMenuItem(Sideskirts,0,"Locos Low Chrome Arches");
    AddMenuItem(Sideskirts,0,"Locos Low Chrome Trim");
    AddMenuItem(Sideskirts,0,"Locos Low Wheelcovers");
	AddMenuItem(Sideskirts,0,"Main Menu");
	Bullbars = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Bullbars,0,"Bullbars");
	AddMenuItem(Bullbars,0,"Locos Low Chrome Grill");
	AddMenuItem(Bullbars,0,"Locos Low Chrome Bars");
	AddMenuItem(Bullbars,0,"Locos Low Chrome Lights");
	AddMenuItem(Bullbars,0,"Locos Low Chrome Bullbar");
	AddMenuItem(Bullbars,0,"Main Menu");
	Wheels = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Wheels,0,"Wheels");
	AddMenuItem(Wheels,0,"Offroad");
	AddMenuItem(Wheels,0,"Mega");
	AddMenuItem(Wheels,0,"Wires");
	AddMenuItem(Wheels,0,"Twist");
	AddMenuItem(Wheels,0,"Grove");
	AddMenuItem(Wheels,0,"Import");
	AddMenuItem(Wheels,0,"Atomic");
	AddMenuItem(Wheels,0,"Ahab");
	AddMenuItem(Wheels,0,"Virtual");
	AddMenuItem(Wheels,0,"Access");
	AddMenuItem(Wheels,0,"Next Page");
	AddMenuItem(Wheels,0,"Main Menu");
	Wheels1 = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Wheels1,0,"Wheels");
	AddMenuItem(Wheels1,0,"Trance");
	AddMenuItem(Wheels1,0,"Shadow");
	AddMenuItem(Wheels1,0,"Rimshine");
	AddMenuItem(Wheels1,0,"Classic");
	AddMenuItem(Wheels1,0,"Cutter");
	AddMenuItem(Wheels1,0,"Switch");
	AddMenuItem(Wheels1,0,"Dollar");
	AddMenuItem(Wheels1,0,"Main Menu");
	Carstereo = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Carstereo,0,"Stereo");
	AddMenuItem(Carstereo,0,"Bass Boost");
	AddMenuItem(Carstereo,0,"Main Menu");
 	TuningMenu1= CreateMenu("TuningMenu",1,20,120,150,40);
    AddMenuItem(TuningMenu1,0,"Hydraulics");
    AddMenuItem(TuningMenu1,0,"Nitro");
    AddMenuItem(TuningMenu1,0,"Repair Car");
    AddMenuItem(TuningMenu1,0,"Main Menu");
	Hydraulics = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Hydraulics,0,"Hydraulics");
	AddMenuItem(Hydraulics,0,"Hydraulics");
	AddMenuItem(Hydraulics,0,"Main Menu");
	Nitro = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Nitro,0,"Nitro");
	AddMenuItem(Nitro,0,"2x Nitrous");
	AddMenuItem(Nitro,0,"5x Nitrous");
	AddMenuItem(Nitro,0,"10x Nitrous");
	AddMenuItem(Nitro,0,"Main Menu");
}

/*public OnPlayerVehicleDamage(playerid,vehicleid,Float:Damage)
{
	if(IsPlayerNPC(playerid)) return 1;

	new Float:vH; GetVehicleHealth(vehicleid, vH);
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

	new Float:speed_x,Float:speed_y,Float:speed_z,Float:parames30_10,parames30_10_int;
	GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
	parames30_10 = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+(speed_z*speed_z))*199.4166672;
	parames30_10_int = floatround(parames30_10,floatround_round);

	//if(Damage > 40.0)
	if(parames30_10_int > 60)
	{
		foreach (new i : Player)
		{
			if(GetPlayerVehicleID(i) == vehicleid)
			{
			    new Float:DamageVeh = randomEx(5,10);
				new Float:pdHealth;
				GetPlayerHealth(i, pdHealth);
				SetPlayerHealth(i, pdHealth-DamageVeh);
				SetPlayerDrunkLevel(i, 2000);
			}
		}
	}
    return 1;
}*/

forward WakeUp(playerid);
public WakeUp(playerid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);

	ApplyAnimation(playerid,"PED","getup_front", 4.0, 0, 1, 1, 0, 0, 1);

	BloodObject[playerid][0] = CreateObject(19836, x, y, z-0.9, 0.0, 0.0, 0.0);
	BloodObject[playerid][1] = CreateObject(19836, x-0.3, y, z-0.9, 0.0, 0.0, 0.0);
	BloodObject[playerid][2] = CreateObject(19836, x, y-0.3, z-0.9, 0.0, 0.0, 0.0);

    SetTimerEx("UnBlood", 3000, false, "d", playerid);

	return 1;
}

forward UnBlood(playerid);
public UnBlood(playerid)
{
	DestroyObject(BloodObject[playerid][0]);
	DestroyObject(BloodObject[playerid][1]);
	DestroyObject(BloodObject[playerid][2]);

	return 1;
}

// --> ระบบแต่งรถ

forward GetModel(Model);
public GetModel(Model)
{
	switch(Model){
 		case 417, 425, 430, 432, 446, 447, 448, 452, 453, 454, 460, 461, 462, 463, 464, 465, 468, 469, 471, 472, 473, 476, 481, 484, 487, 488, 493, 497, 501, 509, 510, 511, 512, 513, 521, 522, 523, 548:
   		return true;
    }
    return false;
}

// --> หน้าเมนูช่วยเหลือ

stock ShowYMenuTextDraws(playerid)
{
	new skin = GetPlayerSkin(playerid), string[128];

    PlayerTextDrawSetPreviewModel(playerid, AMZTextDraws[playerid][18], skin);

	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][0]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][1]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][2]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][3]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][4]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][5]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][6]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][7]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][8]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][9]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][10]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][11]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][12]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][13]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][14]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][15]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][16]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][17]);
	
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][18]);
	PlayerTextDrawSetPreviewModel(playerid, AMZTextDraws[playerid][18], skin);
	
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][19]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][20]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][21]);
	PlayerTextDrawShow(playerid, AMZTextDraws[playerid][22]);

	format(string, sizeof string, "~g~$ ~w~%d", GetPlayerMoneyEx(playerid));
	PlayerTextDrawSetString(playerid, AMZTextDraws[playerid][21], string);

	format(string, sizeof string, "~r~$ ~w~%d", GetPlayerRedMoney(playerid));
	PlayerTextDrawSetString(playerid, AMZTextDraws[playerid][22], string);

    PlayerTextDrawSetPreviewModel(playerid, AMZTextDraws[playerid][18], skin);
	SelectTextDraw(playerid, 0xFF0000FF);

	return 1;
}

stock HideYMenuTextDraws(playerid)
{
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][0]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][1]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][2]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][3]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][4]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][5]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][6]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][7]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][8]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][9]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][10]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][11]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][12]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][13]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][14]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][15]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][16]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][17]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][18]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][19]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][20]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][21]);
	PlayerTextDrawHide(playerid, AMZTextDraws[playerid][22]);
	CancelSelectTextDraw(playerid);

	return 1;
}

// --> ระบบแชร์โลเคชั่น
alias:location("แชร์โลเคชั่น")
CMD:location(playerid, params[])
{
	static
	    userid;

	if (sscanf(params, "u", userid))
     	return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/แชร์โลเคชั่น [ไอดี/ชื่อ]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (!IsPlayerSpawnedEx(userid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ยังไม่ได้อยู่ในสถานะปกติ");

	new Float:X, Float:Y, Float:Z;

	GetPlayerPos(playerid, X,Y,Z);

	SetPlayerCheckpoint(userid, X,Y,Z, 2.0);
	GPSNavigateToPoint(userid, X,Y,Z);

	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "> คุณได้ส่งพิกัดล่าสุดของคุณให้กับผู้เล่น '%s' แล้ว", GetPlayerNameEx(userid));
	SendClientMessageEx(userid, COLOR_YELLOW, "> คุณได้รับพิกัดตำแหน่งล่าสุดของ '%s' แล้ว", GetPlayerNameEx(playerid));

	return 1;
}

SetVehicleDamage(vehicleid)
{
	new slot = carData[vehicleid][carID];

	if(slot != -1)
	{
	    SetVehicleDamageStatus(vehicleid,carData[slot][carDamage][0],carData[slot][carDamage][1],carData[slot][carDamage][2],carData[slot][carDamage][3]);
	}
}

SaveVehicleDamage(vehicleid)
{
	new slot = carData[vehicleid][carID], query[256];

	if(slot != -1)
	{
	    // panels,doors,lights,tires
		GetVehicleDamageStatus(vehicleid,carData[slot][carDamage][0],carData[slot][carDamage][1],carData[slot][carDamage][2],carData[slot][carDamage][3]);
		GetVehicleHealth(vehicleid,carData[slot][carHealth]);
		
  		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carDamage1 = %d, carDamage2 = '%d', carDamage3 = '%d', carDamage4 = '%d', carHealth = '%f' WHERE carID = %d", carData[slot][carDamage][0], carData[slot][carDamage][1], carData[slot][carDamage][2], carData[slot][carDamage][3], carData[slot][carHealth], carData[vehicleid][carID]);
 		mysql_tquery(g_SQL, query);

	}
}

forward SetVehicleDamageStatus(vehicleid, damage1, damage2, damage3, damage4);
public SetVehicleDamageStatus(vehicleid, damage1, damage2, damage3, damage4)
{
    UpdateVehicleDamageStatus(vehicleid, damage1, damage2, damage3, damage4);
    return 1;
}

/*CMD:ckitem(playerid, params[])
{
	static
	    userid;

	if (playerData[playerid][pAdmin] < 2)
	    return 1;

	if (sscanf(params, "u", userid))
     	return SendClientMessage(playerid, COLOR_WHITE, "/ckitem [ไอดี/ชื่อ]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	toggleInventory(playerid, userid);
	return 1;
}*/

CMD:ckcar(playerid, params[])
{
	static
	    userid;

	if (playerData[playerid][pAdmin] < 2)
	    return 1;

	if (sscanf(params, "u", userid))
     	return SendClientMessage(playerid, COLOR_WHITE, "/ckcar [ไอดี/ชื่อ]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	new query[128];
	mysql_format(g_SQL, query, sizeof(query), "SELECT * FROM `vehicles` WHERE `carOwnerID` = %d", playerData[userid][pID]);
	mysql_tquery(g_SQL, query, "OnQueryFinished", "dd", playerid, THREAD_LIST_VEHICLES2);
	return 1;
}

CMD:ckstats(playerid, params[])
{
	static
	    userid;

	if (playerData[playerid][pAdmin] < 2)
	    return 1;

	if (sscanf(params, "u", userid))
     	return SendClientMessage(playerid, COLOR_WHITE, "/ckstats [ไอดี/ชื่อ]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

    static const aGender[3][10] = {"แก้ไข", "ชาย", "หญิง"};

	SendClientMessageEx(playerid, COLOR_GREEN, "|---------- {FFFFFF}(%d)%s %s{00FF00} ----------|", userid, GetPlayerNameEx(userid), ReturnDateEx());
	SendClientMessageEx(playerid, COLOR_WHITE, "เพศ: {FFFF00}[%s] {FFFFFF}เงินในตัว: {FFFF00}[%s] {FFFFFF}เงินแดง: {FFFF00}[%s] {FFFFFF}วันเดือนปีเกิด: {FFFF00}[%s]", aGender[playerData[userid][pGender]], FormatMoney(GetPlayerMoneyEx(userid)), FormatMoney(GetPlayerRedMoney(userid)), playerData[userid][pBirthday]);
	SendClientMessageEx(playerid, COLOR_WHITE, "ฆ่า: {FFFF00}[%s] {FFFFFF}ตาย: {FFFF00}[%s] {FFFFFF}น้ำ: {FFFF00}[%.3f] {FFFFFF}อาหาร: {FFFF00}[%.3f]", FormatNumber(playerData[userid][pKills]), FormatNumber(playerData[userid][pDeaths]), playerData[userid][pThirsty], playerData[userid][pHungry]);
    SendClientMessageEx(playerid, COLOR_WHITE, "เลเวล: {FFFF00}[%d] {FFFFFF}ค่าประสบการณ์: {FFFF00}[%d/%d] {FFFFFF}ชั่วโมงที่เล่น: {FFFF00}[%d] {FFFFFF}ครบชั่วโมง: {FFFF00}[%d/60]", GetPlayerLevel(userid), GetPlayerExp(userid), GetPlayerRequiredExp(userid), playerData[userid][pHours], playerData[userid][pMinutes]);
	SendClientMessageEx(playerid, COLOR_WHITE, "วันที่ลงทะเบียน: {FFFF00}[%s]", playerData[userid][pRegisterDate]);
	SendClientMessageEx(playerid, COLOR_WHITE, "เงินฝากในธนาคาร : {FFFF00}[$%s]", FormatNumber(playerData[userid][pBankMoney]));

	return 1;
}

CMD:ckrmoney(playerid, params[])
{
	static
	    userid;

	if (playerData[playerid][pAdmin] < 2)
	    return 1;

	if (sscanf(params, "u", userid))
     	return SendClientMessage(playerid, COLOR_WHITE, "/ckrmoney [ไอดี/ชื่อ]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	SendClientMessageEx(playerid, COLOR_RED, "* จำนวนเงินแดงของผู้เล่น %s คือ : $%s", GetPlayerNameEx(userid), FormatMoney(GetPlayerRedMoney(userid)));
	return 1;
}

CMD:givermoney(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new userid, amount;
        if(sscanf(params, "ud", userid, amount))
			return SendClientMessage(playerid, COLOR_WHITE, "/givermoney [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        playerData[userid][pRedMoney] += amount;

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ให้เงินแดงกับ %s(%d) จำนวน %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, FormatMoney(amount));
	}
    return 1;
}

CMD:setrmoney(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new userid, amount;
        if(sscanf(params, "ud", userid, amount))
			return SendClientMessage(playerid, COLOR_WHITE, "/setrmoney [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        SetPlayerRedMoneyEx(userid, amount);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ปรับเงินแดงให้กับ %s(%d) เหลือจำนวน %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, FormatMoney(amount));
	}
    return 1;
}

CMD:addcar(playerid, params[])
{
	new
		userid,
	    model[32],
	    query[256];

    if (playerData[playerid][pAdmin] < 4)
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "us[32]", userid, model))
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "/addcar [ไอดีผู้เล่น] [modelid/name]");

    if ((model[0] = GetVehicleModelByName(model)) == 0)
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "รุ่นไม่ถูกต้อง");

	mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', %d, 0, 100.0, '562.3970', '-1283.8485', '17.0007', '0.0000')", playerData[userid][pID], GetPlayerNameEx(userid),  model[0]);
	mysql_tquery(g_SQL, query);

	SendClientMessageEx(playerid, COLOR_ORANGE, "* คุณได้เสกรถรุ่น %s ให้กับ %s เรียบร้อยแล้ว", ReturnVehicleModelName(model[0]), GetPlayerNameEx(userid));
	SendClientMessageEx(userid, COLOR_ORANGE, "* คุณได้รับรถรุ่น %s จากแอดมิน %s เรียบร้อยแล้ว", ReturnVehicleModelName(model[0]), GetPlayerNameEx(playerid));

	return 1;
}

CMD:spec(playerid, params[])
{
	new userid;

    if (playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (!isnull(params) && !strcmp(params, "off", true))
	{
	    if (GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
			return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณยังไม่ได้เป็นผู้ชมผู้เล่น");

	    PlayerSpectatePlayer(playerid, INVALID_PLAYER_ID);
	    PlayerSpectateVehicle(playerid, INVALID_VEHICLE_ID);

		SetSpawnInfo(playerid, NO_TEAM, playerData[playerid][pSkin], playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z], playerData[playerid][pPos_A], 0, 0, 0, 0, 0, 0);
		TogglePlayerSpectating(playerid, 0);

	    return SendClientMessage(playerid, -1, "คุณไม่ได้อยู่ในโหมดผู้ชมอีกต่อไป");
	}

	if (sscanf(params, "u", userid))
		return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/spec [ไอดีผู้เล่น] - ตัวอย่าง \"/spec off\" เพื่อหยุดจากการเป็นผู้ชม");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "ผู้เล่นที่ระบุไม่ถูกต้อง");

	if (GetPlayerState(playerid) != PLAYER_STATE_SPECTATING)
	{
		GetPlayerPos(playerid, playerData[playerid][pPos_X], playerData[playerid][pPos_Y], playerData[playerid][pPos_Z]);
		GetPlayerFacingAngle(playerid, playerData[playerid][pPos_A]);

		playerData[playerid][pInterior] = GetPlayerInterior(playerid);
		playerData[playerid][pWorld] = GetPlayerVirtualWorld(playerid);
	}
	SetPlayerInterior(playerid, GetPlayerInterior(userid));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(userid));

	TogglePlayerSpectating(playerid, 1);

	if (IsPlayerInAnyVehicle(userid))
	    PlayerSpectateVehicle(playerid, GetPlayerVehicleID(userid));

	else
		PlayerSpectatePlayer(playerid, userid);

	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณกำลังชม %s (ID: %d).", GetPlayerNameEx(userid), userid);
	playerData[playerid][pSpectator] = userid;

	return 1;
}

ReturnVehicleModelName(model)
{
	new
	    name[32] = "None";

    if (model < 400 || model > 611)
	    return name;

	format(name, sizeof(name), g_arrVehicleNames[model - 400]);
	return name;
}

Dialog:DIALOG_SELL_POON(playerid, response, listitem, inputtext[])
{
	new amount = strval(inputtext), cash = amount * 100;

	if(response)
	{
	    if (Inventory_Count(playerid, "Poon") < amount)
	        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีปูนไม่เพียงพอ!");

	    if (amount <= 0)
	        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องระบุจำนวนมากกว่า 0");

        playerData[playerid][pRedMoney] += cash;
        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* [ขายปูน] : คุณได้รับเงินแดงจากการ 'ขายปูน' จำนวน '$%d'", cash);

        Inventory_Remove(playerid, "Poon", amount);
		return 1;
	}
	return 1;
}

stock CopOnline()
{
	new cop;
	foreach(new x: Player) {
		if(IsPlayerConnected(x) && GetFactionType(x) == FACTION_POLICE)
		{
		    if (playerData[x][pOnDuty] == true)
        		cop++;
		}
	}
	return cop;
}

stock MedicOnline()
{
	new cop;
	foreach(new x: Player) {
		if(IsPlayerConnected(x) && GetFactionType(x) == FACTION_MEDIC)
		{
		    if (playerData[x][pOnDuty] == true)
        		cop++;
		}
	}
	return cop;
}

stock MechanicOnline()
{
	new cop;
	foreach(new x: Player) {
		if(IsPlayerConnected(x) && GetFactionType(x) == FACTION_MEC)
		{
		    if (playerData[x][pOnDuty] == true)
        		cop++;
		}
	}
	return cop;
}

ptask RepairTimer[1000](playerid)
{
	new string[256];

	if (isRepairVehicle[playerid] == 1)
	{
		repairPoints[playerid] += 5;

		format(string, sizeof(string), "~r~Repair Car : ~w~%d/100", repairPoints[playerid]);
		GameTextForPlayer(playerid,  string, 2000, 5);

		if (repairPoints[playerid] >= 100)
		{
            isRepairVehicle[playerid] = 0;
            repairPoints[playerid] = 0;

			new Float:oX, Float:oY, Float:oZ, Float:rX, Float:rY, Float:rZ;

			GetDynamicObjectPos(TuningGate, oX, oY, oZ);
			GetDynamicObjectRot(TuningGate, rX, rY, rZ);

			MoveDynamicObject(TuningGate, oX, oY, oZ - 2.0, 1.0, rX, rY, rZ);
            RepairVehicle(GetPlayerVehicleID(playerid));

            SendClientMessage(playerid, COLOR_YELLOW, "* คุณประสบความสำเร็จในการซ่อมรถแล้ว");
            TogglePlayerControllable(playerid, 1);

            TuningStats = 0;

            //ShowPlayerSpeedo(playerid, true);
		}
		return 1;
	}
	
	if (isRepairVehicle[playerid] == 2)
	{
		repairPoints[playerid] += 5;

		format(string, sizeof(string), "~r~Fuel Car : ~w~%d/100", repairPoints[playerid]);
		GameTextForPlayer(playerid,  string, 2000, 5);

		if (repairPoints[playerid] >= 100)
		{
		    new vehicleid = GetPlayerVehicleID(playerid);
		
            isRepairVehicle[playerid] = 0;
            repairPoints[playerid] = 0;

			new userid = playerData[playerid][pMecOfferID];
			new price = playerData[playerid][pMecOfferPrice];

			vehicleFuel[vehicleid] = 100.0;

			GivePlayerMoneyEx(playerid, price);
			GivePlayerMoneyEx(userid, -price);

			SendClientMessageEx(userid, COLOR_GREEN, "[ช่าง] {FFFFFF}รถของคุณถูกเติมน้ำมันเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
			SendClientMessageEx(playerid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้รับเงินจากการเติมน้ำมันจำนวน: {00FF00}-%s", FormatMoney(price));

			playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[userid][pMecOfferPrice] = 0;
			
			playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[playerid][pMecOfferPrice] = 0;
			
			TogglePlayerControllable(playerid, 1);
		}
		return 1;
	}

	if (isRepairVehicle[playerid] == 3)
	{
		repairPoints[playerid] += 5;

		format(string, sizeof(string), "~r~Fix Car : ~w~%d/100", repairPoints[playerid]);
		GameTextForPlayer(playerid,  string, 2000, 5);

		if (repairPoints[playerid] >= 100)
		{
            isRepairVehicle[playerid] = 0;
            repairPoints[playerid] = 0;

			new userid = playerData[playerid][pMecOfferID];
			new price = playerData[playerid][pMecOfferPrice];
			
			new vehicleid = GetPlayerVehicleID(userid);
			new vehicleid2 = GetPlayerVehicleID(playerid);

			RepairVehicle(vehicleid);
			RepairVehicle(vehicleid2);

			GivePlayerMoneyEx(playerid, price);
			GivePlayerMoneyEx(userid, -price);

			SendClientMessageEx(userid, COLOR_GREEN, "[ช่าง] {FFFFFF}รถของคุณถูกซ่อมเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
			SendClientMessageEx(playerid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้รับเงินจากการซ่อมรถจำนวน: {00FF00}-%s", FormatMoney(price));

			playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[userid][pMecOfferPrice] = 0;

			playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
			playerData[playerid][pMecOfferPrice] = 0;
			
			TogglePlayerControllable(playerid, 1);
		}
		return 1;
	}

	return 1;
}

CMD:chm(playerid, params[])
{
    new
	    userid;

	if (GetFactionType(playerid) == FACTION_POLICE)
	{
		if (sscanf(params, "u", userid))
		    return SendClientMessage(playerid, COLOR_WHITE, "การใช้งาน : /chm [ไอดี/ชื่อ]");

		if (userid == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

		new Float:x,
			Float:y,
			Float:z;

		GetPlayerPos(userid, x, y, z);
	 	SetPlayerCheckpoint(playerid, x, y, z, 3.0);

	  	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้ค้นหาตำแหน่งของ %s แล้ว ))", GetPlayerNameEx(userid));
	  	SendClientMessageEx(playerid, -1, "* ตำแหน่ง %s ถูกแสดงบนพิกัดแผนที่แล้ว", GetPlayerNameEx(userid));
	}

	if (GetFactionType(playerid) == FACTION_MEDIC)
	{
		if (sscanf(params, "u", userid))
		    return SendClientMessage(playerid, COLOR_WHITE, "การใช้งาน : /chm [ไอดี/ชื่อ]");

		if (userid == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

		new Float:x,
			Float:y,
			Float:z;

		GetPlayerPos(userid, x, y, z);
	 	SetPlayerCheckpoint(playerid, x, y, z, 3.0);

	  	SendClientMessageEx(playerid, COLOR_LIGHTRED, "* คุณได้ค้นหาตำแหน่งของ %s แล้ว ))", GetPlayerNameEx(userid));
	  	SendClientMessageEx(playerid, -1, "* ตำแหน่ง %s ถูกแสดงบนพิกัดแผนที่แล้ว", GetPlayerNameEx(userid));
	}

	if (GetFactionType(playerid) == FACTION_MEC)
	{
		if (sscanf(params, "u", userid))
		    return SendClientMessage(playerid, COLOR_WHITE, "การใช้งาน : /chm [ไอดี/ชื่อ]");

		if (userid == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

		new Float:x,
			Float:y,
			Float:z;

		GetPlayerPos(userid, x, y, z);
	 	SetPlayerCheckpoint(playerid, x, y, z, 3.0);

	  	SendClientMessageEx(playerid, COLOR_ORANGE, "* คุณได้ค้นหาตำแหน่งของ %s แล้ว ))", GetPlayerNameEx(userid));
	  	SendClientMessageEx(playerid, -1, "* ตำแหน่ง %s ถูกแสดงบนพิกัดแผนที่แล้ว", GetPlayerNameEx(userid));
	}
	return 1;
}

Dialog:DIALOG_MECHANIC2(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	new string[256];
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				if (!IsPlayerInAnyVehicle(userid) && GetPlayerState(userid) != PLAYER_STATE_DRIVER)
				{
					playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
					playerData[userid][pMecOfferPrice] = 0;
					playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
					playerData[playerid][pMecOfferPrice] = 0;
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นต้องอยู่ในรถ สถานะคนขับ");
					return 1;
				}
				format(string, sizeof string, "{FFFFFF}ตอบรับการเติมน้ำมันจากช่าง %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
		        Dialog_Show(userid, DIALOG_ACCEPT23, DIALOG_STYLE_INPUT, "[ยืนยัน]", string, "ยืนยัน", "ปิด");
			}
		}
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_ACCEPT23(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	//new price = playerData[playerid][pMecOfferPrice];
	if (response)
	{
		/*RepairVehicle(GetPlayerVehicleID(playerid));
		GivePlayerMoneyEx(playerid, -price);
		GivePlayerMoneyEx(userid, price);
		SendClientMessageEx(playerid, COLOR_GREEN, "[ช่าง] {FFFFFF}รถของคุณถูกเติมน้ำมันเป็นที่เรียบร้อย ราคารวม: {FF0000}-%s", FormatMoney(price));
		SendClientMessageEx(userid, COLOR_GREEN, "[ช่าง] {FFFFFF}คุณได้รับเงินจากการเติมน้ำมันจำนวน: {00FF00}-%s", FormatMoney(price));
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;*/
		
		TogglePlayerControllable(userid, 0);
		isRepairVehicle[userid] = 2;
		SendClientMessage(userid, COLOR_ORANGE, "* คุณได้เริ่มต้นการเติมน้ำมันให้กับรถแล้ว > กรุณารอสักครู่");
		SendClientMessage(playerid, COLOR_YELLOW, "* ช่างได้เริ่มเติมน้ำมันให้กับรถของคุณแล้ว > กรุณารอสักครู่");
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

CMD:fuel(playerid, params[])
{
	static
	    userid, price;

    if (GetFactionType(playerid) != FACTION_MEC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ช่าง!");

    if (sscanf(params, "ud", userid, price))
	    return SendClientMessage(playerid, COLOR_WHITE, "/fuel [ไอดี/ชื่อ] [จำนวนเงิน]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถซ่อมให้ตัวเองได้");

	if (price < 500 || price > 1000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาต้องไม่ต่ำกว่า $500 และไม่เกิน $1,000");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerMoneyEx(userid) < price)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นมีเงินไม่เพียงพอ");

	if (GetPlayerState(userid) != PLAYER_STATE_DRIVER)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นต้องอยู่ในสถานะคนขับ");

	playerData[playerid][pMecOfferID] = userid;
	playerData[playerid][pMecOfferPrice] = price;
	playerData[userid][pMecOfferID] = playerid;
	playerData[userid][pMecOfferPrice] = price;
	Dialog_Show(playerid, DIALOG_MECHANIC2, DIALOG_STYLE_LIST, "[รายการเติมน้ำมัน]", "เติมน้ำมัน", "ตกลง", "ปิด");
	return 1;
}

Dialog:DIALOG_MECHANIC(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	new price = playerData[playerid][pMecOfferPrice];
	new string[256];
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				Dialog_Show(playerid, DIALOG_COLOR11, DIALOG_STYLE_INPUT, "[เลือกสี]", "{FFFFFF}เลือกสีที่ต้องการ 0-255 (สีที่ 1)", "ตกลง", "กลับ");
			}
		    case 1:
		    {
				if (!IsPlayerInAnyVehicle(userid) && GetPlayerState(userid) != PLAYER_STATE_DRIVER)
				{
					playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
					playerData[userid][pMecOfferPrice] = 0;
					playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
					playerData[playerid][pMecOfferPrice] = 0;
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นต้องอยู่ในรถ สถานะคนขับ");
					return 1;
				}
				format(string, sizeof string, "{FFFFFF}ตอบรับการซ่อมรถจากช่าง %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
		        Dialog_Show(userid, DIALOG_ACCEPT22, DIALOG_STYLE_INPUT, "[ยืนยัน]", string, "ยืนยัน", "ปิด");
			}
		}
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

Dialog:DIALOG_ACCEPT22(playerid, response, listitem, inputtext[])
{
	new userid = playerData[playerid][pMecOfferID];
	//new price = playerData[playerid][pMecOfferPrice];
	if (response)
	{
		TogglePlayerControllable(userid, 0);
		isRepairVehicle[userid] = 3;
		SendClientMessage(userid, COLOR_ORANGE, "* คุณได้เริ่มต้นการซ่อมรถให้กับรถแล้ว > กรุณารอสักครู่");
		SendClientMessage(playerid, COLOR_YELLOW, "* ช่างได้เริ่มซ่อมรถให้กับรถของคุณแล้ว > กรุณารอสักครู่");
	}
	else
	{
		playerData[userid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[userid][pMecOfferPrice] = 0;
		playerData[playerid][pMecOfferID] = INVALID_PLAYER_ID;
		playerData[playerid][pMecOfferPrice] = 0;
	}
	return 1;
}

alias:mechanic("ซ่อม")
CMD:mechanic(playerid, params[])
{
	static
	    userid, price;

    if (GetFactionType(playerid) != FACTION_MEC)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่ใช่ช่าง!");

    if (sscanf(params, "ud", userid, price))
	    return SendClientMessage(playerid, COLOR_WHITE, "/mechanic [ไอดี/ชื่อ] [จำนวนเงิน]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

	if (userid == playerid)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถซ่อมให้ตัวเองได้");

	if (price < 500 || price > 3000)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ราคาต้องไม่ต่ำกว่า $500 และไม่เกิน $3,000");

	if (!IsPlayerNearPlayer(playerid, userid, 5.0))
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

	if (GetPlayerMoneyEx(userid) < price)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นมีเงินไม่เพียงพอ");

	if (GetPlayerState(userid) != PLAYER_STATE_DRIVER)
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นต้องอยู่ในสถานะคนขับ");

	playerData[playerid][pMecOfferID] = userid;
	playerData[playerid][pMecOfferPrice] = price;
	playerData[userid][pMecOfferID] = playerid;
	playerData[userid][pMecOfferPrice] = price;
	Dialog_Show(playerid, DIALOG_MECHANIC, DIALOG_STYLE_LIST, "[รายการซ่อม]", "เปลี่ยนสี\nซ่อมรถ", "ตกลง", "ปิด");
	return 1;
}

Dialog:DIALOG_CRAFT_ITEM(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		switch(listitem)
  		{
			case 0:
			{
				if (Inventory_Count(playerid, "Fuel Can") >= 1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีถังน้ำมันสูงสุดแล้ว");

				if (playerData[playerid][pLevel] < 3)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Level มากกว่า 3");

				if (Inventory_Count(playerid, "Coal Ore") < 1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี แร่ถ่านหิน มากกว่า 1");

				Inventory_Remove(playerid, "Coal Ore", 1);
				Inventory_Add(playerid, "Fuel Can", 1);

				SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้รับ 'ถังน้ำมัน' + 1 จากการคราฟสิ่งของ");
				return 1;
			}
			case 1:
			{
				if (Inventory_Count(playerid, "Medic Kit") >= 1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมี Medic Kit สูงสุดแล้ว");

				if (playerData[playerid][pLevel] < 5)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Level มากกว่า 5");

				if (Inventory_Count(playerid, "Shell") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี หอย มากกว่า 20");

				if (Inventory_Count(playerid, "Woods") < 15)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ท่อนซุง มากกว่า 15");

				Inventory_Remove(playerid, "Shell", 20);
				Inventory_Remove(playerid, "Woods", 20);
				Inventory_Add(playerid, "Medic Kit", 1);

				SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้รับ 'Medic Kit' + 1 จากการคราฟสิ่งของ");
				return 1;
			}
			case 2:
			{
				if (Inventory_Count(playerid, "VehicleBox") >= 1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมี กล่องซ่อมรถ สูงสุดแล้ว");

				if (playerData[playerid][pLevel] < 5)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Level มากกว่า 5");

				if (Inventory_Count(playerid, "Shell") < 10)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี หอย มากกว่า 10");

				if (Inventory_Count(playerid, "Hematite") < 10)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี แร่เฮมาไทต์ มากกว่า 10");

				if (Inventory_Count(playerid, "Rock Salt") < 5)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี แร่หินเกลือ มากกว่า 5");

				if (Inventory_Count(playerid, "Woods") < 10)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ท่อนซุง มากกว่า 10");

				Inventory_Remove(playerid, "Shell", 10);
				Inventory_Remove(playerid, "Hematite", 10);
				Inventory_Remove(playerid, "Rock Salt", 5);
				Inventory_Remove(playerid, "Woods", 10);
				Inventory_Add(playerid, "VehicleBox", 1);

				SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้รับ 'กล่องซ่อมรถ' + 1 จากการคราฟสิ่งของ");
				return 1;
			}
			case 3:
			{
				if (playerData[playerid][pLevel] < 10)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Level มากกว่า 10");

				if (Inventory_Count(playerid, "Shark") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ปลาฉลาม มากกว่า 20");

				if (Inventory_Count(playerid, "Stingray") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ปลากระเบน มากกว่า 20");

				if (Inventory_Count(playerid, "Uranium Ore") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี แร่ยูเรเนียม มากกว่า 20");

				if (Inventory_Count(playerid, "Coal Ore") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี แร่ถ่านหิน มากกว่า 20");

				Inventory_Remove(playerid, "Shark", 20);
				Inventory_Remove(playerid, "Stingray", 20);
				Inventory_Remove(playerid, "Uranium Ore", 20);
				Inventory_Remove(playerid, "Coal Ore", 20);
				Inventory_Add(playerid, "Kachapong", 1);

				SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้รับ 'กาชาปอง' + 1 จากการคราฟสิ่งของ");
				return 1;
			}
		}
	}
	return 1;
}


Dialog:DIALOG_CRAFT_FOOD(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		switch(listitem)
  		{
			/*case 0:
			{
				if (playerData[playerid][pLevel] < 2)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Level มากกว่า 2");

				if (Inventory_Count(playerid, "Chicken") < 2)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี เนื้อไก่ มากกว่า 2");
				    
				Inventory_Remove(playerid, "Chicken", 2);
				Inventory_Add(playerid, "Pizza", 1);
				
				SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้รับ 'พิซซ่า' + 1 จากการทำอาหาร");
				return 1;
			}*/
			case 0:
			{
				if (playerData[playerid][pLevel] < 5)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Level มากกว่า 5");

				if (Inventory_Count(playerid, "Beef") < 4)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี เนื้อวัว มากกว่า 4");

				Inventory_Remove(playerid, "Beef", 4);
				Inventory_Add(playerid, "Wagyu Steak", 1);

				SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้รับ 'สเต็กวากิว' + 1 จากการทำอาหาร");
				return 1;
			}
			case 1:
			{
				if (playerData[playerid][pLevel] < 10)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Level มากกว่า 10");

				if (Inventory_Count(playerid, "Salmon") < 5)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ปลาแซลม่อน มากกว่า 5");

				Inventory_Remove(playerid, "Salmon", 5);
				Inventory_Add(playerid, "Sushi", 1);

				SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้รับ 'ซูชิ' + 1 จากการทำอาหาร");
				return 1;
			}
			/*case 3:
			{
				Inventory_Add(playerid, "Water Bottle", 1);
				SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้รับ 'น้ำเปล่า' + 1 จากการทำอาหาร");
				return 1;
			}*/
			case 2:
			{
				if (playerData[playerid][pLevel] < 5)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Level มากกว่า 5");

				if (Inventory_Count(playerid, "Orange") < 4)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ส้ม มากกว่า 4");

				Inventory_Remove(playerid, "Orange", 4);
				Inventory_Add(playerid, "Orange Juice", 1);

				SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้รับ 'น้ำส้ม' + 1 จากการทำอาหาร");
				return 1;
			}
			case 3:
			{
				if (playerData[playerid][pLevel] < 10)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Level มากกว่า 10");

				if (Inventory_Count(playerid, "Apple") < 5)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี แอปเปิ้ล มากกว่า 5");

				Inventory_Remove(playerid, "Apple", 5);
				Inventory_Add(playerid, "Apple Juice", 1);

				SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้รับ 'น้ำแอปเปิ้ล' + 1 จากการทำอาหาร");
				return 1;
			}
			
			case 4:
			{
				if (playerData[playerid][pLevel] < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Level มากกว่า 20");

				if (Inventory_Count(playerid, "Chicken") < 5)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี เนื้อไก่ มากกว่า 5");

				if (Inventory_Count(playerid, "กระเพา") < 5)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี กระเพา มากกว่า 5");

				Inventory_Remove(playerid, "Chicken", 5);
				Inventory_Remove(playerid, "กระเพา", 5);
				
				Inventory_Add(playerid, "Chicken Basil", 1);

				SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้รับ 'กะเพาไก่' + 1 จากการทำอาหาร");
				return 1;
			}
			case 5:
			{
				if (playerData[playerid][pLevel] < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Level มากกว่า 20");

				if (Inventory_Count(playerid, "มะเขือเทศ") < 4)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี มะเขือเทศ มากกว่า 4");

				Inventory_Remove(playerid, "มะเขือเทศ", 4);
				Inventory_Add(playerid, "Tomato Juice", 1);

				SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้รับ 'น้ำมะเขือเทศ' + 1 จากการทำอาหาร");
				return 1;
			}

		}
	}
	return 1;
}

Dialog:DIALOG_CRAFT(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		switch(listitem)
  		{
			case 0:
			{
			    WeaponType[playerid] = 1;
				Dialog_Show(playerid,DIALOG_CRAFT_2,DIALOG_STYLE_MSGBOX,"{FFFFFF}[{16D603}สนับมือ{FFFFFF}]", "{3CD606}อาวุธ > สนับมือ\n\n{FFFFFF}- ปูน 5 กระสอบ\n-แร่เฮมาไทต์ 20 อัน\n- เงินแดง $5,000\n- เงินเขียว $10,000\n\n{6BF939}โอกาสสำเร็จ : 60%", "ตกลง", "ยกเลิก");
			}
			case 1:
			{   WeaponType[playerid] = 2;
				Dialog_Show(playerid,DIALOG_CRAFT_2,DIALOG_STYLE_MSGBOX,"{FFFFFF}[{16D603}Dildo{FFFFFF}]", "{3CD606}อาวุธ > Dildo\n\n{FFFFFF}- ปูน 5 กระสอบ\n-แร่หินเกลือ 20 อัน\n- เงินแดง $6,000\n- เงินเขียว $12,000\n\n{6BF939}โอกาสสำเร็จ : 50%", "ตกลง", "ยกเลิก");
			}
			case 2:
			{
			    WeaponType[playerid] = 3;
				Dialog_Show(playerid,DIALOG_CRAFT_2,DIALOG_STYLE_MSGBOX,"{FFFFFF}[{16D603}ไม้เบสบอล{FFFFFF}]", "{3CD606}อาวุธ > ไม้เบสบอล\n\n{FFFFFF}- ปูน 10 กระสอบ\n-ท่อนซุง 20 อัน\n- เงินแดง $8,000\n- เงินเขียว $16,000\n\n{6BF939}โอกาสสำเร็จ : 40%", "ตกลง", "ยกเลิก");
			}
			case 3:
			{
			    WeaponType[playerid] = 4;
				Dialog_Show(playerid,DIALOG_CRAFT_2,DIALOG_STYLE_MSGBOX,"{FFFFFF}[{16D603}Shovel{FFFFFF}]", "{3CD606}อาวุธ > Shovel\n\n{FFFFFF}- ปูน 15 กระสอบ\n-แร่ถ่านหิน 20 อัน\n- เงินแดง $10,000\n- เงินเขียว $20,000\n\n{6BF939}โอกาสสำเร็จ : 30%", "ตกลง", "ยกเลิก");
			}
			case 4:
			{
			    WeaponType[playerid] = 5;
				Dialog_Show(playerid,DIALOG_CRAFT_2,DIALOG_STYLE_MSGBOX,"{FFFFFF}[{16D603}ไม้กอล์ฟ{FFFFFF}]", "{3CD606}อาวุธ > ไม้กอล์ฟ\n\n{FFFFFF}- ปูน 20 กระสอบ\n-แร่ยูเรเนียม 20 อัน\n- เงินแดง $15,000\n- เงินเขียว $30,000\n\n{6BF939}โอกาสสำเร็จ : 20%", "ตกลง", "ยกเลิก");
			}
		}
	}
	return 1;
}

Dialog:DIALOG_CRAFT_2(playerid, response, listitem, inputtext[])
{
	if(response)
	{
	    switch(WeaponType[playerid])
	    {
	        case 0: return 1;
	        case 1:
	        {
	            if (Inventory_Count(playerid, "Poon") < 5)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีปูนไม่เพียงพอ (5)");

	            if (Inventory_Count(playerid, "Hematite") < 20)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีแร่เฮมาไทต์ไม่เพียงพอ (20)");

	            if (playerData[playerid][pRedMoney] < 5000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินแดงไม่เพียงพอ ($5,000)");

	            if (GetPlayerMoneyEx(playerid) < 10000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินเขียวไม่เพียงพอ ($10,000)");

				new success = random(100);
				switch (success)
				{
				    case 0..60:
				    {
				        Inventory_Add(playerid, "Brass Knuckles", 1);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้คราฟอาวุธ 'สนับมือ' สำเร็จ!");
				    }
				    case 61..99:
				    {
				        SendClientMessage(playerid, COLOR_RED, "* คุณล้มเหลว! ในการสร้างอาวุธ 'สนับมือ'");
				    }
				}
				
				Inventory_Remove(playerid, "Poon", 5);
				Inventory_Remove(playerid, "Hematite", 20);
				playerData[playerid][pRedMoney] -= 5000;
				GivePlayerMoneyEx(playerid, -10000);
				WeaponType[playerid] = 0;
				return 1;
	        }
	        case 2:
	        {
	            if (Inventory_Count(playerid, "Poon") < 5)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีปูนไม่เพียงพอ (5)");

	            if (Inventory_Count(playerid, "Rock Salt") < 20)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีแร่หินเกลือไม่เพียงพอ (20)");

	            if (playerData[playerid][pRedMoney] < 6000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินแดงไม่เพียงพอ ($6,000)");

	            if (GetPlayerMoneyEx(playerid) < 12000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินเขียวไม่เพียงพอ ($12,000)");

				new success = random(100);
				switch (success)
				{
				    case 0..50:
				    {
				        Inventory_Add(playerid, "Dildo", 1);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้คราฟอาวุธ 'Dildo' สำเร็จ!");
				    }
				    case 51..99:
				    {
				        SendClientMessage(playerid, COLOR_RED, "* คุณล้มเหลว! ในการสร้างอาวุธ 'Dildo'");
				    }
				}

				Inventory_Remove(playerid, "Poon", 5);
				Inventory_Remove(playerid, "Rock Salt", 20);
				playerData[playerid][pRedMoney] -= 6000;
				GivePlayerMoneyEx(playerid, -12000);
				WeaponType[playerid] = 0;
				return 1;
	        }
	        case 3:
			{
	            if (Inventory_Count(playerid, "Poon") < 10)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีปูนไม่เพียงพอ (10)");

	            if (Inventory_Count(playerid, "Woods") < 20)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีท่อนซุงไม่เพียงพอ (20)");

	            if (playerData[playerid][pRedMoney] < 8000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินแดงไม่เพียงพอ ($8,000)");

	            if (GetPlayerMoneyEx(playerid) < 16000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินเขียวไม่เพียงพอ ($16,000)");

				new success = random(100);
				switch (success)
				{
				    case 0..40:
				    {
				        Inventory_Add(playerid, "Baseball Bat", 1);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้คราฟอาวุธ 'ไม้เบสบอล' สำเร็จ!");
				    }
				    case 41..99:
				    {
				        SendClientMessage(playerid, COLOR_RED, "* คุณล้มเหลว! ในการสร้างอาวุธ 'ไม้เบสบอล'");
				    }
				}

				Inventory_Remove(playerid, "Poon", 10);
				Inventory_Remove(playerid, "Woods", 20);
				playerData[playerid][pRedMoney] -= 8000;
				GivePlayerMoneyEx(playerid, -16000);
				WeaponType[playerid] = 0;
				return 1;
			}
			case 4:
			{
	            if (Inventory_Count(playerid, "Poon") < 15)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีปูนไม่เพียงพอ (15)");

	            if (Inventory_Count(playerid, "Coal Ore") < 20)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีแร่ถ่านหินไม่เพียงพอ (20)");

	            if (playerData[playerid][pRedMoney] < 10000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินแดงไม่เพียงพอ ($10,000)");

	            if (GetPlayerMoneyEx(playerid) < 20000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินเขียวไม่เพียงพอ ($20,000)");

				new success = random(100);
				switch (success)
				{
				    case 0..30:
				    {
				        Inventory_Add(playerid, "Shovel", 1);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้คราฟอาวุธ 'Shovel' สำเร็จ!");
				    }
				    case 31..99:
				    {
				        SendClientMessage(playerid, COLOR_RED, "* คุณล้มเหลว! ในการสร้างอาวุธ 'Shovel'");
				    }
				}

				Inventory_Remove(playerid, "Poon", 15);
				Inventory_Remove(playerid, "Coal Ore", 20);
				playerData[playerid][pRedMoney] -= 10000;
				GivePlayerMoneyEx(playerid, -20000);
				WeaponType[playerid] = 0;
				return 1;
			}
			case 5:
			{
	            if (Inventory_Count(playerid, "Poon") < 20)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีปูนไม่เพียงพอ (20)");

	            if (Inventory_Count(playerid, "Uranium Ore") < 20)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีแร่ยูเรเนียมไม่เพียงพอ (20)");

	            if (playerData[playerid][pRedMoney] < 15000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินแดงไม่เพียงพอ ($15,000)");

	            if (GetPlayerMoneyEx(playerid) < 30000)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีเงินเขียวไม่เพียงพอ ($30,000)");

				new success = random(100);
				switch (success)
				{
				    case 0..20:
				    {
						Inventory_Add(playerid, "Golf Club", 1);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้คราฟอาวุธ 'ไม้กอล์ฟ' สำเร็จ!");
				    }
				    case 21..99:
				    {
				        SendClientMessage(playerid, COLOR_RED, "* คุณล้มเหลว! ในการสร้างอาวุธ 'ไม้กอล์ฟ'");
				    }
				}

				Inventory_Remove(playerid, "Poon", 20);
				Inventory_Remove(playerid, "Uranium Ore", 20);
				playerData[playerid][pRedMoney] -= 15000;
				GivePlayerMoneyEx(playerid, -30000);
				WeaponType[playerid] = 0;
				return 1;
			}
	    }
	}
	return 1;
}

/*CMD:wp(playerid, params[])
{
	new weaponid = GetPlayerWeapon(playerid);
	
	if (IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องไม่อยู่ในรถส่วนตัว");
	if (weaponid == 0)
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องถืออาวุธก่อน");
	    
	if (warJoin[playerid] == 1)
		return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ในกิจกรรมไม่สามารถเก็บอาวุธได้!");
	    
	switch (weaponid)
	{
	    case 1:
	    {
		    playerData[playerid][pTazer] = 0;
			RemovePlayerWeapon(playerid, weaponid);
			Inventory_Add(playerid, "Brass Knuckles", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บอาวุธเข้ากระเป๋า", GetPlayerNameEx(playerid));
	    }
	    case 31:
	    {
		    playerData[playerid][pTazer] = 0;
			RemovePlayerWeapon(playerid, weaponid);
			Inventory_Add(playerid, "M4", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บอาวุธเข้ากระเป๋า", GetPlayerNameEx(playerid));
	    }
	    case 29:
	    {
		    playerData[playerid][pTazer] = 0;
			RemovePlayerWeapon(playerid, weaponid);
			Inventory_Add(playerid, "MP5", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บอาวุธเข้ากระเป๋า", GetPlayerNameEx(playerid));
	    }
	    case 4:
	    {
		    playerData[playerid][pTazer] = 0;
			RemovePlayerWeapon(playerid, weaponid);
			Inventory_Add(playerid, "Knife", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บอาวุธเข้ากระเป๋า", GetPlayerNameEx(playerid));
	    }
	    case 8:
	    {
		    playerData[playerid][pTazer] = 0;
			RemovePlayerWeapon(playerid, weaponid);
			Inventory_Add(playerid, "Katana", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บอาวุธเข้ากระเป๋า", GetPlayerNameEx(playerid));
	    }
	    case 6:
	    {
		    playerData[playerid][pTazer] = 0;
			RemovePlayerWeapon(playerid, weaponid);
			Inventory_Add(playerid, "Shovel", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บอาวุธเข้ากระเป๋า", GetPlayerNameEx(playerid));
	    }
	    case 14:
	    {
		    playerData[playerid][pTazer] = 0;
			RemovePlayerWeapon(playerid, weaponid);
			Inventory_Add(playerid, "Flower", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บอาวุธเข้ากระเป๋า", GetPlayerNameEx(playerid));
	    }
	    case 10:
	    {
		    playerData[playerid][pTazer] = 0;
			RemovePlayerWeapon(playerid, weaponid);
			Inventory_Add(playerid, "Dildo", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บอาวุธเข้ากระเป๋า", GetPlayerNameEx(playerid));
	    }
	    case 7:
	    {
		    playerData[playerid][pTazer] = 0;
			RemovePlayerWeapon(playerid, weaponid);
			Inventory_Add(playerid, "Pool Cue", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บอาวุธเข้ากระเป๋า", GetPlayerNameEx(playerid));
	    }
	    case 2:
	    {
		    playerData[playerid][pTazer] = 0;
			RemovePlayerWeapon(playerid, weaponid);
			Inventory_Add(playerid, "Golf Club", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บอาวุธเข้ากระเป๋า", GetPlayerNameEx(playerid));
	    }
	    case 5:
	    {
		    playerData[playerid][pTazer] = 0;
			RemovePlayerWeapon(playerid, weaponid);
			Inventory_Add(playerid, "Baseball Bat", 1);
		    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เก็บอาวุธเข้ากระเป๋า", GetPlayerNameEx(playerid));
	    }
	}
	return 1;
}*/

alias:vtrunk("เก็บของในรถ")
CMD:vtrunk(playerid, params[])
{
	new vehicleid = GetNearbyVehicle(playerid);

	if(vehicleid != INVALID_VEHICLE_ID && IsVehicleOwner(playerid, vehicleid))
	{
		new string100[4096];
		new string2[4096];

		format(string100, sizeof(string100), "{FFFFFF}[สิ่งของ]\t{35C005}[{6BF939}จำนวน{35C005}]\n");
		strcat(string2,string100);

		format(string100, sizeof(string100), "{FFFFFF}ปูน\t{16D603}[{FFFFFF}%d/20{16D603}]\n", carData[vehicleid][carPoon]);
		strcat(string2,string100);

		format(string100, sizeof(string100), "{FFFFFF}กัญชา\t{16D603}[{FFFFFF}%d/30{16D603}]\n", carData[vehicleid][carCannabis]);
		strcat(string2,string100);

		format(string100, sizeof(string100), "{FFFFFF}โคเคน\t{16D603}[{FFFFFF}%d/30{16D603}]\n", carData[vehicleid][carCocain]);
		strcat(string2,string100);

		format(string100, sizeof(string100), "{FFFFFF}เงินแดง\t{16D603}[{FFFFFF}$%d/$20,000{16D603}]\n", carData[vehicleid][carRedMoney]);
		strcat(string2,string100);

		Dialog_Show(playerid,DIALOG_TRUNK,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{16D603}เก็บของภายในรถ{FFFFFF}]",string2,"ตกลง","ยกเลิก");
        VehicleType[playerid] = vehicleid;
        
		return 1;
	}
	return 1;
}

Dialog:DIALOG_TRUNK(playerid, response, listitem, inputtext[])
{
	if(response)
	{
	    switch(listitem)
	    {
	        case 0: Dialog_Show(playerid,DIALOG_TRUNK_1,DIALOG_STYLE_LIST,"{FFFFFF}[{16D603}เก็บของภายในรถ{FFFFFF}]","{FFFFFF}- ฝากของเข้าภายในรถ\n- นำของออกมาจากรถ","ตกลง","ยกเลิก");
			case 1: Dialog_Show(playerid,DIALOG_TRUNK_1,DIALOG_STYLE_LIST,"{FFFFFF}[{16D603}เก็บของภายในรถ{FFFFFF}]","{FFFFFF}- ฝากของเข้าภายในรถ\n- นำของออกมาจากรถ","ตกลง","ยกเลิก");
			case 2: Dialog_Show(playerid,DIALOG_TRUNK_1,DIALOG_STYLE_LIST,"{FFFFFF}[{16D603}เก็บของภายในรถ{FFFFFF}]","{FFFFFF}- ฝากของเข้าภายในรถ\n- นำของออกมาจากรถ","ตกลง","ยกเลิก");
			case 3: Dialog_Show(playerid,DIALOG_TRUNK_1,DIALOG_STYLE_LIST,"{FFFFFF}[{16D603}เก็บของภายในรถ{FFFFFF}]","{FFFFFF}- ฝากของเข้าภายในรถ\n- นำของออกมาจากรถ","ตกลง","ยกเลิก");
	    }
	    WeaponType[playerid] = listitem+1;
	}
	return 1;
}

Dialog:DIALOG_TRUNK_1(playerid, response, listitem, inputtext[])
{
	if(response)
	{
	    switch(listitem)
	    {
	        case 0: Dialog_Show(playerid,DIALOG_TRUNK_2,DIALOG_STYLE_INPUT,"{FFFFFF}[{16D603}เก็บของภายในรถ{FFFFFF}]","{FFFFFF}กรุณาระบุจำนวนที่คุณต้องการจะเก็บเข้าภายในรถ :","ตกลง","ยกเลิก");
	        case 1: Dialog_Show(playerid,DIALOG_TRUNK_3,DIALOG_STYLE_INPUT,"{FFFFFF}[{16D603}เก็บของภายในรถ{FFFFFF}]","{FFFFFF}กรุณาระบุจำนวนที่คุณต้องการจะออกมาจากรถ :","ตกลง","ยกเลิก");
		}
	}
	return 1;
}

Dialog:DIALOG_TRUNK_2(playerid, response, listitem, inputtext[])
{
	new amount = strval(inputtext), vehicleid = VehicleType[playerid], query[256];
	if(response)
	{
	    switch (WeaponType[playerid])
	    {
	        case 0: return 1;
	        case 1:
	        {
			    if (amount <= 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

				if (carData[vehicleid][carPoon] >= 20)
				{
				    carData[vehicleid][carPoon] = 20;

				    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPoon = %d WHERE carID = %d", carData[vehicleid][carPoon], carData[vehicleid][carID]);
				    mysql_tquery(g_SQL, query);

				    SendClientMessage(playerid, COLOR_LIGHTRED, "* รถคุณมีจำนวนปูนสูงสุดแล้ว (20)");
				    return 1;
				}

			    if (Inventory_Count(playerid, "Poon") < amount)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีจำนวนปูนไม่เพียงพอ!");

				Inventory_Remove(playerid, "Poon", amount);
				carData[vehicleid][carPoon] += amount;
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้นำ 'ปูน' เข้าไปเก็บภายในรถ จำนวน %d เรียบร้อยแล้ว", amount);

			    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPoon = %d WHERE carID = %d", carData[vehicleid][carPoon], carData[vehicleid][carID]);
			    mysql_tquery(g_SQL, query);

				WeaponType[playerid] = 0;
                VehicleType[playerid] = -1;
			}
	        case 2:
	        {
			    if (amount <= 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

				if (carData[vehicleid][carCannabis] >= 30)
				{
				    carData[vehicleid][carCannabis] = 30;

				    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carCannabis = %d WHERE carID = %d", carData[vehicleid][carCannabis], carData[vehicleid][carID]);
				    mysql_tquery(g_SQL, query);

				    SendClientMessage(playerid, COLOR_LIGHTRED, "* รถคุณมีจำนวนกัญชาสูงสุดแล้ว (30)");
				    return 1;
				}

			    if (Inventory_Count(playerid, "Cannabis") < amount)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีจำนวนกัญชาไม่เพียงพอ!");

				Inventory_Remove(playerid, "Cannabis", amount);
				carData[vehicleid][carCannabis] += amount;
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้นำ 'กัญชา' เข้าไปเก็บภายในรถ จำนวน %d เรียบร้อยแล้ว", amount);

			    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carCannabis = %d WHERE carID = %d", carData[vehicleid][carCannabis], carData[vehicleid][carID]);
			    mysql_tquery(g_SQL, query);

				WeaponType[playerid] = 0;
                VehicleType[playerid] = -1;
			}
	        case 3:
	        {
			    if (amount <= 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

				if (carData[vehicleid][carCocain] >= 30)
				{
				    carData[vehicleid][carCocain] = 30;

				    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carCocain = %d WHERE carID = %d", carData[vehicleid][carCocain], carData[vehicleid][carID]);
				    mysql_tquery(g_SQL, query);

				    SendClientMessage(playerid, COLOR_LIGHTRED, "* รถคุณมีจำนวนโคเคนสูงสุดแล้ว (30)");
				    return 1;
				}

			    if (Inventory_Count(playerid, "Cocain") < amount)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีจำนวนโคเคนไม่เพียงพอ!");

				Inventory_Remove(playerid, "Cocain", amount);
				carData[vehicleid][carCocain] += amount;
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้นำ 'โคเคน' เข้าไปเก็บภายในรถ จำนวน %d เรียบร้อยแล้ว", amount);

			    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carCocain = %d WHERE carID = %d", carData[vehicleid][carCocain], carData[vehicleid][carID]);
			    mysql_tquery(g_SQL, query);

				WeaponType[playerid] = 0;
                VehicleType[playerid] = -1;
			}
	        case 4:
	        {
			    if (amount <= 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

				if (carData[vehicleid][carRedMoney] >= 20000)
				{
				    carData[vehicleid][carRedMoney] = 20000;

				    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carRedMoney = %d WHERE carID = %d", carData[vehicleid][carRedMoney], carData[vehicleid][carID]);
				    mysql_tquery(g_SQL, query);

				    SendClientMessage(playerid, COLOR_LIGHTRED, "* รถคุณมีจำนวนเงินแดงสูงสุดแล้ว ($20,000)");
				    return 1;
				}

			    if (playerData[playerid][pRedMoney] < amount)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีจำนวนเงินแดงไม่เพียงพอ!");

				playerData[playerid][pRedMoney] -= amount;
				carData[vehicleid][carRedMoney] += amount;
				SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้นำ 'เงินแดง' เข้าไปเก็บภายในรถ จำนวน %d เรียบร้อยแล้ว", amount);

			    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carRedMoney = %d WHERE carID = %d", carData[vehicleid][carRedMoney], carData[vehicleid][carID]);
			    mysql_tquery(g_SQL, query);

				WeaponType[playerid] = 0;
                VehicleType[playerid] = -1;
			}
		}
	}
	return 1;
}

Dialog:DIALOG_TRUNK_3(playerid, response, listitem, inputtext[])
{
	new amount = strval(inputtext), vehicleid = VehicleType[playerid], query[256];
	if(response)
	{
	    switch (WeaponType[playerid])
	    {
	        case 0: return 1;
	        case 1:
	        {
			    if (amount <= 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

			    if (carData[vehicleid][carPoon] < amount)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* รถคุณมีจำนวนปูนไม่เพียงพอ!");

				if (Inventory_Count(playerid, "Poon") >= 20)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีปูนจำนวนสูงสุดแล้ว (20)");

				Inventory_Add(playerid, "Poon", amount);
				carData[vehicleid][carPoon] -= amount;

				mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carPoon = %d WHERE carID = %d", carData[vehicleid][carPoon], carData[vehicleid][carID]);
			    mysql_tquery(g_SQL, query);

				SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้นำ 'ปูน' ออกมาจากรถ จำนวน %d เรียบร้อยแล้ว", amount);
                WeaponType[playerid] = 0;
                VehicleType[playerid] = -1;
			}
	        case 2:
	        {
			    if (amount <= 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

			    if (carData[vehicleid][carCannabis] < amount)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* รถคุณมีจำนวนกัญชาไม่เพียงพอ!");

				if (Inventory_Count(playerid, "Cannabis") >= 20)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีปูนจำนวนสูงสุดแล้ว (20)");

				Inventory_Add(playerid, "Cannabis", amount);
				carData[vehicleid][carCannabis] -= amount;

			    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carCannabis = %d WHERE carID = %d", carData[vehicleid][carCannabis], carData[vehicleid][carID]);
			    mysql_tquery(g_SQL, query);

				SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้นำ 'กัญชา' ออกมาจากรถ จำนวน %d เรียบร้อยแล้ว", amount);
                WeaponType[playerid] = 0;
                VehicleType[playerid] = -1;
			}
	        case 3:
	        {
			    if (amount <= 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

			    if (carData[vehicleid][carCocain] < amount)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* รถคุณมีจำนวนโคเคนไม่เพียงพอ!");

				if (Inventory_Count(playerid, "Cocain") >= 20)
					return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีปูนจำนวนสูงสุดแล้ว (20)");

				Inventory_Add(playerid, "Cocain", amount);
				carData[vehicleid][carCocain] -= amount;

			    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carCocain = %d WHERE carID = %d", carData[vehicleid][carCocain], carData[vehicleid][carID]);
			    mysql_tquery(g_SQL, query);

				SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้นำ 'โคเคน' ออกมาจากรถ จำนวน %d เรียบร้อยแล้ว", amount);
                WeaponType[playerid] = 0;
                VehicleType[playerid] = -1;
			}
	        case 4:
	        {
			    if (amount <= 0)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

			    if (carData[vehicleid][carRedMoney] < amount)
			        return SendClientMessage(playerid, COLOR_LIGHTRED, "* รถคุณมีจำนวนเงินแดงไม่เพียงพอ!");

				playerData[playerid][pRedMoney] += amount;
				carData[vehicleid][carRedMoney] -= amount;

			    mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carRedMoney = %d WHERE carID = %d", carData[vehicleid][carRedMoney], carData[vehicleid][carID]);
			    mysql_tquery(g_SQL, query);

				SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้นำ 'เงินแดง' ออกมาจากรถ จำนวน %d เรียบร้อยแล้ว", amount);
                WeaponType[playerid] = 0;
                VehicleType[playerid] = -1;
			}
		}
	}
	return 1;
}

alias:vfindtrunk("ค้นรถ")
CMD:vfindtrunk(playerid, params[])
{
	new vehicleid = GetNearbyVehicle(playerid);

	if(playerData[playerid][pAdmin] >= 6)
	{
		if(vehicleid != INVALID_VEHICLE_ID)
		{
			new string100[4096];
			new string2[4096];

			format(string100, sizeof(string100), "{FFFFFF}[สิ่งของ]\t{35C005}[{6BF939}จำนวน{35C005}]\n");
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}ปูน\t{16D603}[{FFFFFF}%d/20{16D603}]\n", carData[vehicleid][carPoon]);
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}กัญชา\t{16D603}[{FFFFFF}%d/30{16D603}]\n", carData[vehicleid][carCannabis]);
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}โคเคน\t{16D603}[{FFFFFF}%d/30{16D603}]\n", carData[vehicleid][carCocain]);
			strcat(string2,string100);

			format(string100, sizeof(string100), "{FFFFFF}เงินแดง\t{16D603}[{FFFFFF}$%d/$20,000{16D603}]\n", carData[vehicleid][carRedMoney]);
			strcat(string2,string100);

			Dialog_Show(playerid,DIALOG_TRUNK,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{16D603}เก็บของภายในรถ{FFFFFF}]",string2,"ตกลง","ยกเลิก");
	        VehicleType[playerid] = vehicleid;

			return 1;
		}
		return 1;
	}
	else
	{
	    if (GetFactionType(playerid) == FACTION_POLICE)
	    {
			if(vehicleid != INVALID_VEHICLE_ID)
			{
				new string100[4096];
				new string2[4096];

				format(string100, sizeof(string100), "{FFFFFF}[สิ่งของ]\t{35C005}[{6BF939}จำนวน{35C005}]\n");
				strcat(string2,string100);

				format(string100, sizeof(string100), "{FFFFFF}ปูน\t{16D603}[{FFFFFF}%d/20{16D603}]\n", carData[vehicleid][carPoon]);
				strcat(string2,string100);

				format(string100, sizeof(string100), "{FFFFFF}กัญชา\t{16D603}[{FFFFFF}%d/30{16D603}]\n", carData[vehicleid][carCannabis]);
				strcat(string2,string100);

				format(string100, sizeof(string100), "{FFFFFF}โคเคน\t{16D603}[{FFFFFF}%d/30{16D603}]\n", carData[vehicleid][carCocain]);
				strcat(string2,string100);

				format(string100, sizeof(string100), "{FFFFFF}เงินแดง\t{16D603}[{FFFFFF}$%d/$20,000{16D603}]\n", carData[vehicleid][carRedMoney]);
				strcat(string2,string100);

				Dialog_Show(playerid,DIALOG_TRUNK,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{16D603}เก็บของภายในรถ{FFFFFF}]",string2,"ตกลง","ยกเลิก");
		        VehicleType[playerid] = vehicleid;

				return 1;
			}
	    }
	    else return SendClientMessage(playerid, COLOR_LIGHTRED, "* สำหรับตำรวจ");
	}
	return 1;
}

ShowPhone(playerid)
{
    for(new i = 0; i < 28; i ++)
    {
        PlayerTextDrawShow(playerid, PhoneTextDraws[playerid][i]);
    }
	SelectTextDraw(playerid, 0xFF0000FF);
	return 1;
}

HidePhone(playerid)
{
    for(new i = 0; i < 28; i ++)
    {
        PlayerTextDrawHide(playerid, PhoneTextDraws[playerid][i]);
    }
	CancelSelectTextDraw(playerid);
	return 1;
}

alias:kachapong("เปิดกาชา")
CMD:kachapong(playerid, params[])
{
	if (!Inventory_HasItem(playerid, "Kachapong"))
		return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่มี 'กล่องกาชาปอง'");

	if (Lucky_ActiveLast[playerid] == 1)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณอยู่ระหว่างการเปิดกล่องกาชาปอง");

	if (GetSpawnedVehicles(playerid) >= MAX_SPAWNED_VEHICLES)
	{
		return SendClientMessageEx(playerid, COLOR_RED, "[ระบบ] {FFFFFF}รถส่วนตัวของคุณจอดครบ %d คันแล้ว กรุณาเก็บคันใดคันนึง", MAX_SPAWNED_VEHICLES);
	}

	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][0]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][1]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][2]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][3]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][4]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][5]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][6]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][7]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][8]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][9]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][10]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][11]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][12]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][13]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][14]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][15]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][16]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][17]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][18]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][19]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][20]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][21]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][22]);
	PlayerTextDrawShow(playerid, GachaTextDraws[playerid][23]);
	SelectTextDraw(playerid, COLOR_YELLOW);

	new Msg[128];
	format(Msg, sizeof(Msg), "Key: %d", Inventory_Count(playerid, "Kachapong"));
	PlayerTextDrawSetString(playerid, GachaTextDraws[playerid][11], Msg);

	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* [กาชาปอง] : กด 'Open' เพื่อเริ่มต้นการสุ่มกาชาปอง");
	return 1;
}

forward LuckyTimerLast();
public LuckyTimerLast()
{
	foreach (new i : Player)
 	{
  		if (Lucky_ActiveLast[i] == 1) // ผู้เล่นเปิดกล่อง
    	{
     		Lucky_TimeLast[i] ++;

			new gift1 = random(24), gift2 = random(24), gift3 = random(24), gift4 = random(24),
			gift5 = random(24), gift6 = random(24), gift7 = random(24);

			PlayerTextDrawShow(i, GachaTextDraws[i][14]);
			PlayerTextDrawSetPreviewModel(i, GachaTextDraws[i][14], GachapongLast[gift1][ModelID]);

			PlayerTextDrawShow(i, GachaTextDraws[i][15]);
			PlayerTextDrawSetPreviewModel(i, GachaTextDraws[i][15], GachapongLast[gift2][ModelID]);

			PlayerTextDrawShow(i, GachaTextDraws[i][16]);
			PlayerTextDrawSetPreviewModel(i, GachaTextDraws[i][16], GachapongLast[gift3][ModelID]);

			PlayerTextDrawShow(i, GachaTextDraws[i][17]);
			PlayerTextDrawSetPreviewModel(i, GachaTextDraws[i][17], GachapongLast[gift4][ModelID]);

			PlayerTextDrawShow(i, GachaTextDraws[i][18]);
			PlayerTextDrawSetPreviewModel(i, GachaTextDraws[i][18], GachapongLast[gift5][ModelID]);

			PlayerTextDrawShow(i, GachaTextDraws[i][19]);
			PlayerTextDrawSetPreviewModel(i, GachaTextDraws[i][19], GachapongLast[gift6][ModelID]);

			PlayerTextDrawShow(i, GachaTextDraws[i][20]);
			PlayerTextDrawSetPreviewModel(i, GachaTextDraws[i][20], GachapongLast[gift7][ModelID]);

			if (Lucky_TimeLast[i] == 20)
			{
				PlayerTextDrawShow(i, GachaTextDraws[i][17]);
				PlayerTextDrawSetPreviewModel(i, GachaTextDraws[i][17], GachapongLast[gift4][ModelID]);

   				switch(GachapongLast[gift4][gachaID])
			    {
					case 0:
					{
						GivePlayerMoneyEx(i, 100);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินเขียวจำนวน $100 จากการเปิดกล่องกาชาปอง");
					}
					case 1:
					{
						playerData[i][pRedMoney] += 100;
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินแดงจำนวน $100 จากการเปิดกล่องกาชาปอง");
					}
					case 2:
					{
						GivePlayerMoneyEx(i, 500);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินเขียวจำนวน $500 จากการเปิดกล่องกาชาปอง");
					}
					case 3:
					{
					    playerData[i][pRedMoney] += 500;
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินแดงจำนวน $500 จากการเปิดกล่องกาชาปอง");
					}
					case 4:
					{
						GivePlayerMoneyEx(i, 1000);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินเขียวจำนวน $1,000 จากการเปิดกล่องกาชาปอง");
					}
					case 5:
					{
					    playerData[i][pRedMoney] += 1000;
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินแดงจำนวน $1,000 จากการเปิดกล่องกาชาปอง");
					}
					case 6:
					{
						GivePlayerMoneyEx(i, 1500);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินเขียวจำนวน $1,500 จากการเปิดกล่องกาชาปอง");
					}
					case 7:
					{
					    playerData[i][pRedMoney] += 1500;
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินแดงจำนวน $1,500 จากการเปิดกล่องกาชาปอง");
					}
					case 8:
					{
						GivePlayerMoneyEx(i, 2000);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินเขียวจำนวน $2,000 จากการเปิดกล่องกาชาปอง");
					}
					case 9:
					{
					    playerData[i][pRedMoney] += 2000;
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินแดงจำนวน $2,000 จากการเปิดกล่องกาชาปอง");
					}
					case 10:
					{
						GivePlayerMoneyEx(i, 2500);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินเขียวจำนวน $2,500 จากการเปิดกล่องกาชาปอง");
					}
					case 11:
					{
					    playerData[i][pRedMoney] += 2500;
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินแดงจำนวน $2,500 จากการเปิดกล่องกาชาปอง");
					}
					case 12:
					{
						GivePlayerMoneyEx(i, 3000);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินเขียวจำนวน $3,000 จากการเปิดกล่องกาชาปอง");
					}
					case 13:
					{
					    playerData[i][pRedMoney] += 3000;
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินแดงจำนวน $3,000 จากการเปิดกล่องกาชาปอง");
					}

					case 14:
					{
						GivePlayerMoneyEx(i, 4000);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินเขียวจำนวน $4,000 จากการเปิดกล่องกาชาปอง");
					}
					case 15:
					{
					    playerData[i][pRedMoney] += 4000;
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินแดงจำนวน $4,000 จากการเปิดกล่องกาชาปอง");
					}

					case 16:
					{
						GivePlayerMoneyEx(i, 5000);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินเขียวจำนวน $5,000 จากการเปิดกล่องกาชาปอง");
					}
					case 17:
					{
					    playerData[i][pRedMoney] += 5000;
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับเงินแดงจำนวน $5,000 จากการเปิดกล่องกาชาปอง");
					}
					
					case 18:
					{
						Inventory_Add(i, "Brass Knuckles", 1);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับ สนับมือ + 1 จากการเปิดกล่องกาชาปอง");
					}
					
					case 19:
					{
						Inventory_Add(i, "Baseball Bat", 1);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับ ไม้เบสบอล + 1 จากการเปิดกล่องกาชาปอง");
					}

					case 20:
					{
						Inventory_Add(i, "Shovel", 1);
						SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับ พลั่ว + 1 จากการเปิดกล่องกาชาปอง");
					}
					
					case 21:
					{
                        SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับ Mountain Bike + 1 จากการเปิดกล่องกาชาปอง");

						new query[512];
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', 510, 0, 100.0, '562.3970', '-1283.8485', '17.0007', '0.0000')", playerData[i][pID], GetPlayerNameEx(i));
						mysql_tquery(g_SQL, query);
					}
					
					case 22:
					{
                        SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับ Freeway + 1 จากการเปิดกล่องกาชาปอง");

						new query[512];
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', 463, 0, 100.0, '562.3970', '-1283.8485', '17.0007', '0.0000')", playerData[i][pID], GetPlayerNameEx(i));
						mysql_tquery(g_SQL, query);
					}
					
					case 23:
					{
                        SendClientMessage(i, COLOR_YELLOW, "* คุณได้รับ Feltzer + 1 จากการเปิดกล่องกาชาปอง");

						new query[512];
						mysql_format(g_SQL, query, sizeof(query), "INSERT INTO vehicles (carOwnerID, carOwner, carModel, carPrice, carFuel, carPosX, carPosY, carPosZ, carPosA) VALUES(%d, '%s', 533, 0, 100.0, '562.3970', '-1283.8485', '17.0007', '0.0000')", playerData[i][pID], GetPlayerNameEx(i));
						mysql_tquery(g_SQL, query);
					}
				}

				Lucky_TimeLast[i] = 0;
				Lucky_StatsLast[i] = -1;
				Lucky_ActiveLast[i] = 0;

				SetTimerEx("HideLuckyLast", 1500, 0, "d", i);
	        }
	    }
	}
	return 1;
}

forward HideLuckyLast(playerid);
public HideLuckyLast(playerid)
{
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][0]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][1]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][2]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][3]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][4]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][5]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][6]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][7]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][8]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][9]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][10]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][11]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][12]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][13]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][14]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][15]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][16]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][17]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][18]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][19]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][20]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][21]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][22]);
	PlayerTextDrawHide(playerid, GachaTextDraws[playerid][23]);

	CancelSelectTextDraw(playerid);

	Lucky_TimeLast[playerid] = 0;
	Lucky_StatsLast[playerid] = -1;
	Lucky_ActiveLast[playerid] = 0;

	return 1;
}

alias:givebox("เสกกล่อง")
CMD:givebox(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new userid, amount;
        if(sscanf(params, "ud", userid, amount))
			return SendClientMessage(playerid, COLOR_WHITE, "/เสกกล่อง [ไอดี/ชื่อ] [จำนวน]");

        if(userid == INVALID_PLAYER_ID)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

        Inventory_Add(userid, "Kachapong", amount);

        SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ให้กล่องกาชาปองกับ %s(%d) จำนวน %s", GetPlayerNameEx(playerid), GetPlayerNameEx(userid), userid, FormatMoney(amount));
	}
    return 1;
}

CMD:openwar(playerid, params[])
{
	if (playerData[playerid][pAdmin] < 3)
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* สำหรับผู้ดูแลระบบ");

	if (warFlagOn == 0)
	{
	    warFlagOn = 1;
	    FlagOnPlayer = -1;
	    SendClientMessageToAll(COLOR_ORANGE, "* ขณะนี้กิจกรรมวอชิงธงได้เปิดขึ้นแล้ว /war เพื่อเข้าร่วมกิจกรรมเลย");
	}
	else
	{
		foreach(new i : Player)
		{
			if (warJoin[i] == 1)
			{
			    warJoin[i] = 0;

				SetPlayerPos(i, 1685.6648,-2332.9873,13.5469);
				SetPlayerFacingAngle(i, 359.5448);
				SetPlayerVirtualWorld(i, 0);
				SetPlayerInterior(i, 0);
			}
		}

	    warFlagOn = 0;
	    FlagOnPlayer = -1;
	    SendClientMessageToAll(COLOR_LIGHTRED, "* ขณะนี้กิจกรรมวอชิงธงได้ปิดขึ้นแล้ว! ขอบคุณทุกคนที่เข้าร่วมสนุก");
	}
	return 1;
}

/*
	if (warFlagOn == 1)
	{
		if (warJoin[playerid] == 1)
		{
			SetPlayerPos(playerid, -975.1812,1061.1890,1345.6719);
			SetPlayerFacingAngle(playerid, 88.2425);
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 0);

		}
	}

*/

CMD:war(playerid, params[])
{
	if (warFlagOn == 0)
		return SendClientMessage(playerid, COLOR_LIGHTRED, "* กิจกรรมปิดอยู่");
		
	SetPlayerPos(playerid, -975.1812,1061.1890,1345.6719);
	SetPlayerFacingAngle(playerid, 88.2425);
	SetPlayerInterior(playerid, 10);
	SetPlayerVirtualWorld(playerid, 0);
	warJoin[playerid] = 1;
	
	if (FlagOnPlayer == -1)
	{
	    FlagOnPlayer = playerid;

		SendClientMessage(playerid, COLOR_RED, "|==========================|");
		SendClientMessage(playerid, COLOR_WHITE, "> คุณเข้ากิจกรรมมาเป็นคนแรก");
		SendClientMessage(playerid, COLOR_WHITE, "> ตอนนี้ธงแดงอยู่กับคุณ");
		SendClientMessage(playerid, COLOR_WHITE, "> โปรดดูแลตัวเองอย่างระมัดระวัง");
		SendClientMessage(playerid, COLOR_RED, "|==========================|");
		
		return 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_RED, "|==========================|");
		SendClientMessage(playerid, COLOR_WHITE, "> ฆ่าผู้เล่นที่ครอบครองธงสีแดงอยู่");
		SendClientMessage(playerid, COLOR_WHITE, "> เพื่อยึดธงจากผู้เล่นนั้นมาครอบครอง");
		SendClientMessage(playerid, COLOR_WHITE, "> สังเกตผู้เล่นจะชื่อสีแดง");
		SendClientMessage(playerid, COLOR_RED, "|==========================|");
	
		return 1;
	}
}

CMD:closewar(playerid, params[])
{
	if (playerData[playerid][pAdmin] < 3)
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* สำหรับผู้ดูแลระบบ");

	new userid = FlagOnPlayer;
	if (warFlagOn == 1)
	{
	    if (userid != -1)
	    {
	        Inventory_Add(userid, "Kachapong", 3);
	        SendClientMessage(userid, COLOR_YELLOW, "* คุณได้รับ 'กาชาปอง' 3 ลูกจากการชนะกิจกรรมยึดธง");
	    }

		foreach(new i : Player)
		{
			if (warJoin[i] == 1)
			{
			    warJoin[i] = 0;
			    SpawnPlayer(i);
			}
		}
		
	    warFlagOn = 0;
	    FlagOnPlayer = -1;
	    
	    SendClientMessageToAll(COLOR_LIGHTRED, "* ขณะนี้กิจกรรมวอชิงธงได้ปิดขึ้นแล้ว! ขอบคุณทุกคนที่เข้าร่วมสนุก");
	    SendClientMessageToAllEx(-1, "> ผู้ที่ชนะกิจกรรมยึดธงคนสุดท้ายคือ %s <", GetPlayerNameEx(userid));
	}
	return 1;
}

CMD:sleep(playerid,params[])
{
	new anim;

	if(sscanf(params, "d", anim)) return SendClientMessage(playerid, -1, "/sleep [1-2]");
	switch(anim){
		case 1: ApplyAnimation(playerid,"CRACK","crckdeth4",4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid,"CRACK","crckidle2",4.1, 0, 1, 1, 1, 1, 1);
		default: {
			return SendClientMessage(playerid, -1, "/sleep [1-2]");
		}
	}
	return 1;
}

Dialog:DIALOG_SELL_TAPU(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    switch(listitem)
	    {
	        case 0:
	        {
			    new ammo = Inventory_Count(playerid, "ตะปู");
			    new price = ammo*5;

			    if (ammo <= 0)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีตะปูอยู่ในตัวเลย");

		        GivePlayerMoneyEx(playerid, price);
		        SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้รับเงินจำนวน {00FF00}%s {FFFFFF}จากการขายตะปู {00FF00}%d", FormatMoney(price), ammo);
				Inventory_Remove(playerid, "ตะปู", ammo);
		    }
		}
	}
	return 1;
}

Dialog:DIALOG_SELL_HARVEST(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    switch(listitem)
	    {
	        case 0:
	        {
			    new ammo = Inventory_Count(playerid, "กระเพา");
			    new price = ammo*MarketCash[0];

			    if (ammo <= 0)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีกระเพาอยู่ในตัวเลย");

		        GivePlayerMoneyEx(playerid, price);
		        SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้รับเงินจำนวน {00FF00}%s {FFFFFF}จากการขายกระเพา {00FF00}%d", FormatMoney(price), ammo);
				Inventory_Remove(playerid, "กระเพา", ammo);
		    }

	        case 1:
	        {
			    new ammo = Inventory_Count(playerid, "มะเขือเทศ");
			    new price = ammo*MarketCash[1];

			    if (ammo <= 0)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีมะเขือเทศอยู่ในตัวเลย");

		        GivePlayerMoneyEx(playerid, price);
		        SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้รับเงินจำนวน {00FF00}%s {FFFFFF}จากการขายมะเขือเทศ {00FF00}%d", FormatMoney(price), ammo);
				Inventory_Remove(playerid, "มะเขือเทศ", ammo);
		    }

	        case 2:
	        {
			    new ammo = Inventory_Count(playerid, "ผักคะน้า");
			    new price = ammo*MarketCash[2];

			    if (ammo <= 0)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีผักคะน้าอยู่ในตัวเลย");

		        GivePlayerMoneyEx(playerid, price);
		        SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้รับเงินจำนวน {00FF00}%s {FFFFFF}จากการขายผักคะน้า {00FF00}%d", FormatMoney(price), ammo);
				Inventory_Remove(playerid, "ผักคะน้า", ammo);
		    }

	        case 3:
	        {
			    new ammo = Inventory_Count(playerid, "ผักกาดขาว");
			    new price = ammo*MarketCash[3];

			    if (ammo <= 0)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีผักกาดขาวอยู่ในตัวเลย");

		        GivePlayerMoneyEx(playerid, price);
		        SendClientMessageEx(playerid, COLOR_GREEN, "[ร้านค้า] {FFFFFF}คุณได้รับเงินจำนวน {00FF00}%s {FFFFFF}จากการขายผักกาดขาว {00FF00}%d", FormatMoney(price), ammo);
				Inventory_Remove(playerid, "ผักกาดขาว", ammo);
		    }
		}
	}
	return 1;
}

alias:fine("ปรับเงิน")
CMD:fine(playerid, params[])
{
	new
		userid,
	    amount,
	    reason[128];

	if (playerData[playerid][pAdmin] < 4 && GetFactionType(playerid) != FACTION_POLICE)
	    return SendClientMessage(playerid, COLOR_RED, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "uds[128]", userid, amount, reason))
		return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/ปรับเงิน [ไอดีผู้เล่น/ชื่อตัวละคร] [จำนวนเงิน] [ข้อหา]");

	if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_RED, "ผู้เล่นที่ระบุไม่ถูกต้อง");

	GivePlayerMoneyEx(userid, -amount);
	SendClientMessageToAllEx(COLOR_LIGHTRED, "[ปรับเงิน] : %s ได้ถูกปรับเงินจำนวน $%s ข้อหา : %s", GetPlayerNameEx(userid), FormatNumber(amount), reason);

	return 1;
}

Dialog:DIALOG_PHONE_1(playerid, response, listitem, inputtext[])
{
	if(!response)
	{
		callcmd::hangup(playerid, "\1");
	}
	if(response)
	{
	    callcmd::answer(playerid, "\1");
	}
	return 1;
}

Dialog:DIALOG_PHONE_2(playerid, response, listitem, inputtext[])
{
	if(!response)
	{
		callcmd::hangup(playerid, "\1");
	}
	if(response)
	{
	    callcmd::hangup(playerid, "\1");
	}
	return 1;
}

Dialog:DIALOG_PHONE_3(playerid, response, listitem, inputtext[])
{
	if(!response)
	{
		callcmd::hangup(playerid, "\1");
	}
	if(response)
	{
	    callcmd::hangup(playerid, "\1");
	}
	return 1;
}

CMD:tw(playerid, params[])
{
	if (!Twitter)
		return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มี Internet ในการใช้งาน Twitter!");

	SendClientMessageToAllEx(COLOR_ADMIN, "{14171A}[{1DA1F2}Twitter{14171A}] {FFFFFF}%s : {1DA1F2}%s", GetPlayerNameEx(playerid), params);
	return 1;
}

// --> ระบบ Slots
ShowSlots(playerid)
{
	PlayerTextDrawShow(playerid, SlotTD[playerid][0]);
	PlayerTextDrawShow(playerid, SlotTD[playerid][1]);
	PlayerTextDrawShow(playerid, SlotTD[playerid][2]);
	PlayerTextDrawShow(playerid, SlotTD[playerid][3]);
	PlayerTextDrawShow(playerid, SlotTD[playerid][4]);
	PlayerTextDrawShow(playerid, SlotTD[playerid][5]);
	PlayerTextDrawShow(playerid, SlotTD[playerid][6]);
	PlayerTextDrawShow(playerid, SlotTD[playerid][7]);
	PlayerTextDrawShow(playerid, SlotTD[playerid][8]);
	PlayerTextDrawShow(playerid, SlotTD[playerid][9]);
	PlayerTextDrawShow(playerid, SlotTD[playerid][10]);
	PlayerTextDrawShow(playerid, SlotTD[playerid][11]);
	return 1;
}

HideSlots(playerid)
{
	PlayerTextDrawHide(playerid, SlotTD[playerid][0]);
	PlayerTextDrawHide(playerid, SlotTD[playerid][1]);
	PlayerTextDrawHide(playerid, SlotTD[playerid][2]);
	PlayerTextDrawHide(playerid, SlotTD[playerid][3]);
	PlayerTextDrawHide(playerid, SlotTD[playerid][4]);
	PlayerTextDrawHide(playerid, SlotTD[playerid][5]);
	PlayerTextDrawHide(playerid, SlotTD[playerid][6]);
	PlayerTextDrawHide(playerid, SlotTD[playerid][7]);
	PlayerTextDrawHide(playerid, SlotTD[playerid][8]);
	PlayerTextDrawHide(playerid, SlotTD[playerid][9]);
	PlayerTextDrawHide(playerid, SlotTD[playerid][10]);
	PlayerTextDrawHide(playerid, SlotTD[playerid][11]);
	return 1;
}

forward DisplayPullDraws(playerid);
public DisplayPullDraws(playerid)
{
	ShowSlots(playerid);
}

forward HideDisplayPullDraws(playerid);
public HideDisplayPullDraws(playerid)
{
	HideSlots(playerid);
}

CalculateCasinoWinning(amount, rand0, rand1, rand2)
{
	new prize, calc;
	if(rand0 != rand1 && rand0 != rand2 && rand1 != rand2)
	{
		return 0;
	}
	else if(rand0 == rand1 && rand1 != rand2)
	{
		switch(rand0)
		{
			case 1:
			{
				calc = amount / 100 * 42;
				prize = amount + calc;
			}
			case 2:
			{
				calc = amount / 100 * 112;
				prize = amount + calc;
			}
			case 3:
			{
				calc = amount / 100 * 61;
				prize = amount + calc;
			}
			case 4:
			{
				calc = amount / 100 * 76;
				prize = amount + calc;
			}
			case 5:
			{
				calc = amount / 100 * 92;
				prize = amount + calc;
			}
			case 6:
			{
				calc = amount / 100 * 248;
				prize = amount + calc;
			}
			case 7:
			{
				calc = amount / 100 * 677;
				prize = amount + calc;
			}
		}
	}
	else if(rand1 == rand2 && rand1 != rand0)
	{
		switch(rand1)
		{
			case 1:
			{
				calc = amount / 100 * 42;
				prize = amount + calc;
			}
			case 2:
			{
				calc = amount / 100 * 112;
				prize = amount + calc;
			}
			case 3:
			{
				calc = amount / 100 * 61;
				prize = amount + calc;
			}
			case 4:
			{
				calc = amount / 100 * 76;
				prize = amount + calc;
			}
			case 5:
			{
				calc = amount / 100 * 92;
				prize = amount + calc;
			}
			case 6:
			{
				calc = amount / 100 * 248;
				prize = amount + calc;
			}
			case 7:
			{
				calc = amount / 100 * 677;
				prize = amount + calc;
			}
		}
	}
	else if(rand0 == rand1 && rand1 == rand2)
	{
		switch(rand2)
		{
			case 1:
			{
				calc = amount / 100 * 92;
				prize = amount + calc;
			}
			case 2:
			{
				calc = amount / 100 * 262;
				prize = amount + calc;
			}
			case 3:
			{
				calc = amount / 100 * 146;
				prize = amount + calc;
			}
			case 4:
			{
				calc = amount / 100 * 222;
				prize = amount + calc;
			}
			case 5:
			{
				calc = amount / 100 * 338;
				prize = amount + calc;
			}
			case 6:
			{
				calc = amount / 100 * 763;
				prize = amount + calc;
			}
			case 7:
			{
				calc = amount / 100 * 28190;
				prize = amount + calc;
			}
		}
	}
	return prize;
}

Dialog:DIALOG_SLOT(playerid, response, listitem, inputtext[])
{
    new rand[3], randsymbol[3], winPrize, szMiscArray[128];
	new amount = strval(inputtext);
	if (response)
	{
		if (amount < 500 || amount > 1000)
		    return SendClientMessage(playerid, COLOR_GREY, "จำนวนเงินต้องไม่น้อยกว่า $500 และมากกว่า $1000");

		if (GetPlayerMoneyEx(playerid) < amount)
		    return SendClientMessage(playerid, COLOR_GREY, "คุณมีเงินเขียวไม่เพียงพอ");

		rand[0] = randomEx(1, 128);
		rand[1] = randomEx(1, 128);
		rand[2] = randomEx(1, 128);

		GivePlayerMoneyEx(playerid, -amount);

		switch(rand[0])
		{
			case 1 .. 73: randsymbol[0] = 1;
			case 74 .. 78: randsymbol[0] = 2;
			case 79 .. 94: randsymbol[0] = 3;
			case 95 .. 107: randsymbol[0] = 4;
			case 108 .. 118: randsymbol[0] = 5;
			case 119 .. 126: randsymbol[0] = 6;
			case 127 .. 128: randsymbol[0] = 7;
		}

		switch(rand[1])
		{
			case 1 .. 73: randsymbol[1] = 1;
			case 74 .. 78: randsymbol[1] = 2;
			case 79 .. 94: randsymbol[1] = 3;
			case 95 .. 107: randsymbol[1] = 4;
			case 108 .. 118: randsymbol[1] = 5;
			case 119 .. 126: randsymbol[1] = 6;
			case 127 .. 128: randsymbol[1] = 7;
		}

		switch(rand[2])
		{
			case 1 .. 73: randsymbol[2] = 1;
			case 74 .. 78: randsymbol[2] = 2;
			case 79 .. 94: randsymbol[2] = 3;
			case 95 .. 107: randsymbol[2] = 4;
			case 108 .. 118: randsymbol[2] = 5;
			case 119 .. 126: randsymbol[2] = 6;
			case 127 .. 128: randsymbol[2] = 7;
		}

		winPrize = CalculateCasinoWinning(amount, randsymbol[0], randsymbol[1], randsymbol[2]);

		format(szMiscArray, sizeof(szMiscArray), "%d", randsymbol[0]);
		PlayerTextDrawSetString(playerid, SlotTD[playerid][8], szMiscArray);

		format(szMiscArray, sizeof(szMiscArray), "%d", randsymbol[1]);
		PlayerTextDrawSetString(playerid, SlotTD[playerid][9], szMiscArray);

		format(szMiscArray, sizeof(szMiscArray), "%d", randsymbol[2]);
		PlayerTextDrawSetString(playerid, SlotTD[playerid][10], szMiscArray);

	    DisplayPullDraws(playerid);
		SetTimerEx("HideDisplayPullDraws", 5000, false, "i", playerid);

		if(winPrize == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "คุณเสีย Slots ไม่ได้รับเงินตอบแทนใด ๆ");
			return 1;
		}
		else if(randsymbol[0] == randsymbol[1] && randsymbol[1] == randsymbol[2] && randsymbol[1] == 7)
			SendClientMessageToAllEx(-1, "{FEB102}(ระบบสล็อต) %s ได้รับรางวัล Jackport เป็นจำนวนเงิน $%d", GetPlayerNameEx(playerid), winPrize);

		format(szMiscArray, sizeof(szMiscArray), "{FEB102}(ระบบสล็อต) : ยินดีด้วยคุณได้รับเงิน $%d จากการเล่นการพนัน Slots", winPrize);
		GivePlayerMoneyEx(playerid, winPrize);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, szMiscArray);

		return 1;
	}
	return 1;
}

// --> ระบบบาคาร่า
forward StartBetTableOne();
public StartBetTableOne()
{
    new randoms = random(1000);
    if(randoms >= 0 && randoms <= 500) //แดง
    {
        new RedBet[18] = {1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36};
        new randomred = random(sizeof(RedBet));
        new Red = RedBet[randomred];

        foreach(new i : Player)
        {
            if(PlayerToPoint(6.0, i, 1958.0300,1025.3297,992.4688))
            {
                SendClientMessageEx(i, COLOR_GREEN, "[บาคาร่าโต๊ะที่ 1]: วงล้อได้เริ่มทำการหมุนและผลออกมาเป็นเลข %d (สีแดง)", Red);
                if(StartPlayBacara[i] == 1 && BacaraTable[i] == 1)
                {
                    if(PlayerSelectBetColor[i] == BETRED && PlayerMoneyBet[i] != 0)
                    {
                        playerData[i][pRedMoney] += PlayerMoneyBet[i]*2;
                        SendClientMessageEx(i, COLOR_GREEN, "[บาคาร่า]: คุณได้รับเงินจากการเล่นบาคาร่าจำนวน %s", FormatNumber(PlayerMoneyBet[i]*2));
                        PlayerMoneyBet[i] = 0;
                        PlayerSelectBetColor[i] = 0;
                    }
                    else
                    {
                        SendClientMessage(i, COLOR_RED, "[บาคาร่า]: เสียใจด้วยคุณทายผิดทำให้คุณไม่ได้รับเงินใดๆเลย");
                        PlayerMoneyBet[i] = 0;
                        PlayerSelectBetColor[i] = 0;
                    }
                }
            }
        }
    }
    if(randoms >= 501 && randoms <= 550) //เขียว
    {
        new GreenBet[1] = {0};
        new randomgreen = random(sizeof(GreenBet));
        new Green = GreenBet[randomgreen];

        foreach(new i : Player)
        {
            if(PlayerToPoint(6.0, i, 1958.0300,1025.3297,992.4688))
            {
                SendClientMessageEx(i, COLOR_GREEN, "[บาคาร่าโต๊ะที่ 1]: วงล้อได้เริ่มทำการหมุนและผลออกมาเป็นเลข %d (สีเขียว)", Green);
                if(StartPlayBacara[i] == 1 && BacaraTable[i] == 1)
                {
                    if(PlayerSelectBetColor[i] == BETGREEN && PlayerMoneyBet[i] != 0)
                    {
                        playerData[i][pRedMoney] += PlayerMoneyBet[i]*3;
                        SendClientMessageEx(i, COLOR_GREEN, "[บาคาร่า]: คุณได้รับเงินจากการเล่นบาคาร่าจำนวน %s", FormatNumber(PlayerMoneyBet[i]*3));
                        PlayerMoneyBet[i] = 0;
                        PlayerSelectBetColor[i] = 0;
                    }
                    else
                    {
                        SendClientMessage(i, COLOR_RED, "[บาคาร่า]: เสียใจด้วยคุณทายผิดทำให้คุณไม่ได้รับเงินใดๆเลย");
                        PlayerMoneyBet[i] = 0;
                        PlayerSelectBetColor[i] = 0;
                    }
                }
            }
        }
    }
    if(randoms >= 551 && randoms <= 1000) //ดำ
    {
        new BlackBet[18] = {2,4,6,8,10,11,13,15,17,20,22,24,26,28,29,31,33,35};
        new randomblack = random(sizeof(BlackBet));
        new Black = BlackBet[randomblack];

        foreach(new i : Player)
        {
            if(PlayerToPoint(6.0, i, 1958.0300,1025.3297,992.4688))
            {
                SendClientMessageEx(i, COLOR_GREEN, "[บาคาร่าโต๊ะที่ 1]: วงล้อได้เริ่มทำการหมุนและผลออกมาเป็นเลข %d (สีดำ)", Black);
                if(StartPlayBacara[i] == 1 && BacaraTable[i] == 1)
                {
                    if(PlayerSelectBetColor[i] == BETBLACK && PlayerMoneyBet[i] != 0)
                    {
                        playerData[i][pRedMoney] += PlayerMoneyBet[i]*2;
                        SendClientMessageEx(i, COLOR_GREEN, "[บาคาร่า]: คุณได้รับเงินจากการเล่นบาคาร่าจำนวน %s", FormatNumber(PlayerMoneyBet[i]*2));
                        PlayerMoneyBet[i] = 0;
                        PlayerSelectBetColor[i] = 0;
                    }
                    else
                    {
                        SendClientMessage(i, COLOR_RED, "[บาคาร่า]: เสียใจด้วยคุณทายผิดทำให้คุณไม่ได้รับเงินใดๆเลย");
                        PlayerMoneyBet[i] = 0;
                        PlayerSelectBetColor[i] = 0;
                    }
                }
            }
        }
    }

    BacaraTableOneTime = 60;

    return 1;
}

task BacaraTimer[1000]()
{
	if(BacaraTableOneTime > 0)
	{
		BacaraTableOneTime--;
	}
	if(BacaraTableOneTime == 0)
	{
		StartBetTableOne();
	}
	return 1;
}

Dialog:BacaraDailog(playerid, response, listitem, inputtext[])
{
    if(!response)
    {
        PlayerSelectBetColor[playerid] = 0;
        return 1;
    }

    if(response)
    {
        if(listitem == 0)
        {
            PlayerSelectBetColor[playerid] = BETBLACK;
            Dialog_Show(playerid, MoneyAmountBet, DIALOG_STYLE_INPUT, "ใส่จำนวนเงินที่จะลง (ดำ)", "กรุณากรอกจำนวนเงินที่จะลง\nจำนวนเงินต้องอยู่ระหว่าง $500 ถึง $1,000 ต่อครั้ง", "ตกลง", "ยกเลิก");
        }

        if(listitem == 1)
        {
            PlayerSelectBetColor[playerid] = BETRED;
            Dialog_Show(playerid, MoneyAmountBet, DIALOG_STYLE_INPUT, "ใส่จำนวนเงินที่จะลง (แดง)", "กรุณากรอกจำนวนเงินที่จะลง\nจำนวนเงินต้องอยู่ระหว่าง $500 ถึง $1,000 ต่อครั้ง", "ตกลง", "ยกเลิก");
        }

        if(listitem == 2)
        {
            PlayerSelectBetColor[playerid] = BETGREEN;
            Dialog_Show(playerid, MoneyAmountBet, DIALOG_STYLE_INPUT, "ใส่จำนวนเงินที่จะลง (เขียว)", "กรุณากรอกจำนวนเงินที่จะลง\nจำนวนเงินต้องอยู่ระหว่าง $500 ถึง $1,000 ต่อครั้ง", "ตกลง", "ยกเลิก");
        }
    }
    return 1;
}

Dialog:MoneyAmountBet(playerid, response, listitem, inputtext[])
{
    if(!response)
    {
        PlayerSelectBetColor[playerid] = 0;
        PlayerMoneyBet[playerid] = 0;
        return 1;
    }

    if(response)
    {
        new money = strval(inputtext);

        if(PlayerSelectBetColor[playerid] == BETBLACK)
        {
            if(playerData[playerid][pRedMoney] < money)
            {
                PlayerSelectBetColor[playerid] = BETBLACK;
                Dialog_Show(playerid, MoneyAmountBet, DIALOG_STYLE_INPUT, "ใส่จำนวนเงินที่จะลง (ดำ)", "** คุณมีเงินไม่พอกับจำนวนที่คุณกรอก **\nกรุณากรอกจำนวนเงินที่จะลง\nจำนวนเงินต้องอยู่ระหว่าง $500 ถึง $1,000 ต่อครั้ง", "ตกลง", "ยกเลิก");
                return 1;
            }

            if(money < 500 || money > 1000)
            {
                PlayerSelectBetColor[playerid] = BETBLACK;
                Dialog_Show(playerid, MoneyAmountBet, DIALOG_STYLE_INPUT, "ใส่จำนวนเงินที่จะลง (ดำ)", "** คุณต้องลงพนันอยู่ในระหว่าง $500 ถึง $1,000 **\nกรุณากรอกจำนวนเงินที่จะลง\nจำนวนเงินต้องอยู่ระหว่าง $500 ถึง $1,000 ต่อครั้ง", "ตกลง", "ยกเลิก");
                return 1;
            }

            PlayerSelectBetColor[playerid] = BETBLACK;
            PlayerMoneyBet[playerid] = money;
            SendClientMessageEx(playerid, COLOR_YELLOW, "[บาคาร่า]: คุณได้ลงพนันไว้ที่ 'สีดำ' จำนวนเงิน %s เรียบร้อยแล้ว", FormatNumber(money));
            SendNearbyMessage(playerid, 6.0, COLOR_PURPLE, "* %s ได้ลงเงินพนันไปที่ 'สีดำ' จำนวน %s!!", GetPlayerNameEx(playerid), FormatNumber(money));
            GivePlayerMoneyEx(playerid, -money);
            return 1;
        }

        if(PlayerSelectBetColor[playerid] == BETRED)
        {
            if(playerData[playerid][pRedMoney] < money)
            {
                PlayerSelectBetColor[playerid] = BETRED;
                Dialog_Show(playerid, MoneyAmountBet, DIALOG_STYLE_INPUT, "ใส่จำนวนเงินที่จะลง (แดง)", "** คุณมีเงินไม่พอกับจำนวนที่คุณกรอก **\nกรุณากรอกจำนวนเงินที่จะลง\nจำนวนเงินต้องอยู่ระหว่าง $500 ถึง $1,000 ต่อครั้ง", "ตกลง", "ยกเลิก");
                return 1;
            }

            if(money < 500 || money > 1000)
            {
                PlayerSelectBetColor[playerid] = BETBLACK;
                Dialog_Show(playerid, MoneyAmountBet, DIALOG_STYLE_INPUT, "ใส่จำนวนเงินที่จะลง (ดำ)", "** คุณต้องลงพนันอยู่ในระหว่าง $500 ถึง $1,000 **\nกรุณากรอกจำนวนเงินที่จะลง\nจำนวนเงินต้องอยู่ระหว่าง $500 ถึง $1,000 ต่อครั้ง", "ตกลง", "ยกเลิก");
                return 1;
            }

            PlayerSelectBetColor[playerid] = BETRED;
            PlayerMoneyBet[playerid] = money;
            SendClientMessageEx(playerid, COLOR_YELLOW, "[บาคาร่า]: คุณได้ลงพนันไว้ที่ 'สีแดง' จำนวนเงิน %s เรียบร้อยแล้ว", FormatNumber(money));
            SendNearbyMessage(playerid, 6.0, COLOR_PURPLE, "* %s ได้ลงเงินพนันไปที่ 'สีแดง' จำนวน %s!!", GetPlayerNameEx(playerid), FormatNumber(money));
            GivePlayerMoneyEx(playerid, -money);
            return 1;
        }

        if(PlayerSelectBetColor[playerid] == BETGREEN)
        {
            if(playerData[playerid][pRedMoney] < money)
            {
                PlayerSelectBetColor[playerid] = BETGREEN;
                Dialog_Show(playerid, MoneyAmountBet, DIALOG_STYLE_INPUT, "ใส่จำนวนเงินที่จะลง (เขียว)", "** คุณมีเงินไม่พอกับจำนวนที่คุณกรอก **\nกรุณากรอกจำนวนเงินที่จะลง\nจำนวนเงินต้องอยู่ระหว่าง $500 ถึง $1,000 ต่อครั้ง", "ตกลง", "ยกเลิก");
                return 1;
            }

            if(money < 500 || money > 1000)
            {
                PlayerSelectBetColor[playerid] = BETBLACK;
                Dialog_Show(playerid, MoneyAmountBet, DIALOG_STYLE_INPUT, "ใส่จำนวนเงินที่จะลง (ดำ)", "** คุณต้องลงพนันอยู่ในระหว่าง $500 ถึง $1,000 **\nกรุณากรอกจำนวนเงินที่จะลง\nจำนวนเงินต้องอยู่ระหว่าง $500 ถึง $1,000 ต่อครั้ง", "ตกลง", "ยกเลิก");
                return 1;
            }

            PlayerSelectBetColor[playerid] = BETGREEN;
            PlayerMoneyBet[playerid] = money;
            SendClientMessageEx(playerid, COLOR_YELLOW, "[บาคาร่า]: คุณได้ลงพนันไว้ที่ 'เขียว' จำนวนเงิน %s เรียบร้อยแล้ว", FormatNumber(money));
            SendNearbyMessage(playerid, 6.0, COLOR_PURPLE, "* %s ได้ลงเงินพนันไปที่ 'สีเขียว' จำนวน %s!!", GetPlayerNameEx(playerid), FormatNumber(money));
            GivePlayerMoneyEx(playerid, -money);
            return 1;
        }
    }
    return 1;
}

stock SendMessageBacaraTable1(playerid, Float:radius, color, const str[], {Float,_}:...)
{
	static
	    args,
	    start,
	    end,
	    string[144]
	;
	#emit LOAD.S.pri 8
	#emit STOR.pri args

	if (args > 16)
	{
		#emit ADDR.pri str
		#emit STOR.pri start

	    for (end = start + (args - 16); end > start; end -= 4)
		{
	        #emit LREF.pri end
	        #emit PUSH.pri
		}
		#emit PUSH.S str
		#emit PUSH.C 144
		#emit PUSH.C string

		#emit LOAD.S.pri 8
		#emit CONST.alt 4
		#emit SUB
		#emit PUSH.pri

		#emit SYSREQ.C format
		#emit LCTRL 5
		#emit SCTRL 4

        foreach (new i : Player)
		{
			if(PlayerToPoint(radius, i, 1958.0300,1025.3297,992.4688)) {
  				SendClientMessage(i, color, string);
			}
		}
		return 1;
	}
	foreach (new i : Player)
	{
		if(PlayerToPoint(radius, i, 1958.0300,1025.3297,992.4688)) {
			SendClientMessage(i, color, str);
		}
	}
	return 1;
}

forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

CMD:setskin(playerid, params[])
{
	new
	    userid,
		skinid;

    if (playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "ud", userid, skinid))
	    return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/setskin [playerid/name] [skin id]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_GREY, "ผู้เล่นที่ระบุไม่ถูกต้อง");

	if (skinid < 0 || skinid > 311)
	    return SendClientMessage(playerid, COLOR_GREY, "ไอดีสกินไม่ถูกต้อง สกินต้องอยู่ในช่วง 0 ถึง 311");

	SetPlayerSkin(userid, skinid);
	playerData[userid][pSkin] = skinid;

	SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* คุณได้ตั้งค่าสกินของ %s เป็นสกินไอดี: %d", GetPlayerNameEx(userid), skinid);

	return 1;
}

SetVehicleColor(vehicleid, color1, color2)
{
    new id = carData[vehicleid][carID], query[512];

	if (id != -1)
	{
	    carData[id][carColor1] = color1;
	    carData[id][carColor2] = color2;

		mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carColor1 = %d, carColor2 = %d WHERE carID = %d", carData[vehicleid][carColor1], carData[vehicleid][carColor2], carData[vehicleid][carID]);
		mysql_tquery(g_SQL, query);

	    ChangeVehicleColor(vehicleid, color1, color2);
	}
	return ChangeVehicleColor(vehicleid, color1, color2);
}

CMD:kickall(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 1)
	    return 1;

	foreach (new i : Player)
	{
		if(playerData[i][IsLoggedIn])
		{
            UpdateplayerData(i);
            DelayedKick(i);
            SendClientMessage(i, COLOR_YELLOW, "* เซิฟเวอร์ถูก Restart เพื่ออัพเดทระบบ กรุณาออกเข้าใหม่");
		}
	}

	SendClientMessageToAllEx(COLOR_LIGHTRED, "AdmCmd: %s ได้เตะผู้เล่นทุกคนออกจากเซิร์ฟเวอร์", GetPlayerNameEx(playerid));

	return 1;
}

// ตลาดกลาง
CMD:market(playerid, params[])
{
	new string100[4096];
	new string2[4096];

	format(string100, sizeof(string100), "{FFFFFF}[สิ่งของ]\t{FFFFFF}[ราคา]\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}เนื้อวัว\t$%d\n", CowCash);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}เนื้อไก่\t$%d\n", CKCash);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}ท่อนซุง\t$%d\n", WoodCash);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}กระเพรา\t$%d\n", MarketCash[0]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}มะเขือเทศ\t$%d\n", MarketCash[1]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}ผักคะน้า\t$%d\n", MarketCash[2]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}ผักกาดขาว\t$%d\n", MarketCash[3]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}ส้ม\t$%d\n", MarketCash[4]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}แอปเปิ้ล\t$%d\n", MarketCash[5]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}ปลาเก๋า\t$%d\n", MarketCash[6]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}ปลาแซลม่อน\t$%d\n", MarketCash[7]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}ปลากระเบน\t$%d\n", MarketCash[8]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}ปลาฉลาม\t$%d\n", MarketCash[9]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}หอย\t$%d\n", MarketCash[10]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}แร่เฮมาไทต์\t$%d\n", MarketCash[11]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}แร่หินเกลือ\t$%d\n", MarketCash[12]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}แร่ถ่านหิน\t$%d\n", MarketCash[13]);
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}แร่ยูเรเนียม\t$%d\n", MarketCash[14]);
	strcat(string2,string100);

	Dialog_Show(playerid,ShowOnly,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{16D603}ตลาดกลาง{FFFFFF}]",string2,"ตกลง","ยกเลิก");
	return 1;
}

Dialog:DIALOG_VIP_CRAFT(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		switch(listitem)
  		{
			case 0:
			{
				if (Inventory_Count(playerid, "Shark") < 2)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ปลาฉลาม มากกว่า 2");

				Inventory_Remove(playerid, "Shark", 2);
				Inventory_Add(playerid, "Shark Fin", 1);

				SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้รับ 'หูฉลาม' + 1 จากการทำอาหาร");
				return 1;
			}
			case 1:
			{
				if (Inventory_Count(playerid, "ผักกาดขาว") < 2)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ผักกาดขาว มากกว่า 2");

				Inventory_Remove(playerid, "ผักกาดขาว", 2);
				Inventory_Add(playerid, "Vegetable Juice", 1);

				SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้รับ 'น้ำผัก' + 1 จากการทำอาหาร");
				return 1;
			}
			case 2:
			{
				if (Inventory_Count(playerid, "ผักคะน้า") < 2)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ผักคะน้า มากกว่า 2");

				if (Inventory_Count(playerid, "มะเขือเทศ") < 2)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี มะเขือเทศ มากกว่า 2");

				if (Inventory_Count(playerid, "Stingray") < 2)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ปลากระเบน มากกว่า 2");

				if (Inventory_Count(playerid, "Salmon") < 2)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ปลาแซลม่อน มากกว่า 2");

				Inventory_Remove(playerid, "ผักคะน้า", 2);
				Inventory_Remove(playerid, "มะเขือเทศ", 2);
				Inventory_Remove(playerid, "Stingray", 2);
				Inventory_Remove(playerid, "Salmon", 2);
				Inventory_Add(playerid, "Seafood", 1);

				SendClientMessage(playerid, COLOR_ORANGE, "* คุณได้รับ 'ผัดผักรวมมิตรทะเล' + 1 จากการทำอาหาร");
				return 1;
			}
			//
			case 3:
			{
				if (playerData[playerid][pVip] < 1)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Vip มากกว่า 1");

				if (Inventory_Count(playerid, "Woods") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ท่อนซุง มากกว่า 20");

				if (Inventory_Count(playerid, "Poon") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ปูน มากกว่า 20");

				if (playerData[playerid][pRedMoney] < 25000)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี เงินแดง มากกว่า $25,000");

				if (GetPlayerMoneyEx(playerid) < 50000)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี เงินเขียว มากกว่า $50,000");

				Inventory_Remove(playerid, "Woods", 20);
				Inventory_Remove(playerid, "Poon", 20);
				
				playerData[playerid][pRedMoney] -= 25000;
				GivePlayerMoneyEx(playerid, -50000);
				
				new success = random(100);
				switch (success)
				{
				    case 0..10:
				    {
				        Inventory_Add(playerid, "Pool Cue", 1);
				        SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้รับ 'ไม้สนุ๊ก' + 1 จากการสร้างอาวุธ");
				    }
				    case 11..99:
				    {
				        SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้ล้มเหลวในการสร้างอาวุธ 'ไม้สนุ๊ก'");
				    }
				}
				return 1;
			}
			case 4:
			{
				if (playerData[playerid][pVip] < 2)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Vip มากกว่า 2");

				if (Inventory_Count(playerid, "Uranium Ore") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ท่อนซุง มากกว่า 20");

				if (Inventory_Count(playerid, "Hematite") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ปูน มากกว่า 20");

				if (Inventory_Count(playerid, "Woods") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ท่อนซุง มากกว่า 20");

				if (Inventory_Count(playerid, "Poon") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ปูน มากกว่า 20");

				if (playerData[playerid][pRedMoney] < 35000)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี เงินแดง มากกว่า $35,000");

				if (GetPlayerMoneyEx(playerid) < 70000)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี เงินเขียว มากกว่า $70,000");

				Inventory_Remove(playerid, "Woods", 20);
				Inventory_Remove(playerid, "Poon", 20);

				Inventory_Remove(playerid, "Uranium Ore", 20);
				Inventory_Remove(playerid, "Hematite", 20);

				playerData[playerid][pRedMoney] -= 35000;
				GivePlayerMoneyEx(playerid, -70000);

				new success = random(100);
				switch (success)
				{
				    case 0..5:
				    {
				        Inventory_Add(playerid, "Knife", 1);
				        SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้รับ 'Knife' + 1 จากการสร้างอาวุธ");
				    }
				    case 6..99:
				    {
				        SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้ล้มเหลวในการสร้างอาวุธ 'Knife'");
				    }
				}
				return 1;
			}
			case 5:
			{
				if (playerData[playerid][pVip] < 3)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Vip มากกว่า 3");

				if (Inventory_Count(playerid, "Uranium Ore") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ท่อนซุง มากกว่า 20");

				if (Inventory_Count(playerid, "Hematite") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ปูน มากกว่า 20");

				if (Inventory_Count(playerid, "Woods") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ท่อนซุง มากกว่า 20");

				if (Inventory_Count(playerid, "Poon") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี ปูน มากกว่า 20");

				if (Inventory_Count(playerid, "Shell") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี หอย มากกว่า 20");

				if (playerData[playerid][pRedMoney] < 50000)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี เงินแดง มากกว่า $50,000");

				if (GetPlayerMoneyEx(playerid) < 100000)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี เงินเขียว มากกว่า $100,000");

				Inventory_Remove(playerid, "Woods", 20);
				Inventory_Remove(playerid, "Poon", 20);

				Inventory_Remove(playerid, "Uranium Ore", 20);
				Inventory_Remove(playerid, "Hematite", 20);
				
				Inventory_Remove(playerid, "Shell", 20);

				playerData[playerid][pRedMoney] -= 50000;
				GivePlayerMoneyEx(playerid, -100000);

				new success = random(100);
				switch (success)
				{
				    case 0..2:
				    {
				        Inventory_Add(playerid, "Katana", 1);
				        SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้รับ 'ดาบซามูไร' + 1 จากการสร้างอาวุธ");
				    }
				    case 3..99:
				    {
				        SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้ล้มเหลวในการสร้างอาวุธ 'ดาบซามูไร'");
				    }
				}
				return 1;
			}
			case 6:
			{
				if (playerData[playerid][pVip] == 0)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี Vip มากกว่า 1");

				if (Inventory_Count(playerid, "Shell") < 20)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องมี หอย มากกว่า 20");

				Inventory_Remove(playerid, "Shell", 20);
                Inventory_Add(playerid, "Vape", 20);

                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้รับ 'บุหรี่ไฟฟ้า' กดใช้งานในกระเป๋าเพื่อสูบ!");
				return 1;
			}
		}
	}
	return 1;
}

//

Dialog:DIALOG_MECHANICID(playerid, response, listitem, inputtext[])
{
	new userid = strval(inputtext);
	if (response)
	{
		if (userid == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

		if (!IsPlayerNearPlayer(playerid, userid, 5.0))
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในระยะ");

		if (userid == playerid)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถให้เงินตัวเองได้");

	    mechanicID[playerid] = userid;
 		Dialog_Show(playerid, DIALOG_MECHANIC_PRICE, DIALOG_STYLE_INPUT, "[การซ่อมรถ]", "กรุณาระบุราคาที่คุณต้องการ :", "เลือก", "ปิด");
	}
	return 1;
}

Dialog:DIALOG_MECHANIC_PRICE(playerid, response, listitem, inputtext[])
{
	new price = strval(inputtext), string[32];
	if (response)
	{
	    if (price <= 0)
	        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");
	
	    mechanicPrice[playerid] = price;

		format(string, 32, "%d %d", mechanicID[playerid], price);
		callcmd::mechanic(playerid, string);
		
		mechanicID[playerid] = -1;
		mechanicPrice[playerid] = 0;
	}
	return 1;
}

//

Dialog:DIALOG_FUELID(playerid, response, listitem, inputtext[])
{
	new userid = strval(inputtext);
	if (response)
	{
		if (userid == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

		if (!IsPlayerNearPlayer(playerid, userid, 5.0))
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในระยะ");

		if (userid == playerid)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถให้เงินตัวเองได้");

	    mechanicID[playerid] = userid;
 		Dialog_Show(playerid, DIALOG_FUEL_PRICE, DIALOG_STYLE_INPUT, "[การเติมน้ำมัน]", "กรุณาระบุราคาที่คุณต้องการ :", "เลือก", "ปิด");
	}
	return 1;
}

Dialog:DIALOG_FUEL_PRICE(playerid, response, listitem, inputtext[])
{
	new price = strval(inputtext), string[32], userid = mechanicID[playerid];
	if (response)
	{
	    if (price <= 0)
	        return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0");

		if (userid == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

		if (userid == playerid)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถซ่อมให้ตัวเองได้");

		if (!IsPlayerNearPlayer(playerid, userid, 5.0))
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");

		if (GetPlayerMoneyEx(userid) < price)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นนั้นมีเงินไม่เพียงพอ");

		if (GetPlayerState(userid) != PLAYER_STATE_DRIVER)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นต้องอยู่ในสถานะคนขับ");

	    mechanicPrice[playerid] = price;

		if (!IsPlayerInAnyVehicle(userid) && GetPlayerState(userid) != PLAYER_STATE_DRIVER)
		{
			SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นต้องอยู่ในรถ สถานะคนขับ");
			return 1;
		}
		
		format(string, sizeof string, "{FFFFFF}ตอบรับการเติมน้ำมันจากช่าง %s ราคา %s", GetPlayerNameEx(playerid), FormatMoney(price));
		Dialog_Show(userid, DIALOG_ACCEPT23, DIALOG_STYLE_INPUT, "[ยืนยัน]", string, "ยืนยัน", "ปิด");

		/*format(string, 32, "%d %d", mechanicID[playerid], price);
		callcmd::fuel(playerid, string);*/

		mechanicID[playerid] = -1;
		mechanicPrice[playerid] = 0;
	}
	return 1;
}

Dialog:DIALOG_MECHANIC_KEY(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		switch(listitem)
  		{
			case 0:
			{
			    Dialog_Show(playerid, DIALOG_MECHANICID, DIALOG_STYLE_INPUT, "[การซ่อมรถ]", "กรุณาระบุไอดีผู้เล่นที่คุณต้องการจะซ่อมรถ :", "เลือก", "ปิด");
			}
			case 1:
			{
			    Dialog_Show(playerid, DIALOG_FUELID, DIALOG_STYLE_INPUT, "[การเติมน้ำมัน]", "กรุณาระบุไอดีผู้เล่นที่คุณต้องการจะเติมน้ำมัน :", "เลือก", "ปิด");
			}
			case 2:
			{
			    callcmd::car_tune(playerid, "\1");
			}
			case 3:
			{
			    Dialog_Show(playerid, DIALOG_CHMID, DIALOG_STYLE_INPUT, "[ค้นหา]", "กรุณาระบุไอดีผู้เล่นที่คุณต้องการจะค้นหา :", "เลือก", "ปิด");
			}
		}
	}
	return 1;
}

//

Dialog:DIALOG_MEDICID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new string[256], var[15];
	    //new itemid = playerData[playerid][pItemSelect];
		format(var, sizeof(var), "PID%d", listitem);
		new userid = GetPVarInt(playerid, var);

		format(string, 16, "%d", userid);
		callcmd::cpr(playerid, string);
	}
	return 1;
}

Dialog:DIALOG_HEALID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new string[256], var[15];
	    //new itemid = playerData[playerid][pItemSelect];
		format(var, sizeof(var), "PID%d", listitem);
		new userid = GetPVarInt(playerid, var);

		format(string, 16, "%d", userid);
		callcmd::heal(playerid, string);
	}
	return 1;
}

Dialog:DIALOG_MEDIC(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		switch(listitem)
  		{
			case 0:
			{
				new string[1000], var[15], count;
				foreach(new i : Player)
				{
				    if (i == playerid) continue;
					if (IsPlayerNearPlayer(playerid, i, 5.0))
					{
						format(string, sizeof(string), "[ID: %d]\t%s\n", i, GetPlayerNameEx(i));
						format(var, sizeof(var), "PID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครอยู่รอบ ๆ คุณเลย");
					return 1;
				}
				Dialog_Show(playerid, DIALOG_MEDICID, DIALOG_STYLE_TABLIST, "[ทำการรักษา]", string, "เลือก", "ปิด");
			}
			case 1:
			{
				new string[1000], var[15], count;
				foreach(new i : Player)
				{
				    if (i == playerid) continue;
					if (IsPlayerNearPlayer(playerid, i, 5.0))
					{
						format(string, sizeof(string), "[ID: %d]\t%s\n", i, GetPlayerNameEx(i));
						format(var, sizeof(var), "PID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครอยู่รอบ ๆ คุณเลย");
					return 1;
				}
				Dialog_Show(playerid, DIALOG_HEALID, DIALOG_STYLE_TABLIST, "[ทำการชุบชีวิต]", string, "เลือก", "ปิด");
			}
			case 2:
			{
			    Dialog_Show(playerid, DIALOG_CHMID, DIALOG_STYLE_INPUT, "[ค้นหา]", "กรุณาระบุไอดีผู้เล่นที่คุณต้องการจะค้นหา :", "เลือก", "ปิด");
			}
		}
	}
	return 1;
}

// DIALOG_UNCUFFID

Dialog:DIALOG_UNCUFFID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new string[256], var[15];
	    //new itemid = playerData[playerid][pItemSelect];
		format(var, sizeof(var), "PID%d", listitem);
		new userid = GetPVarInt(playerid, var);

		format(string, 16, "%d", userid);
		callcmd::uncuff(playerid, string);
	}
	return 1;
}

//

Dialog:DIALOG_CUFFID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new string[256], var[15];
	    //new itemid = playerData[playerid][pItemSelect];
		format(var, sizeof(var), "PID%d", listitem);
		new userid = GetPVarInt(playerid, var);

		format(string, 16, "%d", userid);
		callcmd::cuff(playerid, string);
	}
	return 1;
}

Dialog:DIALOG_FRISKID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new string[256], var[15];
	    //new itemid = playerData[playerid][pItemSelect];
		format(var, sizeof(var), "PID%d", listitem);
		new userid = GetPVarInt(playerid, var);

		format(string, 16, "%d", userid);
		callcmd::frisk(playerid, string);
	}
	return 1;
}

Dialog:DIALOG_TAKEID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new string[256], var[15];
	    //new itemid = playerData[playerid][pItemSelect];
		format(var, sizeof(var), "PID%d", listitem);
		new userid = GetPVarInt(playerid, var);

		format(string, 16, "%d", userid);
		callcmd::takecannabis(playerid, string);
	}
	return 1;
}

Dialog:DIALOG_DRAGID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new string[256], var[15];
	    //new itemid = playerData[playerid][pItemSelect];
		format(var, sizeof(var), "PID%d", listitem);
		new userid = GetPVarInt(playerid, var);

		format(string, 16, "%d", userid);
		callcmd::drag(playerid, string);
	}
	return 1;
}

Dialog:DIALOG_DETAINID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new string[256], var[15];
	    //new itemid = playerData[playerid][pItemSelect];
		format(var, sizeof(var), "PID%d", listitem);
		new userid = GetPVarInt(playerid, var);

		format(string, 16, "%d", userid);
		callcmd::detain(playerid, string);
	}
	return 1;
}

Dialog:DIALOG_CHMID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new userid = strval(inputtext), string[16];
		
  		format(string, 16, "%d", userid);
		callcmd::chm(playerid, string);

	}
	return 1;
}

//

Dialog:DIALOG_POLICE(playerid, response, listitem, inputtext[])
{
	if(response)
	{
		switch(listitem)
  		{
			case 0:
			{
				new string[1000], var[15], count;
				foreach(new i : Player)
				{
				    if (i == playerid) continue;
					if (IsPlayerNearPlayer(playerid, i, 5.0))
					{
						format(string, sizeof(string), "[ID: %d]\t%s\n", i, GetPlayerNameEx(i));
						format(var, sizeof(var), "PID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครอยู่รอบ ๆ คุณเลย");
					return 1;
				}
				Dialog_Show(playerid, DIALOG_CUFFID, DIALOG_STYLE_TABLIST, "[ใส่กุญแจมือ]", string, "เลือก", "ปิด");
			}
			case 1:
			{
				new string[1000], var[15], count;
				foreach(new i : Player)
				{
				    if (i == playerid) continue;
					if (IsPlayerNearPlayer(playerid, i, 5.0))
					{
						format(string, sizeof(string), "[ID: %d]\t%s\n", i, GetPlayerNameEx(i));
						format(var, sizeof(var), "PID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครอยู่รอบ ๆ คุณเลย");
					return 1;
				}
				Dialog_Show(playerid, DIALOG_FRISKID, DIALOG_STYLE_TABLIST, "[ค้นตัว]", string, "เลือก", "ปิด");
			}
			case 2:
			{
				new string[1000], var[15], count;
				foreach(new i : Player)
				{
				    if (i == playerid) continue;
					if (IsPlayerNearPlayer(playerid, i, 5.0))
					{
						format(string, sizeof(string), "[ID: %d]\t%s\n", i, GetPlayerNameEx(i));
						format(var, sizeof(var), "PID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครอยู่รอบ ๆ คุณเลย");
					return 1;
				}
				Dialog_Show(playerid, DIALOG_TAKEID, DIALOG_STYLE_TABLIST, "[ยึดของผิดกฎหมาย]", string, "เลือก", "ปิด");
			}
			case 3:
			{
			    callcmd::vfindtrunk(playerid, "\1");
			}
			case 4:
			{
				new string[1000], var[15], count;
				foreach(new i : Player)
				{
				    if (i == playerid) continue;
					if (IsPlayerNearPlayer(playerid, i, 5.0))
					{
						format(string, sizeof(string), "[ID: %d]\t%s\n", i, GetPlayerNameEx(i));
						format(var, sizeof(var), "PID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครอยู่รอบ ๆ คุณเลย");
					return 1;
				}
				Dialog_Show(playerid, DIALOG_UNCUFFID, DIALOG_STYLE_TABLIST, "[ปลดกุญแจมือ]", string, "เลือก", "ปิด");
			}
			case 5:
			{
				new string[1000], var[15], count;
				foreach(new i : Player)
				{
				    if (i == playerid) continue;
					if (IsPlayerNearPlayer(playerid, i, 5.0))
					{
						format(string, sizeof(string), "[ID: %d]\t%s\n", i, GetPlayerNameEx(i));
						format(var, sizeof(var), "PID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครอยู่รอบ ๆ คุณเลย");
					return 1;
				}
				Dialog_Show(playerid, DIALOG_DRAGID, DIALOG_STYLE_TABLIST, "[ลาก]", string, "เลือก", "ปิด");
			}
			case 6:
			{
				new string[1000], var[15], count;
				foreach(new i : Player)
				{
				    if (i == playerid) continue;
					if (IsPlayerNearPlayer(playerid, i, 5.0))
					{
						format(string, sizeof(string), "[ID: %d]\t%s\n", i, GetPlayerNameEx(i));
						format(var, sizeof(var), "PID%d", count);
						SetPVarInt(playerid, var, i);
						count++;
					}
				}
				if (!count)
				{
					SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่มีใครอยู่รอบ ๆ คุณเลย");
					return 1;
				}
				Dialog_Show(playerid, DIALOG_DETAINID, DIALOG_STYLE_TABLIST, "[ลากขึ้น/ลงรถ]", string, "เลือก", "ปิด");
			}
			case 7: // ปรับเงิน
			{
                Dialog_Show(playerid, DIALOG_FINEID, DIALOG_STYLE_INPUT, "[ปรับเงิน]", "กรุณาระบุไอดีผู้เล่นที่คุณต้องการจะปรับเงิน :", "เลือก", "ปิด");
			}
			case 8:
			{
			    callcmd::tazer(playerid, "\1");
			}
			case 9:
			{
			    Dialog_Show(playerid, DIALOG_CHMID, DIALOG_STYLE_INPUT, "[ค้นหา]", "กรุณาระบุไอดีผู้เล่นที่คุณต้องการจะค้นหา :", "เลือก", "ปิด");
			}
		}
	}
	return 1;
}

CMD:sb(playerid,params[])
{
    if(IsPlayerInAnyVehicle(playerid))
    {
    	if(!IsABike(GetPlayerVehicleID(playerid)))
	    {
			if(seatbelt{playerid})
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณได้ยกเลิกการคาดเข็มขัดนิรภัย");
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s ปลดเข็มขัดนิรภัย", GetPlayerNameEx(playerid));
				seatbelt{playerid} = false;
				return 1;
			}
			else
			{
                SendClientMessage(playerid, COLOR_YELLOW, "คุณได้คาดเข็มขัดนิรภัย");
                SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s คาดเข็มขัดนิรภัย", GetPlayerNameEx(playerid));
			    seatbelt{playerid} = true;
			    return 1;
			}
		}
	    else
	    {
	        SendClientMessage(playerid, COLOR_LIGHTRED, "จักรยานไม่สามารถคาดเข็มขัดนิรภัยได้!");
	        return 1;
	    }
    }
    else
    {
        SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่ได้อยู่ในพาหนะ");
        return 1;
    }
}

CMD:carinfo(playerid, params[])
{
	new
	    id = GetNearbyVehicle(playerid);

    if(IsVehicleOwner(playerid, id) || playerData[playerid][pVehicleKeys] == id || (carData[id][carFaction] >= 0 && carData[id][carFaction] == playerData[playerid][pFaction]))
	{
		Dialog_Show(playerid, DIALOG_VEHICLE_SET, DIALOG_STYLE_LIST, "[จัดการรถส่วนตัว]", "+ กระโปรงหน้ารถ\n+ กระโปรงหลังรถ\n+ เปิดประตู\n+ เปิดกระจกรถ\n+ ไฟหน้ารถ", "เลือก", "ปิด");
	}
	return 1;
}

Vehicle_Nearest(playerid)
{
	new
	    Float:fDistance = FLOAT_INFINITY,
	    Float:fX,
	    Float:fY,
	    Float:fZ,
	    iIndex = -1
	;
	for(new i=0;i!=MAX_VEHICLES;i++) {

	    GetVehiclePos(i, fX, fY, fZ);

		new
        	Float:temp = GetPlayerDistanceFromPoint(playerid, fX, fY, fZ);

		if (temp < fDistance && temp < 6.0)
		{
		    fDistance = temp;
		    iIndex = i;
		}
	}
	return iIndex;
}

Dialog:VehicleDoors(playerid, response, listitem, inputtext[])
{
    new vehicleid = Vehicle_Nearest(playerid);
	if(response)
	{
		switch(listitem)
  		{
			case 0:
			{
				SetVehicleParamsCarDoors(vehicleid, 1, -1, -1, -1);
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s เปิดประตูรถ %s", GetPlayerNameEx(playerid), g_arrVehicleNames[GetVehicleModel(vehicleid) - 400]);
			}
			case 1:
			{
				SetVehicleParamsCarDoors(vehicleid, -1, 1, -1, -1);
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s เปิดประตูรถ %s", GetPlayerNameEx(playerid), g_arrVehicleNames[GetVehicleModel(vehicleid) - 400]);
			}
			case 2:
			{
				SetVehicleParamsCarDoors(vehicleid, -1, -1, 1, -1);
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s เปิดประตูรถ %s", GetPlayerNameEx(playerid), g_arrVehicleNames[GetVehicleModel(vehicleid) - 400]);
			}
			case 3:
			{
				SetVehicleParamsCarDoors(vehicleid, -1, -1, -1, 1);
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "* %s เปิดประตูรถ %s", GetPlayerNameEx(playerid), g_arrVehicleNames[GetVehicleModel(vehicleid) - 400]);
			}
		}
	}
	return 1;
}

Dialog:DIALOG_VEHICLE_SET(playerid, response, listitem, inputtext[])
{
	new
	    vehicleid = GetNearbyVehicle(playerid);
	    
	if(response)
	{
		switch(listitem)
		{
			case 0: // Hood
			{
			    if (!IsDoorVehicle(vehicleid))
			        return SendClientMessage(playerid, COLOR_GREY, "รถคันนี้ไม่มีฝากระโปรงหน้ารถ");

				new FrontLeft, FrontRight, RearLeft, RearRight, WindShield, FrontBumper, RearBumper;
			    GetVehiclePanelsDamageStatus(vehicleid, FrontLeft, FrontRight, RearLeft, RearRight, WindShield, FrontBumper, RearBumper);

			    if (WindShield >= 1)
			        return SendClientMessage(playerid, COLOR_GREY, "รถคันนี้กระโปรงหน้ารถพังแล้ว");

			    if (!GetHoodStatus(vehicleid))
				{
			        SetHoodStatus(vehicleid, true);
			        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เปิดฝากระโปรงหน้ารถ", GetPlayerNameEx(playerid));
				}
				else
				{
					SetHoodStatus(vehicleid, false);
			        SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ปิดฝากระโปรงหน้ารถ", GetPlayerNameEx(playerid));
				}
			}
			case 1: // Trunk
			{
				new FrontLeft, FrontRight, RearLeft, RearRight, WindShield, FrontBumper, RearBumper;
				GetVehiclePanelsDamageStatus(vehicleid, FrontLeft, FrontRight, RearLeft, RearRight, WindShield, FrontBumper, RearBumper);

				if (!GetTrunkStatus(vehicleid))
				{
					SetTrunkStatus(vehicleid, true);
					CancelSelectTextDraw(playerid);

					SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เปิดฝากระโปรงหลังรถ", GetPlayerNameEx(playerid));
				}
				else
				{
					SetTrunkStatus(vehicleid, false);
					CancelSelectTextDraw(playerid);

					SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ปิดฝากระโปรงหลังรถ", GetPlayerNameEx(playerid));
				}
			}
			case 2: // Door
			{
				Dialog_Show(playerid, VehicleDoors, DIALOG_STYLE_LIST, "Doors", "Driver\nPassenger\nBackleft\nBackright", "Select", "Cancel");
			}
			case 3: // Windows
			{
				new
					idcar = GetPlayerVehicleID(playerid),wdriver, wpassenger, wbackleft, wbackright, string[256];

				if (!IsWindowedVehicle(idcar))
					return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้อยู่ในยานพาหนะใด ๆ ที่มีหน้าต่าง");

				GetVehicleParamsCarWindows(idcar, wdriver, wpassenger, wbackleft, wbackright);

				format(string, sizeof(string), "Driver (%s)", (wdriver) ? ("{FF0000}Down{FFFFFF}") : ("{1AF029}Up{FFFFFF}"));
				format(string, sizeof(string), "%s\nPassenger (%s)", string, (wpassenger) ? ("{FF0000}Down{FFFFFF}") : ("{1AF029}Up{FFFFFF}"));
				format(string, sizeof(string), "%s\nBackleft (%s)", string, (wbackleft) ? ("{FF0000}Down{FFFFFF}") : ("{1AF029}Up{FFFFFF}"));
				format(string, sizeof(string), "%s\nBackright (%s)", string, (wbackright) ? ("{FF0000}Down{FFFFFF}") : ("{1AF029}Up{FFFFFF}"));

				Dialog_Show(playerid, VehicleWindows, DIALOG_STYLE_LIST, "Windows", string, "Select", "Cancel");
			}
			case 4: // Lights
			{
				switch (GetLightStatus(vehicleid))
				{
					case false:
					{
						SetLightStatus(vehicleid, true);
						CancelSelectTextDraw(playerid);
						SendClientMessage(playerid, COLOR_GREEN, "> คุณได้ทำการเปิดไฟหน้ารถ !");
						SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้เปิดไฟหน้ารถ", GetPlayerNameEx(playerid));
					}
					case true:
					{
						SetLightStatus(vehicleid, false);
						CancelSelectTextDraw(playerid);
						SendClientMessage(playerid, COLOR_LIGHTRED, "> คุณได้ทำการปิดไฟหน้ารถ!");
						SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้ปิดไฟหน้ารถ", GetPlayerNameEx(playerid));
					}
				}
			}
		}
	}
	return 1;
}

stock GetVehicleHood(vehicleid, &Float:x, &Float:y, &Float:z)
{
    if (!GetVehicleModel(vehicleid) || vehicleid == INVALID_VEHICLE_ID)
	    return (x = 0.0, y = 0.0, z = 0.0), 0;

	new
	    Float:pos[7]
	;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, pos[0], pos[1], pos[2]);
	GetVehiclePos(vehicleid, pos[3], pos[4], pos[5]);
	GetVehicleZAngle(vehicleid, pos[6]);

	x = pos[3] + (floatsqroot(pos[1] + pos[1]) * floatsin(-pos[6], degrees));
	y = pos[4] + (floatsqroot(pos[1] + pos[1]) * floatcos(-pos[6], degrees));
 	z = pos[5];

	return 1;
}

stock GetVehiclePanelsDamageStatus(vehicleid, &FrontLeft, &FrontRight, &RearLeft, &RearRight, &WindShield, &FrontBumper, &RearBumper)
{
	new Panels, Doors, Lights, Tires;
	GetVehicleDamageStatus(vehicleid, Panels, Doors, Lights, Tires);
	FrontLeft = Panels & 15;
	FrontRight = Panels >> 4 & 15;
	RearLeft = Panels >> 8 & 15;
	RearRight = Panels >> 12 & 15;
	WindShield = Panels >> 16 & 15;
	FrontBumper = Panels >> 20 & 15;
	RearBumper = Panels >> 24 & 15;
	return true;
}

stock IsDoorVehicle(vehicleid)
{
	switch (GetVehicleModel(vehicleid)) {
		case 400..424, 426..429, 431..440, 442..445, 451, 455, 456, 458, 459, 466, 467, 470, 474, 475:
		    return 1;

		case 477..480, 482, 483, 486, 489, 490..492, 494..496, 498..500, 502..508, 514..518, 524..529, 533..536:
		    return 1;

		case 540..547, 549..552, 554..562, 565..568, 573, 575, 576, 578..580, 582, 585, 587..589, 596..605, 609:
			return 1;
	}
	return 0;
}

stock GetHoodStatus(vehicleid)
{
	new
	    engine,
	    lights,
	    alarm,
	    doors,
	    bonnet,
	    boot,
	    objective;

	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

	if (bonnet != 1)
		return 0;

	return 1;
}

stock SetHoodStatus(vehicleid, bool:status)
{
	new
	    engine,
	    lights,
	    alarm,
	    doors,
	    bonnet,
	    boot,
	    objective;

	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, status, boot, objective);
}

stock IsPlayerNearHood(playerid, vehicleid)
{
	new
		Float:fX,
		Float:fY,
		Float:fZ;

	GetVehicleHood(vehicleid, fX, fY, fZ);

	return (GetPlayerVirtualWorld(playerid) == GetVehicleVirtualWorld(vehicleid)) && IsPlayerInRangeOfPoint(playerid, 3.0, fX, fY, fZ);
}

stock SetTrunkStatus(vehicleid, bool:status)
{
	new
	    engine,
	    lights,
	    alarm,
	    doors,
	    bonnet,
	    boot,
	    objective;

	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, status, objective);
}

stock GetTrunkStatus(vehicleid)
{
	new
	    engine,
	    lights,
	    alarm,
	    doors,
	    bonnet,
	    boot,
	    objective;

	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

	if (boot != 1)
		return 0;

	return 1;
}

stock IsWindowedVehicle(vehicleid)
{
	static const g_aWindowStatus[] = {
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	    1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1,
	    1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1,
	    1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	    1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0,
	    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	    1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,
		1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0
	};
	new modelid = GetVehicleModel(vehicleid);

    if (modelid < 400 || modelid > 611)
        return 0;

    return (g_aWindowStatus[modelid - 400]);
}

stock GetLightStatus(vehicleid)
{
	new
	    engine,
	    lights,
	    alarm,
	    doors,
	    bonnet,
	    boot,
	    objective;

	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

	if (lights != 1)
		return 0;

	return 1;
}

stock SetLightStatus(vehicleid, bool:status)
{
	new
	    engine,
	    lights,
	    alarm,
	    doors,
	    bonnet,
	    boot,
	    objective;

	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return SetVehicleParamsEx(vehicleid, engine, status, alarm, doors, bonnet, boot, objective);
}

Dialog:VehicleWindows(playerid, response, listitem, inputtext[])
{
	if (response)
	{

		switch(listitem)
		{
		    case 0:
		    {
		        callcmd::vehwd(playerid, "driver");
			    //cmd_vehwd(playerid, "driver");
		    }
		    case 1:
		    {
		        callcmd::vehwd(playerid, "passenger");
			    //cmd_vehwd(playerid, "passenger");
		    }
		    case 2:
		    {
		        callcmd::vehwd(playerid, "backleft");
			    //cmd_vehwd(playerid, "backleft");
		    }
		    case 3:
		    {
		        callcmd::vehwd(playerid, "backright");
			    //cmd_vehwd(playerid, "backright");
		    }
		}

		callcmd::vehwd(playerid, "/");
	}
	return 1;
}

CMD:vehwd(playerid, params[])
{
    new item[16];

    new idcar = GetPlayerVehicleID(playerid);
	if (!IsWindowedVehicle(idcar)) return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้อยู่ในยานพาหนะใด ๆ ที่มีหน้าต่าง");

  	if(sscanf(params, "s[32]", item)) {
	 	SendClientMessage(playerid, -1, "การใช้งาน : /vehwd [item]");
   		SendClientMessage(playerid, COLOR_YELLOW, "[ITEMS]:{FFFFFF} driver, passenger, backleft, backright");
	}
	else
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
		new wdriver, wpassenger, wbackleft, wbackright;
		GetVehicleParamsCarWindows(vehicleid, wdriver, wpassenger, wbackleft, wbackright);

		if(strcmp(item, "driver", true) == 0)
		{
		    if(wdriver == VEHICLE_PARAMS_OFF)
		    {
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "หน้าต่างของรถ %s ฝั่งคนขับถูกปิด (( %s ))", g_arrVehicleNames[GetVehicleModel(idcar) - 400], GetPlayerNameEx(playerid));
                //ShowPlayerFooter(playerid, "You have ~r~roll up ~w~the driver's side window!");
				SetVehicleParamsCarWindows(vehicleid, 1, wpassenger, wbackleft, wbackright);
			}
			else if(wdriver == VEHICLE_PARAMS_ON || wdriver == VEHICLE_PARAMS_UNSET)
			{
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "หน้าต่างของรถ %s ฝั่งคนขับถูกเปิด (( %s ))", g_arrVehicleNames[GetVehicleModel(idcar) - 400], GetPlayerNameEx(playerid));
                //ShowPlayerFooter(playerid, "You have ~g~roll down ~w~the driver's side window!");
				SetVehicleParamsCarWindows(vehicleid, 0, wpassenger, wbackleft, wbackright);
			}
		}
		if(strcmp(item, "passenger", true) == 0)
		{
		    if(wpassenger == VEHICLE_PARAMS_OFF)
		    {
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "หน้าต่างของรถ %s ฝั่งผู้โดยสารถูกปิด (( %s ))", g_arrVehicleNames[GetVehicleModel(idcar) - 400], GetPlayerNameEx(playerid));
                //ShowPlayerFooter(playerid, "You have ~r~roll up ~w~the passenger's side window!");
				SetVehicleParamsCarWindows(vehicleid, wdriver, 1, wbackleft, wbackright);
			}
			else if(wpassenger == VEHICLE_PARAMS_ON || wpassenger == VEHICLE_PARAMS_UNSET)
			{
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "หน้าต่างของรถ %s ฝั่งผู้โดยสารถูกเปิด (( %s ))", g_arrVehicleNames[GetVehicleModel(idcar) - 400], GetPlayerNameEx(playerid));
                //ShowPlayerFooter(playerid, "You have ~g~roll down ~w~the passenger's side window!");
				SetVehicleParamsCarWindows(vehicleid, wdriver, 0, wbackleft, wbackright);
			}
		}
		if(strcmp(item, "backleft", true) == 0)
		{
      		if(wbackleft == VEHICLE_PARAMS_OFF)
		    {
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "หน้าต่างหลังซ้ายของรถ %s ถูกปิด (( %s ))", g_arrVehicleNames[GetVehicleModel(idcar) - 400], GetPlayerNameEx(playerid));
                //ShowPlayerFooter(playerid, "You have ~r~roll up ~w~the window seat left behind!");
				SetVehicleParamsCarWindows(vehicleid, wdriver, wpassenger, 1, wbackright);
			}
			else if(wbackleft == VEHICLE_PARAMS_ON || wbackleft == VEHICLE_PARAMS_UNSET)
			{
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "หน้าต่างหลังซ้ายของรถ %s ถูกเปิด (( %s ))", g_arrVehicleNames[GetVehicleModel(idcar) - 400], GetPlayerNameEx(playerid));
                //ShowPlayerFooter(playerid, "You have ~g~roll down ~w~the window seat left behind!");
				SetVehicleParamsCarWindows(vehicleid, wdriver, wpassenger, 0, wbackright);
			}
		}
		if(strcmp(item, "backright", true) == 0)
		{
		    if(wbackright == VEHICLE_PARAMS_OFF)
		    {
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "หน้าต่างหลังขวาของรถ %s ถูกปิด (( %s ))", g_arrVehicleNames[GetVehicleModel(idcar) - 400], GetPlayerNameEx(playerid));
                //ShowPlayerFooter(playerid, "You have ~r~roll up ~w~the window seat right behind!");
				SetVehicleParamsCarWindows(vehicleid, wdriver, wpassenger, wbackleft, 1);
			}
			else if(wbackright == VEHICLE_PARAMS_ON || wbackright == VEHICLE_PARAMS_UNSET)
			{
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "หน้าต่างหลังขวาของรถ %s ถูกเปิด (( %s ))", g_arrVehicleNames[GetVehicleModel(idcar) - 400], GetPlayerNameEx(playerid));
                //ShowPlayerFooter(playerid, "You have ~g~roll down ~w~the window seat right behind!");
				SetVehicleParamsCarWindows(vehicleid, wdriver, wpassenger, wbackleft, 0);
			}
		}
	}
	return 1;
}

// --> ระบบแต่งตัว
cl_DressPlayer(playerid)
{
	for (new id = 0; id < MAX_CLOTHES; id ++)
	{
		if(ClothingData[playerid][id][cl_object] != INVALID_OBJECT_ID && ClothingData[playerid][id][cl_equip]) {
			SetPlayerAttachedObject(playerid, ClothingData[playerid][id][cl_slot], ClothingData[playerid][id][cl_object], ClothingData[playerid][id][cl_bone], ClothingData[playerid][id][cl_x], ClothingData[playerid][id][cl_y],
			ClothingData[playerid][id][cl_z], ClothingData[playerid][id][cl_rx], ClothingData[playerid][id][cl_ry], ClothingData[playerid][id][cl_rz], ClothingData[playerid][id][cl_scalex], ClothingData[playerid][id][cl_scaley], ClothingData[playerid][id][cl_scalez], ClothingData[playerid][id][cl_mc1], ClothingData[playerid][id][cl_mc2]);
		}
	}
}

cl_ResetDressPlayer(playerid)
{
	for (new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++)
		RemovePlayerAttachedObject(playerid, i);

	for (new id = 0; id < MAX_CLOTHES; id ++)
	{
		if(ClothingData[playerid][id][cl_object] != INVALID_OBJECT_ID && ClothingData[playerid][id][cl_equip]) {
			ClothingData[playerid][id][cl_equip] = 0;
		}
	}
}

cl_ShowClothingMenu(playerid)
{
	new cl_str[675], count;
	for (new i = 0; i < MAX_CLOTHES; i ++)
	{
	    if(ClothingData[playerid][i][cl_object] != INVALID_OBJECT_ID)
	    {
		    cl_dataslot[playerid][count] = i;
			format(cl_str, sizeof(cl_str), "%s"EMBED_YELLOW"%d. "EMBED_WHITE"%s (Index: %d)\n", cl_str, i + 1, ClothingData[playerid][i][cl_name], ClothingData[playerid][i][cl_slot] + 1);
			count++;
		}
	}
	if(count) Dialog_Show(playerid, ClothingList, DIALOG_STYLE_LIST, "อะไรคือสิ่งที่คุณต้องการแก้ไข ?", cl_str, "เลือก", "<< กลับ");
	return 1;
}

/*SaveClothing(playerid) {

    new query[256];
    for (new id = 0; id < MAX_CLOTHES; id ++)
	{
	    if(ClothingData[playerid][id][cl_object] != INVALID_OBJECT_ID)
	    {
		 	mysql_format(g_SQL, query,sizeof(query),"UPDATE clothing SET object = '%d', bone = '%d', slot = '%d', equip = '%d', name = '%e', materialColor1 = %d, materialColor2 = %d WHERE id = '%d' AND owner = '%d' LIMIT 1",
		    ClothingData[playerid][id][cl_object],
		    ClothingData[playerid][id][cl_bone],
		    ClothingData[playerid][id][cl_slot],
			ClothingData[playerid][id][cl_equip],
			ClothingData[playerid][id][cl_name],
			ClothingData[playerid][id][cl_mc1],
			ClothingData[playerid][id][cl_mc2],
			ClothingData[playerid][id][cl_sid],
			playerData[playerid][pID]);
			mysql_query(g_SQL, query);
		}
	}
    return 1;
}*/

CMD:clothes(playerid, params[])
{
    return cl_ShowClothingMenu(playerid);
}

CMD:clothinghelp(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");

	SendClientMessage(playerid, COLOR_WHITE,"*** HELP *** พิมพ์คำสั่งสำหรับความช่วยเหลือเพิ่มเติม");
	SendClientMessage(playerid, COLOR_GREY,"*** CLOTHING *** /clothing [ชื่อ]");
	SendClientMessage(playerid, COLOR_GREY, "ชื่อที่ใช้ได้: (p)lace, (d)rop, (a)djust, (g)ive");
	return 1;
}

CMD:buyitem(playerid, params[])
{
	new
	    itemid;

	if (playerData[playerid][pVip] == 0)
		return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่ใช่ VIP");

    if(IsPlayerInRangeOfPoint(playerid, 5.0, 1126.3021,-1370.0323,13.9844)) cl_buying[playerid]=BUYSPORTS;
    else if(IsPlayerInRangeOfPoint(playerid, 5.0, 1119.1003,-1370.0322,13.9844)) cl_buying[playerid]=BUYZIP;

	if (sscanf(params, "d", itemid))
 	{
		new str[4096];
		switch(cl_buying[playerid])
		{
		    case BUYSPORTS:
		    {
				for(new i=0;i!=sizeof(cl_SportsData);++i) format(str, 3600, "%s %d.%s\t{48E348}${FFFFFF}%d"EMBED_WHITE"\n", str, i, cl_SportsData[i][e_name], cl_SportsData[i][e_price]);
		        Dialog_Show(playerid, buyClothing, DIALOG_STYLE_TABLIST, "{FFFFFF}[{03BB0C}ร้านขายของแต่งตัว{FFFFFF}]", str, "Ok", "Cancel");
		    }
		    case BUYZIP:
		    {
				// 3597

				for(new i=0;i!=sizeof(cl_ZipData);++i)
				{
				    if(i == 91)
				    {
				        format(str, 3600, "%s"EMBED_YELLOW"หน้าถัดไป!"EMBED_WHITE"", str);
						break;
				    }
				    format(str, 3600, "%s %d.%s\t{48E348}${FFFFFF}%d"EMBED_WHITE"\n", str, i, cl_ZipData[i][e_name], cl_ZipData[i][e_price]);
				}
		        Dialog_Show(playerid, buyClothing, DIALOG_STYLE_TABLIST, "{FFFFFF}[{03BB0C}ร้านขายของแต่งตัว{FFFFFF}]", str, "Ok", "Cancel");
		    }
		}
		return 1;
	}

	if((cl_buyingpslot[playerid] = ClothingExistSlot(playerid)) != -1) {
		switch(PurchaseClothing(playerid, itemid)) {
			case -2: {
				SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่สามารถซื้อได้มากกว่านี้แล้ว");
			}
			case -1: {
				SendClientMessage(playerid, COLOR_LIGHTRED, "ขออภัยคุณมี Score ไม่พอที่จะซื้อ !!");
			}
			case 0: {
				SendClientMessage(playerid, COLOR_LIGHTRED, "ไม่สามารถซื้อไอเท็มเครื่องแต่งกายไอดีนี้ได้");
			}
		}
	}
	else {
		SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่สามารถซื้อได้มากกว่านี้แล้ว");
	}

	return 1;
}

CMD:clothing(playerid,params[])
{
	new
	    name[16],
	    userid,
	    clothingid;

	if (sscanf(params, "s[16]D(-1)U(65535)", name, clothingid, userid))
 	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "การใช้: "EMBED_WHITE"/clothing place | adjust | drop | give");
		cl_ShowClothingMenu(playerid);
		return 1;
	}
	if(ClothingCooldown[playerid] == 0)
	{
        clothingid = clothingid-1;

		if (!strcmp(name, "place", true) || !strcmp(name, "p", true))
		{
		    if (clothingid < 0)
			{
				for (new id = 0; id < MAX_CLOTHES; id ++)
				{
				    if(ClothingData[playerid][id][cl_object] != INVALID_OBJECT_ID) {
				        SendClientMessageEx(playerid, COLOR_GREY, "%d: %s", id+1, ClothingData[playerid][id][cl_name]);
	            	}
	            }
				SendClientMessage(playerid, COLOR_LIGHTRED, "การใช้: "EMBED_WHITE"/clothing place [ไอดีเครื่องแต่งกาย]");
			    return 1;
			}

			if(clothingid < MAX_CLOTHES && ClothingData[playerid][clothingid][cl_object] != INVALID_OBJECT_ID) {
			if(ClothingData[playerid][clothingid][cl_equip]) {

				RemovePlayerAttachedObject(playerid, ClothingData[playerid][clothingid][cl_slot]);
				ClothingData[playerid][clothingid][cl_equip] = 0;
			}
			else
			{
	   			SetPlayerAttachedObject(playerid, ClothingData[playerid][clothingid][cl_slot], ClothingData[playerid][clothingid][cl_object], ClothingData[playerid][clothingid][cl_bone], ClothingData[playerid][clothingid][cl_x], ClothingData[playerid][clothingid][cl_y],
				ClothingData[playerid][clothingid][cl_z], ClothingData[playerid][clothingid][cl_rx], ClothingData[playerid][clothingid][cl_ry], ClothingData[playerid][clothingid][cl_rz], ClothingData[playerid][clothingid][cl_scalex], ClothingData[playerid][clothingid][cl_scaley],
				ClothingData[playerid][clothingid][cl_scalez], ClothingData[playerid][clothingid][cl_mc1], ClothingData[playerid][clothingid][cl_mc2]);
				SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวมใส่ "EMBED_YELLOW"%s", ClothingData[playerid][clothingid][cl_name]);

				for (new i = 0; i < MAX_CLOTHES; i ++)
				{
					if(ClothingData[playerid][i][cl_object] != INVALID_OBJECT_ID && ClothingData[playerid][i][cl_equip] && ClothingData[playerid][i][cl_slot] == ClothingData[playerid][clothingid][cl_slot])
					{
						ClothingData[playerid][i][cl_equip] = 0;
					}
				}
				ClothingData[playerid][clothingid][cl_equip] = 1;
			}
			}
            else SendClientMessage(playerid, COLOR_LIGHTRED, "ไม่มีอะไรอยู่ที่นั้น..");
		}
		else if (!strcmp(name, "drop", true) || !strcmp(name, "d", true))
		{
      		if (clothingid < 0)
			{
				for (new id = 0; id < MAX_CLOTHES; id ++)
				{
				    if(ClothingData[playerid][id][cl_object] != INVALID_OBJECT_ID) {
				        SendClientMessageEx(playerid, COLOR_GREY, "%d: %s", id+1, ClothingData[playerid][id][cl_name]);
	            	}
	            }
				SendClientMessage(playerid, COLOR_LIGHTRED, "การใช้: "EMBED_WHITE"/clothing drop [ไอดีเครื่องแต่งกาย]");
			    return 1;
			}

			if(clothingid < MAX_CLOTHES && ClothingData[playerid][clothingid][cl_object] != INVALID_OBJECT_ID) {

				if(IsPlayerAttachedObjectSlotUsed(playerid, ClothingData[playerid][clothingid][cl_slot])) RemovePlayerAttachedObject(playerid, ClothingData[playerid][clothingid][cl_slot]);
                ClothingData[playerid][clothingid][cl_object] = INVALID_OBJECT_ID;

				new
		    		query[128];

				format(query,sizeof(query),"DELETE FROM `clothing` WHERE owner = '%d' and id = '%d'",playerData[playerid][pID], ClothingData[playerid][clothingid][cl_sid]);
				mysql_query(g_SQL, query);

				SendClientMessageEx(playerid, COLOR_GREY, "   คุณได้ทิ้ง %s#%d", ClothingData[playerid][clothingid][cl_name], clothingid + 1);

				ClothingCooldown[playerid] = 5;
			}
			else SendClientMessage(playerid, COLOR_LIGHTRED, "ไม่มีอะไรอยู่ที่นั้น..");

		}
		else if (!strcmp(name, "adjust", true) || !strcmp(name, "a", true))
		{
      		if (clothingid < 0)
			{
				for (new id = 0; id < MAX_CLOTHES; id ++)
				{
				    if(ClothingData[playerid][id][cl_object] != INVALID_OBJECT_ID) {
				        SendClientMessageEx(playerid, COLOR_GREY, "%d: %s", id+1, ClothingData[playerid][id][cl_name]);
	            	}
	            }
				SendClientMessage(playerid, COLOR_LIGHTRED, "การใช้: "EMBED_WHITE"/clothing adjust [ไอดีเครื่องแต่งกาย]");
			    return 1;
			}

            if(clothingid < MAX_CLOTHES && ClothingData[playerid][clothingid][cl_object] != INVALID_OBJECT_ID) {
                cl_selected[playerid] = clothingid;
			    SetPlayerAttachedObject(playerid, ClothingData[playerid][clothingid][cl_slot], ClothingData[playerid][clothingid][cl_object], ClothingData[playerid][clothingid][cl_bone], ClothingData[playerid][clothingid][cl_x], ClothingData[playerid][clothingid][cl_y],
				ClothingData[playerid][clothingid][cl_z], ClothingData[playerid][clothingid][cl_rx], ClothingData[playerid][clothingid][cl_ry], ClothingData[playerid][clothingid][cl_rz], ClothingData[playerid][clothingid][cl_scalex], ClothingData[playerid][clothingid][cl_scaley], ClothingData[playerid][clothingid][cl_scalez], ClothingData[playerid][clothingid][cl_mc1], ClothingData[playerid][clothingid][cl_mc2]);

				ApplyAnimation(playerid, "CLOTHES", "CLO_Buy", 4.1, 0, 1,1, 1, 0, 1);
				EditAttachedObject(playerid, ClothingData[playerid][clothingid][cl_slot]);
				EditClothing[playerid] = 1;
			}
			else SendClientMessage(playerid, COLOR_LIGHTRED, "ไม่มีอะไรอยู่ที่นั้น..");
		}
		else if (!strcmp(name, "give", true) || !strcmp(name, "g", true))
		{
      		if (clothingid < 0)
			{
				for (new id = 0; id < MAX_CLOTHES; id ++)
				{
				    if(ClothingData[playerid][id][cl_object] != INVALID_OBJECT_ID) {
				        SendClientMessageEx(playerid, COLOR_GREY, "%d: %s", id+1, ClothingData[playerid][id][cl_name]);
	            	}
	            }

				SendClientMessage(playerid, COLOR_LIGHTRED, "การใช้: "EMBED_WHITE"/clothing give [ไอดีเครื่องแต่งกาย] [ไอดีผู้เล่น/ชื่อบางส่วน]");
			    return 1;
			}


			if(userid == INVALID_PLAYER_ID) {
				return SendClientMessage(playerid, COLOR_LIGHTRED, "การใช้: "EMBED_WHITE"/clothing give [ไอดีเครื่องแต่งกาย] [ไอดีผู้เล่น/ชื่อบางส่วน]");
			}

			if (!IsPlayerNearPlayer(playerid, userid, 5.0))
                return SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้อยู่ใกล้คุณ");

			if(clothingid < MAX_CLOTHES && ClothingData[playerid][clothingid][cl_object] != INVALID_OBJECT_ID) {

				new clotingName[32];
				format(clotingName, 32, GetClotingItemName(ClothingData[playerid][clothingid][cl_object]));

				if(AddPlayerClothing(
				userid,
				ClothingData[playerid][clothingid][cl_object],
				ClothingData[playerid][clothingid][cl_x],
				ClothingData[playerid][clothingid][cl_y],
				ClothingData[playerid][clothingid][cl_z],
				ClothingData[playerid][clothingid][cl_rx],
				ClothingData[playerid][clothingid][cl_ry],
				ClothingData[playerid][clothingid][cl_rz],
				ClothingData[playerid][clothingid][cl_bone],
				ClothingData[playerid][clothingid][cl_slot],
				ClothingData[playerid][clothingid][cl_scalex],
				ClothingData[playerid][clothingid][cl_scaley],
				ClothingData[playerid][clothingid][cl_scalez],
				ClothingData[playerid][clothingid][cl_mc1],
				ClothingData[playerid][clothingid][cl_mc2],
				clotingName,
				ClothingData[playerid][clothingid][cl_sid]) != -1)
				{
				    new query[150];
					mysql_format(g_SQL, query,sizeof(query),"UPDATE clothing SET owner = %d, name = '%e', equip = 0 WHERE owner = '%d' and id = '%d'", playerData[userid][pID], clotingName, playerData[playerid][pID], ClothingData[playerid][clothingid][cl_sid]);
					mysql_query(g_SQL, query);

					if(IsPlayerAttachedObjectSlotUsed(playerid, ClothingData[playerid][clothingid][cl_slot])) RemovePlayerAttachedObject(playerid, ClothingData[playerid][clothingid][cl_slot]);

					SendClientMessageEx(userid, COLOR_GREY, "   คุณได้รับ %s#%d จาก %s", clotingName, clothingid + 1, GetPlayerNameEx(playerid));
					SendClientMessageEx(playerid, COLOR_GREY, "   คุณได้ให้ %s#%d กับ %s", ClothingData[playerid][clothingid][cl_name], clothingid + 1, GetPlayerNameEx(userid));

                    ClothingData[playerid][clothingid][cl_object] = INVALID_OBJECT_ID;
					ClothingCooldown[playerid] = 5;
				}
				else return SendClientMessage(playerid, COLOR_LIGHTRED, "ไม่สามารถให้สิ่งของได้");


                ClothingCooldown[playerid] = 5;
            }
			else SendClientMessage(playerid, COLOR_LIGHTRED, "ไม่มีอะไรอยู่ที่นั้น..");

		}
	}
	else SendClientMessageEx(playerid, COLOR_LIGHTRED, "กรุณารอ %d วินาทีก่อนที่จะพยายามใช้คำสั่ง /clothing อีกครั้ง",ClothingCooldown[playerid]);

	return 1;
}

CountPlayerClothing(playerid)
{
	new count;
	for (new id = 0; id < MAX_CLOTHES; id ++) if(ClothingData[playerid][id][cl_object] != INVALID_OBJECT_ID) count++;
	return count;
}

AddPlayerClothing(playerid,modelid,Float:fOffsetX,Float:fOffsetY,Float:fOffsetZ,Float:fRotX,Float:fRotY,Float:fRotZ,boneid,index,Float:fScaleX,Float:fScaleY,Float:fScaleZ, fmc1, fmc2, cxName[], sid = -1)
{
	new num = CountPlayerClothing(playerid), bool:success, clothingid;
	switch(playerData[playerid][pVip])
	{
		case 0: if(num >= 6) return -1;
		case 1: if(num >= 8) return -1;
		case 2: if(num >= 10) return -1;
		case 3: if(num >= 15) return -1;
	}

	for (new id = 0; id < MAX_CLOTHES; id ++)
	{
	    if(ClothingData[playerid][id][cl_object] == INVALID_OBJECT_ID)
	    {
			ClothingData[playerid][id][cl_sid] = sid;
			ClothingData[playerid][id][cl_object] = modelid;
			ClothingData[playerid][id][cl_x] = fOffsetX;
			ClothingData[playerid][id][cl_y] = fOffsetY;
			ClothingData[playerid][id][cl_z] = fOffsetZ;
			ClothingData[playerid][id][cl_rx] = fRotX;
			ClothingData[playerid][id][cl_ry] = fRotY;
			ClothingData[playerid][id][cl_rz] = fRotZ;
			ClothingData[playerid][id][cl_scalex] = fScaleX;
			ClothingData[playerid][id][cl_scaley] = fScaleY;
			ClothingData[playerid][id][cl_scalez] = fScaleZ;
			ClothingData[playerid][id][cl_mc1] = fmc1;
			ClothingData[playerid][id][cl_mc2] = fmc2;
	    	ClothingData[playerid][id][cl_bone] = boneid;
			ClothingData[playerid][id][cl_slot] = index;
			ClothingData[playerid][id][cl_equip] = 0;
			format(ClothingData[playerid][id][cl_name], 32, cxName);
			clothingid = id;
	        success = true;
	        break;
	    }
	}
	if(success)
	{
	    return clothingid;
	}
	return -1;
}

hook OP_EditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	if(EditClothing[playerid] == 1)
	{
		if(response)
		{
		    new str[1024];

		    format(str,sizeof(str),"UPDATE clothing SET x = '%f', y = '%f', z = '%f', rx = '%f', ry = '%f', rz = '%f', scalex = '%f', scaley = '%f', scalez = '%f' WHERE id = '%d' AND owner = '%d' LIMIT 1",
		    fOffsetX,
		    fOffsetY,
		    fOffsetZ,
			fRotX,
			fRotY,
			fRotZ,
			fScaleX,
			fScaleY,
			fScaleZ,
			ClothingData[playerid][cl_selected[playerid]][cl_sid],
			playerData[playerid][pID]);
			mysql_query(g_SQL, str);

			ClothingData[playerid][cl_selected[playerid]][cl_x] = fOffsetX;
			ClothingData[playerid][cl_selected[playerid]][cl_y] = fOffsetY;
			ClothingData[playerid][cl_selected[playerid]][cl_z] = fOffsetZ;
			ClothingData[playerid][cl_selected[playerid]][cl_rx] = fRotX;
			ClothingData[playerid][cl_selected[playerid]][cl_ry] = fRotY;
			ClothingData[playerid][cl_selected[playerid]][cl_rz] = fRotZ;
			ClothingData[playerid][cl_selected[playerid]][cl_scalex] = fScaleX;
			ClothingData[playerid][cl_selected[playerid]][cl_scaley] = fScaleY;
			ClothingData[playerid][cl_selected[playerid]][cl_scalez] = fScaleZ;

		}
		ClearAnimations(playerid);

		RemovePlayerClothing(playerid);

		GameTextForPlayer(playerid, "~g~UPDATED YOUR ITEM!~n~~w~Use ~y~/clothing ~w~to put it back on.", 3000, 4);

		EditClothing[playerid] = 0;
	}


	if(EditClothing[playerid] == 2)
	{
		if(response)
		{//cl_SportsData[cl_buyingslot[playerid]][e_model]
		    new str[1024], money, name[32];

			switch(cl_buying[playerid])
			{
			    case BUYSPORTS: for(new i=0;i!=sizeof(cl_SportsData);++i) if(cl_SportsData[i][e_model] == modelid) format(name, 32, cl_SportsData[i][e_name]), money = cl_SportsData[i][e_price];
                case BUYZIP: for(new i=0;i!=sizeof(cl_ZipData);++i) if(cl_ZipData[i][e_model] == modelid) format(name, 32, cl_ZipData[i][e_name]), money = cl_ZipData[i][e_price];
			}

			if(!strcmp(name, "Holster", true))
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมีใบอนุญาตในการพกอาวุธเพื่อจะซื้อไอเท็มชิ้นนี้");
				RemovePlayerClothing(playerid);
				cl_ResetDressPlayer(playerid);

				cl_buying[playerid]=0; cl_buyingpslot[playerid]=-1;
				ClearAnimations(playerid);
				EditClothing[playerid] = 0;
				return 1;
			}

			if (cl_buying[playerid] != BUYSPECIAL)
			{
				if (GetPlayerMoneyEx(playerid) >= money)
				{
					new id = -1;
					if((id = AddPlayerClothing(playerid,modelid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,boneid,index,fScaleX,fScaleY,fScaleZ,0,0,name)) != -1)
					{
						format(str,sizeof(str),"INSERT INTO `clothing` (`object`, `x`, `y`, `z`, `rx`, `ry`, `rz`, `bone`, `slot`, `owner`, `equip`, `scalex`, `scaley`, `scalez`, `name`) VALUES ('%d', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d', '%d', '0', '%f', '%f', '%f', '%s')",
						modelid,
						fOffsetX,
						fOffsetY,
						fOffsetZ,
						fRotX,
						fRotY,
						fRotZ,
						boneid,
						index,
						playerData[playerid][pID],
						fScaleX,
						fScaleY,
						fScaleZ,
						name);
						mysql_tquery(g_SQL, str, "OnQueryBuyClothing", "dd", playerid, id);

						GivePlayerMoneyEx(playerid, -money);
						SendClientMessage(playerid, COLOR_WHITE, "ใช้ "EMBED_YELLOW"/clothing"EMBED_WHITE" เพื่อแก้ไขไอเท็มเครื่องแต่งกายของคุณ");

						GameTextForPlayer(playerid, "~g~Enjoy your purchase!~n~~w~Use ~y~/clothing ~w~to edit your clothing items.", 3000, 4);
					}
					else {
						SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่สามารถซื้อได้มากกว่านี้แล้ว");
					}
				}
				else SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่สามารถจ่ายมันได้ขออถัยด้วย");
			}
		}
		RemovePlayerClothing(playerid);
        cl_ResetDressPlayer(playerid);

		cl_buying[playerid]=0; cl_buyingpslot[playerid]=-1;
		ClearAnimations(playerid);
	    EditClothing[playerid] = 0;
	}
	return 1;

}

GetClotingItemName(modelid) {
	new clotingName[32];
	for(new i=0;i!=sizeof(cl_SportsData);++i) if(cl_SportsData[i][e_model] == modelid) {
		format(clotingName, 32, cl_SportsData[i][e_name]);
		return clotingName;
	}
	for(new i=0;i!=sizeof(cl_ZipData);++i) if(cl_ZipData[i][e_model] == modelid) {
		format(clotingName, 32, cl_ZipData[i][e_name]);
		return clotingName;
	}
	format(clotingName, 32, "Unknown");
	return clotingName;
}

RemovePlayerClothing(playerid)
{
	for (new i = 0; i != MAX_PLAYER_ATTACHED_OBJECTS; i ++)
		RemovePlayerAttachedObject(playerid, i);
}

ClothingExistSlot(playerid)
{
	new query[128], slot = -1;
	for(new i = 0; i!=MAX_CLOTHES;++i)
	{
		format(query,sizeof(query),"SELECT * FROM clothing WHERE owner = '%d' AND slot = %d",playerData[playerid][pID], i);
		mysql_query(g_SQL, query);

		if(!cache_num_rows())
		{
		    slot = i;
		    break;
		}
	}
	if(slot > 7) slot = 7;
	return slot;
}


PurchaseClothing(playerid, slot)
{
	new num = CountPlayerClothing(playerid);
	switch(playerData[playerid][pVip])
	{
		case 0: if(num >= 6) return -2;
		case 1: if(num >= 8) return -2;
		case 2: if(num >= 10) return -2;
		case 3: if(num >= 15) return -2;
	}

	new model, bone, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, Float:sx, Float:sy, Float:sz;
	switch(cl_buying[playerid])
	{
	    case BUYSPORTS:
	    {
			if(slot < 0 || slot >= sizeof(cl_SportsData)) return 0;
			if(GetPlayerMoneyEx(playerid) < cl_SportsData[slot][e_price]) return -1;

	        model = cl_SportsData[slot][e_model];
	        bone = cl_SportsData[slot][e_bone];
	        x = cl_SportsData[slot][e_x];
	        y = cl_SportsData[slot][e_y];
	        z = cl_SportsData[slot][e_z];
	        rx = cl_SportsData[slot][e_rx];
	        ry = cl_SportsData[slot][e_ry];
	        rz = cl_SportsData[slot][e_rz];
	        sx = cl_SportsData[slot][e_sx];
	        sy = cl_SportsData[slot][e_sy];
	        sz = cl_SportsData[slot][e_sz];
	    }
	    case BUYZIP:
	    {
	        if(slot < 0 || slot >= sizeof(cl_ZipData)) return 0;
			if(GetPlayerMoneyEx(playerid) < cl_ZipData[slot][e_price]) return -1;

	        model = cl_ZipData[slot][e_model];
	        bone = cl_ZipData[slot][e_bone];
	        x = cl_ZipData[slot][e_x];
	        y = cl_ZipData[slot][e_y];
	        z = cl_ZipData[slot][e_z];
	        rx = cl_ZipData[slot][e_rx];
	        ry = cl_ZipData[slot][e_ry];
	        rz = cl_ZipData[slot][e_rz];
	        sx = cl_ZipData[slot][e_sx];
	        sy = cl_ZipData[slot][e_sy];
	        sz = cl_ZipData[slot][e_sz];
	    }
	}

	/*EditAttachedObject(playerid, cl_buyingpslot[playerid]);
	EditClothing[playerid] = 2;

	SendClientMessage(playerid, COLOR_WHITE, "ข้อแนะ: ใช้ "EMBED_YELLOW"SPACE"EMBED_WHITE" เพื่อดูรอบ ๆ กด "EMBED_YELLOW"ESC"EMBED_WHITE" เพื่อยกเลิก");
	SendClientMessage(playerid, COLOR_LIGHTRED, "ใส่เครื่องแต่งกายตำแหน่งที่ไม่เหมาะสมมีโทษ");*/

	SetPlayerAttachedObject(playerid, cl_buyingpslot[playerid], model, bone, x, y, z, rx, ry, rz, sx, sy, sz);
	ApplyAnimation(playerid, "CLOTHES", "CLO_Buy", 4.1, 0, 0,0, 1, 0, 1);

	new str[1024], money, name[32];

	switch(cl_buying[playerid])
	{
		case BUYSPORTS: for(new i=0;i!=sizeof(cl_SportsData);++i) if(cl_SportsData[i][e_model] == model) format(name, 32, cl_SportsData[i][e_name]), money = cl_SportsData[i][e_price];
		case BUYZIP: for(new i=0;i!=sizeof(cl_ZipData);++i) if(cl_ZipData[i][e_model] == model) format(name, 32, cl_ZipData[i][e_name]), money = cl_ZipData[i][e_price];
	}

	if(!strcmp(name, "Holster", true))
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมีใบอนุญาตในการพกอาวุธเพื่อจะซื้อไอเท็มชิ้นนี้");
		RemovePlayerClothing(playerid);
		cl_ResetDressPlayer(playerid);

		cl_buying[playerid]=0; cl_buyingpslot[playerid]=-1;
		ClearAnimations(playerid);
		EditClothing[playerid] = 0;
		return 1;
	}

	if (cl_buying[playerid] != BUYSPECIAL)
	{
		if (GetPlayerMoneyEx(playerid) >= money)
		{
			new id = -1;
			if((id = AddPlayerClothing(playerid,model,x,y,z,rx,ry,rz,bone,cl_buyingpslot[playerid],sx,sy,sz,0,0,name)) != -1)
			{
				format(str,sizeof(str),"INSERT INTO `clothing` (`object`, `x`, `y`, `z`, `rx`, `ry`, `rz`, `bone`, `slot`, `owner`, `equip`, `scalex`, `scaley`, `scalez`, `name`) VALUES ('%d', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d', '%d', '0', '%f', '%f', '%f', '%s')",
				model,
				x,
				y,
				z,
				rx,
				ry,
				rz,
				bone,
				cl_buyingpslot[playerid],
				playerData[playerid][pID],
				sx,
				sy,
				sz,
				name);
				mysql_tquery(g_SQL, str, "OnQueryBuyClothing", "dd", playerid, id);

				GivePlayerMoneyEx(playerid, -money);
				SendClientMessage(playerid, COLOR_WHITE, "ใช้ "EMBED_YELLOW"/clothing"EMBED_WHITE" เพื่อแก้ไขไอเท็มเครื่องแต่งกายของคุณ");

				GameTextForPlayer(playerid, "~g~Enjoy your purchase!~n~~w~Use ~y~/clothing ~w~to edit your clothing items.", 3000, 4);
			}
			else {
				SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่สามารถซื้อได้มากกว่านี้แล้ว");
			}
		}

		else SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่สามารถจ่ายมันได้ขออถัยด้วย");

		//RemovePlayerClothing(playerid);
		//cl_ResetDressPlayer(playerid);

		cl_buying[playerid]=0; cl_buyingpslot[playerid]=-1;
		ClearAnimations(playerid);
		EditClothing[playerid] = 0;
		ApplyAnimation(playerid, "CLOTHES", "CLO_Buy", 4.1, 0, 0,0, 0, 0, 1);
		return 1;
	}
	return 1;
}

Dialog:buyClothing(playerid, response, listitem, inputtext[])
{
	if (response) {

		if(!strcmp(inputtext, "หน้าถัดไป!", true)) {
			new str[1728];
			switch(cl_buying[playerid])
			{
			    case BUYZIP:
			    {
					for(new i= 91;i!=sizeof(cl_ZipData);++i)
					{
					    format(str, sizeof(str), "%s %d.%s\t{0EB304}${FFFFFF}%d"EMBED_WHITE"\n", str, i, cl_ZipData[i][e_name], cl_ZipData[i][e_price]);
					}
				}
			}
	        return Dialog_Show(playerid, buyClothing2, DIALOG_STYLE_TABLIST, "{FFFFFF}[{03BB0C}ร้านขายของแต่งตัว{FFFFFF}]", str, "Ok", "Cancel");
		}

		if((cl_buyingpslot[playerid] = ClothingExistSlot(playerid)) != -1)
		{
			switch(PurchaseClothing(playerid, listitem)) {
				case -2: {
					SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่สามารถซื้อได้มากกว่านี้แล้ว");
				}
				case -1: {
					SendClientMessage(playerid, COLOR_LIGHTRED, "ขออภัยคุณมี Score ไม่พอที่จะซื้อ !!");
				}
				case 0: {
					SendClientMessage(playerid, COLOR_LIGHTRED, "ไม่สามารถซื้อไอเท็มเครื่องแต่งกายไอดีนี้ได้");
				}
			}
		}
	}
	return 1;
}

Dialog:buyClothing2(playerid, response, listitem, inputtext[])
{
	if (response) {
		if((cl_buyingpslot[playerid] = ClothingExistSlot(playerid)) != -1)
		{
			switch(PurchaseClothing(playerid, listitem + 91)) {
				case -2: {
					SendClientMessage(playerid, COLOR_LIGHTRED, "คุณไม่สามารถซื้อได้มากกว่านี้แล้ว");
				}
				case -1: {
					SendClientMessage(playerid, COLOR_LIGHTRED, "ขออภัยคุณมี Score ไม่พอที่จะซื้อ !!");
				}
				case 0: {
					SendClientMessage(playerid, COLOR_LIGHTRED, "ไม่สามารถซื้อไอเท็มเครื่องแต่งกายไอดีนี้ได้");
				}
			}
		}
	}
	return 1;
}

showPlayerClothingMenu(playerid) {
	new id = cl_dataslot[playerid][cl_selected[playerid]];
	return Dialog_Show(playerid, ClothingMenu, DIALOG_STYLE_TABLIST_HEADERS, ClothingData[playerid][id][cl_name], "{FFFFFF}[รายการ]\t{FFFFFF}[สถานะ]\t\nเปลี่ยนชื่อไอเท็ม:\t"EMBED_WHITE"["EMBED_YELLOW"%s"EMBED_YELLOW""EMBED_WHITE"]\nเปลี่ยนสล็อตกระดูก:\t"EMBED_WHITE"["EMBED_YELLOW"%s"EMBED_YELLOW""EMBED_WHITE"]\nเปลี่ยนสล็อตอินเด็กซ์:\t"EMBED_WHITE"["EMBED_YELLOW"%d"EMBED_YELLOW""EMBED_WHITE"]\nเปลี่ยนสีไอเท็ม\nเปลี่ยนสีที่สองไอเท็ม\nปรับตำแหน่งไอเท็ม\n%s\nลบเครื่องแต่งกาย", "เลือก", "<< กลับ", ClothingData[playerid][id][cl_name], BoneName[ClothingData[playerid][id][cl_bone]-1], ClothingData[playerid][id][cl_slot], (ClothingData[playerid][id][cl_equip]) ? ("ถอด "EMBED_RED"ออก") : ("สวม "EMBED_GREENMONEY"ใส่"));
}

Dialog:ClothingList(playerid, response, listitem, inputtext[])
{
	if (!response)
	    return 1;

	cl_selected[playerid] = listitem;
	return showPlayerClothingMenu(playerid);
}

Dialog:ClothingColorSelect(playerid, response, listitem, inputtext[])
{
	if (response) {
		new slot = GetPVarInt(playerid, "materialColorSlot");
		if (isequal(inputtext, "0")) {
			new id = cl_dataslot[playerid][cl_selected[playerid]];
			if (slot == 1) ClothingData[playerid][id][cl_mc1] = 0;
			else  ClothingData[playerid][id][cl_mc2] = 0;

			SendClientMessageEx(playerid, COLOR_WHITE, "คุณเปลี่ยนสีพื้นผิวไอเท็มช่องที่ "EMBED_YELLOW"%d"EMBED_WHITE" ของ ("EMBED_YELLOW"%s"EMBED_WHITE") เป็น "EMBED_YELLOW"สีปกติ", slot, ClothingData[playerid][id][cl_name]);

			DeletePVar(playerid, "materialColorSlot");
			cl_DressPlayer(playerid);
			return 1;
		}
		new color;
		if(sscanf(inputtext,"h", color)) return Dialog_Show(playerid, ClothingColorSelect, DIALOG_STYLE_INPUT, "เปลี่ยนสีไอเท็ม", ""EMBED_WHITE"วางโค้ดสีที่คุณต้องการ\nหรือให้เว็บไซต์ช่วย \""EMBED_YELLOW"http://www.color-hex.com"EMBED_WHITE"/\"\n-รูปแบบต้องเป็นแบบนี้ \""EMBED_YELLOW"FFFF00"EMBED_WHITE"\" (ไม่รวมเครื่องหมายคำพูด)\n-คุณสามารถใส่ (0) เพื่อรีเซตสีได้\n\n"EMBED_LIGHTRED"[!] คุณมีความสามารถในการเปลี่ยนสีเครื่องแต่งกายของคุณ", "ใส่", "<< กลับ");
		new id = cl_dataslot[playerid][cl_selected[playerid]];
		if (slot == 1) ClothingData[playerid][id][cl_mc1] = RGBToARGB(color);
		else  ClothingData[playerid][id][cl_mc2] = RGBToARGB(color);

		SendClientMessageEx(playerid, COLOR_WHITE, "คุณเปลี่ยนสีพื้นผิวไอเท็มช่องที่ "EMBED_YELLOW"%d"EMBED_WHITE" ของ ("EMBED_YELLOW"%s"EMBED_WHITE") เป็น "EMBED_YELLOW"%06x", slot, ClothingData[playerid][id][cl_name], color);

		DeletePVar(playerid, "materialColorSlot");
		cl_DressPlayer(playerid);
	}
	return showPlayerClothingMenu(playerid);
}

Dialog:ClothingMenu(playerid, response, listitem, inputtext[])
{
	if (!response) cl_ShowClothingMenu(playerid);
	else
	{
		switch(listitem)
		{
		    case 0: // เปลี่ยนชื่อไอเท็ม
		    {
		        Dialog_Show(playerid, ClothingName, DIALOG_STYLE_INPUT, "เปลี่ยนชื่อไอเท็ม", ""EMBED_YELLOW"คุณสามารถที่จะเพิ่ม ตัวระบุที่ไม่ซ้ำ ให้กับไอเท็มเครื่องแต่งกายของคุณ\nสิ่งนี้จะช่วยชี้ทางให้กับคุณเมื่อมีเครื่องแต่งกายมีจำนวนมาก\n\nกรอกชื่อที่คุณต้องการแสดงให้กับไอเท็มเครื่องแต่งกายของคุณ มันจำกัดไว้ที่ 20 ตัวอักษร\nหากคุณต้องการให้มันกลับไปเป็นชื่อเดิม ให้กดปุ่ม ENTER ในขณะที่ช่องยังว่างอยู่\n\n"EMBED_LIGHTRED"[!] คำเตือน: การใช้ฟีเจอร์นี้ในการโกงหรือเอาเปรียบจะถูกลงโทษ อย่าใช้มันผิดวัตถุประสงค์\n[!] หมายเหตุ: นี่เป็นการสร้างตัวระบุที่ไม่ซ้ำมันจะแสดงให้เห็นเพียงแค่คุณเท่านั้น", "เปลี่ยน", "<< กลับ");
		    }
		    case 1: // เปลี่ยนสล็อตกระดูก
		    {
				new str[256];
				new id = cl_dataslot[playerid][cl_selected[playerid]];
				for(new i=0; i != sizeof(BoneName); i++) {
					if (ClothingData[playerid][id][cl_bone]-1 == i) {
						strcat(str, sprintf("%s ["EMBED_YELLOW"ปัจจุบัน"EMBED_WHITE"]\n", BoneName[i]));
					}
					else strcat(str, sprintf("%s\n", BoneName[i]));
				}
                Dialog_Show(playerid, ClothingBone, DIALOG_STYLE_LIST, "เปลี่ยนสล็อตกระดูก", str, "เลือก", "<< กลับ");
		    }
 		    case 2: // เปลี่ยนสล็อตอินเด็กซ์
		    {

				new str[128];
				new id = cl_dataslot[playerid][cl_selected[playerid]];
				for(new i=0; i != 5; i++) {
					if (ClothingData[playerid][id][cl_slot] == i) {
						strcat(str, sprintf("อินเด็กซ์ %d ["EMBED_YELLOW"ปัจจุบัน"EMBED_WHITE"]\n", i));
					}
					else strcat(str, sprintf("อินเด็กซ์ %d\n", i));
				}
				Dialog_Show(playerid, ClothingIndex, DIALOG_STYLE_LIST, "เปลี่ยนสล็อตอินเด็กซ์", str, "เลือก", "<< กลับ");
		    }
			case 3: // เปลี่ยนสีไอเท็ม
			{
				SetPVarInt(playerid, "materialColorSlot", 1);
				Dialog_Show(playerid, ClothingColorSelect, DIALOG_STYLE_INPUT, "เปลี่ยนสีไอเท็ม", ""EMBED_WHITE"วางโค้ดสีที่คุณต้องการ\nหรือให้เว็บไซต์ช่วย \""EMBED_YELLOW"http://www.color-hex.com"EMBED_WHITE"/\"\n-รูปแบบต้องเป็นแบบนี้ \""EMBED_YELLOW"FFFF00"EMBED_WHITE"\" (ไม่รวมเครื่องหมายคำพูด)\n-คุณสามารถใส่ (0) เพื่อรีเซตสีได้\n\n"EMBED_LIGHTRED"[!] คุณมีความสามารถในการเปลี่ยนสีเครื่องแต่งกายของคุณ", "ใส่", "<< กลับ");
		    }
			case 4: // เปลี่ยนสีไอเท็ม 2
			{
				SetPVarInt(playerid, "materialColorSlot", 2);
				Dialog_Show(playerid, ClothingColorSelect, DIALOG_STYLE_INPUT, "เปลี่ยนสีไอเท็ม 2", ""EMBED_WHITE"วางโค้ดสีที่คุณต้องการ\nหรือให้เว็บไซต์ช่วย \""EMBED_YELLOW"http://www.color-hex.com"EMBED_WHITE"/\"\n-รูปแบบต้องเป็นแบบนี้ \""EMBED_YELLOW"FFFF00"EMBED_WHITE"\" (ไม่รวมเครื่องหมายคำพูด)\n-คุณสามารถใส่ (0) เพื่อรีเซตสีได้\n\n"EMBED_LIGHTRED"[!] คุณมีความสามารถในการเปลี่ยนสีเครื่องแต่งกายของคุณ", "ใส่", "<< กลับ");
			}
		    case 5: // ปรับตำแหน่งไอเท็ม
		    {
				if(isPlayerAndroid(playerid) != 0)
				{
					return SendClientMessage(playerid, COLOR_YELLOW, "คำสั่งนี้เฉพาะผู้เล่นบน PC เท่านั้น");
				}

		        new id = cl_dataslot[playerid][cl_selected[playerid]];

			    SetPlayerAttachedObject(playerid, ClothingData[playerid][id][cl_slot], ClothingData[playerid][id][cl_object], ClothingData[playerid][id][cl_bone], ClothingData[playerid][id][cl_x], ClothingData[playerid][id][cl_y],
				ClothingData[playerid][id][cl_z], ClothingData[playerid][id][cl_rx], ClothingData[playerid][id][cl_ry], ClothingData[playerid][id][cl_rz], ClothingData[playerid][id][cl_scalex], ClothingData[playerid][id][cl_scaley], ClothingData[playerid][id][cl_scalez], ClothingData[playerid][id][cl_mc1], ClothingData[playerid][id][cl_mc2]);

				ApplyAnimation(playerid, "CLOTHES", "CLO_Buy", 4.1, 0, 1,1, 1, 0, 1);
				EditAttachedObject(playerid, ClothingData[playerid][id][cl_slot]);
				EditClothing[playerid] = 1;

				// SendClientMessage(playerid, COLOR_WHITE, "ข้อแนะ: ใช้ "EMBED_YELLOW"SPACE"EMBED_WHITE" เพื่อดูรอบ ๆ กด "EMBED_YELLOW"ESC"EMBED_WHITE" เพื่อยกเลิก");
		    }
 		    case 6: // On-Off
		    {
		        new id = cl_dataslot[playerid][cl_selected[playerid]];

				if(ClothingData[playerid][id][cl_equip]) {

					RemovePlayerAttachedObject(playerid, ClothingData[playerid][id][cl_slot]);
					ClothingData[playerid][id][cl_equip] = 0;
				}
				else
				{
				    SetPlayerAttachedObject(playerid, ClothingData[playerid][id][cl_slot], ClothingData[playerid][id][cl_object], ClothingData[playerid][id][cl_bone], ClothingData[playerid][id][cl_x], ClothingData[playerid][id][cl_y],
					ClothingData[playerid][id][cl_z], ClothingData[playerid][id][cl_rx], ClothingData[playerid][id][cl_ry], ClothingData[playerid][id][cl_rz], ClothingData[playerid][id][cl_scalex], ClothingData[playerid][id][cl_scaley], ClothingData[playerid][id][cl_scalez], ClothingData[playerid][id][cl_mc1], ClothingData[playerid][id][cl_mc2]);
					SendClientMessageEx(playerid, COLOR_WHITE, "คุณได้สวมใส่ "EMBED_YELLOW"%s"EMBED_WHITE" ของคุณ", ClothingData[playerid][id][cl_name]);

					for (new i = 0; i < MAX_CLOTHES; i ++)
					{
					    if(ClothingData[playerid][i][cl_object] != INVALID_OBJECT_ID && ClothingData[playerid][i][cl_equip] && ClothingData[playerid][i][cl_slot] == ClothingData[playerid][id][cl_slot])
					    {
					        ClothingData[playerid][i][cl_equip] = 0;
						}
					}
					ClothingData[playerid][id][cl_equip] = 1;
				}
		    }
			case 7: // Drop
			{
			    new clothingid = cl_dataslot[playerid][cl_selected[playerid]];
				if(clothingid < MAX_CLOTHES && ClothingData[playerid][clothingid][cl_object] != INVALID_OBJECT_ID) {

					if(IsPlayerAttachedObjectSlotUsed(playerid, ClothingData[playerid][clothingid][cl_slot])) RemovePlayerAttachedObject(playerid, ClothingData[playerid][clothingid][cl_slot]);
	                ClothingData[playerid][clothingid][cl_object] = INVALID_OBJECT_ID;

					new
			    		query[128];

					format(query,sizeof(query),"DELETE FROM `clothing` WHERE owner = '%d' and id = '%d'",playerData[playerid][pID], ClothingData[playerid][clothingid][cl_sid]);
					mysql_query(g_SQL, query);

					SendClientMessageEx(playerid, COLOR_GREY, "   คุณได้ทิ้ง %s#%d", ClothingData[playerid][clothingid][cl_name], clothingid + 1);

					ClothingCooldown[playerid] = 5;
				}
				else SendClientMessage(playerid, COLOR_LIGHTRED, "ไม่มีอะไรอยู่ที่นั้น..");
			}
		}
	}
	return 1;
}

Dialog:ClothingName(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new id = cl_dataslot[playerid][cl_selected[playerid]];
		if (isnull(inputtext)) {
			new oldName[32];
			format(oldName, 32, GetClotingItemName(ClothingData[playerid][id][cl_object]));
			SendClientMessageEx(playerid, COLOR_WHITE, "คุณเปลี่ยนชื่อไอเท็ม "EMBED_YELLOW"%s "EMBED_WHITE"เป็น "EMBED_YELLOW"%s", ClothingData[playerid][id][cl_name], oldName);
			format(ClothingData[playerid][id][cl_name], 32, oldName);
		}
		else if (strlen(inputtext) > 20) {
			return Dialog_Show(playerid, ClothingName, DIALOG_STYLE_INPUT, "เปลี่ยนชื่อไอเท็ม", "ชื่อไอเท็มต้องไม่เป็นค่าว่างหรือมากกว่า 20 ตัวอักษร\nกรอกชื่อไอเท็มที่ต้องการลงบนกล่องด้านล่างนี้:", "เปลี่ยน", "<< กลับ");
		}
		else {
			SendClientMessageEx(playerid, COLOR_WHITE, "คุณเปลี่ยนชื่อไอเท็ม "EMBED_YELLOW"%s "EMBED_WHITE"เป็น "EMBED_YELLOW"%s", ClothingData[playerid][id][cl_name], inputtext);
			format(ClothingData[playerid][id][cl_name], 32, inputtext);
		}
	}
    return showPlayerClothingMenu(playerid);
}

Dialog:ClothingBone(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new id = cl_dataslot[playerid][cl_selected[playerid]];
        ClothingData[playerid][id][cl_bone] = listitem + 1;
		SetPlayerAttachedObject(playerid, ClothingData[playerid][id][cl_slot], ClothingData[playerid][id][cl_object], ClothingData[playerid][id][cl_bone]);
       	ApplyAnimation(playerid, "CLOTHES", "CLO_Buy", 4.1, 0, 1, 1, 1, 0, 1);
		EditAttachedObject(playerid, ClothingData[playerid][id][cl_slot]);
		EditClothing[playerid] = 1;

		SendClientMessageEx(playerid, COLOR_WHITE, "คุณเปลี่ยน ("EMBED_YELLOW"%s"EMBED_WHITE") เป็นส่วน "EMBED_YELLOW"%s"EMBED_WHITE"", ClothingData[playerid][id][cl_name], BoneName[listitem]);
	}
    return showPlayerClothingMenu(playerid);
}

Dialog:ClothingIndex(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    new id = cl_dataslot[playerid][cl_selected[playerid]];
	    ClothingData[playerid][id][cl_slot] = listitem;

        RemovePlayerClothing(playerid);
        cl_DressPlayer(playerid);

		SendClientMessageEx(playerid, COLOR_WHITE, "คุณเปลี่ยน ("EMBED_YELLOW"%s"EMBED_WHITE") เป็นอินเด็กซ์ช่องที่ "EMBED_YELLOW"%d", ClothingData[playerid][id][cl_name], listitem + 1);
	}
    return showPlayerClothingMenu(playerid);
}

stock RGBToARGB(color)
{
 	return (0xFF << 24) | color;
}

forward OnLoadClothing(playerid);
public OnLoadClothing(playerid) {
    new rows;
    cache_get_row_count(rows);
    if (rows) {
        for (new i = 0; i < rows; i ++) if(i < MAX_CLOTHES)
        {
    		cache_get_value_name_int(i, "id", ClothingData[playerid][i][cl_sid]);
    		cache_get_value_name_int(i, "object", ClothingData[playerid][i][cl_object]);
    		cache_get_value_name_float(i, "x", ClothingData[playerid][i][cl_x]);
    		cache_get_value_name_float(i, "y", ClothingData[playerid][i][cl_y]);
    		cache_get_value_name_float(i, "z", ClothingData[playerid][i][cl_z]);
    		cache_get_value_name_float(i, "rx", ClothingData[playerid][i][cl_rx]);
    		cache_get_value_name_float(i, "ry", ClothingData[playerid][i][cl_ry]);
    		cache_get_value_name_float(i, "rz", ClothingData[playerid][i][cl_rz]);
    		cache_get_value_name_float(i, "scalex", ClothingData[playerid][i][cl_scalex]);
    		cache_get_value_name_float(i, "scaley", ClothingData[playerid][i][cl_scaley]);
    		cache_get_value_name_float(i, "scalez", ClothingData[playerid][i][cl_scalez]);
    		cache_get_value_name_int(i, "bone", ClothingData[playerid][i][cl_bone]);
    		cache_get_value_name_int(i, "slot", ClothingData[playerid][i][cl_slot]);
    		cache_get_value_name_int(i, "equip", ClothingData[playerid][i][cl_equip]);
    		cache_get_value_name_int(i, "materialColor1", ClothingData[playerid][i][cl_mc1]);
    		cache_get_value_name_int(i, "materialColor2", ClothingData[playerid][i][cl_mc2]);
    		cache_get_value_name(i, "name", ClothingData[playerid][i][cl_name], 32);
    	}
    }
}

CMD:freeze(playerid, params[])
{
	new
	    userid;

    if (playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/freeze [playerid/name]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_GREY, "ผู้เล่นที่ระบุไม่ถูกต้อง");

	TogglePlayerControllable(userid, 0);
	SendClientMessageEx(playerid, COLOR_LIGHTRED, "คุณได้แช่แข็งการเคลื่อนไหวของ %s", GetPlayerNameEx(userid));
	return 1;
}

CMD:unfreeze(playerid, params[])
{
	new
	    userid;

    if (playerData[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ได้รับอนุญาตให้ใช้คำสั่งนี้");

	if (sscanf(params, "u", userid))
	    return SendClientMessage(playerid, COLOR_GREY, "การใช้งาน : {FFFFFF}/unfreeze [playerid/name]");

    if (userid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_GREY, "ผู้เล่นที่ระบุไม่ถูกต้อง");

	TogglePlayerControllable(userid, 1);
	SendClientMessageEx(playerid, COLOR_LIGHTRED, "คุณปลดแช่แข็งการเคลื่อนไหวของ %s", GetPlayerNameEx(userid));
	return 1;
}

CMD:moneyall(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new amount;
        if(sscanf(params, "d", amount))
			return SendClientMessage(playerid, COLOR_WHITE, "/moneyall [จำนวน]");

        foreach (new i : Player){
			GivePlayerMoneyEx(i, amount);
		}

        SendClientMessageToAllEx(COLOR_ORANGE, "นายกเมือง George แจกเงินเยียวยาจำนวน %s ให้กับทุกคน!", FormatMoney(amount));
	}
    return 1;
}

CMD:giveexpall(playerid, params[])
{
    if(playerData[playerid][pAdmin] >= 6)
    {
    	new amount;
        if(sscanf(params, "d", amount))
			return SendClientMessage(playerid, COLOR_WHITE, "/giveexpall [จำนวน]");

        foreach (new i : Player){
			playerData[i][pExp] += amount;
		}

        SendClientMessageToAllEx(COLOR_ORANGE, "นายกเมือง George แจก Exp จำนวน %d ให้กับทุกคน!", amount);
	}
    return 1;
}

forward SmokeWeed(playerid);
public SmokeWeed(playerid)
{
    SetPlayerAttachedObject(playerid, 4, 18687, 2, 0.012896, 0.179381, -1.588311, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); //
	SetTimerEx("SmokeWeed1", 2000, false, "d", playerid);
}

forward SmokeWeed1(playerid);
public SmokeWeed1(playerid)
{
    RemovePlayerAttachedObject(playerid, 4);
	ClearAnimations(playerid);
	TogglePlayerControllable(playerid, 1);
}

/*Dialog:DIALOG_BBGUN(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0: // แดง
		    {
		        BBGunOn[playerid] = 1;
		    
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, -974.9974,1060.9995,1345.6719);
				SetPlayerFacingAngle(playerid, 86.7228);
				
				GivePlayerWeaponEx(playerid, 24, 100);
				GivePlayerWeaponEx(playerid, 25, 100);
				GivePlayerWeaponEx(playerid, 29, 200);
				GivePlayerWeaponEx(playerid, 31, 200);
				
				SendClientMessage(playerid, COLOR_RED, "BBGUN > {FFFFFF}คุณได้เข้าร่วม 'ทีมแดง' แล้ว!");
				SendClientMessage(playerid, COLOR_YELLOW, "แนะนำ > '/ออกสนาม' เพื่อออกจากสนาม BB GUN");
		    }
		    case 1: // เขียว
		    {
		        BBGunOn[playerid] = 2;
		    
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, -1130.9403,1057.7700,1346.4141);
				SetPlayerFacingAngle(playerid, 269.8561);

				GivePlayerWeaponEx(playerid, 24, 100);
				GivePlayerWeaponEx(playerid, 25, 100);
				GivePlayerWeaponEx(playerid, 29, 200);
				GivePlayerWeaponEx(playerid, 31, 200);

				SendClientMessage(playerid, COLOR_GREEN, "BBGUN > {FFFFFF}คุณได้เข้าร่วม 'ทีมเขียว' แล้ว!");
				SendClientMessage(playerid, COLOR_YELLOW, "แนะนำ > '/ออกสนาม' เพื่อออกจากสนาม BB GUN");
		    }
		}
	}
	return 1;
}

alias:qbbgun("ออกสนาม")
CMD:qbbgun(playerid, params[])
{
	if (BBGunOn[playerid] == 0)
	    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณไม่ได้อยู่ในสนาม BBGUN");

    ResetPlayerWeaponsEx(playerid);
    BBGunOn[playerid] = 0;
    
    SpawnPlayer(playerid);
    SendClientMessage(playerid, COLOR_LIGHTRED, "(( คุณได้ออกจากสนาม BBGUN เรียบร้อยแล้ว ))");
    
    return 1;
}*/

//

Dialog:DIALOG_FINEID(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new userid = strval(inputtext);

		if (userid == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในเกม");

		if (!IsPlayerNearPlayer(playerid, userid, 5.0))
		    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ในระยะ");

		if (userid == playerid)
			return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ไม่สามารถให้เงินตัวเองได้");

		fineID[playerid] = userid;
		Dialog_Show(playerid, DIALOG_FINECASH, DIALOG_STYLE_INPUT, "[ปรับเงิน]", "กรุณาระบุจำนวนเงินที่คุณต้องการจะปรับ :", "เลือก", "ปิด");
	}
	return 1;
}

Dialog:DIALOG_FINECASH(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		new userid = strval(inputtext);

		if (userid <= 0)
		    return SendClientMessage(playerid, COLOR_GREY, "* คุณต้องระบุจำนวนมากกว่า 0");

		finePrice[playerid] = userid;
		Dialog_Show(playerid, DIALOG_FINETEXT, DIALOG_STYLE_INPUT, "[ปรับเงิน]", "กรุณาระบุสาเหตุที่ผู้เล่นนี้ถูกใบสั่ง :", "เลือก", "ปิด");
	}
	return 1;
}

Dialog:DIALOG_FINETEXT(playerid, response, listitem, inputtext[])
{
	new string[128];
	if (response)
	{
        format(fineText[playerid], 64, inputtext);

		format(string, 128, "%d %d %s", fineID[playerid], finePrice[playerid], inputtext);
		callcmd::fine(playerid, string);
	}
	return 1;
}

// - ระบบเซฟอัตโนมัติ
ptask AutoSave[5000](playerid)
{
    UpdateplayerData(playerid);
}

CMD:fixbug(playerid, params[])
{
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	SendClientMessage(playerid, COLOR_YELLOW, ".:: คุณได้ทำการแก้บัคตัวละครของคุณแล้ว ::.");
	return 1;
}

alias:checkfreeze("ค้าง")
CMD:checkfreeze(playerid, params[])
{
    if (playerData[playerid][pCuffed])
        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณถูกควบคุมตัวอยู่!");

    ClearAnimations(playerid);
    TogglePlayerControllable(playerid, 1);
    SendClientMessage(playerid, COLOR_GREY, ".:: คุณได้ทำการแก้อาการค้างของตัวละครคุณแล้ว ::.");
	return 1;
}

// ฉายา
ChayaName(playerid)
{
	new adminname[128];
	switch(playerData[playerid][pChaya])
	{
	    case 0: adminname = "{F5F62E}[Noob]";
	    case 1: adminname = "{16E7CD}[King OF Alive]";
	    case 2: adminname = "{F025F2}[King OF Lotto]";
	    case 3: adminname = "{E7166A}[King OF Death]";
	    case 4: adminname = "{FB0303}[King OF Kill]";
	    case 5: adminname = "{18FB03}[King OF Kill]";
	}
	return adminname;
}

alias:givechaya("ให้ฉายา")
CMD:givechaya(playerid, params[])
{
    if (playerData[playerid][pAdmin] < 6)
	    return 1;

	new userid, type, name[24];

	if (sscanf(params, "ud", userid, type))
	{
		SendClientMessage(playerid, COLOR_WHITE, "/ให้ฉายา [ไอดี/ชื่อ] [รายการ]");
		SendClientMessage(playerid, COLOR_YELLOW, "[ฉายา] : {FFFFFF}1:[Noob] 2:[King OF Alive] 3:[King OF Lotto] 4:[King OF Death] 5:[King OF Kill]");
    	SendClientMessage(playerid, COLOR_YELLOW, "[ฉายา] : {FFFFFF}6:[King OF Weeds]");
		return 1;
	}
	if (type < 1 || type > 6)
	{
	    SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ฉายาต้องไม่ต่ำกว่า 1 และไม่เกิน 6 เท่านั้น");
	    return 1;
	}
	switch(type)
	{
	    case 1:
	    {
			playerData[userid][pChaya] = 0;
			name = "[Noob]";
		}
	    case 2:
		{
			playerData[userid][pChaya] = 1;
			name = "[King OF Alive]";
		}
	    case 3:
	    {
			playerData[userid][pChaya] = 2;
			name = "[King OF Lotto]";
		}
	    case 4:
		{
			playerData[userid][pChaya] = 3;
			name = "[King OF Death]";
		}
	    case 5:
		{
			playerData[userid][pChaya] = 4;
			name = "[King OF Kill]";
		}
	    case 6:
		{
			playerData[userid][pChaya] = 5;
			name = "[King OF Weeds]";
		}
	}
	SendAdminMessage(COLOR_ADMIN, "AdmLog: %s ได้ให้ฉายา %s กับ %s เรียบร้อยแล้ว", GetPlayerNameEx(playerid), name, GetPlayerNameEx(userid));
	return 1;
}

// ระบบฉายา
alias:chaya("ฉายา")
CMD:chaya(playerid, params[])
{
	new string100[4096];
	new string2[4096];

	format(string100, sizeof(string100), "{FFFFFF}ฉายา\t{FFFFFF}การครอบครองฉายา\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{F5F62E}[Noob]\t{FADC05}ฟรี!\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{16E7CD}[King OF Alive]\t{FFFFFF}ออนไลน์มากกว่า 300 ชั่วโมง\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{F025F2}[King OF Lotto]\t{FFFFFF}ถูกหวยมากกว่า 50 ครั้ง\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{E7166A}[King OF Death]\t{FFFFFF}ตายครบ 200 ครั้ง\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FB0303}[King OF Kill]\t{FFFFFF}ฆ่าคนครบ 150 คน\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{18FB03}[King OF Weeds]\t{FFFFFF}ปลูกกัญชาครบ 200 ต้น\n");
	strcat(string2,string100);

	Dialog_Show(playerid,getChaya,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{FADC05}ฉายาในเซิร์ฟเวอร์{FFFFFF}]",string2,"ตกลง","ยกเลิก");
	return 1;
}

Dialog:getChaya(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        playerData[playerid][pChaya] = 0;
		        SendClientMessageEx(playerid, -1, "คุณได้เลือกใช้ฉายา > %s {FFFFFF}เรียบร้อยแล้ว", ChayaName(playerid));
		    }
		    case 1:
		    {
		        if (playerData[playerid][pHours] < 300)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องออนไลน์มากกว่า 300 ชั่วโมง");
		    
		        playerData[playerid][pChaya] = 1;
		        SendClientMessageEx(playerid, -1, "คุณได้เลือกใช้ฉายา > %s {FFFFFF}เรียบร้อยแล้ว", ChayaName(playerid));
		    }
		    case 2:
		    {
		        if (playerData[playerid][pLottoWin] < 50)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องถูกหวยมากกว่า 50 ครั้ง");

		        playerData[playerid][pChaya] = 2;
		        SendClientMessageEx(playerid, -1, "คุณได้เลือกใช้ฉายา > %s {FFFFFF}เรียบร้อยแล้ว", ChayaName(playerid));
		    }
		    case 3:
		    {
		        if (playerData[playerid][pDeaths] < 200)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องตายมากกว่า 200 ครั้ง");

		        playerData[playerid][pChaya] = 3;
		        SendClientMessageEx(playerid, -1, "คุณได้เลือกใช้ฉายา > %s {FFFFFF}เรียบร้อยแล้ว", ChayaName(playerid));
		    }
		    case 4:
		    {
		        if (playerData[playerid][pKills] < 200)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องฆ่าคนมากกว่า 150 ครั้ง");

		        playerData[playerid][pChaya] = 4;
		        SendClientMessageEx(playerid, -1, "คุณได้เลือกใช้ฉายา > %s {FFFFFF}เรียบร้อยแล้ว", ChayaName(playerid));
		    }
		    case 5:
		    {
		        if (playerData[playerid][pWeedWin] < 200)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องปลูกกัญชามากกว่า 200 ต้น");

		        playerData[playerid][pChaya] = 5;
		        SendClientMessageEx(playerid, -1, "คุณได้เลือกใช้ฉายา > %s {FFFFFF}เรียบร้อยแล้ว", ChayaName(playerid));
		    }
		}
	}
	return 1;
}

// โอนรถระหว่างผู้เล่น
alias:tcar("โอนรถ")
CMD:tcar(playerid, params[])
{
	new vehicleid = GetPlayerVehicleID(playerid), targetid;

	if(!vehicleid || !IsVehicleOwner(playerid, vehicleid))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถส่วนตัวของคุณ");
	}
	if(sscanf(params, "u", targetid))
	{
	    return SendClientMessage(playerid, COLOR_WHITE, "/โอนรถ [ไอดี/ชื่อ]");
	}
	if(!IsPlayerConnected(targetid) || !IsPlayerNearPlayer(playerid, targetid, 5.0))
	{
	    return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}ผู้เล่นไอดีนี้ไม่ได้อยู่ใกล้คุณ");
	}
	GetPlayerName(targetid, carData[vehicleid][carOwner], MAX_PLAYER_NAME);
	carData[vehicleid][carOwnerID] = playerData[targetid][pID];

	new query[128];
	mysql_format(g_SQL, query, sizeof(query), "UPDATE vehicles SET carOwnerID = %d, carOwner = '%s' WHERE carID = %d", carData[vehicleid][carOwnerID], carData[vehicleid][carOwner], carData[vehicleid][carID]);
	mysql_tquery(g_SQL, query);

	SendClientMessageEx(targetid, COLOR_LIGHTRED, "** %s ได้โอนรถรุ่น %s ให้กับคุณแล้ว", GetPlayerNameEx(playerid), ReturnVehicleName(vehicleid));
	SendClientMessageEx(playerid, COLOR_LIGHTRED, "** คุณได้โอนรถรุ่น %s ให้กับ %s เรียบร้อยแล้ว", ReturnVehicleName(vehicleid), GetPlayerNameEx(targetid));
	return 1;
}

// เลือกโรงเรียน
alias:school("สถาบัน")
CMD:school(playerid, params[])
{
	new string100[4096];
	new string2[4096];

	format(string100, sizeof(string100), "{FFFFFF}โรงเรียน\t{FFFFFF}ค่าเทอม\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}โรงเรียนชนบท\t{30D508}$4,500\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}โรงเรียนในอำเภอ\t{30D508}$9,000\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}โรงเรียนในจังหวัด\t{30D508}$13,000\n");
	strcat(string2,string100);

	format(string100, sizeof(string100), "{FFFFFF}โรงเรียนต่างประเทศ\t{30D508}$25,000\n");
	strcat(string2,string100);

	Dialog_Show(playerid,getSchool,DIALOG_STYLE_TABLIST_HEADERS,"{FFFFFF}[{FD361B}สถาบันภายในเซิร์ฟเวอร์{FFFFFF}]",string2,"ตกลง","ยกเลิก");
	return 1;
}

SchoolName(playerid)
{
	new adminname[128];
	switch(playerData[playerid][pSchoolType])
	{
	    case 0: adminname = "{FD361B}[{FFFFFF}ไร้การศึกษา{FD361B}]";
	    case 1: adminname = "{FD361B}[{FFFFFF}โรงเรียนชนบท{FD361B}]";
	    case 2: adminname = "{FD361B}[{FFFFFF}โรงเรียนในอำเภอ{FD361B}]";
	    case 3: adminname = "{FD361B}[{FFFFFF}โรงเรียนในจังหวัด{FD361B}]";
	    case 4: adminname = "{FD361B}[{FFFFFF}โรงเรียนต่างประเทศ{FD361B}]";
	}
	return adminname;
}

GradeType(playerid)
{
	new adminname[128];
	switch(playerData[playerid][pGradeType])
	{
	    case 0: adminname = "{FD361B}[{FFFFFF}ไม่มีการศึกษา{FD361B}]";
	    case 1: adminname = "{FD361B}[{FFFFFF}ป.1{FD361B}]";
	    case 2: adminname = "{FD361B}[{FFFFFF}ป.2{FD361B}]";
	    case 3: adminname = "{FD361B}[{FFFFFF}ป.3{FD361B}]";
	    case 4: adminname = "{FD361B}[{FFFFFF}ป.4{FD361B}]";
	    case 5: adminname = "{FD361B}[{FFFFFF}ป.5{FD361B}]";
	    case 6: adminname = "{FD361B}[{FFFFFF}ป.6{FD361B}]";
	    case 7: adminname = "{1BFD7B}[{FFFFFF}ม.1{1BFD7B}]";
	    case 8: adminname = "{1BFD7B}[{FFFFFF}ม.2{1BFD7B}]";
	    case 9: adminname = "{1BFD7B}[{FFFFFF}ม.3{1BFD7B}]";
	    case 10: adminname = "{1BFD7B}[{FFFFFF}ม.4{1BFD7B}]";
	    case 11: adminname = "{1BFD7B}[{FFFFFF}ม.5{1BFD7B}]";
	    case 12: adminname = "{1BFD7B}[{FFFFFF}ม.6{1BFD7B}]";
	}
	return adminname;
}

Dialog:infoSchool(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        return 1;
		    }
		    case 1:
		    {
		        if (playerData[playerid][pSchoolPoints] < 100)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมีคะแนนไม่เพียงพอ!");
		            
                playerData[playerid][pGradeType] ++;
                playerData[playerid][pSchoolPoints] = 0;
		            
				SendClientMessage(playerid, COLOR_RED, "> เลื่อนขั้นการศึกษา!");
				SendClientMessage(playerid, COLOR_YELLOW, "คุณได้เลื่อนขั้นการศึกษาของตัวเองแล้ว");
				SendClientMessageEx(playerid, -1, "ขณะนี้คุณศึกษาอยู่ระดับชั้น : %s", GradeType(playerid));

				return 1;
			}
		    case 2: // เรียนหนังสือ
		    {
		        if (schoolTake[playerid] != 0)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณอยู่ระหว่างการเรียนหนังสือ");
		            
				if (schoolCD[playerid] != 0)
				    return SendClientMessageEx(playerid, COLOR_LIGHTRED, "* คุณต้องรอ %d วินาที", schoolCD[playerid]);

				if (playerData[playerid][pMaxSchool] >= 50)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณทำครบ 50 ครั้งแล้ว! กรุณารอ 00.00 วันถัดไปเพื่อทำใหม่!");

                TogglePlayerControllable(playerid, 0);
                schoolTake[playerid] = 1;
                
                SendClientMessage(playerid, COLOR_GREEN, "[เรียนหนังสือ] : {FDD01B}คุณได้เริ่มต้นการเรียนหนังสือแล้ว");
			}
		}
	}
	return 1;
}

task SyncUpTimer[60000]() {

	new tmphour, tmpminute, tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;

	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
	    if (tmphour == 0)
	    {
			new query[512];
			
			mysql_format(g_SQL, query, sizeof query, "UPDATE `players` SET `MaxSchool` = 0");
			mysql_tquery(g_SQL, query);
			
			SendClientMessageToAll(COLOR_YELLOW, "[กระทรวงการศึกษา] : ขณะนี้สามารถเรียนหนังสือได้ใหม่แล้ว!");
	    }
	}
	return 1;
}

forward FixHour(hour);
public FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0) hour = hour+24;
	else if (hour > 23) hour = hour-24;
	shifthour = hour;
	return 1;
}

// แฟชั่น
Dialog:infoFashion(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        if (Inventory_Count(playerid, "Woods") < 200)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ท่อนซุง' มากกว่า 200");

		        if (Inventory_Count(playerid, "Hematite") < 150)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'แร่เฮมาไทต์' มากกว่า 150");

		        if (Inventory_Count(playerid, "ใบไม้") < 100)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ใบไม้' มากกว่า 100");
		            
				Inventory_Add(playerid, "Dragon Tribe", 1);
				SendClientMessage(playerid, COLOR_WHITE, "คุณได้รับ {FB570A}ชุดเผ่ามังกร {FFFFFF}+ 1");
				
				Inventory_Remove(playerid, "Woods", 200);
				Inventory_Remove(playerid, "Hematite", 150);
				Inventory_Remove(playerid, "ใบไม้", 100);
		    }
		    case 1:
		    {
		        if (Inventory_Count(playerid, "Woods") < 250)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ท่อนซุง' มากกว่า 250");

		        if (Inventory_Count(playerid, "Hematite") < 170)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'แร่เฮมาไทต์' มากกว่า 170");

		        if (Inventory_Count(playerid, "ใบไม้") < 120)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ใบไม้' มากกว่า 120");

				Inventory_Add(playerid, "ชุดลูบู", 1);
				SendClientMessage(playerid, COLOR_WHITE, "คุณได้รับ {FB570A}ชุดลูบู {FFFFFF}+ 1");

				Inventory_Remove(playerid, "Woods", 250);
				Inventory_Remove(playerid, "Hematite", 170);
				Inventory_Remove(playerid, "ใบไม้", 120);
		    }
		    case 2:
		    {
		        if (Inventory_Count(playerid, "Woods") < 230)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ท่อนซุง' มากกว่า 230");

		        if (Inventory_Count(playerid, "Hematite") < 150)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'แร่เฮมาไทต์' มากกว่า 150");

		        if (Inventory_Count(playerid, "ใบไม้") < 100)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ใบไม้' มากกว่า 100");

				Inventory_Add(playerid, "ชุดหัวหน้าเผ่า", 1);
				SendClientMessage(playerid, COLOR_WHITE, "คุณได้รับ {FB570A}ชุดหัวหน้าเผ่า {FFFFFF}+ 1");

				Inventory_Remove(playerid, "Woods", 230);
				Inventory_Remove(playerid, "Hematite", 150);
				Inventory_Remove(playerid, "ใบไม้", 100);
		    }
		    case 3:
		    {
		        if (Inventory_Count(playerid, "Woods") < 170)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ท่อนซุง' มากกว่า 170");

		        if (Inventory_Count(playerid, "Hematite") < 125)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'แร่เฮมาไทต์' มากกว่า 125");

		        if (Inventory_Count(playerid, "ใบไม้") < 90)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ใบไม้' มากกว่า 90");

				Inventory_Add(playerid, "ชุดปีกดำ", 1);
				SendClientMessage(playerid, COLOR_WHITE, "คุณได้รับ {FB570A}ชุดปีกดำ {FFFFFF}+ 1");

				Inventory_Remove(playerid, "Woods", 170);
				Inventory_Remove(playerid, "Hematite", 125);
				Inventory_Remove(playerid, "ใบไม้", 90);
		    }
		    case 4:
		    {
		        if (Inventory_Count(playerid, "Woods") < 180)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ท่อนซุง' มากกว่า 180");

		        if (Inventory_Count(playerid, "Hematite") < 130)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'แร่เฮมาไทต์' มากกว่า 130");

		        if (Inventory_Count(playerid, "ใบไม้") < 110)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ใบไม้' มากกว่า 110");

				Inventory_Add(playerid, "ชุดปีกแดง", 1);
				SendClientMessage(playerid, COLOR_WHITE, "คุณได้รับ {FB570A}ชุดปีกแดง {FFFFFF}+ 1");

				Inventory_Remove(playerid, "Woods", 180);
				Inventory_Remove(playerid, "Hematite", 130);
				Inventory_Remove(playerid, "ใบไม้", 110);
		    }
		    case 5:
		    {
		        if (Inventory_Count(playerid, "Woods") < 220)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ท่อนซุง' มากกว่า 220");

		        if (Inventory_Count(playerid, "Hematite") < 150)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'แร่เฮมาไทต์' มากกว่า 150");

		        if (Inventory_Count(playerid, "ใบไม้") < 150)
		            return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณต้องมี 'ใบไม้' มากกว่า 150");

				Inventory_Add(playerid, "ชุดแมลงเทพ", 1);
				SendClientMessage(playerid, COLOR_WHITE, "คุณได้รับ {FB570A}ชุดแมลงเทพ {FFFFFF}+ 1");

				Inventory_Remove(playerid, "Woods", 220);
				Inventory_Remove(playerid, "Hematite", 150);
				Inventory_Remove(playerid, "ใบไม้", 150);
		    }
		}
	}
	return 1;
}

// ถอดชุด
alias:todsuit("ถอดชุด")
CMD:todsuit(playerid,params[])
{
	RemovePlayerAttachedObject(playerid, 0);
	RemovePlayerAttachedObject(playerid, 1);
	RemovePlayerAttachedObject(playerid, 2);
	RemovePlayerAttachedObject(playerid, 3);
	RemovePlayerAttachedObject(playerid, 4);
	RemovePlayerAttachedObject(playerid, 5);
	RemovePlayerAttachedObject(playerid, 6);
	RemovePlayerAttachedObject(playerid, 7);
	RemovePlayerAttachedObject(playerid, 8);
	RemovePlayerAttachedObject(playerid, 9);
	SendClientMessage(playerid, COLOR_LIGHTRED, "คุณได้ถอดชุดที่คุณสวมใส่อยู่เรียบร้อยแล้ว");
	return 1;
}

GetRealTime(&hours, &minutes, &seconds, timezone_offset = 0) {
    gettime(hours, minutes, seconds);
    hours += timezone_offset;
    hours = hours < 0 ? (hours + 24) : hours;
    hours = hours > 23 ? (hours - 24) : hours;
}

// ไมล์ความเร็วรถ
stock vehicleHasEngine(vehicleID) {

	new
	    modelID = GetVehicleModel(vehicleID);

	if (400 <= modelID <= 611)
	{
	    static const g_EngineInfo[] = {
		    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
			1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
			1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0
		};

 		return g_EngineInfo[modelID - 400];
	}
	return 0;
}

stock GetPlayerSpeed(playerid, get3d) // Need this for fixcar
{
	new
		Float:Floats[3];

	if(IsPlayerInAnyVehicle(playerid))
	    GetVehicleVelocity(GetPlayerVehicleID(playerid), Floats[0], Floats[1], Floats[2]);
	else
	    GetPlayerVelocity(playerid, Floats[0], Floats[1], Floats[2]);

	return SpeedCheck(Floats[0], Floats[1], Floats[2], 100.0, get3d);
}

stock IsVehicleRunning(vehicleID) {
	new engine, lights, alarm, doors, bonnet, boot, objective;

	GetVehicleParamsEx(vehicleID, engine, lights, alarm, doors, bonnet, boot, objective);

	if(engine > 0) return 1;

	return 0;
}

stock refreshVehControl(playerid){

	new vehicleID = GetPlayerVehicleID(playerid);

	for(new i = 0; i < 18; i ++) {
		PlayerTextDrawHide(playerid, ui_vehControl[playerid][i]);
	}
	// Engine

	if (IsVehicleRunning(vehicleID)) PlayerTextDrawColor(playerid, ui_vehControl[playerid][3], -1962934017);
	else PlayerTextDrawColor(playerid, ui_vehControl[playerid][3], 1296911871);

	// Lock

	/*foreach(new x : Player) {
		for (new i = 0; i < MAX_PLAYER_VEHICLES; i ++) {
			if(playerVehicles[x][i][pCarModel] >= 1 && playerVehicles[x][i][pCarID] == GetPlayerVehicleID(playerid)) {

				if (playerVehicles[x][i][pCarLocked] >= 1) PlayerTextDrawColor(playerid, ui_vehControl[playerid][5], -1962934017);
				else PlayerTextDrawColor(playerid, ui_vehControl[playerid][5], 1296911871);
			}
		}
	}*/

	// Lock
	new id = carData[vehicleID][carID];
	if (carData[id][carLocked]) PlayerTextDrawBoxColor(playerid, ui_speed[playerid][5], -1962934017);
	else PlayerTextDrawBoxColor(playerid, ui_speed[playerid][5], 135);

	// light

	if (GetLightStatus(vehicleID)) PlayerTextDrawColor(playerid, ui_vehControl[playerid][6], -1962934017);
	else PlayerTextDrawColor(playerid, ui_vehControl[playerid][6], 1296911871);

	// HOOD
	if (getHoodState(vehicleID)) PlayerTextDrawColor(playerid, ui_vehControl[playerid][8], -1962934017);
	else PlayerTextDrawColor(playerid, ui_vehControl[playerid][8], 1296911871);

	// truck

	if (getTrunkState(vehicleID)) PlayerTextDrawColor(playerid, ui_vehControl[playerid][9], -1962934017);
	else PlayerTextDrawColor(playerid, ui_vehControl[playerid][9], 1296911871);

	for(new i = 0; i < 18; i ++) {
		PlayerTextDrawShow(playerid, ui_vehControl[playerid][i]);
	}

}

CMD:lights(playerid, params[])
{
    new engine, lights, alarm, doors, bonnet, boot, objective, szMessage[256];
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:vHealth; GetVehicleHealth(vehicleid, vHealth);

    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

    if(!IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_GREY, "เกิดข้อผิดพลาด: คุณต้องอยู่ในยานพาหนะที่จะใช้คำสั่ง");

    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	    return SendClientMessage(playerid, COLOR_GREY, "คุณไม่ใช่คนขับยานพานะนี้!");

    if(vHealth <= 400) {
	    format(szMessage, sizeof(szMessage), "* %s พยายามที่จะควบคุมไฟรถที่เสียหาย", GetPlayerNameEx(playerid));
		SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, szMessage);
	}
	else {

		switch (GetLightStatus(vehicleid))
		{
			case false:
			{
				SetLightStatus(vehicleid, true);
				GameTextForPlayer(playerid, "~g~Lights On", 2000, 4);

				format(szMessage, sizeof(szMessage), "* %s เปิดไฟรถ", GetPlayerNameEx(playerid));
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, szMessage);
			}
			case true:
			{
				SetLightStatus(vehicleid, false);
				GameTextForPlayer(playerid, "~r~Lights Off", 2000, 4);

				format(szMessage, sizeof(szMessage), "* %s ปิดไฟรถ", GetPlayerNameEx(playerid));
				SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, szMessage);
			}
		}
	}
    return 1;
}

stock setTrunkState(vehicleID, enable) {
	new engine, lights, alarm, doors, bonnet, boot, objective;

	GetVehicleParamsEx(vehicleID, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleID, engine, lights, alarm, doors, bonnet, enable, objective);
}

stock getHoodState(vehicleID) {
	new engine, lights, alarm, doors, bonnet, boot, objective;

	GetVehicleParamsEx(vehicleID, engine, lights, alarm, doors, bonnet, boot, objective);
	return bonnet == VEHICLE_PARAMS_ON;
}

stock getTrunkState(vehicleID) {
	new engine, lights, alarm, doors, bonnet, boot, objective;

	GetVehicleParamsEx(vehicleID, engine, lights, alarm, doors, bonnet, boot, objective);
	return boot == VEHICLE_PARAMS_ON;
}

stock setHoodState(vehicleID, enable) {
	new engine, lights, alarm, doors, bonnet, boot, objective;//, ownerID, slotID

	GetVehicleParamsEx(vehicleID, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleID, engine, lights, alarm, doors, enable, boot, objective);

}

// คราฟอาวุธ
Dialog:infoCraft(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        ShowCraftWeapon(playerid);
		    }
		    case 1:
		    {
				Dialog_Show(playerid,infoStorageCraft,DIALOG_STYLE_LIST,"คลังวัตถุดิบสำหรับคราฟอาวุธ","{FFFFFF}ดินปืน ในคลัง [%d]\nท่อนไม้ ในคลัง [%d]\nเหล็ก ในคลัง [%d]","เลือก","ยกเลิก", playerData[playerid][pMaterials], playerData[playerid][pWoods], playerData[playerid][pIrons]);
		    }
		}
	}
	return 1;
}

Dialog:infoStorageCraft(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
		        StorageType[playerid] = 1;
				Dialog_Show(playerid,StorageInfo,DIALOG_STYLE_LIST,"คลังวัตถุดิบสำหรับคราฟอาวุธ","{FFFFFF}เก็บใส่คลัง\nเบิกออกจากคลัง","เลือก","ยกเลิก");
			}
		    case 1:
		    {
		        StorageType[playerid] = 2;
				Dialog_Show(playerid,StorageInfo,DIALOG_STYLE_LIST,"คลังวัตถุดิบสำหรับคราฟอาวุธ","{FFFFFF}เก็บใส่คลัง\nเบิกออกจากคลัง","เลือก","ยกเลิก");
			}
		    case 2:
		    {
		        StorageType[playerid] = 3;
				Dialog_Show(playerid,StorageInfo,DIALOG_STYLE_LIST,"คลังวัตถุดิบสำหรับคราฟอาวุธ","{FFFFFF}เก็บใส่คลัง\nเบิกออกจากคลัง","เลือก","ยกเลิก");
			}
		}
	}
	return 1;
}

Dialog:StorageInfo(playerid, response, listitem, inputtext[])
{
	if (response)
	{
		switch(listitem)
		{
		    case 0:
		    {
				Dialog_Show(playerid,StorageInfo1,DIALOG_STYLE_INPUT,"คลังวัตถุดิบสำหรับคราฟอาวุธ","{FFFFFF}กรอกจำนวนที่ต้องการจะเก็บเข้าคลัง:","ตกลง","ยกเลิก");
		    }
		    case 1:
		    {
				Dialog_Show(playerid,StorageInfo2,DIALOG_STYLE_INPUT,"คลังวัตถุดิบสำหรับคราฟอาวุธ","{FFFFFF}กรอกจำนวนที่ต้องการจะนำออกจากคลัง:","ตกลง","ยกเลิก");
		    }
		}
	}
	return 1;
}

// เก็บเข้าคลัง
Dialog:StorageInfo1(playerid, response, listitem, inputtext[])
{
	new amount = strval(inputtext);
	if (response)
	{
	    switch (StorageType[playerid])
	    {
	        case 0: { }
	        case 1: // ดินปืน
	        {
	            if (amount <= 0)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0!");

				if (Inventory_Count(playerid, "ดินปืน") < amount)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมี 'ดินปืน' ไม่เพียงพอ!");
				    
                playerData[playerid][pMaterials] += amount;
                Inventory_Remove(playerid, "ดินปืน", amount);
                SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้เก็บ ดินปืน จำนวน %d เข้าคลังเรียบร้อยแล้ว", amount);
	        }
	        case 2: // ไม้
	        {
	            if (amount <= 0)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0!");

				if (Inventory_Count(playerid, "Woods") < amount)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมี 'ท่อนซุง' ไม่เพียงพอ!");

                playerData[playerid][pWoods] += amount;
                Inventory_Remove(playerid, "Woods", amount);
                SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้เก็บ ไม้ จำนวน %d เข้าคลังเรียบร้อยแล้ว", amount);
	        }
	        case 3: // เหล็ก
	        {
	            if (amount <= 0)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0!");

				if (Inventory_Count(playerid, "Hematite") < amount)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณมี 'แร่เฮมาไทต์' ไม่เพียงพอ!");

                playerData[playerid][pIrons] += amount;
                Inventory_Remove(playerid, "Hematite", amount);
                SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้เก็บ เหล็ก จำนวน %d เข้าคลังเรียบร้อยแล้ว", amount);
	        }
	    }
	    StorageType[playerid] = 0;
	}
	return 1;
}

// เอาออกจากคลัง
Dialog:StorageInfo2(playerid, response, listitem, inputtext[])
{
	new amount = strval(inputtext);
	if (response)
	{
	    switch (StorageType[playerid])
	    {
	        case 0: { }
	        case 1: // ดินปืน
	        {
	            if (amount <= 0)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0!");

				if (playerData[playerid][pMaterials] < amount)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คลังคุณมี 'ดินปืน' ไม่เพียงพอ!");

                playerData[playerid][pMaterials] -= amount;
				Inventory_Add(playerid, "ดินปืน", amount);
                SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้นำ ดินปืน จำนวน %d ออกจากคลังเรียบร้อยแล้ว", amount);
	        }
	        case 2: // ไม้
	        {
	            if (amount <= 0)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0!");

				if (playerData[playerid][pWoods] < amount)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คลังคุณมี 'ท่อนซุง' ไม่เพียงพอ!");

                playerData[playerid][pWoods] -= amount;
                Inventory_Add(playerid, "Woods", amount);
                SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้นำ ไม้ จำนวน %d ออกจากคลังเรียบร้อยแล้ว", amount);
	        }
	        case 3: // เหล็ก
	        {
	            if (amount <= 0)
	                return SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณต้องระบุจำนวนมากกว่า 0!");

				if (playerData[playerid][pIrons] < amount)
				    return SendClientMessage(playerid, COLOR_LIGHTRED, "* คลังคุณมี 'แร่เฮมาไทต์' ไม่เพียงพอ!");

                playerData[playerid][pIrons] -= amount;
                Inventory_Add(playerid, "Hematite", amount);
                SendClientMessageEx(playerid, COLOR_YELLOW, "* คุณได้นำ เหล็ก จำนวน %d ออกจากคลังเรียบร้อยแล้ว", amount);
	        }
	    }
	    StorageType[playerid] = 0;
	}
	return 1;
}

ShowCraftWeapon(playerid)
{
    TextDrawShowForPlayer(playerid, WeaponCraft[0]);
    TextDrawShowForPlayer(playerid, WeaponCraft[1]);
    TextDrawShowForPlayer(playerid, WeaponCraft[2]);
    TextDrawShowForPlayer(playerid, WeaponCraft[3]);
    TextDrawShowForPlayer(playerid, WeaponCraft[4]);

	SelectTextDraw(playerid, 0xFF0000FF);
    
    // แสดงตามทักษะ
    if (playerData[playerid][pSkillCraft] >= 1)
    {
        TextDrawShowForPlayer(playerid, WeaponCraft[5]);
        TextDrawShowForPlayer(playerid, WeaponCraft[6]);
        TextDrawShowForPlayer(playerid, WeaponCraft[7]);
    }

    if (playerData[playerid][pSkillCraft] >= 2)
    {
        TextDrawShowForPlayer(playerid, WeaponCraft[8]);
        TextDrawShowForPlayer(playerid, WeaponCraft[9]);
        TextDrawShowForPlayer(playerid, WeaponCraft[10]);
    }

    if (playerData[playerid][pSkillCraft] >= 3)
    {
        TextDrawShowForPlayer(playerid, WeaponCraft[11]);
        TextDrawShowForPlayer(playerid, WeaponCraft[12]);
        TextDrawShowForPlayer(playerid, WeaponCraft[13]);

        TextDrawShowForPlayer(playerid, WeaponCraft[14]);
        TextDrawShowForPlayer(playerid, WeaponCraft[15]);
        TextDrawShowForPlayer(playerid, WeaponCraft[16]);
    }

    if (playerData[playerid][pSkillCraft] >= 4)
    {
        TextDrawShowForPlayer(playerid, WeaponCraft[17]);
        TextDrawShowForPlayer(playerid, WeaponCraft[18]);
        TextDrawShowForPlayer(playerid, WeaponCraft[19]);

        TextDrawShowForPlayer(playerid, WeaponCraft[20]);
        TextDrawShowForPlayer(playerid, WeaponCraft[21]);
        TextDrawShowForPlayer(playerid, WeaponCraft[22]);
    }

	return 1;
}

HideCraftWeapon(playerid)
{
	TextDrawHideForPlayer(playerid, WeaponCraft[0]);
	TextDrawHideForPlayer(playerid, WeaponCraft[1]);
	TextDrawHideForPlayer(playerid, WeaponCraft[2]);
	TextDrawHideForPlayer(playerid, WeaponCraft[3]);
	TextDrawHideForPlayer(playerid, WeaponCraft[4]);
	TextDrawHideForPlayer(playerid, WeaponCraft[5]);
	TextDrawHideForPlayer(playerid, WeaponCraft[6]);
	TextDrawHideForPlayer(playerid, WeaponCraft[7]);
	TextDrawHideForPlayer(playerid, WeaponCraft[8]);
	TextDrawHideForPlayer(playerid, WeaponCraft[9]);
	TextDrawHideForPlayer(playerid, WeaponCraft[10]);
	TextDrawHideForPlayer(playerid, WeaponCraft[11]);
	TextDrawHideForPlayer(playerid, WeaponCraft[12]);
	TextDrawHideForPlayer(playerid, WeaponCraft[13]);
	TextDrawHideForPlayer(playerid, WeaponCraft[14]);
	TextDrawHideForPlayer(playerid, WeaponCraft[15]);
	TextDrawHideForPlayer(playerid, WeaponCraft[16]);
	TextDrawHideForPlayer(playerid, WeaponCraft[17]);
	TextDrawHideForPlayer(playerid, WeaponCraft[18]);
	TextDrawHideForPlayer(playerid, WeaponCraft[19]);
	TextDrawHideForPlayer(playerid, WeaponCraft[20]);
	TextDrawHideForPlayer(playerid, WeaponCraft[21]);
	TextDrawHideForPlayer(playerid, WeaponCraft[22]);
	CancelSelectTextDraw(playerid);
	return 1;
}

//

ShowItemCraftWeapon(playerid)
{
	TextDrawShowForPlayer(playerid, ItemWPCraft[0]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[1]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[2]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[3]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[4]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[5]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[6]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[7]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[8]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[9]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[10]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[11]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[12]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[13]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[14]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[15]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[16]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[17]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[18]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[19]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[20]);
	TextDrawShowForPlayer(playerid, ItemWPCraft[21]);

	SelectTextDraw(playerid, 0xFF0000FF);
	return 1;
}

ShowCraftWeaponType(playerid, type)
{
    HideCraftWeapon(playerid);
    ShowItemCraftWeapon(playerid);
    
    // Cane
    if (type == 1)
    {
        TextDrawSetPreviewModel(ItemWPCraft[19], 326);
        TextDrawShowForPlayer(playerid, ItemWPCraft[19]);
		TextDrawSetString(ItemWPCraft[4], "Cane");

		TextDrawSetString(ItemWPCraft[15], "Gun Powder (50 EA)");
		TextDrawSetString(ItemWPCraft[16], "Woods (100 EA)");
		TextDrawSetString(ItemWPCraft[17], "ORE (100 EA)");
		TextDrawSetString(ItemWPCraft[18], "Money ($20,000)");
		
		CraftType[playerid] = 1;
    }

    // Pool Cue
    if (type == 2)
    {
        TextDrawSetPreviewModel(ItemWPCraft[19], 338);
        TextDrawShowForPlayer(playerid, ItemWPCraft[19]);
		TextDrawSetString(ItemWPCraft[4], "Pool Cue");

		TextDrawSetString(ItemWPCraft[15], "Gun Powder (80 EA)");
		TextDrawSetString(ItemWPCraft[16], "Woods (50 EA)");
		TextDrawSetString(ItemWPCraft[17], "ORE (150 EA)");
		TextDrawSetString(ItemWPCraft[18], "Money ($30,000)");
		
		CraftType[playerid] = 2;
    }

    // Baseball Bat
    if (type == 3)
    {
        TextDrawSetPreviewModel(ItemWPCraft[19], 336);
        TextDrawShowForPlayer(playerid, ItemWPCraft[19]);
		TextDrawSetString(ItemWPCraft[4], "Baseball Bat");

		TextDrawSetString(ItemWPCraft[15], "Gun Powder (100 EA)");
		TextDrawSetString(ItemWPCraft[16], "Woods (200 EA)");
		TextDrawSetString(ItemWPCraft[17], "ORE (200 EA)");
		TextDrawSetString(ItemWPCraft[18], "Money ($40,000)");
		
		CraftType[playerid] = 3;
    }

    // Brass Knuckles
    if (type == 4)
    {
        TextDrawSetPreviewModel(ItemWPCraft[19], 331);
        TextDrawShowForPlayer(playerid, ItemWPCraft[19]);
		TextDrawSetString(ItemWPCraft[4], "Brass Knuckles");

		TextDrawSetString(ItemWPCraft[15], "Gun Powder (130 EA)");
		TextDrawSetString(ItemWPCraft[16], "Woods (150 EA)");
		TextDrawSetString(ItemWPCraft[17], "ORE (150 EA)");
		TextDrawSetString(ItemWPCraft[18], "Money ($40,000)");
		
		CraftType[playerid] = 4;
    }

    // Golf Club
    if (type == 5)
    {
        TextDrawSetPreviewModel(ItemWPCraft[19], 333);
        TextDrawShowForPlayer(playerid, ItemWPCraft[19]);
		TextDrawSetString(ItemWPCraft[4], "Golf Club");

		TextDrawSetString(ItemWPCraft[15], "Gun Powder (200 EA)");
		TextDrawSetString(ItemWPCraft[16], "Woods (250 EA)");
		TextDrawSetString(ItemWPCraft[17], "ORE (300 EA)");
		TextDrawSetString(ItemWPCraft[18], "Money ($50,000)");
		
		CraftType[playerid] = 5;
    }

    // Katana
    if (type == 6)
    {
        TextDrawSetPreviewModel(ItemWPCraft[19], 339);
        TextDrawShowForPlayer(playerid, ItemWPCraft[19]);
		TextDrawSetString(ItemWPCraft[4], "Katana");

		TextDrawSetString(ItemWPCraft[15], "Gun Powder (200 EA)");
		TextDrawSetString(ItemWPCraft[16], "Woods (250 EA)");
		TextDrawSetString(ItemWPCraft[17], "ORE (300 EA)");
		TextDrawSetString(ItemWPCraft[18], "Money ($50,000)");
		
		CraftType[playerid] = 6;
    }

    return 1;
}

HideCraftWeaponType(playerid)
{
	TextDrawHideForPlayer(playerid, ItemWPCraft[0]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[1]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[2]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[3]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[4]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[5]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[6]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[7]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[8]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[9]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[10]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[11]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[12]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[13]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[14]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[15]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[16]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[17]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[18]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[19]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[20]);
	TextDrawHideForPlayer(playerid, ItemWPCraft[21]);

	CancelSelectTextDraw(playerid);
	return 1;
}

// วิ่งดินปืน
Dialog:getMaterials(playerid, response, listitem, inputtext[])
{
	if (response)
	{
	    if (buyMaterials[playerid] == 1)
	        return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณอยู่ระหว่างการวิ่งดินปืน!");
	
		if (GetPlayerMoneyEx(playerid) < 1000)
		    return SendClientMessage(playerid, COLOR_LIGHTRED, "คุณมีเงินไม่เพียงพอ! ($1,000)");
		    
		GivePlayerMoneyEx(playerid, -1000);
		SetPlayerAttachedObject(playerid,4,1575,1,0.000000,0.000000,0.000000,88.099990,-0.699998,0.000000,1.000000,1.000000,1.000000);
		buyMaterials[playerid] = 1;
		SetPlayerCheckpoint(playerid, -85.5289,-22.5072,3.1172, 3.0);
		
		SendClientMessage(playerid, COLOR_YELLOW, "คุณได้ทำการรับการวิ่งดินปืนแล้วและคุณได้จ่ายเงินสำหรับการวิ่งครั้งนี้ไป $1,000");
        SendClientMessage(playerid, COLOR_YELLOW, "(( ไปยังจุดสีแดงในแผนที่เพื่อรับถุงดินปืนของคุณ ))");
	}
	return 1;
}

// ระบบกระเป๋า
forward Inventory_Load(playerid);
public Inventory_Load(playerid)
{
	static
	    rows;

	cache_get_row_count(rows);

	for (new i = 0; i < rows && i < MAX_PLAYER_ITEMS; i ++)
	{
        cache_get_value_name(i, "pItemName", playerItems[playerid][i][pItemName], 32);

		playerItems[playerid][i][pItemExists] = 1;

		cache_get_value_name_int(i, "pItemID", playerItems[playerid][i][pItemID]);
        cache_get_value_name_int(i, "pItemAmount", playerItems[playerid][i][pItemAmount]);

  		playerItems[playerid][i][pItemType] = GetItemArrayID(playerItems[playerid][i][pItemName]);
	}
	return 1;
}

// --> ระบบกระเป๋าเก็บของ
stock refreshInventory(playerid) {
	new
		szString[400];

    /* ------------------------- [Character Info] ------------------------- */

	format(szString, sizeof(szString), "~w~SQLID : ~g~%i~n~~w~Name : ~g~%s ~n~~w~Online Hours : ~g~%i~n~~w~Money : ~g~%s ~n~~w~Coin : ~g~%d ~n~~w~Bank Money : ~g~%s~n~~n~~w~Welcome to ~g~Alive Roleplay",
		playerData[playerid][pID], GetPlayerNameEx(playerid), playerData[playerid][pHours], FormatNumber(GetPlayerMoneyEx(playerid)), playerData[playerid][pCoin], FormatNumber(playerData[playerid][pBankMoney]));

    PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][34], playerData[playerid][pSkin]);
	PlayerTextDrawSetString(playerid, inventoryTextdraws[playerid][35], szString);

	/* --------------------------- [Inv Info] ----------------------------- */
	format(szString, sizeof(szString), "Item Slots: %i/%i~n~Current Page: %i/%i", GetPlayerItemCount(playerid), playerData[playerid][pInventorySlots], playerData[playerid][pInventoryPage], MAX_PLAYER_ITEMS / 8);
	PlayerTextDrawSetString(playerid, inventoryTextdraws[playerid][39], szString);

	format(szString, sizeof(szString), "%i/%i", playerData[playerid][pInventoryPage], MAX_PLAYER_ITEMS / 8);
	PlayerTextDrawSetString(playerid, inventoryTextdraws[playerid][63], szString);
    /* -------------------------- [Inv Weapons] --------------------------- */
	for(new i = 0; i < 5; i ++) {
	    new
			indexID = (i * 4) + 12;

	    if(playerData[playerid][pInvWeapons][i] >= 1) {
	        format(szString, sizeof(szString), "%s~n~Ammo: %i", WeaponNamesEn[playerData[playerid][pInvWeapons][i]], playerData[playerid][pInvAmmo][i]);

			PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][indexID], weaponModels[playerData[playerid][pInvWeapons][i]]);
			PlayerTextDrawSetString(playerid, inventoryTextdraws[playerid][indexID + 1], szString);
			PlayerTextDrawSetString(playerid, inventoryTextdraws[playerid][indexID + 2], "Equip");
		}
		else {
		    PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][indexID], 19299);
		    PlayerTextDrawSetString(playerid, inventoryTextdraws[playerid][indexID + 1], "Empty Slot~n~Ammo: 0");
		    PlayerTextDrawSetString(playerid, inventoryTextdraws[playerid][indexID + 2], "Store");
		}
		PlayerTextDrawHide(playerid, inventoryTextdraws[playerid][indexID]);
		PlayerTextDrawShow(playerid, inventoryTextdraws[playerid][indexID]);
	}
	/* -------------------------- [Inv Items] --------------------------- */
	new start = (playerData[playerid][pInventoryPage] - 1) * 8;

	if(start + 8 > MAX_PLAYER_ITEMS) {
	    playerData[playerid][pInventoryPage] = 1;
	}

	else for(new i = start; i < start + 8; i ++) {
	    new
	        indexID = ((i % 8) * 2) + 46;

	    if(i > playerData[playerid][pInventorySlots]) {
			PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][indexID], 19804);
			PlayerTextDrawSetString(playerid, inventoryTextdraws[playerid][indexID + 1], "Locked");
	    }
	    else if(playerItems[playerid][i][pItemExists]) {
	        if(playerItems[playerid][i][pItemAmount] >= 1) {
		        format(szString, sizeof(szString), "%s (%i)", playerItems[playerid][i][pItemName], playerItems[playerid][i][pItemAmount]);
			}
			else {
			    format(szString, sizeof(szString), "%s", playerItems[playerid][i][pItemName]);
			}

            PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][indexID], itemArray[playerItems[playerid][i][pItemType]][e_ItemModelID]);
			PlayerTextDrawSetString(playerid, inventoryTextdraws[playerid][indexID + 1], szString);
	    }
	    else {
			PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][indexID], 19299);
			PlayerTextDrawSetString(playerid, inventoryTextdraws[playerid][indexID + 1], "Empty Slot");
	    }
	    PlayerTextDrawHide(playerid, inventoryTextdraws[playerid][indexID]);
		PlayerTextDrawShow(playerid, inventoryTextdraws[playerid][indexID]);
	}
	/* ------------------------------------------------------------------- */

	if(playerData[playerid][pItemSelected] >= 0) {
	    selectInventoryItem(playerid, -1);
	}

	return 1;
}

/*forward toggleInventory(playerid);
public toggleInventory(playerid) {

	// --> ระบบกระเป๋าเก็บของ
    new
		Float:x = 177.0,
  		Float:y = 262.0,
		index = 45;

	if(playerData[playerid][pInventoryShown]) {

		for(new i = 0; i < 90; i ++) {
	        PlayerTextDrawDestroy(playerid, inventoryTextdraws[playerid][i]);
		}

		CancelSelectTextDraw(playerid);

		playerData[playerid][pInventoryPage] = 1;
		playerData[playerid][pInventoryShown] = 0;
		playerData[playerid][pItemSelected] = -1;
		playerData[playerid][pStoreItem] = 0;
		playerData[playerid][pMarketSell] = 0;
		playerData[playerid][pCraftItem] = 0;
	}
	else {

		SendClientMessage(playerid, COLOR_YELLOW, "[กระเป๋าเก็บของ] : พิมพ์ '/inv' เพื่อเปิด / ปิด");

	    inventoryTextdraws[playerid][0] = CreatePlayerTextDraw(playerid, 560.000000, 97.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][0], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][0], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][0], 0.300000, 37.000000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][0], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][0], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][0], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][0], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][0], 421075370);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][0], 103.000000, 0.000000);

		inventoryTextdraws[playerid][1] = CreatePlayerTextDraw(playerid, 559.000000, 98.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][1], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][1], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][1], 0.300000, 1.399994);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][1], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][1], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][1], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][1], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][1], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][1], 104.000000, 1.000000);

		inventoryTextdraws[playerid][2] = CreatePlayerTextDraw(playerid, 300.000000, 98.000000, "Inventory");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][2], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][2], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][2], 0.270000, 1.399999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][2], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][2], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][2], 1);

		inventoryTextdraws[playerid][3] = CreatePlayerTextDraw(playerid, 549.000000, 98.000000, "X");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][3], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][3], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][3], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][3], 0.300000, 1.399994);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][3], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][3], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][3], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][3], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][3], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][3], 14.000000, 14.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][3], 1);

		inventoryTextdraws[playerid][4] = CreatePlayerTextDraw(playerid, 105.000000, 95.000000, "LD_PLAN:tvbase");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][4], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][4], 4);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][4], 0.790000, -2.900000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][4], 255);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][4], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][4], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][4], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][4], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][4], 255);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][4], 460.000000, 1.000000);

		inventoryTextdraws[playerid][5] = CreatePlayerTextDraw(playerid, 105.000000, 432.000000, "LD_PLAN:tvbase");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][5], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][5], 4);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][5], 0.790000, -2.900000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][5], 255);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][5], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][5], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][5], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][5], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][5], 255);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][5], 453.000000, -1.000000);

		inventoryTextdraws[playerid][6] = CreatePlayerTextDraw(playerid, 105.000000, 432.000000, "LD_PLAN:tvbase");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][6], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][6], 4);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][6], 0.790000, -2.299999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][6], 255);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][6], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][6], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][6], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][6], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][6], 255);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][6], -1.000000, -337.000000);

		inventoryTextdraws[playerid][7] = CreatePlayerTextDraw(playerid, 558.000000, 432.000000, "LD_PLAN:tvbase");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][7], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][7], 4);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][7], 0.790000, -2.299999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][7], 255);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][7], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][7], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][7], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][7], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][7], 255);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][7], -1.000000, -337.000000);

		inventoryTextdraws[playerid][8] = CreatePlayerTextDraw(playerid, 246.000000, 122.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][8], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][8], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][8], 0.200000, 31.500000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][8], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][8], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][8], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][8], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][8], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][8], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][8], 111.000000, 0.000000);

		inventoryTextdraws[playerid][9] = CreatePlayerTextDraw(playerid, 245.000000, 123.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][9], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][9], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][9], 0.200000, 2.299995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][9], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][9], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][9], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][9], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][9], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][9], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][9], 112.000000, 0.000000);

		inventoryTextdraws[playerid][10] = CreatePlayerTextDraw(playerid, 122.000000, 126.000000, "Weapon Inventory");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][10], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][10], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][10], 0.270000, 1.399999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][10], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][10], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][10], 1);

		inventoryTextdraws[playerid][11] = CreatePlayerTextDraw(playerid, 243.000000, 151.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][11], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][11], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][11], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][11], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][11], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][11], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][11], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][11], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][11], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][11], 114.000000, 0.000000);

		inventoryTextdraws[playerid][12] = CreatePlayerTextDraw(playerid, 118.000000, 151.000000, "Model");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][12], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][12], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][12], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][12], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][12], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][12], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][12], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][12], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][12], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][12], 42.000000, 43.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][12], 19299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][12], -16.0000, 0.0000, -130.0000, 1.2000);

		inventoryTextdraws[playerid][13] = CreatePlayerTextDraw(playerid, 166.000000, 154.000000, "Empty Slot~n~Ammo: 0");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][13], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][13], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][13], 0.180000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][13], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][13], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][13], 1);

		inventoryTextdraws[playerid][14] = CreatePlayerTextDraw(playerid, 182.000000, 182.000000, "Equip");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][14], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][14], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][14], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][14], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][14], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][14], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][14], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][14], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][14], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][14], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][14], 1);

		inventoryTextdraws[playerid][15] = CreatePlayerTextDraw(playerid, 243.000000, 200.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][15], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][15], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][15], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][15], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][15], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][15], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][15], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][15], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][15], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][15], 114.000000, 0.000000);

		inventoryTextdraws[playerid][16] = CreatePlayerTextDraw(playerid, 118.000000, 200.000000, "Model");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][16], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][16], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][16], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][16], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][16], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][16], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][16], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][16], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][16], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][16], 42.000000, 43.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][16], 19299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][16], -16.0000, 0.0000, -130.0000, 1.2000);

		inventoryTextdraws[playerid][17] = CreatePlayerTextDraw(playerid, 166.000000, 203.000000, "Empty Slot~n~Ammo: 0");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][17], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][17], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][17], 0.180000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][17], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][17], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][17], 1);

		inventoryTextdraws[playerid][18] = CreatePlayerTextDraw(playerid, 182.000000, 231.000000, "Equip");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][18], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][18], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][18], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][18], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][18], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][18], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][18], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][18], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][18], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][18], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][18], 1);

		inventoryTextdraws[playerid][19] = CreatePlayerTextDraw(playerid, 243.000000, 249.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][19], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][19], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][19], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][19], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][19], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][19], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][19], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][19], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][19], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][19], 114.000000, 0.000000);

		inventoryTextdraws[playerid][20] = CreatePlayerTextDraw(playerid, 118.000000, 249.000000, "Model");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][20], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][20], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][20], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][20], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][20], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][20], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][20], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][20], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][20], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][20], 42.000000, 43.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][20], 19299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][20], -16.0000, 0.0000, -130.0000, 1.2000);

		inventoryTextdraws[playerid][21] = CreatePlayerTextDraw(playerid, 166.000000, 253.000000, "Empty Slot~n~Ammo: 0");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][21], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][21], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][21], 0.180000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][21], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][21], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][21], 1);

		inventoryTextdraws[playerid][22] = CreatePlayerTextDraw(playerid, 182.000000, 279.000000, "Equip");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][22], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][22], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][22], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][22], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][22], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][22], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][22], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][22], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][22], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][22], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][22], 1);

		inventoryTextdraws[playerid][23] = CreatePlayerTextDraw(playerid, 243.000000, 298.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][23], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][23], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][23], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][23], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][23], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][23], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][23], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][23], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][23], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][23], 114.000000, 0.000000);

		inventoryTextdraws[playerid][24] = CreatePlayerTextDraw(playerid, 118.000000, 298.000000, "Model");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][24], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][24], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][24], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][24], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][24], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][24], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][24], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][24], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][24], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][24], 42.000000, 43.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][24], 19299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][24], -16.0000, 0.0000, -130.0000, 1.2000);

		inventoryTextdraws[playerid][25] = CreatePlayerTextDraw(playerid, 166.000000, 301.000000, "Empty Slot~n~Ammo: 0");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][25], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][25], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][25], 0.180000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][25], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][25], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][25], 1);

		inventoryTextdraws[playerid][26] = CreatePlayerTextDraw(playerid, 182.000000, 328.000000, "Equip");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][26], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][26], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][26], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][26], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][26], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][26], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][26], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][26], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][26], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][26], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][26], 1);

		inventoryTextdraws[playerid][27] = CreatePlayerTextDraw(playerid, 243.000000, 347.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][27], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][27], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][27], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][27], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][27], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][27], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][27], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][27], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][27], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][27], 114.000000, 0.000000);

		inventoryTextdraws[playerid][28] = CreatePlayerTextDraw(playerid, 118.000000, 347.000000, "Model");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][28], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][28], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][28], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][28], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][28], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][28], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][28], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][28], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][28], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][28], 42.000000, 43.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][28], 19299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][28], -16.0000, 0.0000, -130.0000, 1.2000);

		inventoryTextdraws[playerid][29] = CreatePlayerTextDraw(playerid, 166.000000, 350.000000, "Empty Slot~n~Ammo: 0");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][29], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][29], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][29], 0.180000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][29], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][29], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][29], 1);

		inventoryTextdraws[playerid][30] = CreatePlayerTextDraw(playerid, 182.000000, 377.000000, "Equip");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][30], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][30], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][30], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][30], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][30], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][30], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][30], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][30], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][30], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][30], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][30], 1);

		inventoryTextdraws[playerid][31] = CreatePlayerTextDraw(playerid, 465.000000, 122.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][31], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][31], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][31], -0.200000, 11.899992);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][31], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][31], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][31], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][31], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][31], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][31], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][31], 246.000000, 0.000000);

		inventoryTextdraws[playerid][32] = CreatePlayerTextDraw(playerid, 464.000000, 123.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][32], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][32], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][32], 0.200000, 2.199995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][32], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][32], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][32], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][32], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][32], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][32], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][32], 247.000000, 0.000000);

		inventoryTextdraws[playerid][33] = CreatePlayerTextDraw(playerid, 328.000000, 126.000000, "Character");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][33], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][33], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][33], 0.270000, 1.399999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][33], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][33], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][33], 1);

		inventoryTextdraws[playerid][34] = CreatePlayerTextDraw(playerid, 250.000000, 148.000000, "Skin");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][34], 119);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][34], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][34], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][34], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][34], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][34], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][34], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][34], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][34], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][34], 64.000000, 79.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][34], 299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][34], -20.0000, 0.0000, 0.0000, 1.0000);

		inventoryTextdraws[playerid][35] = CreatePlayerTextDraw(playerid, 319.000000, 150.000000, "ID Card Number: 1~n~Name: MeanKantapong~n~Age: 23~n~Sex: Male - Online Hours: 0~n~Group: -~n~Rank: -~n~Money: $1 - Coins: 1~n~Bank Money");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][35], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][35], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][35], 0.170000, 0.999997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][35], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][35], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][35], 1);

		inventoryTextdraws[playerid][36] = CreatePlayerTextDraw(playerid, 550.000000, 122.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][36], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][36], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][36], -0.200000, 6.799993);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][36], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][36], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][36], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][36], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][36], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][36], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][36], 465.000000, 0.000000);

		inventoryTextdraws[playerid][37] = CreatePlayerTextDraw(playerid, 549.000000, 123.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][37], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][37], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][37], 0.200000, 2.199995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][37], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][37], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][37], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][37], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][37], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][37], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][37], 466.000000, 0.000000);

		inventoryTextdraws[playerid][38] = CreatePlayerTextDraw(playerid, 483.000000, 126.000000, "Inv. Info");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][38], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][38], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][38], 0.270000, 1.399999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][38], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][38], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][38], 1);

		inventoryTextdraws[playerid][39] = CreatePlayerTextDraw(playerid, 471.000000, 149.000000, "Item Slot: 0/32~n~Vehicle Slot: 5/20~n~Current Page: 1/4");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][39], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][39], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][39], 0.170000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][39], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][39], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][39], 1);

		inventoryTextdraws[playerid][40] = CreatePlayerTextDraw(playerid, 507.000000, 189.000000, "Use");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][40], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][40], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][40], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][40], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][40], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][40], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][40], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][40], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][40], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][40], 14.000000, 78.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][40], 1);

		inventoryTextdraws[playerid][41] = CreatePlayerTextDraw(playerid, 507.000000, 204.000000, "Split");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][41], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][41], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][41], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][41], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][41], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][41], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][41], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][41], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][41], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][41], 14.000000, 78.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][41], 1);

		inventoryTextdraws[playerid][42] = CreatePlayerTextDraw(playerid, 507.000000, 219.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][42], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][42], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][42], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][42], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][42], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][42], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][42], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][42], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][42], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][42], 14.000000, 78.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][42], 1);

		inventoryTextdraws[playerid][43] = CreatePlayerTextDraw(playerid, 550.000000, 237.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][43], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][43], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][43], -0.200000, 18.700000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][43], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][43], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][43], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][43], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][43], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][43], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][43], 246.000000, 0.000000);

		inventoryTextdraws[playerid][44] = CreatePlayerTextDraw(playerid, 549.000000, 238.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][44], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][44], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][44], 0.200000, 2.199995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][44], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][44], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][44], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][44], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][44], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][44], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][44], 247.000000, 0.000000);

		inventoryTextdraws[playerid][45] = CreatePlayerTextDraw(playerid, 350.000000, 241.000000, "Inventory Items");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][45], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][45], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][45], 0.270000, 1.399999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][45], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][45], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][45], 1);

		for(new i = 0; i < 8; i ++) {
		    x += 74.0;

			if(i == 4) {
			    x = 251.0;
			    y += 72.0;
			}

			inventoryTextdraws[playerid][++index] = CreatePlayerTextDraw(playerid, x, y, "Model");
			PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][index], 170);
			PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][index], 5);
			PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][index], 0.200000, 4.799995);
			PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][index], -1);
			PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][index], 1);
			PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][index], 0);
			PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][index], 72.000000, 70.000000);
			PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][index], 19804);
			PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][index], 0.0000, 0.0000, 0.0000, 2.0000);
			PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][index], 1);

			inventoryTextdraws[playerid][++index] = CreatePlayerTextDraw(playerid, x + 37.0, y + 58.0, "Locked");
			PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][index], 2);
			PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][index], 255);
			PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][index], 2);
			PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][index], 0.149999, 0.999997);
			PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][index], -1);
			PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][index], 1);
			PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][index], 1);
		}

		inventoryTextdraws[playerid][62] = CreatePlayerTextDraw(playerid, 307.000000, 406.000000, "<<");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][62], 0);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][62], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][62], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][62], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][62], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][62], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][62], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][62], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][62], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][62], 31.000000, 26.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][62], 19132);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][62], 90.0000, -90.0000, 0.0000, 1.0000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][62], 1);

		inventoryTextdraws[playerid][63] = CreatePlayerTextDraw(playerid, 346.000000, 411.000000, "1/4");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][63], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][63], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][63], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][63], 0.230000, 1.499999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][63], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][63], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][63], 1);

		inventoryTextdraws[playerid][64] = CreatePlayerTextDraw(playerid, 353.000000, 406.000000, ">>");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][64], 0);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][64], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][64], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][64], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][64], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][64], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][64], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][64], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][64], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][64], 31.000000, 26.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][64], 19132);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][64], 90.0000, 90.0000, 0.0000, 1.0000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][64], 1);

		inventoryTextdraws[playerid][65] = CreatePlayerTextDraw(playerid, 217.000000, 182.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][65], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][65], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][65], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][65], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][65], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][65], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][65], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][65], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][65], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][65], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][65], 1);

		inventoryTextdraws[playerid][66] = CreatePlayerTextDraw(playerid, 217.000000, 231.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][66], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][66], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][66], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][66], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][66], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][66], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][66], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][66], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][66], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][66], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][66], 1);

		inventoryTextdraws[playerid][67] = CreatePlayerTextDraw(playerid, 217.000000, 279.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][67], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][67], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][67], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][67], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][67], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][67], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][67], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][67], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][67], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][67], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][67], 1);

		inventoryTextdraws[playerid][68] = CreatePlayerTextDraw(playerid, 217.000000, 328.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][68], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][68], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][68], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][68], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][68], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][68], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][68], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][68], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][68], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][68], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][68], 1);

		inventoryTextdraws[playerid][69] = CreatePlayerTextDraw(playerid, 217.000000, 377.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][69], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][69], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][69], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][69], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][69], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][69], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][69], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][69], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][69], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][69], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][69], 1);

        playerData[playerid][pInventoryPage] = 1;
		playerData[playerid][pInventoryShown] = 1;
		playerData[playerid][pItemSelected] = -1;
		playerData[playerid][pStoreItem] = 0;
		playerData[playerid][pMarketSell] = 0;
		playerData[playerid][pCraftItem] = 0;

        refreshInventory(playerid);

		for(new i = 0; i < 70; i ++) {
		    PlayerTextDrawShow(playerid, inventoryTextdraws[playerid][i]);
		}

		SelectTextDraw(playerid, -1);
	}

	return 1;
}*/

forward toggleInventory(playerid);
public toggleInventory(playerid) {
    new
		Float:x = 177.0,
  		Float:y = 262.0,
		index = 45;

	if(playerData[playerid][pInventoryShown]) {
	    for(new i = 0; i < 70; i ++) {
	        PlayerTextDrawDestroy(playerid, inventoryTextdraws[playerid][i]);
		}

		/*if(playerData[playerid][pCraftItem]) {
			for(new i = 0; i < 28; i ++) {
   				PlayerTextDrawShow(playerid, craftingTextdraws[playerid][i]);
			}

			playerData[playerid][pCrafting] = 1;
		}
		else {
			CancelSelectTextDraw(playerid);
		}*/

		CancelSelectTextDraw(playerid);

		playerData[playerid][pInventoryPage] = 1;
		playerData[playerid][pInventoryShown] = 0;
		playerData[playerid][pItemSelected] = -1;
		playerData[playerid][pStoreItem] = 0;
		playerData[playerid][pMarketSell] = 0;
		playerData[playerid][pCraftItem] = 0;
	}
	else {
	    inventoryTextdraws[playerid][0] = CreatePlayerTextDraw(playerid, 560.000000, 97.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][0], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][0], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][0], 0.300000, 37.000000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][0], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][0], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][0], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][0], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][0], 421075370);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][0], 103.000000, 0.000000);

		inventoryTextdraws[playerid][1] = CreatePlayerTextDraw(playerid, 559.000000, 98.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][1], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][1], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][1], 0.300000, 1.399994);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][1], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][1], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][1], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][1], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][1], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][1], 104.000000, 1.000000);

		inventoryTextdraws[playerid][2] = CreatePlayerTextDraw(playerid, 300.000000, 98.000000, "Inventory");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][2], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][2], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][2], 0.270000, 1.399999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][2], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][2], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][2], 1);

		inventoryTextdraws[playerid][3] = CreatePlayerTextDraw(playerid, 549.000000, 98.000000, "X");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][3], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][3], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][3], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][3], 0.300000, 1.399994);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][3], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][3], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][3], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][3], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][3], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][3], 14.000000, 14.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][3], 1);

		inventoryTextdraws[playerid][4] = CreatePlayerTextDraw(playerid, 105.000000, 95.000000, "LD_PLAN:tvbase");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][4], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][4], 4);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][4], 0.790000, -2.900000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][4], 255);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][4], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][4], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][4], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][4], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][4], 255);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][4], 460.000000, 1.000000);

		inventoryTextdraws[playerid][5] = CreatePlayerTextDraw(playerid, 105.000000, 432.000000, "LD_PLAN:tvbase");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][5], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][5], 4);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][5], 0.790000, -2.900000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][5], 255);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][5], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][5], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][5], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][5], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][5], 255);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][5], 453.000000, -1.000000);

		inventoryTextdraws[playerid][6] = CreatePlayerTextDraw(playerid, 105.000000, 432.000000, "LD_PLAN:tvbase");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][6], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][6], 4);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][6], 0.790000, -2.299999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][6], 255);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][6], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][6], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][6], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][6], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][6], 255);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][6], -1.000000, -337.000000);

		inventoryTextdraws[playerid][7] = CreatePlayerTextDraw(playerid, 558.000000, 432.000000, "LD_PLAN:tvbase");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][7], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][7], 4);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][7], 0.790000, -2.299999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][7], 255);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][7], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][7], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][7], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][7], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][7], 255);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][7], -1.000000, -337.000000);

		inventoryTextdraws[playerid][8] = CreatePlayerTextDraw(playerid, 246.000000, 122.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][8], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][8], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][8], 0.200000, 31.500000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][8], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][8], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][8], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][8], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][8], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][8], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][8], 111.000000, 0.000000);

		inventoryTextdraws[playerid][9] = CreatePlayerTextDraw(playerid, 245.000000, 123.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][9], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][9], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][9], 0.200000, 2.299995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][9], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][9], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][9], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][9], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][9], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][9], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][9], 112.000000, 0.000000);

		inventoryTextdraws[playerid][10] = CreatePlayerTextDraw(playerid, 122.000000, 126.000000, "Weapon Inventory");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][10], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][10], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][10], 0.270000, 1.399999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][10], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][10], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][10], 1);

		inventoryTextdraws[playerid][11] = CreatePlayerTextDraw(playerid, 243.000000, 151.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][11], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][11], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][11], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][11], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][11], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][11], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][11], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][11], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][11], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][11], 114.000000, 0.000000);

		inventoryTextdraws[playerid][12] = CreatePlayerTextDraw(playerid, 118.000000, 151.000000, "Model");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][12], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][12], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][12], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][12], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][12], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][12], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][12], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][12], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][12], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][12], 42.000000, 43.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][12], 19299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][12], -16.0000, 0.0000, -130.0000, 1.2000);

		inventoryTextdraws[playerid][13] = CreatePlayerTextDraw(playerid, 166.000000, 154.000000, "Empty Slot~n~Ammo: 0");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][13], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][13], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][13], 0.180000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][13], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][13], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][13], 1);

		inventoryTextdraws[playerid][14] = CreatePlayerTextDraw(playerid, 182.000000, 182.000000, "Equip");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][14], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][14], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][14], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][14], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][14], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][14], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][14], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][14], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][14], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][14], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][14], 1);

		inventoryTextdraws[playerid][15] = CreatePlayerTextDraw(playerid, 243.000000, 200.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][15], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][15], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][15], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][15], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][15], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][15], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][15], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][15], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][15], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][15], 114.000000, 0.000000);

		inventoryTextdraws[playerid][16] = CreatePlayerTextDraw(playerid, 118.000000, 200.000000, "Model");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][16], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][16], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][16], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][16], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][16], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][16], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][16], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][16], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][16], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][16], 42.000000, 43.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][16], 19299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][16], -16.0000, 0.0000, -130.0000, 1.2000);

		inventoryTextdraws[playerid][17] = CreatePlayerTextDraw(playerid, 166.000000, 203.000000, "Empty Slot~n~Ammo: 0");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][17], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][17], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][17], 0.180000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][17], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][17], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][17], 1);

		inventoryTextdraws[playerid][18] = CreatePlayerTextDraw(playerid, 182.000000, 231.000000, "Equip");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][18], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][18], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][18], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][18], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][18], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][18], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][18], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][18], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][18], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][18], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][18], 1);

		inventoryTextdraws[playerid][19] = CreatePlayerTextDraw(playerid, 243.000000, 249.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][19], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][19], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][19], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][19], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][19], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][19], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][19], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][19], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][19], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][19], 114.000000, 0.000000);

		inventoryTextdraws[playerid][20] = CreatePlayerTextDraw(playerid, 118.000000, 249.000000, "Model");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][20], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][20], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][20], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][20], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][20], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][20], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][20], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][20], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][20], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][20], 42.000000, 43.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][20], 19299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][20], -16.0000, 0.0000, -130.0000, 1.2000);

		inventoryTextdraws[playerid][21] = CreatePlayerTextDraw(playerid, 166.000000, 253.000000, "Empty Slot~n~Ammo: 0");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][21], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][21], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][21], 0.180000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][21], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][21], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][21], 1);

		inventoryTextdraws[playerid][22] = CreatePlayerTextDraw(playerid, 182.000000, 279.000000, "Equip");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][22], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][22], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][22], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][22], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][22], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][22], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][22], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][22], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][22], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][22], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][22], 1);

		inventoryTextdraws[playerid][23] = CreatePlayerTextDraw(playerid, 243.000000, 298.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][23], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][23], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][23], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][23], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][23], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][23], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][23], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][23], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][23], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][23], 114.000000, 0.000000);

		inventoryTextdraws[playerid][24] = CreatePlayerTextDraw(playerid, 118.000000, 298.000000, "Model");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][24], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][24], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][24], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][24], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][24], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][24], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][24], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][24], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][24], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][24], 42.000000, 43.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][24], 19299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][24], -16.0000, 0.0000, -130.0000, 1.2000);

		inventoryTextdraws[playerid][25] = CreatePlayerTextDraw(playerid, 166.000000, 301.000000, "Empty Slot~n~Ammo: 0");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][25], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][25], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][25], 0.180000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][25], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][25], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][25], 1);

		inventoryTextdraws[playerid][26] = CreatePlayerTextDraw(playerid, 182.000000, 328.000000, "Equip");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][26], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][26], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][26], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][26], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][26], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][26], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][26], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][26], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][26], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][26], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][26], 1);

		inventoryTextdraws[playerid][27] = CreatePlayerTextDraw(playerid, 243.000000, 347.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][27], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][27], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][27], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][27], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][27], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][27], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][27], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][27], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][27], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][27], 114.000000, 0.000000);

		inventoryTextdraws[playerid][28] = CreatePlayerTextDraw(playerid, 118.000000, 347.000000, "Model");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][28], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][28], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][28], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][28], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][28], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][28], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][28], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][28], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][28], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][28], 42.000000, 43.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][28], 19299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][28], -16.0000, 0.0000, -130.0000, 1.2000);

		inventoryTextdraws[playerid][29] = CreatePlayerTextDraw(playerid, 166.000000, 350.000000, "Empty Slot~n~Ammo: 0");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][29], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][29], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][29], 0.180000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][29], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][29], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][29], 1);

		inventoryTextdraws[playerid][30] = CreatePlayerTextDraw(playerid, 182.000000, 377.000000, "Equip");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][30], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][30], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][30], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][30], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][30], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][30], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][30], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][30], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][30], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][30], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][30], 1);

		inventoryTextdraws[playerid][31] = CreatePlayerTextDraw(playerid, 465.000000, 122.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][31], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][31], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][31], -0.200000, 11.899992);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][31], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][31], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][31], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][31], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][31], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][31], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][31], 246.000000, 0.000000);

		inventoryTextdraws[playerid][32] = CreatePlayerTextDraw(playerid, 464.000000, 123.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][32], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][32], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][32], 0.200000, 2.199995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][32], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][32], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][32], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][32], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][32], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][32], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][32], 247.000000, 0.000000);

		inventoryTextdraws[playerid][33] = CreatePlayerTextDraw(playerid, 328.000000, 126.000000, "Character");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][33], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][33], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][33], 0.270000, 1.399999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][33], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][33], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][33], 1);

		inventoryTextdraws[playerid][34] = CreatePlayerTextDraw(playerid, 250.000000, 148.000000, "Skin");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][34], 119);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][34], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][34], 0.200000, 4.799995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][34], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][34], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][34], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][34], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][34], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][34], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][34], 64.000000, 79.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][34], 299);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][34], -20.0000, 0.0000, 0.0000, 1.0000);

		inventoryTextdraws[playerid][35] = CreatePlayerTextDraw(playerid, 319.000000, 150.000000, "ID Card Number: 1~n~Name: MeanKantapong~n~Age: 23~n~Sex: Male - Online Hours: 0~n~Group: -~n~Rank: -~n~Money: $1 - Coins: 1~n~Bank Money");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][35], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][35], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][35], 0.170000, 0.999997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][35], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][35], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][35], 1);

		inventoryTextdraws[playerid][36] = CreatePlayerTextDraw(playerid, 550.000000, 122.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][36], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][36], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][36], -0.200000, 6.799993);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][36], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][36], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][36], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][36], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][36], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][36], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][36], 465.000000, 0.000000);

		inventoryTextdraws[playerid][37] = CreatePlayerTextDraw(playerid, 549.000000, 123.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][37], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][37], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][37], 0.200000, 2.199995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][37], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][37], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][37], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][37], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][37], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][37], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][37], 466.000000, 0.000000);

		inventoryTextdraws[playerid][38] = CreatePlayerTextDraw(playerid, 483.000000, 126.000000, "Inv. Info");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][38], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][38], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][38], 0.270000, 1.399999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][38], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][38], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][38], 1);

		inventoryTextdraws[playerid][39] = CreatePlayerTextDraw(playerid, 471.000000, 149.000000, "Item Slot: 0/32~n~Vehicle Slot: 5/20~n~Current Page: 1/4");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][39], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][39], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][39], 0.170000, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][39], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][39], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][39], 1);

		inventoryTextdraws[playerid][40] = CreatePlayerTextDraw(playerid, 507.000000, 189.000000, "Use");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][40], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][40], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][40], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][40], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][40], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][40], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][40], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][40], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][40], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][40], 14.000000, 78.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][40], 1);

		inventoryTextdraws[playerid][41] = CreatePlayerTextDraw(playerid, 507.000000, 204.000000, "Split");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][41], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][41], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][41], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][41], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][41], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][41], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][41], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][41], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][41], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][41], 14.000000, 78.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][41], 1);

		inventoryTextdraws[playerid][42] = CreatePlayerTextDraw(playerid, 507.000000, 219.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][42], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][42], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][42], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][42], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][42], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][42], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][42], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][42], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][42], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][42], 14.000000, 78.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][42], 1);

		inventoryTextdraws[playerid][43] = CreatePlayerTextDraw(playerid, 550.000000, 237.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][43], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][43], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][43], -0.200000, 18.700000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][43], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][43], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][43], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][43], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][43], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][43], 102);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][43], 246.000000, 0.000000);

		inventoryTextdraws[playerid][44] = CreatePlayerTextDraw(playerid, 549.000000, 238.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][44], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][44], 1);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][44], 0.200000, 2.199995);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][44], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][44], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][44], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][44], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][44], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][44], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][44], 247.000000, 0.000000);

		inventoryTextdraws[playerid][45] = CreatePlayerTextDraw(playerid, 350.000000, 241.000000, "Inventory Items");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][45], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][45], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][45], 0.270000, 1.399999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][45], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][45], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][45], 1);

		for(new i = 0; i < 8; i ++) {
		    x += 74.0;

			if(i == 4) {
			    x = 251.0;
			    y += 72.0;
			}

			inventoryTextdraws[playerid][++index] = CreatePlayerTextDraw(playerid, x, y, "Model");
			PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][index], 170);
			PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][index], 5);
			PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][index], 0.200000, 4.799995);
			PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][index], -1);
			PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][index], 1);
			PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][index], 0);
			PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][index], 72.000000, 70.000000);
			PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][index], 19804);
			PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][index], 0.0000, 0.0000, 0.0000, 2.0000);
			PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][index], 1);

			inventoryTextdraws[playerid][++index] = CreatePlayerTextDraw(playerid, x + 37.0, y + 58.0, "Locked");
			PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][index], 2);
			PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][index], 255);
			PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][index], 2);
			PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][index], 0.149999, 0.999997);
			PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][index], -1);
			PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][index], 1);
			PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][index], 1);
		}

		inventoryTextdraws[playerid][62] = CreatePlayerTextDraw(playerid, 307.000000, 406.000000, "<<");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][62], 0);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][62], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][62], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][62], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][62], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][62], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][62], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][62], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][62], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][62], 31.000000, 26.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][62], 19132);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][62], 90.0000, -90.0000, 0.0000, 1.0000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][62], 1);

		inventoryTextdraws[playerid][63] = CreatePlayerTextDraw(playerid, 346.000000, 411.000000, "1/4");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][63], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][63], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][63], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][63], 0.230000, 1.499999);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][63], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][63], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][63], 1);

		inventoryTextdraws[playerid][64] = CreatePlayerTextDraw(playerid, 353.000000, 406.000000, ">>");
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][64], 0);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][64], 5);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][64], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][64], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][64], 0);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][64], 1);
		PlayerTextDrawSetShadow(playerid, inventoryTextdraws[playerid][64], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][64], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][64], 0);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][64], 31.000000, 26.000000);
		PlayerTextDrawSetPreviewModel(playerid, inventoryTextdraws[playerid][64], 19132);
		PlayerTextDrawSetPreviewRot(playerid, inventoryTextdraws[playerid][64], 90.0000, 90.0000, 0.0000, 1.0000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][64], 1);

		inventoryTextdraws[playerid][65] = CreatePlayerTextDraw(playerid, 217.000000, 182.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][65], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][65], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][65], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][65], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][65], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][65], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][65], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][65], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][65], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][65], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][65], 1);

		inventoryTextdraws[playerid][66] = CreatePlayerTextDraw(playerid, 217.000000, 231.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][66], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][66], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][66], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][66], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][66], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][66], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][66], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][66], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][66], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][66], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][66], 1);

		inventoryTextdraws[playerid][67] = CreatePlayerTextDraw(playerid, 217.000000, 279.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][67], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][67], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][67], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][67], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][67], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][67], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][67], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][67], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][67], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][67], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][67], 1);

		inventoryTextdraws[playerid][68] = CreatePlayerTextDraw(playerid, 217.000000, 328.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][68], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][68], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][68], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][68], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][68], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][68], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][68], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][68], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][68], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][68], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][68], 1);

		inventoryTextdraws[playerid][69] = CreatePlayerTextDraw(playerid, 217.000000, 377.000000, "Drop");
		PlayerTextDrawAlignment(playerid, inventoryTextdraws[playerid][69], 2);
		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][69], 255);
		PlayerTextDrawFont(playerid, inventoryTextdraws[playerid][69], 2);
		PlayerTextDrawLetterSize(playerid, inventoryTextdraws[playerid][69], 0.199999, 1.099997);
		PlayerTextDrawColor(playerid, inventoryTextdraws[playerid][69], -1);
		PlayerTextDrawSetOutline(playerid, inventoryTextdraws[playerid][69], 1);
		PlayerTextDrawSetProportional(playerid, inventoryTextdraws[playerid][69], 1);
		PlayerTextDrawUseBox(playerid, inventoryTextdraws[playerid][69], 1);
		PlayerTextDrawBoxColor(playerid, inventoryTextdraws[playerid][69], 200732927);
		PlayerTextDrawTextSize(playerid, inventoryTextdraws[playerid][69], 14.000000, 30.000000);
		PlayerTextDrawSetSelectable(playerid, inventoryTextdraws[playerid][69], 1);

        playerData[playerid][pInventoryPage] = 1;
		playerData[playerid][pInventoryShown] = 1;
		playerData[playerid][pItemSelected] = -1;
		playerData[playerid][pStoreItem] = 0;
		playerData[playerid][pMarketSell] = 0;
		playerData[playerid][pCraftItem] = 0;

        refreshInventory(playerid);

		for(new i = 0; i < 70; i ++) {
		    PlayerTextDrawShow(playerid, inventoryTextdraws[playerid][i]);
		}

		SelectTextDraw(playerid, -1);
	}

	return 1;
}

stock GetPlayerItemCount(playerid) {
	new count;

	for(new i = 0; i < playerData[playerid][pInventorySlots]; i ++) {
	    if(playerItems[playerid][i][pItemExists]) {
	        count++;
		}
	}

	return count;
}

stock selectInventoryItem(playerid, itemID) {
	new
	    indexID;

	if(playerData[playerid][pItemSelected] >= 0) {
 		indexID = ((playerData[playerid][pItemSelected] % 8) * 2) + 46;

   		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][indexID], 170);
    	PlayerTextDrawHide(playerid, inventoryTextdraws[playerid][indexID]);
	    PlayerTextDrawShow(playerid, inventoryTextdraws[playerid][indexID]);
	}

	if(itemID >= 0 && playerItems[playerid][itemID][pItemExists]) {
		indexID = ((itemID % 8) * 2) + 46;

		PlayerTextDrawBackgroundColor(playerid, inventoryTextdraws[playerid][indexID], 0x33CC3333);
		PlayerTextDrawHide(playerid, inventoryTextdraws[playerid][indexID]);
  		PlayerTextDrawShow(playerid, inventoryTextdraws[playerid][indexID]);

		return playerData[playerid][pItemSelected] = itemID;
	}

	return playerData[playerid][pItemSelected] = -1;

}

stock dropWeaponFromInventory(playerid, slot) {
	slot--;

	if(0 <= slot <= 4) {
	    new
	        weaponid = playerData[playerid][pInvWeapons][slot],
			ammo = playerData[playerid][pInvAmmo][slot],
			Float:fX,
			Float:fY,
			Float:fZ,
            string[512];

	    if(weaponid > 0) {
	        if((ammo > 0) && ((16 <= weaponid <= 18) || (22 <= weaponid <= 38) || (40 <= weaponid <= 43))) {

				GetPlayerPos(playerid, fX, fY, fZ);

				format(string, sizeof(string), "** %s ได้ทิ้งอาวุธ %s จำนวน %i นัดลงบนพื้น", GetPlayerNameEx(playerid), WeaponNamesEn[weaponid], ammo);
				SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, string);

		        createDroppedItem(WeaponNamesEn[weaponid], weaponModels[weaponid], weaponid, ammo, fX, fY, fZ, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
			}
			else {
			    format(string, sizeof(string), "คุณได้ทิ้งอาวุธ %s ลงบนพื้น", WeaponNamesEn[weaponid]);
			}

			playerData[playerid][pInvWeapons][slot] = 0;
			playerData[playerid][pInvAmmo][slot] = 0;

			refreshInventory(playerid);
			SendClientMessage(playerid, COLOR_YELLOW, string);
	    }
	    else SendClientMessage(playerid, COLOR_GREY, "คุณไม่มีอาวุธในช่องเก็บที่จะทิ้งลง!");
	}
}

stock DropPlayerItem(playerid, itemID, amount = 0) {
    if(playerItems[playerid][itemID][pItemExists]) {
        new
			Float:fX,
            Float:fY,
            Float:fZ,
			string[512];

        if(GetItemAmount(playerid, playerItems[playerid][itemID][pItemName]) < 1)
	    	return SendClientMessage(playerid, COLOR_GREY, "คุณจะต้องมีไอเท็มตั้งแต่ 1 ชิ้นขึ้นไป!!");

        if(amount < 1)
	    	return SendClientMessage(playerid, COLOR_GREY, "คุณจะต้องมีไอเท็มตั้งแต่ 1 ชิ้นขึ้นไป!!");

        GetPlayerPos(playerid, fX, fY, fZ);

        createDroppedItem(playerItems[playerid][itemID][pItemName], itemArray[playerItems[playerid][itemID][pItemType]][e_ItemModelID], 0, amount, fX, fY, fZ, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
        GiveItemToPlayer(playerid, playerItems[playerid][itemID][pItemName], -amount);

        refreshInventory(playerid);

		format(string, sizeof(string), "** %s ทำการวาง %s ลงบนพื้น จำนวน %i", GetPlayerNameEx(playerid), playerItems[playerid][itemID][pItemName], amount);
		SendNearbyMessage(playerid, 20.0, COLOR_PURPLE, string);

        ApplyAnimation(playerid, "BOMBER", "BOM_PLANT", 4.1, 0, 0, 0, 0, 0);
    }
    return 1;
}

stock GetItemAmount(playerid, item[]) {
	for(new i = 0; i < playerData[playerid][pInventorySlots]; i ++) {
	    if(playerItems[playerid][i][pItemExists] && !strcmp(playerItems[playerid][i][pItemName], item)) {
	        return playerItems[playerid][i][pItemAmount];
		}
	}

	return 0;
}

stock GiveItemToPlayer(playerid, item[], amount=1) {
	new
	    itemID = GetPlayerItemID(playerid, item);

	if(itemID >= 0) {
	    playerItems[playerid][itemID][pItemAmount] += amount;

	    if(playerItems[playerid][itemID][pItemAmount] >= 1)
			SavePlayerItem(playerid, itemID);
		else
		    RemovePlayerItem(playerid, itemID);

		return itemID;
	}

	for(new i = 0; i < playerData[playerid][pInventorySlots]; i ++) {
	    if(!playerItems[playerid][i][pItemExists]) {

	        format(playerItems[playerid][i][pItemName], 24, item);

	        playerItems[playerid][i][pItemExists] = 1;
	        playerItems[playerid][i][pItemAmount] = amount;
	        playerItems[playerid][i][pItemType] = GetItemArrayID(item);

	        mysql_format(g_SQL, szQueryOutput, sizeof(szQueryOutput), "INSERT INTO playeritems (pItemPlayerID, pItemName, pItemAmount) VALUES(%i, '%e', %i)", playerData[playerid][pID], item, amount);
	        mysql_tquery(g_SQL, szQueryOutput, "OnPlayerGivenItem", "ii", playerid, i);

			return i;
	    }
	}

	return -1;
}

Inventory_Add(playerid, item[], quantity = 1)
{
	/*new
		itemid = Inventory_GetItemID(playerid, item),
		string[128];

	if (itemid == -1)
	{
	    itemid = Inventory_GetFreeID(playerid);

	    if (itemid != -1)
	    {
	        invData[playerid][itemid][invExists] = true;
	        invData[playerid][itemid][invQuantity] = quantity;

	        format(invData[playerid][itemid][invItem], 32, item);

			mysql_format(g_SQL, string, sizeof(string), "INSERT INTO `inventory` (`invOwner`, `invItem`, `invQuantity`) VALUES ('%d', '%e', '%d')", playerData[playerid][pID], item, quantity);
			mysql_tquery(g_SQL, string, "OnInventoryAdd", "dd", playerid, itemid);

	        return itemid;
		}
		return -1;
	}
	else
	{
	    mysql_format(g_SQL, string, sizeof(string), "UPDATE `inventory` SET `invQuantity` = `invQuantity` + %d WHERE `invOwner` = '%d' AND `invID` = '%d'", quantity, playerData[playerid][pID], invData[playerid][itemid][invID]);
	    mysql_tquery(g_SQL, string);

	    invData[playerid][itemid][invQuantity] += quantity;
	}
	return itemid;*/
	return GiveItemToPlayer(playerid, item, quantity);
}

Inventory_Remove(playerid, item[], quantity = 1)
{
	/*new
		itemid = Inventory_GetItemID(playerid, item),
		string[128];

	if (itemid != -1)
	{
	    if (invData[playerid][itemid][invQuantity] > 0)
	    {
	        invData[playerid][itemid][invQuantity] -= quantity;
		}
		if (quantity == -1 || invData[playerid][itemid][invQuantity] < 1)
		{
		    invData[playerid][itemid][invExists] = false;
		    invData[playerid][itemid][invQuantity] = 0;

		    mysql_format(g_SQL, string, sizeof(string), "DELETE FROM `inventory` WHERE `invOwner` = '%d' AND `invID` = '%d'", playerData[playerid][pID], invData[playerid][itemid][invID]);
	        mysql_tquery(g_SQL, string);
		}
		else if (quantity != -1 && invData[playerid][itemid][invQuantity] > 0)
		{
			mysql_format(g_SQL, string, sizeof(string), "UPDATE `inventory` SET `invQuantity` = `invQuantity` - %d WHERE `invOwner` = '%d' AND `invID` = '%d'", quantity, playerData[playerid][pID], invData[playerid][itemid][invID]);
            mysql_tquery(g_SQL, string);
		}
		return 1;
	}
	return 0;*/
	return GiveItemToPlayer(playerid, item, -quantity);
}

//

forward OnPlayerGivenItem(playerid, slot);
public OnPlayerGivenItem(playerid, slot)
{
	playerItems[playerid][slot][pItemID] = cache_insert_id();
}

stock givePlayerWeapons(playerid) {
	ResetPlayerWeapons(playerid);

	for(new x = 0; x < 13; x ++) {
		GivePlayerWeaponEx(playerid, playerData[playerid][pWeapons][x], playerData[playerid][pAmmo][x]);

		weaponData[playerid][x][0] = playerData[playerid][pWeapons][x];
		weaponData[playerid][x][1] = playerData[playerid][pAmmo][x];
	}

	return 1;
}

stock GetPlayerItemID(playerid, item[]) {
    for(new i = 0; i < playerData[playerid][pInventorySlots]; i ++) {
	    if(playerItems[playerid][i][pItemExists] && !strcmp(playerItems[playerid][i][pItemName], item)) {
	        return i;
		}
	}

	return -1;
}

stock RemovePlayerItem(playerid, itemID) {
	if(playerItems[playerid][itemID][pItemExists]) {
		mysql_format(g_SQL, szQueryOutput, sizeof(szQueryOutput), "DELETE FROM playeritems WHERE pItemID = %i", playerItems[playerid][itemID][pItemID]);
		mysql_tquery(g_SQL, szQueryOutput);

		playerItems[playerid][itemID][pItemExists] = 0;
		playerItems[playerid][itemID][pItemAmount] = 0;
	}
}

stock GetItemArrayID(item[]) {
    for(new i = 0; i < sizeof(itemArray); i ++) {
    	if(!strcmp(itemArray[i][e_ItemName], item, true)) {
    	    return i;
		}
	}

	return -1;
}

stock SavePlayerItem(playerid, itemID) {
	if(playerItems[playerid][itemID][pItemExists]) {
	    mysql_format(g_SQL, szQueryOutput, sizeof(szQueryOutput), "UPDATE playeritems SET pItemAmount = %i WHERE pItemID = %i", playerItems[playerid][itemID][pItemAmount], playerItems[playerid][itemID][pItemID]);
		mysql_tquery(g_SQL, szQueryOutput);
	}
}

stock createDroppedItem(item[], modelid, weapon, amount, Float:x, Float:y, Float:z, interior, worldid) {
	new
	    szLabelText[90];

    for(new i = 0; i < MAX_DROPPED_ITEMS; i ++) {
    	if(!droppedItems[i][dItemExists]) {
			format(droppedItems[i][dItemName], 24, item);

     		droppedItems[i][dItemExists] = 1;
     		droppedItems[i][dItemWeaponID] = weapon;
       		droppedItems[i][dItemAmount] = amount;
       		droppedItems[i][dItemX] = x;
       		droppedItems[i][dItemY] = y;
       		droppedItems[i][dItemZ] = z;
       		droppedItems[i][dItemInterior] = interior;
         	droppedItems[i][dItemVirtual] = worldid;

         	if(331 <= modelid <= 372)
	           	droppedItems[i][dItemObjectID] = CreateDynamicObject(modelid, x, y, z - 0.9, 93.7, 93.7, 120.0, worldid, interior);
			else
                droppedItems[i][dItemObjectID] = CreateDynamicObject(modelid, x, y, z - 0.9, 0.0, 0.0, 0.0, worldid, interior);

            format(szLabelText, sizeof(szLabelText), "%s\nกด N ใกล้กับไอเท็ม\nเพื่อเก็บมันขึ้นมา!", item);
           	droppedItems[i][dItemText] = CreateDynamic3DTextLabel(szLabelText, COLOR_YELLOW, x, y, z - 0.9, 9.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, worldid, interior);

			return i;
		}
  	}

	return -1;
}

stock GetWeaponSlot(weaponid) {
	switch(weaponid) {
		case 0, 1: return 0;
		case 2 .. 9: return 1;
		case 22 .. 24: return 2;
		case 25 .. 27: return 3;
		case 28, 29, 32: return 4;
		case 30, 31: return 5;
		case 33, 34: return 6;
		case 35 .. 38: return 7;
		case 16, 17, 18, 39, 40: return 8;
		case 41 .. 43: return 9;
		case 10 .. 15: return 10;
		case 44 .. 46: return 11;
	}
	return -1;
}

stock removePlayerWeapon(playerid, weapon) {

	switch(weapon) {
		case 0, 1: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][0] = 0;
	        playerData[playerid][pAmmo][0] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 2, 3, 4, 5, 6, 7, 8, 9: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][1] = 0;
	        playerData[playerid][pAmmo][1] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 22, 23, 24: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][2] = 0;
	        playerData[playerid][pAmmo][2] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 25, 26, 27: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][3] = 0;
	        playerData[playerid][pAmmo][3] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 28, 29, 32: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][4] = 0;
	        playerData[playerid][pAmmo][4] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 30, 31: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][5] = 0;
	        playerData[playerid][pAmmo][5] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 33, 34: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][6] = 0;
	        playerData[playerid][pAmmo][6] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 35, 36, 37, 38: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][7] = 0;
	        playerData[playerid][pAmmo][7] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 16, 17, 18, 39: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][8] = 0;
	        playerData[playerid][pAmmo][8] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 41, 42, 43: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][9] = 0;
	        playerData[playerid][pAmmo][9] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 10, 11, 12, 13, 14, 15: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][10] = 0;
	        playerData[playerid][pAmmo][10] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 44, 45, 46: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][11] = 0;
	        playerData[playerid][pAmmo][11] = 0;
			givePlayerWeapons(playerid);
	    }
	    case 40: {
		    ResetPlayerWeapons(playerid);
	        playerData[playerid][pWeapons][12] = 0;
	        playerData[playerid][pAmmo][12] = 0;
			givePlayerWeapons(playerid);
	    }
	}
	return 1;
}

stock givePlayerValidWeaponEx(playerid, weaponid, ammo) {
	for(new i = 0; i < 5; i ++) {
	    if(!playerData[playerid][pInvWeapons][i]) {
	        playerData[playerid][pInvWeapons][i] = weaponid;
	        playerData[playerid][pInvAmmo][i] = ammo;
	        return 1;
		}
	}

	return givePlayerValidWeapon(playerid, weaponid, ammo);
}

stock givePlayerValidWeapon(playerid, weapon, ammo) {

	switch(weapon) {
		case 0, 1: {
	        playerData[playerid][pWeapons][0] = weapon;
	        playerData[playerid][pAmmo][0] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 2, 3, 4, 5, 6, 7, 8, 9: {
	        playerData[playerid][pWeapons][1] = weapon;
	        playerData[playerid][pAmmo][1] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 22, 23, 24: {
	        playerData[playerid][pWeapons][2] = weapon;
	        playerData[playerid][pAmmo][2] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 25, 26, 27: {
	        playerData[playerid][pWeapons][3] = weapon;
	        playerData[playerid][pAmmo][3] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 28, 29, 32: {
	        playerData[playerid][pWeapons][4] = weapon;
	        playerData[playerid][pAmmo][4] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 30, 31: {
	        playerData[playerid][pWeapons][5] = weapon;
	        playerData[playerid][pAmmo][5] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 33, 34: {
	        playerData[playerid][pWeapons][6] = weapon;
	        playerData[playerid][pAmmo][6] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 35, 36, 37, 38: {
	        playerData[playerid][pWeapons][7] = weapon;
	        playerData[playerid][pAmmo][7] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 16, 17, 18, 39: {
	        playerData[playerid][pWeapons][8] = weapon;
	        playerData[playerid][pAmmo][8] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 41, 42, 43: {
	        playerData[playerid][pWeapons][9] = weapon;
	        playerData[playerid][pAmmo][9] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 10, 11, 12, 13, 14, 15: {
	        playerData[playerid][pWeapons][10] = weapon;
	        playerData[playerid][pAmmo][10] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 44, 45, 46: {
	        playerData[playerid][pWeapons][11] = weapon;
	        playerData[playerid][pAmmo][11] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	    case 40: {
	        playerData[playerid][pWeapons][12] = weapon;
	        playerData[playerid][pAmmo][12] += ammo;
	        GivePlayerWeaponEx(playerid, weapon, ammo);
	    }
	}

	new
	    slot = GetWeaponSlot(weapon);

	if(0 <= slot <= 12) {
		weaponData[playerid][slot][0] = playerData[playerid][pWeapons][slot];
		weaponData[playerid][slot][1] = playerData[playerid][pAmmo][slot];
	}

	return 1;
}

stock notEnoughWeaponSpace(playerid) {
	return SendClientMessage(playerid, COLOR_GREY, "คุณไม่สามารถติดตั้งอาวุธได้มากกว่า 3 ชิ้น!");
}

stock notEnoughInventorySpace(playerid) {
	return SendClientMessage(playerid, COLOR_GREY, "คุณไม่มีพื้นที่ว่างมากพอในช่องเก็บของ คุณสามารถซื้อเพิ่มได้ที่ 24/7");
}

stock IsInventoryFull(playerid, slots=1) {
	new
	    count;

	for(new i = 0; i < playerData[playerid][pInventorySlots]; i ++) {
	    if(!playerItems[playerid][i][pItemExists]) {
         count++;
		}
	}

 	if(count >= slots) return 0;

 	return 1;
}

Dialog:DIALOG_DROPITEM(playerid, response, listitem, inputtext[])
{
	if(response)
	{
 		new amount, string[256];

		if(sscanf(inputtext, "i", amount))
		{
			format(string, sizeof(string), "คุณมี %s จำนวน %i\n\nกรุณาระบุจำนวนที่คุณจะทิ้งลงพื้น:", playerItems[playerid][playerData[playerid][pItemSelected]][pItemAmount], playerItems[playerid][playerData[playerid][pItemSelected]][pItemName]);
			Dialog_Show(playerid, DIALOG_DROPITEM, DIALOG_STYLE_INPUT, "ทิ้งไอเท็มลงพื้น", string, "ทิ้งลง", "ยกเลิก");
		}
		else if(amount < 1 || amount > playerItems[playerid][playerData[playerid][pItemSelected]][pItemAmount]) {
			format(string, sizeof(string), "คุณมี %s จำนวน %i\n\nกรุณาระบุจำนวนที่คุณจะทิ้งลงพื้น:", playerItems[playerid][playerData[playerid][pItemSelected]][pItemAmount], playerItems[playerid][playerData[playerid][pItemSelected]][pItemName]);
			Dialog_Show(playerid, DIALOG_DROPITEM, DIALOG_STYLE_INPUT, "ทิ้งไอเท็มลงพื้น", string, "ทิ้งลง", "ยกเลิก");
			SendClientMessage(playerid, COLOR_GREY, "จำนวนที่ระบุไม่ถูกต้อง");
		}
		else
		{
  			DropPlayerItem(playerid, playerData[playerid][pItemSelected], amount);
		}
	}
	return 1;
}

stock PlayerHasItem(playerid, item[]) {
	for(new i = 0; i < playerData[playerid][pInventorySlots]; i ++) {
	    if(playerItems[playerid][i][pItemExists] && !strcmp(playerItems[playerid][i][pItemName], item)) {
	        return 1;
		}
	}

	return 0;
}

playerEatFood(playerid, name[])
{
	for(new x = 0; x < sizeof(craftFoods); x ++)
	{
	    if(!strcmp(name, craftFoods[x]))
		{
			if(!PlayerHasItem(playerid, name))
			    return -1;

			//GiveItemToPlayer(playerid, name, -1);

   			PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);

			if (!strcmp(name, "Shell", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}

			// แฟชั่น

			else if (!strcmp(name, "Dragon Tribe", true))
			{
				SetPlayerAttachedObject(playerid, 1, 3528, 3, 0.0129, -0.0430, 0.0270, 0.0000, -86.5000, 24.4000, 0.0700, 0.0859, 0.0999, 0, 0); // "Object.3" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 2, 3528, 4, 0.0000, 0.0120, 0.0029, -155.8000, -76.4998, -8.9999, 0.0899, 0.0960, 0.0879, 0, 0); // "Object.3" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 3, 339, 5, 0.0399, 0.0000, 0.0170, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "Object.3" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 4, 1247, 2, 0.2909, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.3149, 0.2599, 0.3319, 0, 0); // "Object.3" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 5, 3528, 9, 0.0000, 0.0520, 0.0469, -91.0000, -111.5999, -0.3999, 0.1099, 0.1190, 0.0889, 0, 0); // "Object.3" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 6, 3528, 10, 0.0000, 0.0179, 0.0179, -89.5000, -103.3998, 0.0000, 0.1299, 0.1209, 0.0979, 0, 0); // "Object.3" by @nice (Skin:108)

				SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดเผ่ามังกร");
			}

			else if (!strcmp(name, "ชุดลูบู", true))
			{
				SetPlayerAttachedObject(playerid, 1, 18844, 1, 0.3639, 0.0000, -0.4219, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
				SetPlayerAttachedObject(playerid, 2, 18844, 1, 0.3339, 0.0000, 0.4659, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
				SetPlayerAttachedObject(playerid, 3, 18844, 1, 0.7929, 0.0000, 0.1629, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
				SetPlayerAttachedObject(playerid, 4, 18844, 1, 0.8009, 0.0000, -0.1220, 0.0000, 0.0000, 0.0000, 0.0010, 0.0010, 0.0010, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
				SetPlayerAttachedObject(playerid, 5, 18701, 1, -1.2599, 0.0000, 0.4069, 0.0000, 87.8999, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
				SetPlayerAttachedObject(playerid, 6, 18701, 1, -1.2330, -0.0010, -0.4740, 0.0000, 87.8999, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
				SetPlayerAttachedObject(playerid, 7, 3533, 1, 0.0099, -0.1389, -0.0009, 0.0000, 106.5000, 0.0000, 0.0260, 0.0279, 0.2129, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
				SetPlayerAttachedObject(playerid, 8, 335, 1, -0.6570, -0.0509, 0.3420, 0.0000, -76.7999, -169.5999, 1.9539, 1.6839, 1.9980, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)
				SetPlayerAttachedObject(playerid, 9, 3528, 1, -0.6589, -0.1129, 0.1930, 177.1000, 114.4999, 0.0000, 0.0829, 0.0779, 0.0769, 0, 0); // "Object.1" by Admin_[N]ice]eazy[ (Skin:126)

				SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดลูบู");
			}

			else if (!strcmp(name, "ชุดหัวหน้าเผ่า", true))
			{
				SetPlayerAttachedObject(playerid, 1, 19314, 9, 0.0780, 0.0719, 0.0039, -94.6999, 1.2999, 91.4999, 1.4259, 1.2879, 0.4690, 0, 0); // "Object.2" by @nice (Skin:230)
				SetPlayerAttachedObject(playerid, 2, 19079, 1, 0.2759, -0.0439, 0.1379, 0.0000, 0.0000, 0.0000, 0.5860, 0.5429, 0.6830, 0, 0); // "Object.2" by @nice (Skin:230)
				SetPlayerAttachedObject(playerid, 3, 1603, 1, 0.2099, -0.2080, -0.0700, -32.1999, -23.6999, 0.0000, 0.8019, 0.1379, 0.6479, 0, 0); // "Object.2" by @nice (Skin:230)
				SetPlayerAttachedObject(playerid, 4, 1603, 1, 0.2099, -0.2080, -0.0700, -32.1999, 22.7000, 0.0000, 0.6560, 0.1379, 0.4699, 0, 0); // "Object.2" by @nice (Skin:230)
				SetPlayerAttachedObject(playerid, 5, 1603, 1, 0.2099, -0.2080, 0.0740, -154.7999, -15.4999, 0.0000, 0.8149, 0.1379, 0.6409, 0, 0); // "Object.2" by @nice (Skin:230)
				SetPlayerAttachedObject(playerid, 6, 1603, 1, 0.1879, -0.2080, 0.0740, -154.7999, 28.4000, 0.0000, 0.5540, 0.1379, 0.4149, 0, 0); // "Object.2" by @nice (Skin:230)
				SetPlayerAttachedObject(playerid, 7, 19314, 10, 0.0659, 0.0829, 0.0000, 90.7999, 2.4999, 94.1999, 1.5209, 1.0729, 0.4990, 0, 0); // "Object.2" by @nice (Skin:230)
				SetPlayerAttachedObject(playerid, 8, 18701, 1, 0.5749, -0.2520, -0.1179, 0.0000, 88.6999, 0.0000, 1.0000, 1.0000, 0.0000, 0, 0); // "Object.2" by @nice (Skin:230)
				SetPlayerAttachedObject(playerid, 9, 18701, 1, 0.5699, -0.2520, 0.1640, 0.0000, 88.6999, 0.0000, 1.0000, 1.0000, 0.0000, 0, 0); // "Object.2" by @nice (Skin:230)

				SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดหัวหน้าเผ่า");
			}

			else if (!strcmp(name, "ชุดปีกดำ", true))
			{
				SetPlayerAttachedObject(playerid, 1, 18975, 1, -0.2059, -0.3189, 0.3189, 124.5001, 10.8000, 90.7999, 3.4969, 6.8429, 0.2649, 0, 0); // "Object4" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 2, 18975, 1, -0.2059, -0.3310, -0.3050, -131.9999, -7.2999, 90.7999, 3.4969, 6.8429, 0.2649, 0, 0); // "Object4" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 3, 19347, 1, -0.1049, 0.1309, 0.1849, -68.4000, 31.8999, -10.0000, 2.3820, 2.5779, 3.0269, 0, 0); // "Object4" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 4, 339, 1, 0.0019, 0.1000, 0.1990, 112.9000, -33.0999, 176.8000, 1.3409, 1.4010, 1.2999, 0, 0); // "Object4" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 5, 19314, 1, 0.3079, -0.0649, -0.0020, 0.0000, 0.0000, -136.9998, 1.0000, 1.0000, 0.2409, 0, 0); // "Object4" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 6, 19314, 1, 0.2319, -0.0649, -0.0020, 0.0000, 0.0000, -168.3997, 1.0000, 1.0000, 0.2409, 0, 0); // "Object4" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 7, 19314, 1, 0.1620, -0.0649, -0.0020, 0.0000, 0.0000, 147.3001, 1.0000, 1.6669, 0.2409, 0, 0); // "Object4" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 8, 18702, 1, 0.2290, -0.0689, 0.0000, -56.1999, 0.0000, 8.4000, 1.0000, 0.5030, 0.0000, 0, 0); // "Object4" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 9, 18702, 1, 0.2290, -0.0689, -0.0649, 46.4000, 0.0000, 10.0999, 1.0000, 0.5030, 0.0000, 0, 0); // "Object4" by @nice (Skin:108)

				SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดปีกดำ");
			}

			else if (!strcmp(name, "ชุดปีกแดง", true))
			{
				SetPlayerAttachedObject(playerid, 1, 339, 6, 0.0000, 0.0000, 0.0549, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "admin" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 2, 339, 5, 0.0320, 0.0000, 0.0230, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "admin" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 3, 339, 2, 0.0269, 0.0479, 0.0659, 0.0000, 0.0000, 82.1998, 1.0000, 1.0000, 1.0000, 0, 0); // "admin" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 4, 19274, 1, -0.2089, -0.2669, 0.3009, 117.6001, 8.1999, 95.7000, 2.4059, 4.5589, 0.1539, 0, 0); // "admin" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 5, 19274, 1, -0.2099, -0.2649, -0.2899, -119.2996, -8.0999, 95.7000, 2.3199, 4.6029, 0.1539, 0, 0); // "admin" by @nice (Skin:108)
				SetPlayerAttachedObject(playerid, 6, 19294, 1, 0.0240, 0.0000, 0.0000, 0.0000, 87.8998, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0); // "admin" by @nice (Skin:108)

				SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดปีกแดง");
			}

			else if (!strcmp(name, "ชุดแมลงเทพ", true))
			{
				SetPlayerAttachedObject(playerid, 1, 19059, 1, 0.2979, -0.2509, -0.3149, -34.3999, -28.2999, 0.0000, 0.3719, 0.1019, 1.0000, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
				SetPlayerAttachedObject(playerid, 2, 19059, 1, 0.2979, -0.2300, 0.3349, -151.1000, -28.2999, 0.0000, 0.3719, 0.1019, 1.0000, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
				SetPlayerAttachedObject(playerid, 3, 19063, 1, 0.0399, -0.2280, -0.2890, -34.1000, 0.0000, 0.0000, 0.3119, 0.0669, 0.7850, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
				SetPlayerAttachedObject(playerid, 4, 19063, 1, 0.0399, -0.2150, 0.2999, -149.2000, 0.0000, 0.0000, 0.3119, 0.0669, 0.7850, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
				SetPlayerAttachedObject(playerid, 5, 19060, 1, -0.1389, -0.1480, -0.1889, -36.4999, 27.5999, 0.0000, 0.2520, 0.0599, 0.5210, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
				SetPlayerAttachedObject(playerid, 6, 19060, 1, -0.1389, -0.1480, 0.1889, -146.0001, 27.5999, 0.0000, 0.2520, 0.0599, 0.5210, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
				SetPlayerAttachedObject(playerid, 7, 18706, 5, 0.1019, 0.0189, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
				SetPlayerAttachedObject(playerid, 8, 3790, 1, 0.0000, -0.1029, 0.0000, 0.0000, 9.0999, 0.0000, 0.3559, 0.3589, 0.3269, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)
				SetPlayerAttachedObject(playerid, 9, 3790, 1, 0.0000, -0.1029, 0.0000, 0.0000, -13.5000, 0.0000, 0.3559, 0.3589, 0.3269, 0, 0); // "Object6" by [@]_nice]z. (Skin:212)

				SendClientMessage(playerid, -1, "คุณได้สวม {0AFB36}ชุดแมลงเทพ");
			}

			//
			else if (!strcmp(name, "Medic Kit", true))
			{
			    if (isUseMedicKit[playerid] == 1)
			        return SendClientMessage(playerid, COLOR_GREY, "* คุณอยู่ระหว่างการใช้งาน Medic Kit");

			    TogglePlayerControllable(playerid, 0);
				isUseMedicKit[playerid] = 1;
				SendClientMessage(playerid, COLOR_LIGHTRED, "* คุณได้เริ่มต้นการใช้ 'Medic Kit' เรียบร้อยแล้ว");
			}
			else if (!strcmp(name, "Vape", true))
			{
			    SetTimerEx("SmokeWeed", 2000, false, "d", playerid);
				Inventory_Remove(playerid, "Vape", 1);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังสูบ {00FF00}%s", name);
			}
			else if (!strcmp(name, "VehicleBox", true))
			{
			    new vehicleid = GetPlayerVehicleID(playerid);

			    if (!IsPlayerInAnyVehicle(playerid))
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

				switch (GetEngineStatus(vehicleid))
				{
		  			case true:
		   			{
				    	return SendClientMessage(playerid, COLOR_GREY, "* คุณต้องดับเครื่องยนต์ก่อน");
		   			}
				}

			    if (isUseMedicKit[playerid] != 0)
			        return SendClientMessage(playerid, COLOR_GREY, "* คุณอยู่ระหว่างการใช้งาน กล่องซ่อมรถ");

		        TogglePlayerControllable(playerid, 0);
				isUseMedicKit[playerid] = 2;
				SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้เริ่มต้นการใช้ 'กล่องซ่อมรถ' เรียบร้อยแล้ว");
			}
			else if (!strcmp(name, "Fuel Can", true))
			{
			    new vehicleid = GetPlayerVehicleID(playerid);

			    if (!IsPlayerInAnyVehicle(playerid))
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

				switch (GetEngineStatus(vehicleid))
				{
		  			case true:
		   			{
				    	return SendClientMessage(playerid, COLOR_GREY, "* คุณต้องดับเครื่องยนต์ก่อน");
		   			}
				}

			    if (isUseMedicKit[playerid] != 0)
			        return SendClientMessage(playerid, COLOR_GREY, "* คุณอยู่ระหว่างการใช้งาน กล่องซ่อมรถ");

		        TogglePlayerControllable(playerid, 0);
				isUseMedicKit[playerid] = 3;
				SendClientMessage(playerid, COLOR_YELLOW, "* คุณได้เริ่มต้นการใช้ 'ถังน้ำมัน' เรียบร้อยแล้ว");
			}
			else if (!strcmp(name, "Pizza", true))
			{
			    if (playerData[playerid][pHungry] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีหิว");

				playerData[playerid][pHungry] += 10;
				Inventory_Remove(playerid, name);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
			}
			else if (!strcmp(name, "Wagyu Steak", true))
			{
			    if (playerData[playerid][pHungry] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีหิว");

				playerData[playerid][pHungry] += 20;
				Inventory_Remove(playerid, name);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
			}
			else if (!strcmp(name, "Sushi", true))
			{
			    if (playerData[playerid][pHungry] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่มีหิว");

				playerData[playerid][pHungry] += 30;
				Inventory_Remove(playerid, name);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
			}
			else if (!strcmp(name, "Water Bottle", true))
			{
			    if (playerData[playerid][pThirsty] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

				playerData[playerid][pThirsty] += 10;
				Inventory_Remove(playerid, name);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังดื่ม {00FF00}%s", name);
			}
			else if (!strcmp(name, "Orange Juice", true))
			{
			    if (playerData[playerid][pThirsty] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

				playerData[playerid][pThirsty] += 20;
				Inventory_Remove(playerid, name);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังดื่ม {00FF00}%s", name);
			}
			else if (!strcmp(name, "Apple Juice", true))
			{
			    if (playerData[playerid][pThirsty] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

				playerData[playerid][pThirsty] += 30;
				Inventory_Remove(playerid, name);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังดื่ม {00FF00}%s", name);
			}

			else if (!strcmp(name, "Chicken Basil", true))
			{
			    if (playerData[playerid][pHungry] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่หิว");

				playerData[playerid][pHungry] += 40;
				Inventory_Remove(playerid, name);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
			}
			else if (!strcmp(name, "Tomato Juice", true))
			{
			    if (playerData[playerid][pThirsty] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

				playerData[playerid][pThirsty] += 40;
				Inventory_Remove(playerid, name);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังดื่ม {00FF00}%s", name);
			}

			//
			else if (!strcmp(name, "Shark Fin", true))
			{
			    if (playerData[playerid][pHungry] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่หิว");

				playerData[playerid][pHungry] += 50;
				Inventory_Remove(playerid, name);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
			}
			else if (!strcmp(name, "Vegetable Juice", true))
			{
			    if (playerData[playerid][pThirsty] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

				playerData[playerid][pThirsty] += 50;
				Inventory_Remove(playerid, name);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังดื่ม {00FF00}%s", name);
			}
			else if (!strcmp(name, "Seafood", true))
			{
			    if (playerData[playerid][pThirsty] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่กระหายน้ำ");

			    if (playerData[playerid][pHungry] >= 100)
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณไม่หิว");

				playerData[playerid][pThirsty] += 40;
				playerData[playerid][pHungry] += 40;
				Inventory_Remove(playerid, name);
			    SendClientMessageEx(playerid, COLOR_WHITE, "คุณกำลังทาน {00FF00}%s", name);
			}
			//

			else if (!strcmp(name, "Toolbox", true))
			{
			    new vehicleid = GetPlayerVehicleID(playerid);

			    if (!IsPlayerInAnyVehicle(playerid))
			        return SendClientMessage(playerid, COLOR_RED, "[ระบบ] {FFFFFF}คุณต้องอยู่ในรถ");

			    RepairVehicle(vehicleid);
			    SendClientMessage(playerid, COLOR_WHITE, "คุณได้ใช้เครื่องมือในการซ่อมรถสำเร็จ");
			    Inventory_Remove(playerid, "Toolbox", 1);
			}
			else if (!strcmp(name, "Driving License", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}เป็นแค่ใบอนุญาติขับรถเท่านั้น", name);
			}

			if (warJoin[playerid] == 1)
			{
				if (!strcmp(name, "Flower", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 14, 20000);
					//Inventory_Remove(playerid, "Flower", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Dildo", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 10, 20000);
					//Inventory_Remove(playerid, "Dildo", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Pool Cue", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 7, 20000);
					//Inventory_Remove(playerid, "Pool Cue", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Golf Club", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 2, 20000);
					//Inventory_Remove(playerid, "Golf Club", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Baseball Bat", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 5, 20000);
					//Inventory_Remove(playerid, "Baseball Bat", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Shovel", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 6, 20000);
					//Inventory_Remove(playerid, "Shovel", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Brass Knuckles", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 1, 20000);
					//Inventory_Remove(playerid, "Brass Knuckles", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Katana", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 8, 20000);
					//Inventory_Remove(playerid, "Katana", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Knife", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 4, 20000);
					//Inventory_Remove(playerid, "Knife", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "M4", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 31, 20000);
					//Inventory_Remove(playerid, "M4", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "MP5", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 29, 20000);
					//Inventory_Remove(playerid, "MP5", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
			}

			if (warJoin[playerid] == 0)
			{
				if (!strcmp(name, "Flower", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 14, 20000);
					//Inventory_Remove(playerid, "Flower", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Dildo", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 10, 20000);
					//Inventory_Remove(playerid, "Dildo", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Pool Cue", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 7, 20000);
					//Inventory_Remove(playerid, "Pool Cue", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Golf Club", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 2, 20000);
					//Inventory_Remove(playerid, "Golf Club", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Baseball Bat", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 5, 20000);
					//Inventory_Remove(playerid, "Baseball Bat", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Shovel", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 6, 20000);
					//Inventory_Remove(playerid, "Shovel", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Brass Knuckles", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 1, 20000);
					//Inventory_Remove(playerid, "Brass Knuckles", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Katana", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 8, 20000);
				//	Inventory_Remove(playerid, "Katana", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "Knife", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 4, 20000);
					//Inventory_Remove(playerid, "Knife", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "M4", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 31, 20000);
					//Inventory_Remove(playerid, "M4", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
				else if (!strcmp(name, "MP5", true))
				{
				    playerData[playerid][pTazer] = 1;
					GivePlayerWeaponEx(playerid, 29, 20000);
					//Inventory_Remove(playerid, "MP5", 1);
				    SendNearbyMessage(playerid, 30.0, COLOR_PURPLE, "** %s ได้หยิบ อาวุธ ออกมาจากกระเป๋า", GetPlayerNameEx(playerid));
				}
			}

			//


			else if (!strcmp(name, "Cannabis", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Cocain", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Beef", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Chicken", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Hematite", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Rock Salt", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Coal Ore", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Uranium Ore", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Orange", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Apple", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Lemon", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Woods", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Hacksaw", true))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}ไปที่จุดตัดไม้และใช้งานได้เลย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Bait", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}ไปที่จุดตกปลาแต่จำเป็นต้องมีเบ็ดตกปลาและใช้งานผ่านเบ็ดตกปลาได้เลย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Grouper", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Salmon", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Stingray", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Shark", true))
			{
			    SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}นำไปจำหน่าย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Fishing Rod", true))
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "วิธีใช้: {00FF00}%s {FFFFFF}ไปที่จุดตกปลาและใช้งานได้เลย {FFFF00}(/gps)", name);
			}
			else if (!strcmp(name, "Helmet 1", true))
			{
			    if (!playerData[playerid][pHelmetOn])
			    {
			        playerData[playerid][pHelmetOn] = true;
			        SendClientMessage(playerid, COLOR_WHITE, "คุณได้สวมหมวกกันน็อค");
			    	SetPlayerAttachedObject(playerid, 8, 18976, 2, 0.071999, 0.035999, 0.000000, 97.400009, 83.900024, -4.899995, 1.133001, 0.975000, 1.180003);
				}
				else
				{
				    playerData[playerid][pHelmetOn] = false;
				    SendClientMessage(playerid, COLOR_WHITE, "คุณได้ถอดหมวกกันน็อค");
				    RemovePlayerAttachedObject(playerid, 8);
				}
			}
			else if (!strcmp(name, "Helmet 2", true))
			{
			    if (!playerData[playerid][pHelmetOn])
			    {
			        playerData[playerid][pHelmetOn] = true;
			        SendClientMessage(playerid, COLOR_WHITE, "คุณได้สวมหมวกกันน็อค");
			    	SetPlayerAttachedObject(playerid, 8, 18979, 2, 0.071999, 0.035999, 0.000000, 97.400009, 83.900024, -4.899995, 1.133001, 0.975000, 1.180003);
				}
				else
				{
				    playerData[playerid][pHelmetOn] = false;
				    SendClientMessage(playerid, COLOR_WHITE, "คุณได้ถอดหมวกกันน็อค");
				    RemovePlayerAttachedObject(playerid, 8);
				}
			}
			else if (!strcmp(name, "Helmet 3", true))
			{
			    if (!playerData[playerid][pHelmetOn])
			    {
			        playerData[playerid][pHelmetOn] = true;
			        SendClientMessage(playerid, COLOR_WHITE, "คุณได้สวมหมวกกันน็อค");
			    	SetPlayerAttachedObject(playerid, 8, 18645, 2, 0.071999, 0.035999, 0.000000, 97.400009, 83.900024, -4.899995, 1.133001, 0.975000, 1.180003);
				}
				else
				{
				    playerData[playerid][pHelmetOn] = false;
				    SendClientMessage(playerid, COLOR_WHITE, "คุณได้ถอดหมวกกันน็อค");
				    RemovePlayerAttachedObject(playerid, 8);
				}
			}

			
			return 1;
		}
	}
	return 0;
}

Inventory_Count(playerid, item[])
{
	/*new itemid = Inventory_GetItemID(playerid, item);

	if (itemid != -1)
	    return invData[playerid][itemid][invQuantity];

	return 0;*/
	return GetItemAmount(playerid, item);
}

Inventory_HasItem(playerid, item[])
{
	return PlayerHasItem(playerid, item);
}

CMD:inv(playerid, params[])
{
	return toggleInventory(playerid);
}
